{
  "platformName": "Nuclio",
  "logoPath": "nuclio.png",
  "description": "Nuclio is an open source serverless platform focusing on data-science based applications.",
  "descriptionOfficial": "Nuclio is a high-performance \"serverless\" framework focused on data, I/O, and compute intensive workloads. It is well integrated with popular data science tools, such as Jupyter and Kubeflow; supports a variety of data and streaming sources; and supports execution over CPUs and GPUs. The Nuclio project began in 2017 and is constantly and rapidly evolving; many start-ups and enterprises are now using Nuclio in production.",
  "businessView": {
    "licensing": {
      "license": {
        "value": "Apache 2.0",
        "references": [
          "https://github.com/nuclio/nuclio/blob/master/LICENSE"
        ]
      },
      "type": "permissive"
    },
    "installations": [
      {
        "type": {
          "value": "as-a-service",
          "references": [
            "https://nuclio.io"
          ]
        },
        "targetHosts": []
      },
      {
        "type": {
          "value": "installable",
          "references": [
            "https://github.com/nuclio/nuclio"
          ]
        },
        "targetHosts": [
          {
            "value": "Kubernetes",
            "references": [
              "https://github.com/nuclio/nuclio/blob/master/docs/setup/k8s/getting-started-k8s.md#install-nuclio",
              "https://github.com/nuclio/nuclio/blob/master/docs/setup/minikube/getting-started-minikube.md",
              "https://github.com/nuclio/nuclio/blob/master/docs/setup/gke/getting-started-gke.md",
              "https://github.com/nuclio/nuclio/blob/master/docs/setup/aks/getting-started-aks.md"
            ]
          }
        ]
      }
    ],
    "sourceCode": {
      "availability": {
        "value": "open source",
        "references": [
          "https://github.com/nuclio/nuclio"
        ]
      },
      "hostingPlatform": {
        "value": "GitHub",
        "references": [
          "https://github.com"
        ]
      },
      "prgLang": {
        "value": "Go",
        "references": [
          "https://github.com/nuclio/nuclio/search?l=go"
        ]
      }
    },
    "release": {
      "value": "rtm",
      "references": []
    },
    "interfaces": {
      "type": [
        {
          "value": "CLI",
          "references": [
            "https://github.com/nuclio/nuclio/blob/master/docs/reference/nuctl/nuctl.md"
          ]
        },
        {
          "value": "GUI",
          "references": [
            "https://nuclio.io/docs/latest/introduction/#dashboard"
          ]
        }
      ],
      "appManagement": [
        {
          "value": "create",
          "references": []
        },
        {
          "value": "retrieve",
          "references": []
        },
        {
          "value": "update",
          "references": []
        },
        {
          "value": "delete",
          "references": []
        }
      ],
      "platformAdministration": [
        {
          "value": "deployment",
          "references": []
        },
        {
          "value": "enactment",
          "references": []
        }
      ]
    },
    "community": {
      "github": {
        "stars": 3200,
        "forks": 318,
        "issues": 56,
        "commits": 1200,
        "contributors": 51,
        "references": [
          "https://github.com/nuclio/nuclio"
        ]
      },
      "stackoverflow": {
        "questions": 3,
        "references": []
      }
    },
    "documentation": {
      "functions": [
        {
          "value": "deployment",
          "references": []
        }
      ],
      "platform": [
        {
          "value": "usage",
          "references": []
        },
        {
          "value": "deployment",
          "references": []
        },
        {
          "value": "architecture",
          "references": []
        }
      ]
    },
    "quotas": {
      "deployment": {
        "codeSize": {
          "value": "unbounded",
          "references": []
        },
        "packageSize": {
          "value": "unbounded",
          "references": []
        }
      },
      "runtime": {
        "cpu": {
          "value": "unbounded",
          "references": []
        },
        "memory": {
          "value": "unbounded",
          "references": []
        },
        "storage": {
          "value": "unbounded",
          "references": []
        },
        "executionTime": {
          "value": "unbounded",
          "references": []
        }
      }
    }
  },
  "technicalView": {
    "development": {
      "funcRuntimes": [
        {
          "value": "Binary",
          "references": []
        },
        {
          "value": "Docker Image",
          "references": []
        },
        {
          "value": "Go",
          "references": []
        },
        {
          "value": "Java",
          "references": []
        },
        {
          "value": ".NET",
          "references": []
        },
        {
          "value": "Node.js",
          "references": []
        },
        {
          "value": "Python",
          "references": []
        },
        {
          "value": "Shell",
          "references": []
        }
      ],
      "runtimeCustomization": {
        "value": "supported",
        "references": []
      },
      "editors": [
        {
          "value": "Jupyter Notebooks",
          "references": []
        }
      ],
      "clientLibs": [
        {
          "value": "Go",
          "references": []
        },
        {
          "value": "Java",
          "references": []
        },
        {
          "value": ".NET",
          "references": []
        },
        {
          "value": "Python",
          "references": []
        }
      ]
    },
    "versioning": {
      "appVersions": {
        "value": "n/s",
        "references": []
      },
      "funcVersions": {
        "value": "dedicated",
        "references": []
      }
    },
    "eventSources": {
      "endpoint": {
        "syncCall": [
          {
            "value": "HTTP",
            "references": []
          }
        ],
        "asyncCall": [],
        "endpointCustomization": {
          "value": "supported",
          "references": []
        },
        "tls": {
          "value": "n/s",
          "references": []
        }
      },
      "dataStore": {
        "fileLevel": [],
        "databaseMode": []
      },
      "scheduler": {
        "value": "supproted",
        "references": []
      },
      "messageQ": [
        {
          "value": "RabbitMQ",
          "references": []
        },
        {
          "value": "MQTT",
          "references": []
        },
        {
          "value": "NATS",
          "references": []
        }
      ],
      "streamProc": [
        {
          "value": "Apache Kafka",
          "references": []
        },
        {
          "value": "AWS Kinesis",
          "references": []
        },
        {
          "value": "Iguazio Data Science Platform",
          "references": []
        },
        {
          "value": "Azure Event Hubs",
          "references": []
        }
      ],
      "specService": [],
      "integration": []
    },
    "functionOrchestration": {
      "orchestratorName": null,
      "workflowDef": null,
      "conFlowDocs": null,
      "quotas": null
    },
    "testing": {
      "functional": [],
      "nonFunctional": []
    },
    "debugging": {
      "local": [],
      "remote": []
    },
    "observability": {
      "logging": [
        {
          "value": "stdout",
          "references": []
        },
        {
          "value": "Azure Application Insights",
          "references": []
        }
      ],
      "monitoring": [
        {
          "value": "Prometheus",
          "references": []
        },
        {
          "value": "Azure Application Insights",
          "references": []
        }
      ],
      "integration": [
        {
          "value": "push-based",
          "references": []
        },
        {
          "value": "pull-based",
          "references": []
        }
      ]
    },
    "appDelivery": {
      "depAuto": [
        {
          "value": "Kubernetes-based",
          "references": []
        }
      ],
      "ciCd": []
    },
    "codeReuse": {
      "marketplaces": [],
      "sampleRepos": [
        {
          "value": "available",
          "references": []
        }
      ]
    },
    "accessManagement": {
      "auth": [],
      "accessControl": []
    }
  }
}
