{
  "platformName": "OpenFaaS",
  "logoPath": "openfaas.png",
  "description": "OpenFaaS is an open source FaaS platform working with a variety of container platforms.",
  "descriptionOfficial": "OpenFaaSÂ® makes it easy for developers to deploy event-driven functions and microservices to Kubernetes without repetitive, boiler-plate coding. Package your code or an existing binary in a Docker image to get a highly scalable endpoint with auto-scaling and metrics.",
  "businessView": {
    "licensing": {
      "license": {
        "value": "MIT",
        "references": [
          "https://github.com/openfaas/faas/blob/master/LICENSE"
        ]
      },
      "type": "permissive"
    },
    "installations": [
      {
        "type": {
          "value": "installable",
          "references": [
            "https://docs.openfaas.com/deployment"
          ]
        },
        "targetHosts": [
          {
            "value": "Kubernetes",
            "references": [
              "https://docs.openfaas.com/deployment/#kubernetes-recommended-for-production-and-for-work"
            ]
          },
          {
            "value": "Docker Swarm",
            "references": [
              "https://docs.openfaas.com/deployment/#docker-swarm"
            ]
          },
          {
            "value": "Openshift",
            "references": [
              "https://docs.openfaas.com/deployment/#openshift"
            ]
          },
          {
            "value": "faasd",
            "references": [
              "https://docs.openfaas.com/deployment/#faasd-with-containerd"
            ]
          }
        ]
      }
    ],
    "sourceCode": {
      "availability": {
        "value": "open source",
        "references": [
          "https://github.com/openfaas/faas"
        ]
      },
      "hostingPlatform": {
        "value": "GitHub",
        "references": [
          "https://github.com"
        ]
      },
      "prgLang": {
        "value": "Go",
        "references": [
          "https://github.com/openfaas/faas/search?l=go"
        ]
      }
    },
    "interfaces": {
      "type": [
        {
          "value": "CLI",
          "references": [
            "https://github.com/openfaas/faas-cli"
          ]
        },
        {
          "value": "API",
          "references": [
            "https://github.com/openfaas/faas/tree/master/api-docs"
          ]
        },
        {
          "value": "GUI",
          "references": [
            "https://github.com/openfaas/faas/tree/master/gateway#ui-portal"
          ]
        }
      ],
      "appManagement": [
        {
          "value": "create",
          "references": []
        },
        {
          "value": "retrieve",
          "references": []
        },
        {
          "value": "update",
          "references": []
        },
        {
          "value": "delete",
          "references": []
        }
      ],
      "platformAdministration": [
        {
          "value": "deployment",
          "references": []
        },
        {
          "value": "enactment",
          "references": []
        }
      ]
    },
    "community": {
      "github": {
        "stars": 17100,
        "forks": 1400,
        "issues": 63,
        "commits": 1800,
        "contributors": 138,
        "references": [
          "https://github.com/openfaas/faas"
        ]
      },
      "stackoverflow": {
        "questions": 28,
        "references": []
      }
    },
    "documentation": {
      "functions": [
        {
          "value": "deployment",
          "references": []
        }
      ],
      "platform": [
        {
          "value": "usage",
          "references": []
        },
        {
          "value": "development",
          "references": []
        },
        {
          "value": "deployment",
          "references": []
        },
        {
          "value": "architecture",
          "references": []
        }
      ]
    }
  },
  "technicalView": {
    "development": {
      "funcRuntimes": [
        {
          "value": "Docker Image",
          "references": []
        },
        {
          "value": "Go",
          "references": []
        },
        {
          "value": "Java",
          "references": []
        },
        {
          "value": ".NET",
          "references": []
        },
        {
          "value": "Node.js",
          "references": []
        },
        {
          "value": "PHP",
          "references": []
        },
        {
          "value": "Python",
          "references": []
        },
        {
          "value": "Ruby",
          "references": []
        }
      ],
      "runtimeCustomization": {
        "value": "supported",
        "references": []
      },
      "editors": [],
      "clientLibs": [],
      "quotas": {
        "packageSize": {
          "value": "unbounded",
          "references": []
        },
        "executionTime": {
          "value": "unbounded",
          "references": []
        }
      }
    },
    "versioning": {
      "appVersions": {
        "value": "n/s",
        "references": []
      },
      "funcVersions": {
        "value": "implicit",
        "references": []
      }
    },
    "eventSources": {
      "endpoint": {
        "syncCall": [
          {
            "value": "HTTP",
            "references": []
          }
        ],
        "asyncCall": [
          {
            "value": "HTTP",
            "references": []
          }
        ],
        "endpointCustomization": {
          "value": "n/s",
          "references": []
        },
        "tls": {
          "value": "supported",
          "references": []
        }
      },
      "dataStore": {
        "fileLevel": [
          {
            "value": "Min.io",
            "references": []
          }
        ],
        "databaseMode": []
      },
      "scheduler": {
        "value": "supported",
        "references": []
      },
      "messageQ": [
        {
          "value": "AWS SQS",
          "references": []
        },
        {
          "value": "AWS SNS",
          "references": []
        }
      ],
      "streamProc": [
        {
          "value": "Apache Kafka",
          "references": []
        }
      ],
      "specService": [
        {
          "value": "IFTTT",
          "references": []
        },
        {
          "value": "VMware vCenter",
          "references": []
        }
      ],
      "integration": [
        {
          "value": "connector plugins",
          "references": []
        }
      ]
    },
    "functionOrchestration": {
      "orchestratorName": null,
      "workflowDef": null,
      "conFlowDocs": null,
      "quotas": null
    },
    "testing": {
      "functional": [],
      "nonFunctional": []
    },
    "debugging": {
      "local": [],
      "remote": []
    },
    "observability": {
      "logging": [
        {
          "value": "Kubernetes cluster API",
          "references": []
        },
        {
          "value": "Swarm cluster API",
          "references": []
        },
        {
          "value": "Loki",
          "references": []
        }
      ],
      "monitoring": [
        {
          "value": "OpenFaaS Gateway + Prometheus",
          "references": []
        }
      ],
      "integration": [
        {
          "value": "pull-based",
          "references": []
        }
      ]
    },
    "appDelivery": {
      "depAuto": [
        {
          "value": "declarative spec + faas-cli",
          "references": []
        }
      ],
      "ciCd": [
        {
          "value": "OpenFaaS Cloud",
          "references": []
        },
        {
          "value": "Jenkins",
          "references": []
        }
      ]
    },
    "codeReuse": {
      "marketplaces": [],
      "sampleRepos": [
        {
          "value": "available",
          "references": []
        }
      ]
    },
    "accessManagement": {
      "auth": [
        {
          "value": "function invocation using shared secrets",
          "references": []
        },
        {
          "value": "built-in basic authentication plugin for API access",
          "references": []
        },
        {
          "value": "paid OAuth2 authentication plugin for API access",
          "references": []
        }
      ],
      "accessControl": [
        {
          "value": "resources",
          "references": []
        }
      ]
    }
  }
}
