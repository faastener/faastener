var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.494,1,1.145]],["body/components/AboutComponent.html",[0,0.672,1,1.719,2,1.458,3,0.101,4,0.079,5,1.026,6,1.064,7,1.026,8,1.026,9,0.079,10,2.723,11,0.923,12,2.564,13,2.382,14,1.909,15,1.511,16,5.462,17,1.511,18,4.602,19,1.224,20,0.508,21,3.126,22,0.254,23,0.471,24,0.013,25,0.101,26,0.197,27,5.603,28,3.618,29,4.602,30,4.602,31,3.618,32,3.327,33,4.602,34,4.009,35,3.265,36,3.596,37,2.38,38,2.459,39,4.009,40,3.618,41,3.618,42,2.554,43,1.52,44,4.602,45,4.009,46,4.009,47,4.602,48,4.602,49,5.248,50,2.343,51,2.291,52,4.009,53,3.596,54,3.796,55,2.141,56,6.025,57,6.025,58,2.343,59,4.232,60,4.602,61,3.618,62,2.734,63,4.602,64,4.009,65,4.009,66,4.602,67,1.458,68,7.126,69,4.602,70,4.602,71,4.602,72,4.009,73,4.602,74,4.602,75,4.602,76,4.602,77,4.602,78,4.602,79,1.337,80,1.393,81,2.077,82,2.963,83,1.968,84,1.67,85,2.734,86,1.891,87,2.237,88,2.244,89,2.54,90,2.158,91,2.458,92,2.434,93,2.723,94,2.434,95,1.458,96,2.343,97,3.126,98,3.094,99,3.327,100,6.337,101,2.9,102,3.072,103,2.237,104,3.094,105,3.126,106,3.618,107,4.009,108,3.618,109,2.723,110,3.126,111,2.101,112,1.978,113,2.101,114,1.393,115,2.26,116,4.602,117,2.101,118,1.97,119,1.859,120,2.723,121,2.723,122,2.101,123,2.723,124,2.734,125,3.327,126,1.67,127,3.711,128,3.711,129,1.857,130,2.26,131,3.067,132,2.919,133,1.337,134,1.558,135,1.97,136,2.237,137,1.67,138,2.141,139,2.723,140,2.723,141,2.723,142,2.458,143,3.126,144,0.832,145,1.511,146,1.458,147,1.026,148,1.978,149,1.026,150,0.486,151,1.026,152,0.892,153,1.026,154,0.892,155,1.026,156,0.892,157,1.026,158,0.892,159,0.99,160,1.026,161,0.892,162,1.026,163,0.892,164,0.653,165,1.026,166,0.861,167,1.026,168,0.892,169,1.026,170,0.861,171,1.026,172,0.892,173,1.026,174,0.892,175,1.026,176,0.861,177,0.861,178,1.026,179,0.892,180,1.026,181,0.861,182,0.956,183,1.026,184,0.861,185,1.026,186,0.861,187,1.026,188,0.861,189,0.512,190,1.026,191,0.892,192,1.026,193,0.861,194,0.956,195,1.026,196,1.026,197,0.005,198,0.007,199,0.005]],["title/components/AppComponent.html",[0,0.494,152,1.145]],["body/components/AppComponent.html",[0,0.793,1,1.209,2,1.807,3,0.137,4,0.107,5,1.872,7,1.391,8,1.391,9,0.107,11,1.251,12,2.642,13,2.457,14,1.807,19,0.949,20,1.12,22,0.314,23,0.638,24,0.014,25,0.137,26,0.268,43,0.886,95,1.342,144,1.128,145,1.872,146,1.807,147,1.391,148,2.264,149,1.391,150,0.641,151,1.391,152,1.967,153,1.391,154,1.209,155,1.391,156,1.209,157,1.391,158,1.209,159,1.342,160,1.391,161,1.209,162,1.391,163,1.209,164,0.886,165,1.391,166,1.167,167,1.391,168,1.209,169,1.391,170,1.167,171,1.391,172,1.209,173,1.391,174,1.209,175,1.391,176,1.167,177,1.167,178,1.391,179,1.209,180,1.391,181,1.167,182,1.296,183,1.391,184,1.167,185,1.391,186,1.167,187,1.391,188,1.167,189,0.604,190,1.391,191,1.209,192,1.391,193,1.167,194,1.296,195,1.391,196,1.391,197,0.007,198,0.009,199,0.007,200,3.691,201,1.627,202,2.649,203,4.968,204,0.358,205,1.034,206,6.447,207,1.467,208,2.873,209,5.703,210,2.833,211,4.237,212,7.413,213,5.703,214,1.684,215,0.561,216,0.858,217,5.703,218,4.237,219,7.197,220,1.467,221,2.525,222,4.237,223,1.518,224,5.703,225,5.703,226,5.703,227,5.703,228,1.741,229,1.812,230,4.237,231,4.237,232,6.007,233,5.703,234,1.391,235,1.674]],["title/injectables/AppConfigService.html",[236,1.789,237,2.258]],["body/injectables/AppConfigService.html",[3,0.179,4,0.139,9,0.139,19,1.239,20,1.238,22,0.373,23,0.833,24,0.014,25,0.179,26,0.349,150,0.493,197,0.009,198,0.011,199,0.009,204,0.468,205,1.227,207,1.741,208,3.26,214,1.634,215,0.666,216,0.833,220,1.423,229,2.366,236,3.017,237,3.807,238,3.718,239,6.811,240,4.819,241,7.315,242,7.622,243,6.769,244,7.315,245,4.819,246,6.64,247,6.769,248,5.897,249,5.531,250,5.531,251,5.531,252,4.349,253,2.574,254,5.531,255,5.531,256,5.531,257,5.531,258,2.273,259,5.531]],["title/modules/AppModule.html",[260,1.527,261,2.699]],["body/modules/AppModule.html",[1,2.2,3,0.158,4,0.123,9,0.123,13,1.443,22,0.453,23,0.736,24,0.013,25,0.158,26,0.309,144,1.301,152,2.335,154,2.2,176,2.125,179,2.2,197,0.008,198,0.01,199,0.008,252,3.842,260,1.858,261,5.651,262,2.273,263,2.748,264,4.106,265,4.356,266,3.079,267,2.488,268,4.257,269,4.257,270,4.257,271,4.257,272,5.184,273,5.184,274,4.581,275,3.946,276,3.079,277,2.611,278,4.886,279,3.347,280,6.263,281,5.456,282,3.285,283,3.347,284,6.263,285,4.257,286,4.257,287,6.263,288,4.886,289,6.263,290,4.886,291,3.842,292,4.886,293,3.842,294,4.257,295,4.886,296,4.886,297,4.886]],["title/classes/AppPage.html",[26,0.254,298,3.157]],["body/classes/AppPage.html",[3,0.191,4,0.149,9,0.149,20,1.144,22,0.326,24,0.013,25,0.191,26,0.373,90,2.335,146,1.873,197,0.009,198,0.011,199,0.009,203,5.149,204,0.5,207,1.812,220,1.812,253,2.679,282,3.973,298,5.54,299,3.724,300,5.149,301,7.794,302,7.794,303,5.911,304,8.08,305,5.911,306,5.149,307,5.911,308,5.911,309,5.911]],["title/modules/AppRoutingModule.html",[260,1.527,272,2.699]],["body/modules/AppRoutingModule.html",[0,0.842,3,0.221,4,0.142,9,0.142,14,2.167,22,0.422,23,0.847,24,0.014,25,0.182,26,0.355,37,2.223,176,1.885,181,1.885,197,0.009,198,0.011,199,0.009,228,2.312,262,2.617,267,2.865,272,4.598,279,3.007,283,3.655,294,4.902,310,5.627,311,4.424,312,6.84,313,4.945,314,4.598,315,5.627,316,4.067,317,4.902,318,2.865,319,6.84,320,6.177,321,4.902,322,4.902,323,4.902,324,6.84,325,5.627,326,5.627,327,5.627,328,5.627,329,5.627,330,5.627]],["title/components/BannerComponent.html",[0,0.494,154,1.145]],["body/components/BannerComponent.html",[0,0.685,1,0.922,2,1.494,3,0.104,4,0.14,5,1.061,6,1.1,7,1.061,8,1.061,9,0.081,11,0.955,12,2.573,13,2.391,14,1.94,15,1.549,17,1.549,19,1.248,20,0.525,22,0.26,23,0.487,24,0.014,25,0.104,26,0.204,35,2.976,36,2.976,37,2.686,41,3.709,43,0.676,51,1.794,52,5.333,53,2.293,67,1.494,79,1.383,81,2.475,82,2.773,83,1.383,85,1.92,86,2.515,88,2.675,89,1.504,90,2.572,92,2.102,94,3.367,95,1.494,96,3.117,102,1.818,103,2.976,113,2.173,114,2.102,118,2.037,119,2.712,122,2.173,124,3.308,126,1.727,127,3.984,128,4.082,129,2.802,131,3.573,133,2.382,134,0.922,135,2.037,136,2.293,138,2.194,141,2.816,142,2.542,144,0.861,145,1.549,146,1.494,147,1.061,148,2.01,149,1.061,150,0.496,151,1.061,152,0.922,153,1.061,154,1.746,155,1.061,156,0.922,157,1.061,158,0.922,159,1.024,160,1.061,161,0.922,162,1.061,163,0.922,164,0.676,165,1.061,166,0.891,167,1.061,168,0.922,169,1.061,170,0.891,171,1.061,172,0.922,173,1.061,174,0.922,175,1.061,176,0.891,177,0.891,178,1.061,179,0.922,180,1.061,181,0.891,182,0.989,183,1.061,184,0.891,185,1.061,186,0.891,187,1.061,188,0.891,189,0.522,190,1.061,191,0.922,192,1.061,193,0.891,194,0.989,195,1.061,196,1.061,197,0.005,198,0.008,199,0.005,204,0.273,331,2.816,332,6.122,333,5.569,334,4.717,335,3.233,336,4.109,337,2.907,338,3.709,339,2.401,340,4.717,341,6.797,342,3.308,343,2.52,344,4.717,345,4.717,346,4.717,347,4.717,348,4.109,349,3.709,350,4.717,351,3.41,352,4.109,353,3.41,354,3.867,355,3.233,356,3.233,357,3.233,358,2.542,359,4.851,360,2.816,361,2.816,362,3.117,363,2.816,364,2.542,365,5.569,366,3.171,367,4.717,368,2.816,369,4.109,370,2.017,371,3.233,372,3.132,373,4.717,374,3.233,375,4.717,376,2.816,377,6.797,378,4.116,379,5.569,380,5.569,381,2.816,382,1.277,383,3.233,384,3.233,385,3.233,386,2.816,387,2.337,388,2.816]],["title/components/BottomNavComponent.html",[0,0.494,156,1.145]],["body/components/BottomNavComponent.html",[0,0.748,1,1.079,2,1.672,3,0.122,4,0.095,5,1.242,6,1.287,7,1.242,8,1.242,9,0.095,11,1.117,12,2.615,13,2.431,14,1.672,15,1.732,17,1.732,19,0.848,20,1.123,22,0.362,23,0.569,24,0.013,25,0.122,26,0.239,43,0.791,79,1.618,80,1.686,81,2.007,82,2.401,83,1.618,84,2.022,89,1.76,90,1.495,92,1.686,95,2.47,98,2.543,99,2.735,102,2.968,117,2.543,118,2.384,119,2.501,122,2.543,124,2.247,129,2.247,133,1.618,136,1.839,137,2.022,138,1.76,144,1.007,145,1.732,146,1.672,147,1.242,148,2.159,149,1.242,150,0.616,151,1.242,152,1.079,153,1.242,154,1.079,155,1.242,156,1.876,157,1.242,158,1.079,159,1.199,160,1.242,161,1.079,162,1.242,163,1.079,164,0.791,165,1.242,166,1.042,167,1.242,168,1.079,169,1.242,170,1.042,171,1.242,172,1.079,173,1.242,174,1.079,175,1.242,176,1.042,177,1.042,178,1.242,179,1.079,180,1.242,181,1.042,182,1.157,183,1.242,184,1.042,185,1.242,186,1.042,187,1.242,188,1.042,189,0.569,190,1.242,191,1.079,192,1.242,193,1.042,194,1.157,195,1.242,196,1.242,197,0.006,198,0.008,199,0.006,201,1.505,202,2.497,204,0.446,205,0.957,207,1.357,210,2.701,214,1.559,215,0.598,216,0.794,220,1.357,221,2.225,229,1.618,235,2.085,354,2.247,358,2.975,364,2.975,370,1.618,389,6.24,390,5.178,391,3.296,392,5.277,393,6.077,394,5.277,395,6.077,396,5.277,397,2.968,398,6.077,399,3.783,400,6.24,401,5.277,402,1.254,403,3.783,404,5.277,405,3.783,406,1.839,407,0.973,408,0.848,409,3.783,410,2.82,411,2.247,412,3.296,413,3.783,414,2.735,415,5.277,416,2.247,417,5.277,418,5.277,419,3.296,420,5.277,421,3.296,422,2.735,423,1.926,424,2.735,425,2.975,426,3.296,427,2.128]],["title/components/ChildGroupingComponent.html",[0,0.494,158,1.145]],["body/components/ChildGroupingComponent.html",[0,0.732,1,1.038,2,1.627,3,0.118,4,0.092,5,1.194,6,1.238,7,1.194,8,1.194,9,0.092,11,1.074,12,2.605,13,2.422,14,1.627,15,1.685,17,1.685,19,1.333,20,1.181,22,0.328,23,0.548,24,0.014,25,0.118,26,0.23,43,0.76,79,1.556,80,1.621,81,1.383,82,2.028,83,1.556,84,1.944,85,2.161,86,1.495,87,2.496,88,2.109,89,1.692,94,2.652,95,1.153,96,2.614,103,1.768,119,2.025,126,1.944,127,1.944,128,1.944,131,3.601,133,2.196,140,3.169,144,0.968,145,1.685,146,1.627,147,1.194,148,2.122,149,1.194,150,0.53,151,1.194,152,1.038,153,1.194,154,1.038,155,1.194,156,1.038,157,1.194,158,1.844,159,2.495,160,1.194,161,1.038,162,1.194,163,1.038,164,0.76,165,1.194,166,1.002,167,1.194,168,1.038,169,1.194,170,1.002,171,1.194,172,1.038,173,1.194,174,1.038,175,1.194,176,1.002,177,1.002,178,1.194,179,1.038,180,1.194,181,1.002,182,1.113,183,1.194,184,1.002,185,1.194,186,1.002,187,1.194,188,1.002,189,0.557,190,1.194,191,1.038,192,1.194,193,1.002,194,1.113,195,1.194,196,1.194,197,0.006,198,0.008,199,0.006,204,0.308,215,0.67,223,1.367,235,2.553,370,1.556,397,2.887,402,1.172,407,1.53,408,1.333,410,3.885,428,6.467,429,5.837,430,3.169,431,3.17,432,5.95,433,5.134,434,5.183,435,2.262,436,6.816,437,5.183,438,5.183,439,5.95,440,5.134,441,3.638,442,2.444,443,3.638,444,3.638,445,3.638,446,2.743,447,3.638,448,1.113,449,2.292,450,5.561,451,5.134,452,5.134,453,3.049,454,4.037,455,4.037,456,2.046,457,3.638,458,2.445,459,2.445,460,3.638,461,4.472,462,3.638]],["title/interfaces/ClassificationCriterion.html",[463,0.453,464,1.586]],["body/interfaces/ClassificationCriterion.html",[3,0.097,4,0.075,9,0.075,22,0.165,24,0.014,25,0.221,26,0.189,35,1.452,36,1.452,37,1.18,42,2.396,43,1.231,50,1.52,53,2.163,55,1.389,58,1.52,67,2.228,134,2.167,150,0.683,164,1.603,189,0.552,197,0.005,198,0.007,199,0.005,204,0.252,205,0.807,215,0.62,216,1.082,223,1.184,234,0.98,258,2.421,337,1.277,339,2.265,343,2.377,382,1.758,402,1.469,407,1.144,408,1.48,431,2.473,435,2.858,442,2.421,448,1.802,463,0.858,464,2.489,465,0.852,466,1.679,467,2.198,468,2.642,469,2.377,470,2.841,471,3.158,472,3.158,473,3.5,474,2.309,475,2.851,476,3.58,477,2.421,478,3.158,479,3.158,480,4.065,481,3.849,482,1.57,483,1.016,484,1.277,485,1.452,486,1.774,487,3.53,488,2.89,489,2.069,490,3.5,491,3.5,492,1.903,493,1.774,494,1.595,495,1.679,496,3.367,497,1.774,498,3.419,499,2.642,500,1.774,501,2.707,502,1.389,503,1.331,504,1.774,505,2.642,506,1.389,507,1.774,508,3.158,509,1.389,510,1.903,511,1.903,512,1.774,513,1.774,514,1.774,515,2.642,516,2.642,517,2.377,518,1.331,519,1.331,520,1.774,521,1.774,522,2.265,523,1.774,524,2.642,525,3.158,526,1.774,527,1.774,528,1.774,529,1.774,530,1.679,531,1.774,532,1.774,533,1.389,534,2.265,535,2.265,536,1.758,537,1.774,538,1.18,539,1.774,540,1.331,541,1.774,542,1.774,543,1.595,544,0.98,545,2.642,546,1.774,547,1.774,548,1.774,549,1.679,550,1.679]],["title/interfaces/ClassificationFramework.html",[463,0.453,483,1.366]],["body/interfaces/ClassificationFramework.html",[3,0.096,4,0.075,9,0.075,22,0.164,24,0.014,25,0.221,26,0.188,35,1.447,36,1.447,37,1.176,42,2.237,43,1.468,50,1.515,53,2.158,55,1.385,58,1.515,67,2.226,134,2.143,150,0.683,164,1.501,189,0.551,197,0.005,198,0.007,199,0.005,204,0.252,205,0.805,215,0.649,216,1.1,223,1.182,234,0.977,258,2.417,337,1.273,339,2.26,343,2.372,382,1.754,402,1.468,407,1.142,408,1.479,431,2.468,435,2.821,442,2.417,448,1.623,463,0.848,464,2.324,465,0.849,466,1.674,467,2.149,468,1.768,469,1.591,470,2.372,471,2.636,472,2.636,473,1.768,474,2.307,475,2.868,476,3.48,477,2.18,478,2.636,479,2.636,480,4.061,481,3.845,482,2.075,483,1.51,484,1.898,485,2.158,486,2.636,487,3.653,488,2.888,489,2.468,490,3.738,491,3.738,492,2.27,493,2.636,494,2.372,495,3.309,496,3.362,497,1.768,498,3.416,499,2.636,500,1.768,501,2.702,502,1.385,503,1.327,504,1.768,505,2.636,506,1.385,507,1.768,508,3.152,509,1.385,510,1.898,511,1.898,512,1.768,513,1.768,514,1.768,515,2.636,516,2.636,517,2.372,518,1.327,519,1.327,520,1.768,521,1.768,522,2.26,523,1.768,524,2.636,525,3.152,526,1.768,527,1.768,528,1.768,529,1.768,530,1.674,531,1.768,532,1.768,533,1.385,534,2.26,535,2.26,536,1.754,537,1.768,538,1.176,539,1.768,540,1.327,541,1.768,542,1.768,543,1.591,544,0.977,545,2.636,546,1.768,547,1.768,548,1.768,549,1.674,550,1.674]],["title/interfaces/ClassificationFrameworkResponse.html",[463,0.453,551,2.145]],["body/interfaces/ClassificationFrameworkResponse.html",[3,0.156,4,0.122,9,0.122,22,0.343,24,0.014,25,0.249,42,2.614,51,2.614,67,1.53,134,2.193,150,0.697,189,0.452,197,0.008,198,0.01,199,0.008,204,0.408,205,1.127,215,0.739,216,0.936,223,1.286,402,1.523,406,2.348,407,1.242,435,1.837,448,1.902,463,0.904,465,1.378,467,2.103,474,2.568,475,2.816,482,2.34,492,2.659,510,2.066,511,2.066,518,2.153,519,2.153,536,1.908,538,1.908,551,3.322,552,2.869,553,4.574,554,4.084,555,4.332,556,3.043,557,2.581,558,3.043,559,2.581,560,3.043,561,2.581,562,3.043,563,3.043,564,2.581,565,2.581,566,3.496,567,2.247]],["title/interfaces/ClassificationView.html",[463,0.453,501,2.044]],["body/interfaces/ClassificationView.html",[3,0.097,4,0.075,9,0.075,22,0.165,24,0.014,25,0.221,26,0.189,35,1.457,36,1.457,37,1.184,42,2.4,43,1.234,50,1.526,53,2.591,55,1.394,58,1.526,67,2.231,134,2.169,150,0.684,164,1.504,189,0.553,197,0.005,198,0.007,199,0.005,204,0.254,205,0.809,215,0.621,216,1.06,223,1.188,234,0.984,258,2.425,337,1.282,339,2.713,343,2.384,382,1.763,402,1.469,407,1.148,408,1.482,431,2.479,435,2.918,442,2.718,448,1.63,463,0.858,464,2.332,465,0.855,466,1.686,467,2.201,468,1.781,469,1.602,470,2.384,471,2.65,472,2.65,473,1.781,474,2.312,475,2.871,476,3.488,477,2.19,478,2.65,479,2.65,480,4.07,481,3.854,482,1.574,483,1.02,484,1.282,485,1.457,486,1.781,487,3.535,488,2.893,489,2.075,490,3.749,491,3.749,492,1.908,493,1.781,494,1.602,495,1.686,496,3.372,497,1.781,498,3.658,499,3.166,500,1.781,501,3.006,502,1.394,503,1.336,504,1.781,505,2.65,506,1.394,507,1.781,508,3.507,509,1.394,510,1.908,511,1.908,512,1.781,513,1.781,514,1.781,515,2.65,516,2.65,517,2.384,518,1.336,519,1.336,520,1.781,521,1.781,522,2.272,523,1.781,524,2.65,525,3.166,526,1.781,527,1.781,528,1.781,529,1.781,530,1.686,531,1.781,532,1.781,533,1.394,534,2.272,535,2.272,536,1.763,537,1.781,538,1.184,539,1.781,540,1.336,541,1.781,542,1.781,543,1.602,544,0.984,545,2.65,546,1.781,547,1.781,548,1.781,549,1.686,550,1.686]],["title/interfaces/ClassificationViewCombination.html",[463,0.453,489,1.867]],["body/interfaces/ClassificationViewCombination.html",[3,0.095,4,0.074,9,0.074,22,0.162,24,0.014,25,0.22,26,0.186,35,1.428,36,1.428,37,1.161,42,2.222,43,1.222,50,1.496,53,2.56,55,1.366,58,1.496,67,2.217,134,2.161,150,0.681,164,1.496,189,0.547,197,0.005,198,0.007,199,0.005,204,0.248,205,0.797,215,0.646,216,1.097,223,1.556,234,0.965,258,2.401,337,1.256,339,2.681,343,2.349,382,1.736,402,1.466,407,1.689,408,1.471,431,2.449,435,2.813,442,2.401,448,1.611,463,0.855,464,2.309,465,0.838,466,1.652,467,2.189,468,1.745,469,1.57,470,2.349,471,2.611,472,2.611,473,1.745,474,2.298,475,2.862,476,3.465,477,2.163,478,2.611,479,2.611,480,4.043,481,3.828,482,1.555,483,1,484,1.256,485,1.428,486,1.745,487,3.509,488,2.879,489,2.449,490,3.717,491,3.717,492,2.676,493,1.745,494,1.57,495,1.652,496,3.894,497,2.611,498,3.642,499,3.128,500,1.745,501,2.976,502,2.044,503,1.959,504,2.611,505,3.128,506,2.044,507,2.611,508,3.128,509,1.366,510,1.88,511,1.88,512,1.745,513,1.745,514,1.745,515,2.611,516,2.611,517,2.349,518,1.309,519,1.309,520,1.745,521,1.745,522,2.238,523,1.745,524,2.611,525,3.128,526,1.745,527,1.745,528,1.745,529,1.745,530,1.652,531,1.745,532,1.745,533,1.366,534,2.238,535,2.238,536,1.736,537,1.745,538,1.161,539,1.745,540,1.309,541,1.745,542,1.745,543,1.57,544,0.965,545,2.611,546,1.745,547,1.745,548,1.745,549,1.652,550,1.652,568,2.938]],["title/interfaces/ClassificationViewCombinationResponse.html",[463,0.453,557,2.145]],["body/interfaces/ClassificationViewCombinationResponse.html",[3,0.154,4,0.12,9,0.12,22,0.339,24,0.014,25,0.248,42,2.745,51,2.745,67,1.508,134,2.223,150,0.694,189,0.446,197,0.008,198,0.01,199,0.008,204,0.402,205,1.117,215,0.735,216,0.927,223,1.817,402,1.521,406,2.314,407,1.857,435,1.81,448,1.884,463,0.909,465,1.358,467,2.208,474,2.559,475,2.805,482,2.016,492,2.92,510,2.035,511,2.035,518,2.121,519,2.121,536,1.88,538,1.88,551,2.543,552,2.827,553,2.999,554,4.288,555,4.548,556,3.88,557,3.291,558,4.548,559,2.543,560,2.999,561,2.543,562,2.999,563,2.999,564,2.543,565,2.543,566,3.463,567,2.214]],["title/interfaces/ClassificationViewResponse.html",[463,0.453,559,2.145]],["body/interfaces/ClassificationViewResponse.html",[3,0.156,4,0.122,9,0.122,22,0.343,24,0.014,25,0.249,42,2.762,51,2.762,67,1.533,134,2.232,150,0.697,189,0.453,197,0.008,198,0.01,199,0.008,204,0.409,205,1.128,215,0.714,223,1.288,402,1.523,406,2.352,407,1.244,435,1.84,448,1.904,463,0.911,465,1.38,467,2.222,474,2.569,475,2.817,482,2.032,492,2.942,510,2.069,511,2.069,518,2.156,519,2.156,536,1.911,538,1.911,551,2.585,552,2.874,553,3.048,554,4.314,555,4.577,556,3.048,557,2.585,558,3.048,559,3.325,560,4.577,561,2.585,562,3.048,563,3.048,564,2.585,565,2.585,566,3.5,567,2.25]],["title/modules/CoreModule.html",[260,1.527,273,2.699]],["body/modules/CoreModule.html",[3,0.166,4,0.129,9,0.129,22,0.437,23,0.774,24,0.014,25,0.166,26,0.325,31,4.044,144,1.369,197,0.008,198,0.01,199,0.008,216,0.774,234,1.689,237,4.553,253,2.46,260,2.46,262,2.392,263,2.893,264,3.843,265,3.241,266,4.461,267,2.619,273,5.565,275,4.077,276,3.241,277,2.748,279,2.748,283,3.458,411,3.055,569,4.481,570,4.481,571,3.799,572,4.924,573,5.253,574,5.143,575,6.471,576,6.471,577,4.677,578,4.677,579,5.143,580,4.044,581,5.143,582,5.143,583,5.143,584,4.481,585,5.143,586,5.143,587,5.143,588,3.718,589,4.481,590,5.143,591,5.143,592,5.143,593,3.718,594,5.143,595,5.143,596,5.143]],["title/interfaces/CriteriaBasedQuery.html",[463,0.453,597,1.867]],["body/interfaces/CriteriaBasedQuery.html",[3,0.14,4,0.109,9,0.109,20,0.702,24,0.014,25,0.241,38,2.311,51,1.644,62,2.569,67,1.37,112,1.898,150,0.385,164,0.904,189,0.405,197,0.007,198,0.009,199,0.007,215,0.425,223,1.151,234,1.42,235,1.708,372,3.911,402,1.448,408,1.671,463,0.86,464,1.708,465,1.234,467,1.992,477,2.375,482,1.708,488,2.573,502,3.029,503,2.903,506,3.599,509,3.029,533,2.011,540,3.324,544,2.379,567,2.689,597,2.689,598,2.569,599,3.767,600,3.316,601,4.324,602,2.432,603,2.725,604,2.907,605,3.643,606,3.54,607,3.38,608,4.13,609,3.887,610,2.907,611,2.907,612,2.011,613,2.907,614,2.907,615,3.434,616,3.434,617,2.569,618,3.643,619,3.167,620,2.907,621,3.089,622,2.725,623,2.569,624,2.907,625,2.907,626,4.104,627,5.119,628,3.434,629,4.104,630,2.907,631,3.887,632,3.887,633,4.104,634,2.907,635,3.869,636,4.104,637,4.381,638,4.104,639,3.869,640,2.907,641,4.104,642,4.104]],["title/interfaces/CriteriaGrouping.html",[442,1.65,463,0.453]],["body/interfaces/CriteriaGrouping.html",[3,0.094,4,0.073,9,0.073,22,0.16,24,0.014,25,0.219,26,0.184,35,1.416,36,1.416,37,1.15,42,2.212,43,1.216,50,1.482,53,2.122,55,1.354,58,1.482,67,2.369,134,2.036,150,0.68,164,1.492,189,0.584,197,0.005,198,0.007,199,0.005,204,0.246,205,0.792,215,0.644,216,1.126,223,1.162,234,0.956,258,2.391,337,1.245,339,2.223,343,2.799,382,1.725,402,1.464,407,1.123,408,1.466,431,3.044,435,2.968,442,2.561,448,1.602,463,0.853,464,2.586,465,0.831,466,1.638,467,2.183,468,1.73,469,1.556,470,2.799,471,3.111,472,3.111,473,1.73,474,2.292,475,2.904,476,3.455,477,2.152,478,2.593,479,2.593,480,4.031,481,3.817,482,1.547,483,0.991,484,1.245,485,1.416,486,1.73,487,3.497,488,2.872,489,2.031,490,3.703,491,3.703,492,1.867,493,1.73,494,1.556,495,1.638,496,3.331,497,1.73,498,3.393,499,2.593,500,1.73,501,2.666,502,1.354,503,1.298,504,1.73,505,3.111,506,1.354,507,1.73,508,3.703,509,2.031,510,2.799,511,2.24,512,2.593,513,2.593,514,2.593,515,3.111,516,3.111,517,2.799,518,1.298,519,1.298,520,1.73,521,2.593,522,2.666,523,2.593,524,2.593,525,3.111,526,1.73,527,1.73,528,1.73,529,1.73,530,1.638,531,1.73,532,1.73,533,1.354,534,2.223,535,2.223,536,1.725,537,1.73,538,1.15,539,1.73,540,1.298,541,1.73,542,1.73,543,1.556,544,0.956,545,2.593,546,1.73,547,1.73,548,1.73,549,1.638,550,1.638]],["title/interfaces/CriteriaGroupingResponse.html",[463,0.453,561,2.145]],["body/interfaces/CriteriaGroupingResponse.html",[3,0.154,4,0.12,9,0.12,22,0.339,24,0.014,25,0.247,42,2.594,51,2.743,67,1.949,134,2.058,150,0.694,189,0.445,197,0.008,198,0.01,199,0.008,204,0.402,205,1.115,215,0.735,216,1.086,223,1.265,402,1.526,406,2.31,407,1.222,435,2.339,448,1.882,463,0.909,465,1.355,467,2.207,474,2.558,475,2.803,482,2.015,492,2.631,510,3.085,511,2.032,518,2.118,519,2.118,536,1.877,538,1.877,551,2.539,552,2.822,553,2.994,554,4.285,555,4.546,556,2.994,557,2.539,558,2.994,559,2.539,560,2.994,561,3.287,562,4.546,563,4.546,564,2.539,565,2.539,566,3.46,567,2.21]],["title/interfaces/CriteriaReview.html",[463,0.453,566,2.258]],["body/interfaces/CriteriaReview.html",[3,0.165,4,0.129,9,0.129,20,0.831,22,0.355,24,0.014,25,0.252,42,2.685,51,2.685,67,1.621,134,2.015,150,0.66,189,0.479,197,0.008,198,0.01,199,0.008,223,1.362,402,1.515,406,2.487,407,1.316,435,1.945,448,2.16,463,0.913,465,1.46,467,2.16,474,2.434,475,2.715,482,2.086,492,2.758,510,2.188,511,2.188,518,2.28,519,2.28,536,2.021,538,2.021,551,2.734,552,3.039,553,3.224,554,4.195,555,4.45,556,3.224,557,2.734,558,3.224,559,2.734,560,3.224,561,2.734,562,3.224,563,3.224,564,2.734,565,2.734,566,3.972,567,3,599,4.457,643,5.116]],["title/components/CriterionComponent.html",[0,0.494,161,1.145]],["body/components/CriterionComponent.html",[0,0.659,1,0.861,2,1.421,3,0.205,4,0.076,5,0.991,6,1.028,7,0.991,8,0.991,9,0.076,11,0.892,12,2.553,13,2.372,14,1.421,15,1.473,17,1.473,19,1.199,20,1.171,22,0.326,23,0.455,24,0.014,25,0.098,26,0.191,43,0.631,79,1.291,80,1.346,81,2.407,82,3.118,83,2.707,84,2.86,86,2.601,88,2.434,89,2.087,90,2.714,92,2.386,94,2.641,95,0.957,96,3.016,102,1.698,103,1.468,112,2.5,114,1.999,119,2.154,125,4.965,127,3.166,128,3.166,131,3.223,132,3.67,133,1.291,134,0.861,138,2.087,144,0.804,145,1.473,146,1.421,147,0.991,148,1.945,149,0.991,150,0.477,151,0.991,152,0.861,153,0.991,154,0.861,155,0.991,156,0.861,157,0.991,158,0.861,159,1.696,160,0.991,161,1.69,162,0.991,163,0.861,164,1.386,165,0.991,166,0.832,167,0.991,168,0.861,169,0.991,170,0.832,171,0.991,172,0.861,173,0.991,174,0.861,175,0.991,176,0.832,177,0.832,178,0.991,179,0.861,180,0.991,181,0.832,182,0.924,183,0.991,184,0.832,185,0.991,186,0.832,187,0.991,188,0.832,189,0.501,190,0.991,191,0.861,192,0.991,193,0.832,194,0.924,195,0.991,196,0.991,197,0.005,198,0.007,199,0.005,201,1.28,202,2.199,204,0.255,205,0.813,207,1.154,210,2.434,215,0.675,220,0.777,221,1.643,223,1.194,369,5.161,370,1.919,372,1.698,378,3.598,382,2.501,386,2.631,397,2.523,402,1.203,407,0.777,408,0.677,410,3.545,416,1.794,423,3.223,427,1.698,448,2.029,449,1.903,456,3.332,461,3.908,464,2.115,477,2.199,534,2.725,644,2.631,645,5.352,646,4.486,647,5.352,648,5.352,649,4.486,650,3.02,651,3.02,652,3.02,653,4.486,654,3.02,655,3.02,656,3.02,657,3.02,658,4.486,659,4.486,660,4.486,661,3.02,662,3.02,663,3.02,664,4.486,665,5.352,666,4.486,667,3.908,668,4.486,669,4.743,670,4.486,671,3.527,672,4.486,673,4.486,674,4.486,675,3.527,676,4.486,677,4.486,678,2.631,679,5.924,680,3.02,681,2.631,682,2.827,683,3.02,684,3.02,685,3.02,686,2.03,687,2.827]],["title/components/CriterionFilterComponent.html",[0,0.494,163,1.145]],["body/components/CriterionFilterComponent.html",[0,0.667,1,0.879,2,1.443,3,0.1,4,0.078,5,1.012,6,1.049,7,1.012,8,1.012,9,0.078,11,0.911,12,2.56,13,2.378,14,1.443,15,1.496,17,1.496,19,0.691,20,1.123,22,0.33,23,0.464,24,0.014,25,0.1,26,0.195,35,1.499,43,0.644,51,2.276,79,1.319,80,1.374,81,1.732,82,2.364,83,1.948,86,1.872,87,1.499,88,1.267,94,2.415,95,1.443,102,1.734,103,1.499,114,2.03,119,1.844,129,1.831,133,1.319,144,0.821,145,1.496,146,1.443,147,1.012,148,1.965,149,1.012,150,0.569,151,1.012,152,0.879,153,1.012,154,0.879,155,1.012,156,0.879,157,1.012,158,0.879,159,0.977,160,1.012,161,0.879,162,1.012,163,1.707,164,1.563,165,1.012,166,0.85,167,1.012,168,0.879,169,1.012,170,0.85,171,1.012,172,0.879,173,1.012,174,0.879,175,1.012,176,0.85,177,0.85,178,1.012,179,0.879,180,1.012,181,0.85,182,0.943,183,1.012,184,0.85,185,1.012,186,0.85,187,1.012,188,0.85,189,0.507,190,1.012,191,0.879,192,1.012,193,0.85,194,0.943,195,1.012,196,1.012,197,0.005,198,0.007,199,0.005,201,1.3,202,2.226,204,0.261,205,0.826,207,1.172,210,2.459,214,0.911,215,0.628,216,0.464,220,1.172,221,1.984,223,1.213,229,1.319,253,1.172,362,1.57,370,1.319,378,2.073,382,1.218,397,2.562,402,0.826,407,0.793,408,1.591,410,2.434,423,2.319,427,1.734,453,1.831,477,1.267,544,1.012,597,1.434,606,2.758,607,3.584,618,4.357,619,2.634,638,1.943,669,2.073,682,1.943,686,2.073,688,6.184,689,5.581,690,2.686,691,5.418,692,4.556,693,5.418,694,3.917,695,5.985,696,4.556,697,5.418,698,3.083,699,5.214,700,4.556,701,3.969,702,3.083,703,5.418,704,3.083,705,3.083,706,3.083,707,5.418,708,5.418,709,3.083,710,4.556,711,1.943,712,2.229,713,1.57,714,7.478,715,4.556,716,4.556,717,4.556,718,4.556,719,3.083,720,4.556,721,3.083,722,3.083,723,3.083,724,3.083,725,3.083,726,3.083,727,3.083,728,5.418,729,3.083,730,3.083,731,4.556,732,3.083,733,3.083,734,3.083,735,3.083,736,4.556,737,3.083,738,3.083,739,3.083,740,3.083,741,2.073,742,3.083,743,3.083,744,3.083,745,3.083,746,3.083,747,6.684,748,5.418,749,5.985,750,2.424,751,3.083,752,3.083,753,3.083,754,2.424,755,3.083]],["title/interfaces/CriterionFilterConfiguration.html",[463,0.453,606,2.044]],["body/interfaces/CriterionFilterConfiguration.html",[3,0.132,4,0.103,9,0.103,24,0.014,25,0.237,38,2.179,51,1.551,62,2.422,67,1.292,112,1.824,134,1.163,150,0.363,164,0.852,189,0.382,197,0.007,198,0.009,199,0.007,204,0.345,205,1.008,215,0.698,216,0.836,223,1.086,234,1.339,235,1.611,372,3.818,402,1.476,408,1.642,463,0.862,464,2.195,465,1.163,467,2.076,477,2.283,482,1.641,488,2.497,502,2.94,503,2.818,506,3.551,509,2.94,533,3.157,540,3.343,544,2.332,567,1.897,597,1.897,598,2.422,600,2.829,602,2.293,603,2.569,604,2.741,605,3.501,606,3.616,607,3.453,608,4.354,609,4.249,610,2.741,611,2.741,612,1.897,613,2.741,614,3.736,615,3.755,616,3.755,617,4.032,618,4.476,619,3.453,620,4.563,621,2.969,622,2.569,623,2.422,624,2.741,625,2.741,626,3.983,627,5.042,628,3.301,629,3.983,630,2.741,631,3.736,632,3.736,633,3.983,634,2.741,635,3.755,636,3.983,637,4.277,638,3.983,639,3.755,640,2.741,641,3.983,642,3.983]],["title/interfaces/CriterionFilterValue.html",[463,0.453,600,2.044]],["body/interfaces/CriterionFilterValue.html",[3,0.136,4,0.106,9,0.106,24,0.014,25,0.239,38,2.241,51,1.595,62,2.491,67,1.329,112,1.86,150,0.374,164,0.877,189,0.393,197,0.007,198,0.009,199,0.007,204,0.355,205,1.027,215,0.631,216,0.853,223,1.707,234,1.377,235,1.657,372,3.863,402,1.451,408,1.745,463,0.853,464,1.657,465,1.197,467,1.962,477,2.327,482,1.673,488,2.534,502,2.983,503,2.859,506,3.574,509,2.983,533,1.951,540,3.294,544,2.481,567,1.951,597,1.951,598,2.491,600,3.265,602,2.359,603,2.643,604,2.82,605,3.569,606,3.496,607,3.339,608,4.079,609,3.808,610,2.82,611,2.82,612,1.951,613,2.82,614,2.82,615,3.365,616,3.365,617,2.491,618,4.519,619,3.487,620,2.82,621,3.027,622,2.643,623,2.491,624,2.82,625,2.82,626,4.041,627,5.079,628,3.365,629,4.041,630,2.82,631,3.808,632,3.808,633,4.041,634,2.82,635,3.81,636,4.041,637,4.327,638,4.041,639,3.81,640,2.82,641,4.041,642,4.041]],["title/interfaces/CriterionInstance.html",[448,1.228,463,0.453]],["body/interfaces/CriterionInstance.html",[3,0.097,4,0.075,9,0.075,22,0.165,24,0.014,25,0.221,26,0.189,35,1.456,36,1.456,37,1.183,42,2.399,43,1.233,50,1.525,53,2.168,55,1.393,58,1.525,67,2.17,134,2.052,150,0.652,164,1.553,189,0.619,197,0.005,198,0.007,199,0.005,204,0.253,205,0.808,215,0.58,216,1.102,223,1.187,234,0.983,258,2.717,337,1.281,339,2.27,343,2.846,382,1.762,402,1.449,407,1.147,408,1.482,431,2.477,435,2.784,442,2.424,448,1.805,463,0.858,464,2.492,465,0.854,466,1.684,467,2.2,468,1.779,469,1.6,470,2.382,471,2.648,472,2.648,473,1.779,474,2.071,475,2.871,476,3.487,477,2.717,478,3.164,479,3.164,480,4.069,481,3.852,482,1.573,483,1.019,484,1.281,485,1.456,486,1.779,487,3.761,488,2.892,489,2.074,490,3.505,491,3.505,492,1.907,493,1.779,494,1.6,495,1.684,496,3.371,497,1.779,498,3.422,499,2.648,500,1.779,501,2.712,502,1.393,503,1.335,504,1.779,505,2.648,506,1.393,507,1.779,508,3.164,509,1.393,510,1.907,511,1.907,512,1.779,513,1.779,514,1.779,515,3.164,516,3.164,517,2.846,518,1.335,519,1.335,520,1.779,521,1.779,522,2.712,523,1.779,524,2.648,525,3.164,526,1.779,527,1.779,528,1.779,529,2.648,530,2.508,531,1.779,532,1.779,533,2.744,534,2.712,535,2.712,536,2.492,537,2.648,538,2.331,539,1.779,540,1.335,541,1.779,542,1.779,543,1.6,544,0.983,545,2.648,546,1.779,547,1.779,548,1.779,549,1.684,550,1.684]],["title/classes/CriterionValue.html",[26,0.254,534,2.044]],["body/classes/CriterionValue.html",[3,0.096,4,0.075,9,0.075,20,0.861,22,0.164,24,0.014,25,0.221,26,0.188,35,1.446,36,1.446,37,1.175,42,2.236,43,1.229,50,2.258,53,2.156,55,1.383,58,2.258,67,2.165,134,2.048,150,0.651,164,1.527,189,0.551,197,0.005,198,0.007,199,0.005,204,0.251,205,0.804,215,0.618,216,1.143,223,1.412,234,0.976,258,2.71,299,1.874,337,1.272,339,2.258,343,2.37,382,2.095,402,1.454,407,1.141,408,1.683,431,2.467,435,2.779,442,2.416,448,1.798,463,0.857,464,2.323,466,1.672,467,2.235,468,1.766,469,1.589,470,2.37,471,2.634,472,2.634,473,1.766,474,2.065,475,2.806,476,3.479,477,2.179,478,2.634,479,2.634,480,3.918,481,3.71,482,1.567,483,1.012,484,1.272,485,1.446,486,1.766,487,3.836,488,2.887,489,2.063,490,3.493,491,3.493,492,1.897,493,1.766,494,1.589,495,1.672,496,3.361,497,1.766,498,3.415,499,2.634,500,1.766,501,2.7,502,1.383,503,1.325,504,1.766,505,2.634,506,1.383,507,1.766,508,3.15,509,1.383,510,1.897,511,2.268,512,1.766,513,1.766,514,1.766,515,2.634,516,2.634,517,2.37,518,1.325,519,1.325,520,1.766,521,1.766,522,2.258,523,1.766,524,2.634,525,3.15,526,1.766,527,1.766,528,1.766,529,1.766,530,1.672,531,1.766,532,1.766,533,1.383,534,2.7,535,2.7,536,1.752,537,1.766,538,1.175,539,2.634,540,1.977,541,2.634,542,1.766,543,1.589,544,1.456,545,3.736,546,2.634,547,2.634,548,2.634,549,2.494,550,2.983,756,2.974,757,2.974,758,2.974]],["title/injectables/DataService.html",[236,1.789,571,1.952]],["body/injectables/DataService.html",[3,0.056,4,0.044,9,0.044,19,0.387,20,1.188,22,0.342,23,0.26,24,0.014,25,0.056,26,0.109,43,0.776,67,1.374,112,1.219,134,1.237,150,0.646,189,0.488,197,0.012,198,0.005,199,0.003,204,0.146,207,0.742,208,2.464,214,2.029,215,0.665,216,1.034,220,1.866,229,0.739,232,1.506,235,2.289,236,1.286,238,1.162,245,1.506,246,3.778,248,2.514,252,1.359,253,2.944,258,0.71,318,3.723,378,1.94,402,1.413,406,0.841,407,1.115,408,1.167,435,1.649,442,2.14,446,3.095,450,1.359,464,1.14,474,2.093,475,2.204,482,1.777,483,1.476,484,1.855,489,1.727,492,1.588,495,2.089,496,0.924,498,2.344,501,1.891,510,0.739,538,0.683,544,0.568,551,0.924,557,1.542,559,1.542,561,2.576,564,0.924,565,0.924,567,0.804,571,1.403,572,2.732,584,1.506,607,0.841,612,0.804,619,0.841,667,1.506,711,1.089,713,3.544,759,1.359,760,2.886,761,4.337,762,2.886,763,2.886,764,2.886,765,2.886,766,2.886,767,2.886,768,4.337,769,4.337,770,4.337,771,2.886,772,2.886,773,2.886,774,2.886,775,4.337,776,2.886,777,4.337,778,2.886,779,2.497,780,2.886,781,2.685,782,1.729,783,2.886,784,1.729,785,1.729,786,4.222,787,2.886,788,1.729,789,3.714,790,2.886,791,1.729,792,2.886,793,2.886,794,1.729,795,2.886,796,1.729,797,2.886,798,2.886,799,1.729,800,2.886,801,1.729,802,1.729,803,1.729,804,1.729,805,2.886,806,1.729,807,6.017,808,2.886,809,1.729,810,2.886,811,1.729,812,2.886,813,1.729,814,1.729,815,2.886,816,1.729,817,2.514,818,1.729,819,2.886,820,1.729,821,2.886,822,2.886,823,1.729,824,1.729,825,4.609,826,1.729,827,0.804,828,2.886,829,3.714,830,1.729,831,1.25,832,1.729,833,3.714,834,1.25,835,1.729,836,0.88,837,1.94,838,1.089,839,1.729,840,1.027,841,1.359,842,1.359,843,1.506,844,1.359,845,1.506,846,1.359,847,1.506,848,1.359,849,1.506,850,1.506,851,1.359,852,1.506,853,1.359,854,1.506,855,1.359,856,1.506,857,1.359,858,1.506,859,1.359,860,1.506,861,3.714,862,1.729,863,1.729,864,2.886,865,1.729,866,1.729,867,1.729,868,1.729,869,1.359,870,1.729,871,1.729,872,1.729,873,1.729,874,1.729,875,3.805,876,7.121,877,5.147,878,1.729,879,2.886,880,1.729,881,2.886,882,1.729,883,3.41,884,2.514,885,1.729,886,1.729,887,3.714,888,1.729,889,2.886,890,1.729,891,1.729,892,5.21,893,1.729,894,1.729,895,1.729,896,1.729,897,1.729,898,1.729,899,1.729,900,3.714,901,2.886,902,1.729,903,1.359,904,1.729,905,1.729,906,1.729,907,2.886,908,1.729,909,1.729,910,2.886,911,3.714,912,3.714,913,2.886,914,1.729,915,3.714,916,3.714,917,2.886,918,2.886,919,2.886,920,4.337,921,2.886,922,1.729,923,1.729,924,1.729,925,1.729,926,1.729,927,1.729,928,1.729,929,1.729,930,1.729,931,3.714,932,2.886,933,1.729,934,1.729,935,2.269,936,1.729,937,1.729,938,1.729,939,2.886,940,1.729,941,1.729,942,1.729,943,1.729,944,1.729,945,1.729,946,2.269,947,1.729,948,1.729,949,1.729,950,1.729,951,1.729,952,1.729,953,1.729,954,1.729,955,1.729,956,1.729,957,1.729,958,1.729,959,1.729,960,1.729,961,1.729,962,1.729,963,1.729,964,1.729,965,1.729,966,1.729,967,1.729,968,1.729,969,1.729,970,1.729,971,3.714,972,2.886,973,1.729,974,1.729,975,1.729,976,2.886,977,1.729,978,1.729,979,2.886,980,1.25,981,1.729,982,1.729,983,2.086,984,2.886,985,1.729,986,1.729,987,1.25,988,1.729,989,1.729,990,1.729,991,1.729,992,1.729,993,1.729,994,1.729,995,1.729,996,1.729,997,1.729,998,1.729,999,2.685,1000,1.729,1001,1.729,1002,3.714,1003,1.729,1004,1.729,1005,1.729,1006,1.729,1007,1.25,1008,1.729,1009,1.729,1010,1.729,1011,1.729,1012,2.886,1013,1.729,1014,1.729,1015,1.729,1016,1.729,1017,1.729,1018,2.886,1019,2.886,1020,1.729,1021,1.729,1022,1.729,1023,1.729,1024,1.729,1025,1.729,1026,1.729,1027,1.729,1028,1.729]],["title/classes/EnsureModuleLoadedOnceGuard.html",[26,0.254,578,2.902]],["body/classes/EnsureModuleLoadedOnceGuard.html",[3,0.196,4,0.152,9,0.152,19,1.357,20,0.984,22,0.334,24,0.013,25,0.196,26,0.383,150,0.539,197,0.01,198,0.011,199,0.01,214,1.789,215,0.596,216,0.912,260,2.892,261,4.072,299,3.816,578,5.168,580,5.98,713,3.084,1029,6.228,1030,5.277,1031,7.149,1032,6.057,1033,7.149,1034,6.057,1035,6.057,1036,6.057]],["title/components/FaqComponent.html",[0,0.494,166,1.106]],["body/components/FaqComponent.html",[0,0.832,1,1.332,2,1.927,3,0.151,4,0.117,5,1.533,6,1.589,7,1.533,8,1.533,9,0.117,11,1.379,12,2.663,13,2.478,14,1.927,15,1.997,17,1.997,19,1.516,20,0.988,22,0.257,23,0.703,24,0.013,25,0.151,26,0.295,43,0.976,95,1.479,144,1.243,145,1.997,146,1.927,147,1.533,148,2.353,149,1.533,150,0.602,151,1.533,152,1.332,153,1.533,154,1.332,155,1.533,156,1.332,157,1.533,158,1.332,159,1.479,160,1.533,161,1.332,162,1.533,163,1.332,164,0.976,165,1.533,166,1.975,167,1.533,168,1.332,169,1.533,170,1.286,171,1.533,172,1.332,173,1.533,174,1.332,175,1.533,176,1.286,177,1.286,178,1.533,179,1.332,180,1.533,181,1.286,182,1.428,183,1.533,184,1.286,185,1.533,186,1.286,187,1.533,188,1.286,189,0.633,190,1.533,191,1.332,192,1.533,193,1.286,194,1.428,195,1.533,196,1.533,197,0.007,198,0.01,199,0.007,201,1.735,202,2.779,204,0.395,207,1.564,210,2.944,220,1.201,221,2.227,1037,4.067,1038,6.242,1039,6.764,1040,6.081,1041,4.669,1042,4.669,1043,5.298]],["title/components/FooterComponent.html",[0,0.494,168,1.145]],["body/components/FooterComponent.html",[0,0.764,1,1.124,2,2.12,3,0.127,4,0.099,5,1.294,6,1.341,7,1.294,8,1.294,9,0.099,11,1.164,12,2.625,13,2.441,14,1.72,15,1.782,17,1.782,19,1.391,20,0.882,22,0.299,23,0.593,24,0.013,25,0.127,26,0.249,27,4.268,40,4.268,43,0.824,81,2.064,82,2.453,86,1.619,87,2.639,88,2.551,89,2.525,90,1.557,92,2.768,94,1.756,95,1.72,96,2.006,101,2.483,103,1.916,104,2.649,113,2.649,114,1.756,119,1.847,126,2.901,133,2.322,136,1.916,137,2.106,138,1.833,144,1.049,145,1.782,146,1.72,147,1.294,148,2.197,149,1.294,150,0.553,151,1.294,152,1.124,153,1.294,154,1.124,155,1.294,156,1.124,157,1.294,158,1.124,159,1.249,160,1.294,161,1.124,162,1.294,163,1.124,164,0.824,165,1.294,166,1.086,167,1.294,168,1.909,169,1.294,170,1.086,171,1.294,172,1.124,173,1.294,174,1.124,175,1.294,176,1.086,177,1.086,178,1.294,179,1.124,180,1.294,181,1.086,182,1.205,183,1.294,184,1.086,185,1.294,186,1.086,187,1.294,188,1.086,189,0.582,190,1.294,191,1.124,192,1.294,193,1.086,194,1.205,195,1.294,196,1.294,197,0.006,198,0.009,199,0.006,201,1.549,202,2.551,204,0.333,207,1.396,210,2.749,220,1.014,221,1.988,354,2.341,363,3.433,368,3.433,370,1.685,387,2.849,416,2.341,456,2.216,458,2.649,469,3.576,1044,3.433,1045,5.428,1046,6.21,1047,5.428,1048,3.941,1049,3.941,1050,5.428,1051,5.829,1052,5.428,1053,5.428,1054,5.428,1055,5.428,1056,4.729,1057,4.729,1058,5.428,1059,5.428,1060,5.428,1061,5.428,1062,5.428,1063,5.428,1064,5.428,1065,5.428,1066,5.428,1067,2.849,1068,3.941,1069,3.941,1070,5.428,1071,3.941,1072,3.941,1073,3.433,1074,3.941,1075,3.433,1076,3.941,1077,3.053,1078,3.941,1079,3.098]],["title/components/FrameworkComponent.html",[0,0.494,170,1.106]],["body/components/FrameworkComponent.html",[0,0.814,1,1.273,2,1.871,3,0.144,4,0.112,5,1.465,6,1.519,7,1.465,8,1.465,9,0.112,11,1.318,12,2.653,13,2.469,14,1.871,15,1.938,17,1.938,19,1,20,1.074,22,0.365,23,0.672,24,0.013,25,0.144,26,0.282,43,1.573,95,1.414,144,1.188,145,1.938,146,1.871,147,1.465,148,2.312,149,1.465,150,0.627,151,1.465,152,1.273,153,1.465,154,1.273,155,1.465,156,1.273,157,1.465,158,1.273,159,1.414,160,1.465,161,1.273,162,1.465,163,1.273,164,0.933,165,1.465,166,1.23,167,1.465,168,1.273,169,1.465,170,1.94,171,1.465,172,1.273,173,1.465,174,1.273,175,1.465,176,1.23,177,1.23,178,1.465,179,1.273,180,1.465,181,1.23,182,1.365,183,1.465,184,1.23,185,1.465,186,1.23,187,1.465,188,1.23,189,0.62,190,1.465,191,1.273,192,1.465,193,1.23,194,1.365,195,1.465,196,1.465,197,0.007,198,0.009,199,0.007,201,1.684,202,2.718,204,0.377,205,1.071,207,1.518,210,2.893,214,1.318,215,0.581,216,0.672,220,1.148,221,2.162,228,1.833,229,1.908,483,2.252,836,2.272,1080,3.887,1081,6.616,1082,5.904,1083,3.226,1084,4.733,1085,5.904,1086,3.155,1087,4.462,1088,3.226,1089,3.509,1090,3.887]],["title/components/FrameworkRendererComponent.html",[0,0.494,172,1.145]],["body/components/FrameworkRendererComponent.html",[0,0.645,1,0.831,2,1.384,3,0.094,4,0.073,5,0.957,6,0.992,7,0.957,8,0.957,9,0.073,11,0.861,12,2.543,13,2.362,14,1.384,15,1.434,17,1.434,19,0.653,20,1.199,22,0.344,23,0.439,24,0.014,25,0.094,26,0.184,43,1.563,79,1.247,81,2.371,82,2.988,83,2.49,84,2.335,85,1.731,86,2.153,87,2.548,88,2.392,89,1.356,90,1.726,92,1.299,94,1.947,95,1.384,103,1.417,112,2.047,114,2.336,115,2.107,119,2.122,127,1.557,128,1.557,131,2.224,132,1.557,133,1.869,135,1.836,138,1.356,144,0.776,145,1.434,146,1.384,147,0.957,148,1.911,149,0.957,150,0.555,151,0.957,152,0.831,153,0.957,154,0.831,155,0.957,156,0.831,157,0.957,158,0.831,159,0.923,160,0.957,161,0.831,162,0.957,163,0.831,164,0.609,165,0.957,166,0.803,167,0.957,168,0.831,169,0.957,170,0.803,171,0.957,172,1.661,173,0.957,174,0.831,175,0.957,176,0.803,177,0.803,178,0.957,179,0.831,180,0.957,181,0.803,182,0.891,183,0.957,184,0.803,185,0.957,186,0.803,187,0.957,188,0.803,189,0.491,190,0.957,191,0.831,192,0.957,193,0.803,194,0.891,195,0.957,196,0.957,197,0.005,198,0.007,199,0.005,201,1.246,202,2.153,204,0.246,205,0.792,207,1.124,208,1.299,210,2.392,214,1.29,215,0.702,216,0.658,220,1.124,221,1.919,223,1.163,228,1.197,229,1.247,234,1.434,235,2.071,354,3.113,362,2.224,366,1.959,370,1.247,397,2.457,400,5.914,402,1.131,407,1.604,408,1.304,410,3.628,411,1.731,412,2.539,414,2.107,423,2.668,425,2.292,431,3.045,434,4.565,435,1.108,437,4.565,438,4.565,442,2.392,446,3.886,448,0.891,449,1.836,450,3.435,456,2.947,459,2.937,483,1.784,489,2.438,498,2.548,608,1.731,628,1.731,687,1.836,713,2.964,817,2.539,999,3.158,1083,2.107,1084,3.913,1086,2.335,1091,6.515,1092,5.88,1093,2.539,1094,4.369,1095,5.241,1096,4.369,1097,5.241,1098,5.241,1099,4.369,1100,5.241,1101,4.565,1102,4.369,1103,2.915,1104,2.915,1105,2.915,1106,2.915,1107,2.915,1108,2.915,1109,2.915,1110,4.369,1111,2.915,1112,2.915,1113,3.806,1114,2.539,1115,2.292,1116,2.292,1117,2.915,1118,2.915,1119,2.915,1120,2.915,1121,2.292,1122,4.369,1123,2.539,1124,2.915,1125,4.369,1126,4.369,1127,4.369,1128,4.369,1129,4.369,1130,2.915,1131,5.241,1132,2.915,1133,1.836,1134,3.523,1135,5.241,1136,2.292,1137,2.539,1138,2.539,1139,3.806,1140,5.822,1141,1.959,1142,2.915]],["title/guards/FrameworkResolver.html",[1143,2.699,1144,2.699]],["body/guards/FrameworkResolver.html",[3,0.175,4,0.137,9,0.137,19,1.216,20,1.087,22,0.436,23,0.817,24,0.013,25,0.175,26,0.343,150,0.596,197,0.009,198,0.011,199,0.009,201,1.549,204,0.459,207,1.721,208,2.42,214,1.977,215,0.658,216,1.007,220,1.396,228,2.231,229,2.322,236,2.983,237,4.259,253,2.064,483,1.848,571,3.851,588,3.924,786,3.876,827,2.525,836,2.764,1086,2.901,1141,4.877,1144,4.499,1145,3.65,1146,6.32,1147,3.65,1148,4.772,1149,3.421,1150,5.429,1151,4.837,1152,5.474,1153,4.877,1154,5.474,1155,4.729,1156,3.421,1157,4.269,1158,5.429,1159,4.269,1160,5.429]],["title/components/HeaderComponent.html",[0,0.494,174,1.145]],["body/components/HeaderComponent.html",[0,0.717,1,0.999,2,1.584,3,0.113,4,0.088,5,1.15,6,1.192,7,1.15,8,1.15,9,0.088,11,1.035,12,2.595,13,2.412,14,2.214,15,1.641,17,1.641,19,1.306,20,0.569,22,0.321,23,0.527,24,0.014,25,0.113,26,0.221,37,2.511,43,0.732,79,1.498,80,1.561,81,2.795,82,2.511,86,2.054,87,2.43,88,2.394,89,2.325,90,2.511,92,3.335,94,2.995,95,1.11,96,1.783,98,2.355,102,3.277,103,2.43,111,2.355,117,2.355,118,2.207,119,2.663,122,3.36,124,4.367,125,4.212,126,1.872,127,1.872,128,1.872,129,2.081,130,2.532,131,1.783,133,2.492,136,2.833,137,3.114,138,2.71,144,0.933,145,1.641,146,1.584,147,1.15,148,2.086,149,1.15,150,0.519,151,1.15,152,0.999,153,1.15,154,0.999,155,1.15,156,0.999,157,1.15,158,0.999,159,1.11,160,1.15,161,0.999,162,1.15,163,0.999,164,0.732,165,1.15,166,0.965,167,1.15,168,0.999,169,1.15,170,0.965,171,1.15,172,0.999,173,1.15,174,1.813,175,1.15,176,0.965,177,0.965,178,1.15,179,0.999,180,1.15,181,0.965,182,1.071,183,1.15,184,0.965,185,1.15,186,0.965,187,1.15,188,0.965,189,0.546,190,1.15,191,0.999,192,1.15,193,0.965,194,1.071,195,1.15,196,1.15,197,0.006,198,0.008,199,0.006,204,0.296,342,2.081,354,2.081,362,1.783,364,2.754,370,2.988,378,2.355,382,1.975,387,2.532,416,2.081,424,3.613,426,3.052,427,3.574,453,2.969,456,3.929,669,2.355,687,2.207,750,2.754,1067,2.532,1073,3.052,1075,3.052,1077,3.277,1079,2.754,1161,3.052,1162,3.93,1163,5.827,1164,4.998,1165,3.503,1166,4.998,1167,6.354,1168,3.503,1169,3.052,1170,3.052,1171,2.754,1172,4.998,1173,4.998,1174,3.503,1175,4.998,1176,5.827,1177,3.503,1178,4.998,1179,3.503,1180,7.191,1181,3.503,1182,4.998,1183,2.754,1184,3.503,1185,3.503,1186,3.503,1187,3.503,1188,3.503,1189,3.503,1190,3.503,1191,3.052]],["title/components/HomeComponent.html",[0,0.494,176,1.106]],["body/components/HomeComponent.html",[0,0.827,1,1.315,2,1.911,3,0.149,4,0.116,5,1.513,6,1.569,7,1.513,8,1.513,9,0.116,11,1.362,12,2.65,13,2.466,14,1.911,15,1.98,17,1.98,19,1.033,20,0.98,22,0.332,23,0.694,24,0.013,25,0.149,26,0.291,43,0.963,80,2.055,81,1.753,82,2.383,83,1.971,86,1.894,88,1.894,90,1.821,95,1.461,114,2.055,144,1.227,145,1.98,146,1.911,147,1.513,148,2.341,149,1.513,150,0.635,151,1.513,152,1.315,153,1.513,154,1.315,155,1.513,156,1.315,157,1.513,158,1.315,159,1.461,160,1.513,161,1.315,162,1.513,163,1.315,164,0.963,165,1.513,166,1.27,167,1.513,168,1.315,169,1.513,170,1.27,171,1.513,172,1.315,173,1.513,174,1.315,175,1.513,176,1.965,177,1.27,178,1.513,179,1.315,180,1.513,181,1.27,182,1.41,183,1.513,184,1.27,185,1.513,186,1.27,187,1.513,188,1.27,189,0.63,190,1.513,191,1.315,192,1.513,193,1.27,194,1.41,195,1.513,196,1.513,197,0.007,198,0.01,199,0.007,204,0.39,205,1.094,214,1.362,215,0.453,216,0.694,229,1.971,407,1.186,408,1.033,423,2.347,571,3.691,1149,2.905,1156,2.905,1192,4.016,1193,6.722,1194,6.031,1195,5.856,1196,6.031,1197,6.031]],["title/interfaces/InfoResource.html",[463,0.453,1198,2.902]],["body/interfaces/InfoResource.html",[3,0.182,4,0.142,9,0.142,24,0.013,25,0.221,54,4.31,59,3.546,132,3.007,134,1.951,189,0.641,197,0.009,198,0.011,199,0.009,204,0.476,205,1.24,215,0.725,216,1.03,402,1.517,463,0.865,465,1.605,467,2.092,474,2.579,482,1.662,484,2.925,535,3.482,840,3.342,1198,5.327,1199,4.424,1200,6.959,1201,4.945,1202,6.028]],["title/interfaces/InfoResourceSection.html",[463,0.453,840,2.385]],["body/interfaces/InfoResourceSection.html",[3,0.174,4,0.136,9,0.136,24,0.013,25,0.215,28,4.237,54,4.556,58,2.744,59,4.89,91,4.237,132,4.036,134,2.214,189,0.505,197,0.009,198,0.011,199,0.009,204,0.456,205,1.208,215,0.763,402,1.519,431,2.507,463,0.853,465,1.537,467,2.038,474,2.548,482,2.231,484,2.305,494,2.88,511,2.305,535,2.744,840,3.957,1198,5.46,1199,4.237,1200,5.803,1201,3.896,1202,4.237,1203,4.695,1204,4.695,1205,4.695,1206,5.389,1207,5.389,1208,5.389,1209,5.389,1210,5.389]],["title/components/InformationComponent.html",[0,0.494,177,1.106]],["body/components/InformationComponent.html",[0,0.762,1,1.118,2,1.714,3,0.234,4,0.099,5,1.287,6,1.334,7,1.287,8,1.287,9,0.099,11,1.158,12,2.623,13,2.44,14,1.714,15,1.776,17,1.776,19,1.388,20,1.006,22,0.341,23,0.59,24,0.014,25,0.127,26,0.248,43,1.581,54,3.408,59,4.207,65,4.711,72,4.711,79,1.676,80,1.747,81,2.539,82,2.988,83,2.313,86,2.222,87,1.906,88,2.222,90,1.549,92,3.122,94,1.747,95,1.242,112,2.033,114,2.411,119,1.334,125,4.826,126,2.094,127,2.094,128,2.094,135,2.47,136,1.906,137,2.094,138,1.823,144,1.043,145,1.776,146,1.714,147,1.287,148,2.192,149,1.287,150,0.552,151,1.287,152,1.118,153,1.287,154,1.118,155,1.287,156,1.118,157,1.287,158,1.118,159,1.242,160,1.287,161,1.118,162,1.287,163,1.118,164,0.819,165,1.287,166,1.08,167,1.287,168,1.118,169,1.287,170,1.08,171,1.287,172,1.118,173,1.287,174,1.118,175,1.287,176,1.08,177,1.84,178,1.287,179,1.118,180,1.287,181,1.08,182,1.199,183,1.287,184,1.08,185,1.287,186,1.08,187,1.287,188,1.08,189,0.58,190,1.287,191,1.118,192,1.287,193,1.08,194,1.199,195,1.287,196,1.287,197,0.006,198,0.009,199,0.006,204,0.331,205,0.981,215,0.532,362,2.753,370,1.676,387,2.833,407,1.008,408,0.878,422,2.833,423,2.753,456,3.483,483,2.107,488,1.549,836,1.996,1067,2.833,1077,2.204,1079,3.082,1211,3.415,1212,6.192,1213,5.408,1214,4.163,1215,6.192,1216,5.408,1217,6.676,1218,6.676,1219,3.92,1220,5.408,1221,3.082,1222,5.408,1223,5.408]],["title/modules/InformationModule.html",[260,1.527,1224,2.902]],["body/modules/InformationModule.html",[3,0.17,4,0.133,9,0.133,22,0.448,23,0.794,24,0.013,25,0.17,26,0.333,54,3.322,144,1.404,166,2.167,170,2.167,177,2.167,184,2.167,197,0.008,198,0.011,199,0.008,260,2.005,262,2.453,263,2.966,264,4.253,265,3.322,266,4.141,267,2.684,274,4.671,275,4.141,276,3.322,277,2.818,279,3.512,283,3.512,291,4.146,293,4.146,411,3.132,577,4.751,1224,6.056,1225,4.593,1226,4.593,1227,4.593,1228,5.286,1229,5.273,1230,4.593,1231,4.593,1232,4.593,1233,4.418,1234,4.593,1235,3.545,1236,4.593]],["title/modules/InformationRoutingModule.html",[260,1.527,1228,2.699]],["body/modules/InformationRoutingModule.html",[0,0.939,3,0.179,4,0.139,9,0.139,22,0.448,23,0.834,24,0.013,25,0.179,26,0.35,43,1.416,59,3.492,166,1.867,170,1.867,177,1.867,184,1.867,197,0.009,198,0.011,199,0.009,228,2.277,262,2.578,264,3.292,267,2.821,279,2.961,283,3.621,311,4.357,313,4.899,314,4.556,318,2.821,320,6.151,321,4.828,322,4.828,323,4.828,1038,4.828,1144,4.556,1148,4.27,1228,4.556,1230,4.828,1231,4.828,1232,4.828,1233,4.556,1234,4.828,1235,4.556,1236,4.828,1237,5.542,1238,5.542,1239,5.542,1240,5.542,1241,5.904,1242,5.542]],["title/injectables/LogoLocatorService.html",[236,1.789,572,2.53]],["body/injectables/LogoLocatorService.html",[3,0.178,4,0.138,9,0.138,19,1.635,20,1.185,22,0.303,23,0.828,24,0.014,25,0.178,26,0.347,150,0.49,197,0.009,198,0.011,199,0.009,204,0.465,205,1.223,207,1.735,214,1.625,215,0.663,216,0.828,220,1.415,236,3.007,238,3.698,253,2.091,402,1.379,407,1.415,408,1.232,572,4.251,621,2.939,779,4.905,781,3.976,1214,4.905,1243,5.981,1244,4.325,1245,7.297,1246,6.746,1247,6.746,1248,6.746,1249,5.5,1250,6.746,1251,5.5,1252,5.5,1253,5.5,1254,4.792,1255,5.877,1256,5.877,1257,5.877,1258,5.304]],["title/modules/MaterialModule.html",[260,1.527,1259,2.699]],["body/modules/MaterialModule.html",[3,0.158,4,0.123,9,0.123,22,0.467,23,0.734,24,0.013,25,0.158,26,0.308,197,0.008,198,0.01,199,0.008,262,2.269,267,2.483,279,2.607,283,3.343,382,1.927,628,3.716,1259,4.206,1260,4.878,1261,6.907,1262,6.257,1263,6.907,1264,4.878,1265,6.907,1266,4.878,1267,6.907,1268,3.526,1269,6.907,1270,4.878,1271,4.878,1272,6.907,1273,4.878,1274,6.907,1275,4.878,1276,6.907,1277,4.878,1278,6.907,1279,4.878,1280,6.907,1281,4.878,1282,4.25,1283,6.907,1284,4.878,1285,6.907,1286,4.878,1287,6.907,1288,4.878,1289,6.907,1290,4.878,1291,6.907,1292,4.878,1293,6.907,1294,4.878,1295,6.907,1296,4.878,1297,6.907,1298,3.526,1299,6.907,1300,4.878,1301,6.907,1302,4.878,1303,6.907,1304,4.878,1305,6.907,1306,4.878,1307,6.907,1308,6.907,1309,4.878,1310,4.878,1311,6.907,1312,4.878,1313,6.907,1314,4.878]],["title/components/OverviewComponent.html",[0,0.494,179,1.145]],["body/components/OverviewComponent.html",[0,0.736,1,1.047,2,1.637,3,0.119,4,0.15,5,1.963,6,1.249,7,1.205,8,1.205,9,0.092,11,1.084,12,2.607,13,2.424,14,1.637,15,1.696,17,1.696,19,1.339,20,0.839,22,0.357,23,0.552,24,0.013,25,0.119,26,0.232,37,2.879,43,0.767,79,1.569,80,1.636,81,2.467,82,2.702,83,1.569,84,1.961,85,2.18,86,2.809,87,2.906,88,2.994,89,2.78,90,2.041,92,3.048,93,3.197,94,2.302,95,1.894,96,3.043,106,5.101,108,5.101,112,1.963,113,2.467,114,1.636,115,2.653,133,1.569,136,1.784,137,1.961,138,1.707,139,3.197,144,0.977,145,1.696,146,1.637,147,1.205,148,2.13,149,1.205,150,0.532,151,1.205,152,1.047,153,1.205,154,1.047,155,1.205,156,1.047,157,1.205,158,1.047,159,1.163,160,1.205,161,1.047,162,1.205,163,1.047,164,0.767,165,1.205,166,1.011,167,1.205,168,1.047,169,1.205,170,1.011,171,1.205,172,1.047,173,1.205,174,1.047,175,1.205,176,1.011,177,1.011,178,1.205,179,1.851,180,1.205,181,1.011,182,1.122,183,1.205,184,1.011,185,1.205,186,1.011,187,1.205,188,1.011,189,0.608,190,1.205,191,1.047,192,1.205,193,1.011,194,1.122,195,1.205,196,1.205,197,0.006,198,0.008,199,0.006,204,0.31,215,0.361,277,3.467,338,4.061,343,3.467,349,4.061,353,3.734,358,2.885,359,3.197,360,3.197,361,3.197,362,2.63,366,2.467,370,1.569,382,2.362,397,2.905,410,2.76,414,2.653,427,2.064,453,2.18,454,2.885,455,2.885,682,3.255,750,2.885,786,3.194,827,1.707,838,2.312,1077,2.064,1195,5.208,1315,3.197,1316,4.061,1317,5.978,1318,5.166,1319,5.166,1320,4.5,1321,4.5,1322,5.166,1323,3.67,1324,5.166,1325,6.838,1326,5.166,1327,3.67,1328,5.166,1329,3.67,1330,3.67,1331,5.166,1332,3.67,1333,3.67,1334,2.885,1335,3.67,1336,3.67,1337,7.093,1338,3.67,1339,6.488,1340,3.67,1341,3.67]],["title/components/PageNotFoundComponent.html",[0,0.494,181,1.106]],["body/components/PageNotFoundComponent.html",[0,0.824,1,1.303,2,1.899,3,0.148,4,0.115,5,1.499,6,1.554,7,1.499,8,1.499,9,0.115,11,1.349,12,2.658,13,2.473,14,1.899,15,1.968,17,1.968,19,1.499,20,0.973,22,0.252,23,0.687,24,0.013,25,0.148,26,0.288,43,0.954,95,1.447,132,2.44,144,1.216,145,1.968,146,1.899,147,1.499,148,2.333,149,1.499,150,0.596,151,1.499,152,1.303,153,1.499,154,1.303,155,1.499,156,1.303,157,1.499,158,1.303,159,1.447,160,1.499,161,1.303,162,1.499,163,1.303,164,0.954,165,1.499,166,1.258,167,1.499,168,1.303,169,1.499,170,1.258,171,1.499,172,1.303,173,1.499,174,1.303,175,1.499,176,1.258,177,1.258,178,1.499,179,1.303,180,1.499,181,1.958,182,2.423,183,1.499,184,1.258,185,1.499,186,1.258,187,1.499,188,1.258,189,0.627,190,1.499,191,1.303,192,1.499,193,1.258,194,1.397,195,1.499,196,1.499,197,0.007,198,0.01,199,0.007,201,1.71,202,2.749,204,0.386,207,1.542,210,2.919,220,1.175,221,1.672,316,4.837,1342,5.829,1343,3.978,1344,7.105,1345,6.692,1346,5.994,1347,4.567,1348,4.567,1349,4.567]],["title/injectables/RandomColorService.html",[236,1.789,573,2.699]],["body/injectables/RandomColorService.html",[3,0.181,4,0.141,9,0.141,19,1.647,20,1.107,22,0.308,23,0.842,24,0.013,25,0.181,26,0.353,150,0.498,197,0.009,198,0.011,199,0.009,204,0.473,207,1.753,214,1.652,216,0.842,220,1.439,236,3.038,238,3.761,253,2.127,573,4.582,1350,5.78,1351,4.399,1352,6.816,1353,5.595,1354,6.816,1355,7.844,1356,7.844,1357,7.844,1358,6.833,1359,7.844,1360,5.595,1361,7.352,1362,5.363,1363,5.595,1364,4.927]],["title/interfaces/RenderedFilterBlock.html",[463,0.453,602,2.258]],["body/interfaces/RenderedFilterBlock.html",[3,0.136,4,0.106,9,0.106,24,0.014,25,0.239,38,2.244,51,1.597,62,2.495,67,1.331,112,1.861,150,0.374,164,0.878,189,0.393,197,0.007,198,0.009,199,0.007,204,0.355,205,1.028,215,0.676,216,0.853,223,1.118,234,1.379,235,1.659,372,3.865,402,1.468,408,1.657,463,0.853,464,1.659,465,1.198,467,1.963,477,2.329,482,1.675,488,2.536,502,2.985,503,2.861,506,3.575,509,2.985,533,1.954,540,3.296,544,2.356,567,1.954,597,1.954,598,2.495,600,2.887,602,3.189,603,4.33,604,4.62,605,4.522,606,3.765,607,3.341,608,4.082,609,3.811,610,2.824,611,2.824,612,1.954,613,2.824,614,2.824,615,3.368,616,3.368,617,2.495,618,3.573,619,3.12,620,2.824,621,3.03,622,2.647,623,2.495,624,2.824,625,2.824,626,4.044,627,5.081,628,3.368,629,4.044,630,2.824,631,3.811,632,3.811,633,4.044,634,2.824,635,3.812,636,4.044,637,4.33,638,4.044,639,3.812,640,2.824,641,4.044,642,4.044]],["title/components/ResourcesComponent.html",[0,0.494,184,1.106]],["body/components/ResourcesComponent.html",[0,0.789,1,1.195,2,1.793,3,0.135,4,0.105,5,1.375,6,1.425,7,1.375,8,1.375,9,0.105,11,1.237,12,2.639,13,2.455,14,1.793,15,1.858,17,1.858,19,0.938,20,1.164,22,0.378,23,0.63,24,0.013,25,0.135,26,0.265,43,0.875,59,4.517,95,1.327,112,1.858,144,1.115,145,1.858,146,1.793,147,1.375,148,2.253,149,1.375,150,0.611,151,1.375,152,1.195,153,1.375,154,1.195,155,1.375,156,1.195,157,1.375,158,1.195,159,1.327,160,1.375,161,1.195,162,1.375,163,1.195,164,0.875,165,1.375,166,1.154,167,1.375,168,1.195,169,1.375,170,1.154,171,1.375,172,1.195,173,1.375,174,1.195,175,1.375,176,1.154,177,1.154,178,1.375,179,1.195,180,1.375,181,1.154,182,1.281,183,1.375,184,1.891,185,1.375,186,1.154,187,1.375,188,1.154,189,0.6,190,1.375,191,1.195,192,1.375,193,1.154,194,1.281,195,1.375,196,1.375,197,0.007,198,0.009,199,0.007,201,1.614,202,2.633,204,0.354,205,1.026,207,1.455,210,2.82,214,1.237,215,0.63,216,0.63,220,1.455,221,2.514,228,1.721,229,1.791,827,1.948,840,3.807,841,3.293,1083,3.028,1084,4.614,1086,3.024,1088,3.028,1090,3.649,1202,4.449,1365,3.649,1366,5.583,1367,6.409,1368,5.659,1369,6.436,1370,5.979,1371,5.659,1372,4.188,1373,4.188,1374,4.188,1375,4.188,1376,4.188,1377,4.188,1378,5.659,1379,5.659,1380,5.659]],["title/guards/ResourcesResolver.html",[1143,2.699,1233,2.699]],["body/guards/ResourcesResolver.html",[3,0.18,4,0.14,9,0.14,19,1.249,20,1.104,22,0.432,23,0.839,24,0.013,25,0.18,26,0.352,150,0.606,197,0.009,198,0.011,199,0.009,201,1.59,204,0.471,207,1.749,214,2.009,215,0.669,216,1.024,220,1.434,228,2.29,229,2.384,236,3.031,253,2.119,571,3.875,786,3.922,827,2.592,840,3.311,841,4.382,1086,2.978,1145,3.747,1147,3.747,1148,4.815,1149,3.512,1151,4.916,1152,5.524,1153,4.934,1154,5.524,1156,3.512,1233,4.572,1381,6.394,1382,5.574,1383,5.574,1384,5.574]],["title/pipes/SetToArrayPipe.html",[875,2.258,1385,2.699]],["body/pipes/SetToArrayPipe.html",[3,0.193,4,0.151,9,0.151,11,1.767,20,0.972,22,0.33,23,0.901,24,0.013,25,0.193,26,0.378,150,0.674,197,0.01,198,0.011,199,0.01,201,1.707,207,1.539,214,1.767,215,0.588,216,0.901,220,1.539,253,2.275,408,1.341,475,2.771,875,3.991,1385,4.771,1386,4.325,1387,6.182,1388,5.212,1389,7.097,1390,4.704,1391,5.58,1392,5.983,1393,5.58,1394,5.983]],["title/modules/SharedModule.html",[260,1.527,274,2.385]],["body/modules/SharedModule.html",[3,0.132,4,0.102,9,0.102,22,0.448,23,0.613,24,0.013,25,0.132,26,0.257,43,0.851,95,1.29,144,1.084,156,2.272,158,2.272,159,1.29,161,2.09,168,2.272,172,2.272,174,2.272,181,2.194,182,1.246,197,0.007,198,0.009,199,0.007,228,1.673,260,1.548,262,1.894,263,2.29,264,3.752,265,2.566,266,3.498,267,3.216,274,5.021,275,3.498,276,2.566,277,2.176,279,2.967,283,2.967,313,4.013,316,2.944,317,3.547,390,2.944,411,2.419,429,3.202,475,1.491,577,4.566,712,2.944,1092,3.202,1144,3.732,1235,2.737,1259,5.353,1362,2.737,1385,5.353,1395,3.547,1396,3.547,1397,3.547,1398,3.547,1399,5.353,1400,5.353,1401,4.072,1402,4.072,1403,4.072,1404,6.317,1405,6.317,1406,4.072,1407,4.072,1408,4.072,1409,4.072,1410,4.072,1411,4.072,1412,4.072,1413,3.547,1414,4.072]],["title/interfaces/SimpleDataSource.html",[463,0.453,1415,2.699]],["body/interfaces/SimpleDataSource.html",[3,0.088,4,0.069,9,0.069,20,0.676,22,0.366,24,0.014,25,0.163,26,0.173,112,1.991,119,2.261,189,0.598,197,0.011,198,0.007,199,0.004,201,0.78,204,0.231,207,1.071,208,3.242,220,1.071,221,2.508,223,1.701,234,1.655,235,1.645,253,2.938,258,2.072,318,2.87,342,1.625,402,1.242,408,0.613,446,1.462,448,1.724,449,1.723,463,0.47,465,0.78,544,1.655,593,3.01,597,2.821,600,3.253,619,1.33,694,4.802,713,2.87,741,2.799,779,3.39,786,3.415,825,1.977,827,1.272,831,1.977,834,1.977,877,1.977,980,3.645,983,3.01,987,3.01,1007,3.01,1134,1.839,1214,4.078,1298,1.977,1415,3.39,1416,1.977,1417,2.995,1418,4.769,1419,4.769,1420,2.735,1421,2.735,1422,2.151,1423,4.432,1424,2.151,1425,2.151,1426,3.274,1427,2.151,1428,4.81,1429,1.977,1430,2.151,1431,2.151,1432,3.01,1433,3.274,1434,1.462,1435,4.432,1436,2.151,1437,2.151,1438,2.151,1439,2.151,1440,2.151,1441,2.151,1442,2.151,1443,2.151,1444,2.151,1445,2.151,1446,2.151,1447,1.977,1448,2.151,1449,2.151,1450,2.151,1451,2.151,1452,2.151,1453,3.274,1454,2.151,1455,3.274,1456,2.151,1457,2.151,1458,2.151,1459,4.769,1460,2.151,1461,3.965,1462,2.151,1463,3.274,1464,2.151,1465,3.274,1466,2.151,1467,2.151,1468,2.151,1469,3.274,1470,3.965,1471,4.432,1472,3.274,1473,2.151,1474,2.151,1475,2.151,1476,3.274,1477,2.151,1478,2.151,1479,2.151,1480,2.151,1481,3.274,1482,2.151,1483,2.151,1484,3.274,1485,2.151,1486,2.151,1487,2.151,1488,2.151,1489,2.151,1490,2.151,1491,2.151,1492,2.151,1493,2.151,1494,2.151,1495,2.151,1496,2.151,1497,3.965,1498,2.151,1499,2.151,1500,2.151,1501,2.151,1502,2.151,1503,2.151,1504,2.151,1505,3.965,1506,2.151,1507,2.151,1508,2.151,1509,2.151,1510,3.274,1511,3.274,1512,3.274,1513,3.274,1514,2.151,1515,5.799,1516,4.769,1517,3.965,1518,3.274,1519,3.965,1520,2.151,1521,3.965,1522,2.151,1523,2.151,1524,2.151,1525,2.151,1526,5.224,1527,3.274,1528,3.965,1529,3.274,1530,2.151,1531,2.151,1532,2.151,1533,2.151,1534,2.151,1535,2.151,1536,4.432,1537,2.151,1538,2.151,1539,3.274,1540,2.151,1541,2.151,1542,2.151,1543,2.151,1544,3.274,1545,3.274,1546,2.151,1547,3.274,1548,3.274,1549,2.151,1550,3.274,1551,2.151,1552,2.151,1553,1.977,1554,2.151]],["title/interfaces/Sort.html",[463,0.453,1428,2.699]],["body/interfaces/Sort.html",[3,0.089,4,0.069,9,0.069,22,0.367,24,0.014,25,0.163,26,0.173,112,1.995,119,2.264,189,0.599,197,0.011,198,0.007,199,0.004,201,0.783,204,0.232,205,0.757,208,3.245,215,0.27,221,2.436,223,1.704,234,1.659,235,1.65,253,2.94,258,2.076,318,2.875,342,1.631,402,1.243,408,0.615,446,1.467,448,1.727,449,1.73,463,0.471,465,0.783,544,1.659,593,1.985,597,2.826,600,3.258,619,1.335,694,4.809,713,2.875,741,2.807,779,3.397,786,3.247,825,1.985,827,1.277,831,1.985,834,1.985,877,1.985,980,3.653,983,3.019,987,3.019,1007,3.019,1134,3.797,1214,4.084,1298,1.985,1415,2.807,1416,1.985,1417,2.481,1418,3.283,1419,3.283,1422,2.159,1423,4.441,1424,2.159,1425,2.159,1426,3.283,1427,2.159,1428,4.894,1429,4.082,1430,2.159,1431,2.159,1432,4.082,1433,4.441,1434,1.467,1435,4.441,1436,2.159,1437,2.159,1438,2.159,1439,2.159,1440,2.159,1441,2.159,1442,2.159,1443,2.159,1444,2.159,1445,2.159,1446,2.159,1447,1.985,1448,2.159,1449,2.159,1450,2.159,1451,2.159,1452,2.159,1453,3.283,1454,2.159,1455,3.283,1456,2.159,1457,2.159,1458,2.159,1459,4.777,1460,2.159,1461,3.974,1462,2.159,1463,3.283,1464,2.159,1465,3.283,1466,2.159,1467,2.159,1468,2.159,1469,3.283,1470,3.974,1471,4.441,1472,3.283,1473,2.159,1474,2.159,1475,2.159,1476,3.283,1477,2.159,1478,2.159,1479,2.159,1480,2.159,1481,3.283,1482,2.159,1483,2.159,1484,3.283,1485,2.159,1486,2.159,1487,2.159,1488,2.159,1489,2.159,1490,2.159,1491,2.159,1492,2.159,1493,2.159,1494,2.159,1495,2.159,1496,2.159,1497,3.974,1498,2.159,1499,2.159,1500,2.159,1501,2.159,1502,2.159,1503,2.159,1504,2.159,1505,3.974,1506,2.159,1507,2.159,1508,2.159,1509,2.159,1510,3.283,1511,3.283,1512,3.283,1513,3.283,1514,2.159,1515,5.804,1516,4.777,1517,3.974,1518,3.283,1519,3.974,1520,2.159,1521,3.974,1522,2.159,1523,2.159,1524,2.159,1525,2.159,1526,5.23,1527,3.283,1528,3.974,1529,3.283,1530,2.159,1531,2.159,1532,2.159,1533,2.159,1534,2.159,1535,2.159,1536,4.441,1537,2.159,1538,2.159,1539,3.283,1540,2.159,1541,2.159,1542,2.159,1543,2.159,1544,3.283,1545,3.283,1546,2.159,1547,3.283,1548,3.283,1549,2.159,1550,3.283,1551,2.159,1552,2.159,1553,1.985,1554,2.159]],["title/classes/TableColumn.html",[26,0.254,1555,2.902]],["body/classes/TableColumn.html",[0,0.689,3,0.133,4,0.104,9,0.104,12,1.305,13,1.216,15,1.352,17,1.352,19,0.923,20,1.107,22,0.393,23,0.62,24,0.014,25,0.181,26,0.353,43,0.861,112,1.352,119,2.426,126,4.191,150,0.498,189,0.595,193,1.135,194,1.26,197,0.007,198,0.009,199,0.007,201,1.175,202,2.298,204,0.576,205,1.014,208,1.835,210,1.692,215,0.67,216,1.026,221,1.508,299,2.595,402,1.387,410,3.809,422,2.977,442,2.298,474,2.34,483,1.904,543,2.989,544,1.837,612,2.602,617,4.234,687,2.595,711,2.595,836,2.096,883,3.238,903,3.238,1121,3.238,1268,2.977,1417,2.446,1434,2.989,1555,5.531,1556,4.491,1557,5.152,1558,3.238,1559,5.938,1560,4.118,1561,4.118,1562,4.118,1563,4.118,1564,4.873,1565,2.977,1566,2.977,1567,4.398,1568,3.587,1569,3.587,1570,3.238,1571,3.238,1572,3.587,1573,3.587,1574,3.587,1575,6.209,1576,3.587,1577,3.587,1578,3.587,1579,3.587,1580,3.587,1581,3.587,1582,3.587,1583,3.587,1584,3.587,1585,3.587,1586,3.587,1587,3.587,1588,4.873,1589,3.587,1590,4.873,1591,3.587,1592,3.587,1593,4.873,1594,5.938,1595,3.587,1596,3.587,1597,3.587,1598,3.587,1599,4.398,1600,3.587,1601,3.587,1602,3.238,1603,3.238,1604,3.587,1605,3.587,1606,4.873,1607,3.587]],["title/components/TechnologiesComponent.html",[0,0.494,186,1.106]],["body/components/TechnologiesComponent.html",[0,0.532,1,0.615,2,1.095,3,0.07,4,0.054,5,0.707,6,0.733,7,0.707,8,0.707,9,0.054,11,0.636,12,2.44,13,2.262,14,1.095,15,1.134,17,1.134,19,0.774,20,1.201,22,0.389,23,0.324,24,0.014,25,0.07,26,0.136,37,2.141,43,1.034,46,3.01,51,1.314,67,1.095,79,0.921,80,0.96,81,2.644,82,3.107,83,2.858,84,2.312,86,2.496,87,2.103,88,2.496,89,1.002,90,2.4,92,2.708,95,1.095,98,1.448,99,1.557,101,2.177,102,1.212,104,1.448,111,1.448,112,2.139,114,2.708,117,1.448,118,1.357,119,1.844,124,2.052,131,1.097,132,2.312,133,1.478,136,2.406,137,1.151,138,1.002,144,0.574,145,1.134,146,1.095,147,0.707,148,1.625,149,0.707,150,0.515,151,0.707,152,0.615,153,0.707,154,0.615,155,0.707,156,0.615,157,0.707,158,0.615,159,0.683,160,0.707,161,0.615,162,0.707,163,0.615,164,0.45,165,0.707,166,0.594,167,0.707,168,0.615,169,0.707,170,0.594,171,0.707,172,0.615,173,0.707,174,0.615,175,0.707,176,0.594,177,0.594,178,0.707,179,0.615,180,0.707,181,0.594,182,0.659,183,0.707,184,0.594,185,0.707,186,1.364,187,0.707,188,0.594,189,0.542,190,0.707,191,0.615,192,0.707,193,0.594,194,0.659,195,0.707,196,0.707,197,0.003,198,0.006,199,0.003,201,0.986,202,1.777,204,0.182,205,0.627,207,0.889,208,3.192,210,2.034,214,1.278,215,0.695,216,0.651,220,1.487,221,2.313,228,0.885,282,2.323,318,1.759,337,2.117,338,2.717,351,2.498,353,2.498,362,1.097,366,1.448,370,1.478,382,1.365,388,1.877,402,0.982,407,1.273,408,1.109,416,1.28,421,1.877,423,3.403,424,1.557,427,1.943,431,1.002,435,1.645,442,2.376,446,3.374,453,2.57,454,1.694,455,1.694,477,1.42,483,1.472,485,2.634,498,1.68,571,2.811,597,2.302,602,2.433,603,1.357,605,2.726,606,1.759,607,2.406,612,2.012,669,3.642,681,3.01,699,4.312,701,3.768,711,1.357,712,1.557,713,2.202,754,3.401,827,1.002,836,1.097,838,1.357,884,1.877,999,1.557,1067,1.557,1077,2.433,1084,3.327,1086,2.312,1088,1.557,1089,1.694,1114,1.877,1115,1.694,1116,1.694,1123,1.877,1134,1.448,1136,1.694,1141,2.323,1149,1.357,1156,1.357,1162,1.694,1183,2.717,1221,1.694,1268,1.557,1362,1.448,1366,3.768,1369,3.768,1370,4.312,1417,2.57,1429,1.557,1432,1.557,1434,2.312,1565,1.557,1566,1.557,1567,3.401,1570,3.401,1571,4.26,1599,2.717,1602,1.694,1603,1.694,1608,1.877,1609,3.455,1610,3.455,1611,4.326,1612,3.455,1613,4.326,1614,4.326,1615,4.326,1616,4.326,1617,4.949,1618,4.949,1619,3.455,1620,3.455,1621,6.075,1622,4.949,1623,3.455,1624,2.154,1625,2.154,1626,2.154,1627,2.154,1628,3.455,1629,2.154,1630,1.557,1631,3.455,1632,4.949,1633,5.783,1634,4.949,1635,2.154,1636,2.154,1637,2.154,1638,2.154,1639,2.154,1640,2.154,1641,3.455,1642,2.154,1643,1.694,1644,3.455,1645,2.154,1646,2.154,1647,2.154,1648,2.154,1649,2.154,1650,2.154,1651,2.154,1652,2.154,1653,2.154,1654,2.154,1655,2.154,1656,2.154,1657,3.455,1658,2.154,1659,3.768,1660,2.154,1661,2.154,1662,2.154,1663,1.877,1664,2.154,1665,2.154,1666,1.694,1667,1.877,1668,2.154,1669,2.154,1670,2.154,1671,2.154,1672,2.154,1673,2.154,1674,2.154,1675,2.154,1676,3.455,1677,2.154,1678,2.154,1679,2.154,1680,3.455,1681,2.154,1682,2.154,1683,4.326,1684,3.455,1685,2.154,1686,2.154,1687,2.154,1688,2.154,1689,2.154,1690,2.154,1691,2.154,1692,2.154,1693,2.154,1694,3.455,1695,3.455,1696,3.455,1697,3.455,1698,3.455,1699,3.01,1700,3.01,1701,3.455,1702,3.455,1703,3.01,1704,3.455,1705,3.01,1706,1.877,1707,2.154,1708,4.326,1709,2.154,1710,2.154,1711,2.154,1712,3.455,1713,4.326,1714,4.326,1715,2.154,1716,2.154,1717,1.694,1718,1.877,1719,2.154]],["title/modules/TechnologiesModule.html",[260,1.527,1720,2.902]],["body/modules/TechnologiesModule.html",[3,0.163,4,0.127,9,0.127,22,0.451,23,0.76,24,0.013,25,0.163,26,0.319,144,1.343,163,2.218,164,1.055,186,2.143,188,2.143,189,0.691,191,2.218,193,2.143,197,0.008,198,0.01,199,0.008,260,1.919,262,2.347,263,2.838,264,4.168,265,3.179,266,4.028,267,2.569,274,4.619,275,4.028,276,3.179,277,2.696,279,3.416,283,3.416,291,3.967,293,3.967,411,2.997,485,3.108,577,4.621,689,3.967,1133,3.179,1235,4.298,1557,3.648,1720,6.059,1721,4.396,1722,4.396,1723,4.396,1724,5.228,1725,5.046,1726,4.396,1727,3.967,1728,5.046,1729,3.648,1730,4.396,1731,5.046,1732,4.298,1733,5.046,1734,4.298]],["title/guards/TechnologiesResolver.html",[1143,2.699,1732,2.699]],["body/guards/TechnologiesResolver.html",[3,0.169,4,0.131,9,0.131,19,1.169,20,1.06,22,0.443,23,0.785,24,0.013,25,0.169,26,0.33,43,1.364,150,0.581,189,0.489,197,0.008,198,0.01,199,0.008,201,1.488,204,0.441,207,1.679,208,2.325,214,1.928,215,0.642,216,0.983,220,1.342,228,2.143,229,2.231,234,1.713,236,2.91,237,4.199,253,1.984,318,3.628,483,1.775,484,2.231,485,2.536,571,3.813,588,3.771,607,3.174,612,2.426,711,3.287,786,3.807,827,2.426,836,2.656,838,3.287,1086,2.788,1141,4.79,1145,3.507,1147,3.507,1148,4.705,1149,3.287,1151,4.719,1152,5.397,1153,4.79,1154,5.397,1156,3.287,1157,4.102,1159,4.102,1732,4.388,1735,5.602,1736,5.217,1737,5.217,1738,4.544,1739,5.217,1740,4.544,1741,5.217,1742,5.217]],["title/modules/TechnologiesRoutingModule.html",[260,1.527,1724,2.699]],["body/modules/TechnologiesRoutingModule.html",[0,0.854,3,0.186,4,0.145,9,0.145,22,0.443,23,0.867,24,0.013,25,0.186,26,0.364,186,1.912,188,1.912,189,0.65,197,0.009,198,0.011,199,0.009,228,2.366,262,2.679,267,2.932,279,3.078,283,3.707,311,4.529,313,5.015,314,4.664,318,2.932,320,5.455,406,2.8,485,2.8,1133,3.629,1148,4.371,1235,4.664,1241,6.043,1724,4.664,1726,5.017,1729,4.163,1730,5.017,1732,4.664,1734,4.664,1735,4.529,1743,5.76,1744,5.76]],["title/interfaces/Technology.html",[189,0.376,463,0.453]],["body/interfaces/Technology.html",[3,0.158,4,0.123,9,0.123,22,0.27,24,0.014,25,0.224,42,1.861,55,3.218,134,2.151,189,0.706,197,0.008,198,0.01,199,0.008,204,0.414,205,1.137,215,0.781,216,1.196,258,2.576,337,2.093,402,1.519,406,2.379,446,2.615,448,1.918,463,0.851,465,1.396,467,2.116,470,3.35,474,2.395,475,1.792,476,2.492,482,2.155,484,3.12,487,3.35,488,2.477,522,2.492,536,1.934,538,1.934,565,2.615,621,2.615,781,5.273,837,5.187,935,5.736,946,5.736,1201,3.538,1666,5.736,1745,3.538,1746,5.462,1747,4.93,1748,6.355]],["title/classes/TechnologyDataSource.html",[26,0.254,1434,2.145]],["body/classes/TechnologyDataSource.html",[3,0.066,4,0.051,9,0.051,19,0.456,20,1.257,22,0.327,24,0.014,25,0.135,26,0.129,112,1.728,119,2.104,150,0.598,189,0.641,197,0.01,198,0.005,199,0.003,201,0.942,204,0.172,205,0.599,207,0.849,208,3.535,214,1.984,215,0.746,216,1.011,220,1.791,221,2.587,223,1.748,234,1.573,235,1.304,253,2.779,258,2.439,299,1.283,318,2.439,342,1.961,402,1.242,407,1.354,408,1.263,446,1.088,448,2.008,449,1.283,463,0.373,544,2.03,593,1.472,597,3.238,600,3.596,619,0.99,635,1.961,639,1.961,694,5.452,713,2.68,741,2.219,779,4.296,786,3.304,825,1.472,827,0.947,831,1.472,834,1.472,877,1.472,980,3.01,983,2.387,987,2.387,1007,2.387,1134,1.369,1214,4.81,1298,1.472,1415,2.799,1416,1.472,1417,1.961,1418,4.139,1419,4.139,1422,1.601,1423,4.668,1424,1.601,1425,1.601,1426,3.766,1427,1.601,1428,4.999,1429,1.472,1430,1.601,1431,1.601,1432,2.387,1433,2.596,1434,1.764,1435,4.862,1436,2.596,1437,3.274,1438,3.274,1439,3.274,1440,3.274,1441,2.596,1442,3.274,1443,3.274,1444,2.596,1445,3.274,1446,3.274,1447,3.805,1448,1.601,1449,1.601,1450,1.601,1451,1.601,1452,1.601,1453,2.596,1454,1.601,1455,2.596,1456,1.601,1457,1.601,1458,1.601,1459,4.668,1460,1.601,1461,4.139,1462,1.601,1463,2.596,1464,1.601,1465,2.596,1466,1.601,1467,1.601,1468,1.601,1469,2.596,1470,3.274,1471,3.766,1472,2.596,1473,1.601,1474,2.596,1475,3.274,1476,2.596,1477,1.601,1478,1.601,1479,1.601,1480,2.596,1481,2.596,1482,1.601,1483,2.596,1484,3.766,1485,1.601,1486,1.601,1487,1.601,1488,1.601,1489,2.596,1490,1.601,1491,2.596,1492,1.601,1493,1.601,1494,1.601,1495,1.601,1496,3.766,1497,3.274,1498,2.596,1499,1.601,1500,1.601,1501,1.601,1502,1.601,1503,1.601,1504,1.601,1505,3.274,1506,1.601,1507,1.601,1508,1.601,1509,1.601,1510,2.596,1511,2.596,1512,2.596,1513,2.596,1514,2.596,1515,5.384,1516,4.139,1517,3.274,1518,2.596,1519,3.274,1520,1.601,1521,3.274,1522,2.596,1523,1.601,1524,1.601,1525,1.601,1526,4.668,1527,2.596,1528,3.274,1529,2.596,1530,1.601,1531,1.601,1532,1.601,1533,1.601,1534,1.601,1535,2.596,1536,5.162,1537,1.601,1538,1.601,1539,2.596,1540,1.601,1541,1.601,1542,1.601,1543,1.601,1544,2.596,1545,2.596,1546,2.596,1547,2.596,1548,2.596,1549,2.596,1550,2.596,1551,1.601,1552,1.601,1553,1.472,1554,1.601,1630,1.472,1749,3.302,1750,3.302,1751,3.302,1752,3.302,1753,3.302,1754,3.302,1755,3.302,1756,3.302,1757,3.302,1758,2.036,1759,2.036,1760,2.036,1761,2.036,1762,2.036,1763,2.036,1764,2.036,1765,2.036,1766,2.036,1767,2.036,1768,2.036,1769,2.036,1770,4.79,1771,2.036,1772,2.036,1773,2.036,1774,2.036,1775,2.036,1776,2.036,1777,2.036,1778,2.876,1779,2.036,1780,2.036,1781,2.036,1782,2.036,1783,2.036]],["title/components/TechnologyDetailsComponent.html",[0,0.494,188,1.106]],["body/components/TechnologyDetailsComponent.html",[0,0.706,1,0.971,2,1.552,3,0.11,4,0.086,5,1.118,6,1.159,7,1.118,8,1.118,9,0.086,11,1.006,12,2.587,13,2.405,14,2.193,15,1.608,17,1.608,19,0.763,20,1.158,22,0.393,23,0.513,24,0.014,25,0.11,26,0.215,37,1.935,43,1.311,79,1.456,80,1.518,81,2.181,82,2.817,83,2.453,86,2.357,88,2.357,90,1.345,92,1.518,94,2.796,95,1.079,96,2.92,101,2.146,102,1.915,103,1.656,112,1.118,114,2.557,119,1.952,126,1.82,131,1.734,132,1.82,133,1.456,144,0.907,145,1.608,146,1.552,147,1.118,148,2.059,149,1.118,150,0.559,151,1.118,152,0.971,153,1.118,154,0.971,155,1.118,156,1.789,157,1.118,158,0.971,159,1.079,160,1.118,161,0.971,162,1.118,163,0.971,164,0.712,165,1.118,166,0.938,167,1.118,168,0.971,169,1.118,170,0.938,171,1.118,172,0.971,173,1.118,174,0.971,175,1.118,176,0.938,177,0.938,178,1.118,179,0.971,180,1.118,181,0.938,182,1.042,183,1.118,184,0.938,185,1.118,186,0.938,187,1.118,188,1.729,189,0.744,190,1.118,191,0.971,192,1.118,193,0.938,194,1.042,195,1.118,196,1.118,197,0.005,198,0.008,199,0.005,201,1.397,202,2.357,204,0.288,205,0.888,207,1.26,210,2.577,214,1.006,215,0.653,216,0.513,220,0.876,221,1.794,228,1.399,229,1.456,235,1.345,337,2.453,352,4.267,362,1.734,366,2.289,370,2.095,390,2.462,416,2.023,423,2.92,427,1.915,458,2.289,459,2.289,483,1.952,489,2.668,498,2.381,669,2.289,682,3.086,686,2.289,836,1.734,838,2.146,999,2.462,1077,2.755,1083,2.462,1084,4.217,1086,2.617,1088,2.462,1089,2.677,1101,4.997,1113,2.967,1115,2.677,1133,3.086,1221,2.677,1413,2.967,1556,4.598,1565,2.462,1630,3.541,1643,2.677,1659,4.267,1663,2.967,1667,2.967,1729,5.275,1784,2.967,1785,5.736,1786,4.898,1787,5.736,1788,4.898,1789,4.898,1790,4.898,1791,3.405,1792,3.405,1793,3.405,1794,3.405,1795,4.898,1796,3.405,1797,3.405,1798,3.405,1799,3.405,1800,3.405,1801,3.405,1802,3.405,1803,3.405,1804,3.405,1805,3.405,1806,3.405,1807,3.405,1808,4.898,1809,4.898,1810,4.898,1811,4.898,1812,3.405,1813,3.405,1814,3.405]],["title/guards/TechnologyDetailsResolverService.html",[1143,2.699,1734,2.699]],["body/guards/TechnologyDetailsResolverService.html",[3,0.17,4,0.133,9,0.133,19,1.181,20,1.067,22,0.439,23,0.794,24,0.013,25,0.17,26,0.333,150,0.585,189,0.494,197,0.008,198,0.011,199,0.008,201,1.504,204,0.446,207,1.69,208,2.35,214,1.941,215,0.646,216,0.989,220,1.356,228,2.166,229,2.255,234,1.731,236,2.929,237,4.216,253,2.005,318,3.346,474,1.731,483,1.794,484,2.255,571,3.823,588,3.812,786,3.826,827,2.453,836,2.684,838,3.322,1086,2.818,1133,4.511,1141,4.813,1145,3.545,1147,3.545,1148,4.723,1149,3.322,1151,4.751,1152,5.418,1153,4.813,1154,5.418,1155,4.593,1156,3.322,1157,4.146,1159,4.146,1556,4.511,1734,4.418,1738,5.725,1740,4.593,1815,5.273,1816,5.273,1817,5.273]],["title/interfaces/TechnologyDossier.html",[463,0.453,837,2.699]],["body/interfaces/TechnologyDossier.html",[3,0.17,4,0.133,9,0.133,22,0.291,24,0.014,25,0.231,42,2.005,55,3.33,134,1.875,189,0.702,197,0.008,198,0.011,199,0.008,204,0.446,205,1.192,215,0.704,216,0.989,258,2.166,337,2.255,402,1.474,406,3.644,446,3.826,448,2.19,463,0.871,465,1.504,467,2.19,470,2.818,474,1.731,475,2.407,476,2.684,482,1.941,484,2.255,487,2.818,488,2.596,522,3.346,536,2.829,538,2.961,565,4.005,621,2.818,781,3.812,837,5.039,935,4.146,946,4.146,1201,4.751,1666,4.146,1745,3.812,1746,4.593,1747,4.146,1748,4.593]],["title/interfaces/TechnologyDossierResponse.html",[463,0.453,564,2.145]],["body/interfaces/TechnologyDossierResponse.html",[3,0.16,4,0.124,9,0.124,22,0.348,24,0.014,25,0.25,42,2.643,51,2.643,67,1.566,134,1.983,150,0.652,189,0.463,197,0.008,198,0.01,199,0.008,204,0.418,205,1.144,215,0.683,216,0.95,223,1.316,402,1.513,406,3.56,407,1.272,435,1.88,448,1.93,463,0.907,465,1.41,467,2.126,474,2.404,475,2.682,482,2.053,492,2.699,510,2.114,511,2.114,518,2.204,519,2.204,536,2.746,538,2.893,551,2.642,552,2.937,553,3.115,554,4.129,555,4.38,556,3.115,557,2.642,558,3.115,559,2.642,560,3.115,561,2.642,562,3.115,563,3.115,564,3.372,565,3.913,566,4.118,567,2.3]],["title/interfaces/TechnologyFilterConfiguration.html",[463,0.453,612,1.867]],["body/interfaces/TechnologyFilterConfiguration.html",[3,0.132,4,0.103,9,0.103,24,0.014,25,0.237,38,2.182,51,1.553,62,2.425,67,1.762,112,1.826,134,1.165,150,0.605,164,0.853,189,0.521,197,0.007,198,0.009,199,0.007,204,0.345,205,1.009,215,0.699,223,1.087,234,1.341,235,1.613,372,3.82,402,1.477,408,1.643,463,0.862,464,1.613,465,1.165,467,2.078,477,2.285,482,2.166,488,2.499,502,2.942,503,2.82,506,3.602,509,2.942,533,1.899,540,3.344,544,2.333,567,1.899,597,1.899,598,2.425,600,2.832,602,2.297,603,2.573,604,2.745,605,4.478,606,3.733,607,3.565,608,4.356,609,4.253,610,3.739,611,3.739,612,2.587,613,4.566,614,2.745,615,3.304,616,3.304,617,2.425,618,3.505,619,3.075,620,2.745,621,2.972,622,2.573,623,2.425,624,2.745,625,2.745,626,3.986,627,5.044,628,3.304,629,3.986,630,2.745,631,3.739,632,3.739,633,3.986,634,2.745,635,3.758,636,3.986,637,4.28,638,3.986,639,3.758,640,2.745,641,3.986,642,3.986]],["title/components/TechnologyListComponent.html",[0,0.494,191,1.145]],["body/components/TechnologyListComponent.html",[0,0.671,1,0.889,2,1.455,3,0.101,4,0.078,5,1.023,6,1.06,7,1.023,8,1.023,9,0.078,11,0.92,12,2.563,13,2.381,14,1.455,15,1.507,17,1.507,19,1.222,20,1.042,22,0.3,23,0.469,24,0.014,25,0.101,26,0.197,37,3.027,43,0.651,79,1.333,80,1.389,81,2.638,82,3.132,83,2.332,84,1.665,85,2.727,86,2.24,87,2.232,88,2.472,89,2.798,90,2.377,92,2.99,94,2.43,95,1.455,96,3.265,98,3.086,99,3.319,100,2.714,101,3.435,103,2.232,104,3.086,106,2.45,107,2.714,108,2.45,111,2.095,112,2.337,114,2.046,115,2.252,117,2.095,118,1.963,119,2.361,120,2.714,121,2.714,122,2.095,123,2.714,124,2.727,127,2.453,128,2.453,129,2.727,130,2.252,131,1.586,133,1.964,134,1.31,135,1.963,136,2.232,137,1.665,138,2.536,142,2.45,144,0.829,145,1.507,146,1.455,147,1.023,148,1.975,149,1.023,150,0.618,151,1.023,152,0.889,153,1.023,154,0.889,155,1.023,156,0.889,157,1.023,158,0.889,159,0.987,160,1.023,161,0.889,162,1.023,163,0.889,164,0.651,165,1.023,166,0.859,167,1.023,168,0.889,169,1.023,170,0.859,171,1.023,172,0.889,173,1.023,174,0.889,175,1.023,176,0.859,177,0.859,178,1.023,179,0.889,180,1.023,181,0.859,182,0.953,183,1.023,184,0.859,185,1.023,186,0.859,187,1.023,188,0.859,189,0.692,190,1.023,191,1.716,192,1.023,193,0.859,194,0.953,195,1.023,196,1.023,197,0.005,198,0.007,199,0.005,201,1.31,202,2.24,204,0.263,205,0.833,207,1.181,210,2.472,214,0.92,215,0.536,216,0.469,220,1.181,221,1.997,337,1.333,342,2.727,351,3.319,354,1.851,362,2.337,370,1.333,376,2.714,381,2.714,382,2.377,397,2.582,402,0.989,407,0.801,408,0.698,410,2.453,423,1.586,427,2.582,453,1.851,458,2.095,459,2.095,544,1.507,607,2.232,678,2.714,682,1.963,686,3.086,687,1.963,754,2.45,1077,3.066,1137,2.714,1138,2.714,1139,2.714,1183,2.45,1191,2.714,1282,2.714,1417,3.238,1434,2.913,1447,2.252,1556,4.227,1566,2.252,1706,2.714,1717,3.61,1718,2.714,1727,5.275,1818,2.714,1819,5.452,1820,4.591,1821,5.452,1822,4.591,1823,4.591,1824,3.116,1825,3.116,1826,4.591,1827,3.116,1828,4,1829,3.116,1830,3.116,1831,3.116,1832,3.116,1833,3.116,1834,4.591,1835,4.591,1836,4.591,1837,4.591,1838,4.591,1839,6.016,1840,3.116,1841,3.116,1842,3.116,1843,3.116]],["title/components/TechnologyTableComponent.html",[0,0.494,193,1.106]],["body/components/TechnologyTableComponent.html",[0,0.573,1,0.687,2,1.196,3,0.078,4,0.061,5,0.791,6,0.82,7,0.791,8,0.791,9,0.061,11,0.712,12,2.481,13,2.302,14,1.196,15,1.24,17,1.24,19,1.043,20,1.193,22,0.35,23,0.363,24,0.014,25,0.122,26,0.239,43,1.101,79,1.03,80,1.074,81,1.77,82,2.507,83,1.991,84,1.287,85,2.243,86,1.913,87,1.171,88,2.165,89,1.121,90,1.839,92,3.011,94,1.074,95,1.475,96,1.922,101,3.606,103,1.171,104,3.847,111,1.62,112,1.24,114,1.683,119,2.299,124,2.765,126,3.764,127,1.287,128,1.287,129,1.431,130,4.388,131,1.922,133,2.254,135,1.518,136,1.171,137,1.287,138,2.662,144,0.641,145,1.24,146,1.196,147,0.791,148,1.73,149,0.791,150,0.646,151,0.791,152,0.687,153,0.791,154,0.687,155,0.791,156,0.687,157,0.791,158,0.687,159,0.763,160,0.791,161,0.687,162,0.791,163,0.687,164,0.789,165,0.791,166,0.664,167,0.791,168,0.687,169,0.791,170,0.664,171,0.791,172,0.687,173,0.791,174,0.687,175,0.791,176,0.664,177,0.664,178,0.791,179,0.687,180,0.791,181,0.664,182,0.737,183,0.791,184,0.664,185,0.791,186,0.664,187,0.791,188,0.664,189,0.647,190,0.791,191,0.687,192,0.791,193,1.452,194,1.75,195,0.791,196,0.791,197,0.004,198,0.006,199,0.004,201,1.077,202,1.913,204,0.446,205,0.685,207,0.971,208,2.075,210,2.165,214,0.712,215,0.679,216,0.363,220,1.355,221,2.096,342,3.13,354,2.765,362,1.227,370,2.254,382,0.952,397,2.123,402,1.253,407,1.355,408,1.422,410,3.058,416,1.431,422,3.365,423,1.922,424,3.365,431,1.756,442,2.165,456,2.964,458,2.538,459,2.538,474,1.528,483,1.584,543,2.017,544,0.791,612,2.165,616,1.431,617,2.765,671,2.969,682,1.518,686,2.538,687,1.518,711,1.518,836,1.227,883,1.894,903,1.894,1077,2.123,1116,1.894,1121,1.894,1136,4.143,1162,3.66,1170,3.289,1268,1.742,1362,1.62,1417,2.765,1434,2.488,1553,2.729,1555,5.091,1556,4.678,1557,5.367,1558,1.894,1559,3.289,1564,4.056,1565,1.742,1566,1.742,1567,3.66,1568,3.289,1569,4.056,1570,3.66,1571,3.66,1572,3.289,1573,4.056,1574,4.056,1575,5.884,1576,4.056,1577,3.289,1578,4.056,1579,3.289,1580,2.099,1581,2.099,1582,2.099,1583,2.099,1584,2.099,1585,2.099,1586,2.099,1587,2.099,1588,3.289,1589,2.099,1590,3.289,1591,3.289,1592,2.099,1593,4.591,1594,4.591,1595,2.099,1596,2.099,1597,2.099,1598,2.099,1599,2.969,1600,2.099,1601,2.099,1602,1.894,1603,1.894,1604,2.099,1605,4.591,1606,3.289,1607,4.591,1643,1.894,1705,3.289,1717,1.894,1844,3.776,1845,3.776,1846,2.409,1847,2.409,1848,2.409,1849,2.409,1850,2.409,1851,2.409,1852,2.409,1853,2.409,1854,2.409,1855,2.409,1856,2.409,1857,2.409,1858,3.776,1859,5.27,1860,3.776,1861,6.07,1862,3.776,1863,2.409,1864,2.409,1865,2.409,1866,5.27,1867,6.755,1868,5.27,1869,4.656,1870,2.409,1871,3.776,1872,2.409,1873,2.409,1874,2.409]],["title/pipes/TruncatePipe.html",[875,2.258,1399,2.699]],["body/pipes/TruncatePipe.html",[3,0.173,4,0.134,9,0.134,11,1.577,20,0.867,22,0.294,23,0.804,24,0.014,25,0.173,26,0.337,150,0.641,197,0.009,198,0.011,199,0.009,201,1.523,207,1.373,214,1.577,215,0.525,216,0.804,220,1.373,235,2.975,253,2.519,402,1.404,407,1.373,408,1.687,544,2.175,875,3.725,1171,5.208,1386,3.86,1390,4.199,1391,5.208,1393,5.208,1399,4.453,1875,4.652,1876,6.624,1877,7.997,1878,7.529,1879,7.529,1880,7.529,1881,5.34,1882,6.624,1883,5.34,1884,7.201,1885,5.34]],["title/pipes/YesNoPipe.html",[875,2.258,1400,2.699]],["body/pipes/YesNoPipe.html",[3,0.19,4,0.148,9,0.148,11,1.739,20,0.956,22,0.324,23,0.886,24,0.014,25,0.19,26,0.372,150,0.669,197,0.009,198,0.011,199,0.009,201,1.679,207,1.514,214,1.739,215,0.579,216,0.886,220,1.514,223,1.567,253,2.673,408,1.744,671,5.526,741,3.957,875,3.953,1362,3.957,1386,4.255,1390,4.629,1391,5.526,1393,5.526,1400,4.725,1886,6.123,1887,5.128,1888,5.887]],["title/coverage.html",[1889,4.79]],["body/coverage.html",[0,0.99,1,0.901,9,0.08,10,2.752,24,0.014,26,0.407,50,1.609,119,2.88,152,0.901,154,0.901,156,0.901,158,0.901,161,0.901,163,0.901,166,0.871,168,0.901,170,0.871,172,0.901,174,0.901,176,0.871,177,0.871,179,0.901,181,0.871,184,0.871,186,0.871,188,0.871,189,0.296,191,0.901,193,0.871,194,0.966,197,0.005,198,0.007,199,0.005,200,2.752,215,0.311,236,2.699,237,1.777,239,2.752,240,2.752,260,1.201,298,2.484,300,2.752,316,2.284,331,2.752,389,2.752,390,2.284,391,2.752,419,4.788,428,2.752,429,2.484,430,2.752,442,1.298,448,0.966,456,3.792,463,0.914,464,1.248,466,3.919,481,1.777,483,1.075,489,1.47,501,1.609,534,1.609,551,1.688,552,4.005,557,1.688,559,1.688,561,1.688,564,1.688,566,1.777,571,1.536,572,1.991,573,2.124,578,2.284,580,2.484,597,1.47,598,3.831,600,1.609,602,1.777,606,1.609,612,1.47,644,2.752,688,2.752,689,2.484,690,2.752,713,1.609,759,5.83,837,2.124,840,1.877,842,2.484,844,2.484,846,2.484,848,2.484,851,2.484,853,2.484,855,2.484,857,2.484,859,2.484,875,3.091,1029,2.752,1030,2.752,1037,2.752,1044,2.752,1080,2.752,1091,2.752,1092,2.484,1093,2.752,1133,1.991,1143,4.071,1144,2.124,1146,2.752,1147,4.071,1161,2.752,1169,2.752,1171,3.647,1192,2.752,1198,2.284,1199,3.647,1211,2.752,1233,2.124,1243,2.484,1244,2.484,1315,2.752,1342,2.752,1343,2.752,1350,3.647,1351,3.647,1364,2.284,1365,2.752,1381,2.752,1385,2.124,1387,2.752,1388,2.752,1399,2.124,1400,2.124,1415,2.124,1416,3.973,1428,2.124,1434,1.688,1555,2.284,1556,4.064,1557,3.353,1558,3.647,1608,2.752,1727,2.484,1729,2.284,1732,2.124,1734,2.124,1735,2.484,1745,3.353,1784,2.752,1818,2.752,1875,2.752,1886,2.752,1887,2.752,1889,2.752,1890,3.16,1891,7.747,1892,4.639,1893,6.056,1894,6.743,1895,3.16,1896,7.747,1897,7.981,1898,6.056,1899,5.496,1900,3.16,1901,3.16,1902,3.16,1903,4.639,1904,4.639,1905,3.16,1906,3.16,1907,4.639,1908,5.496,1909,4.639,1910,5.496,1911,5.496,1912,3.16,1913,3.16,1914,3.16,1915,2.752,1916,4.041,1917,2.752,1918,4.041,1919,2.752,1920,2.752,1921,3.16]],["title/dependencies.html",[263,2.719,1922,3.344]],["body/dependencies.html",[23,0.888,24,0.014,197,0.009,198,0.011,199,0.009,228,2.423,263,3.317,281,6.13,282,4.731,285,5.139,286,5.139,411,3.504,712,4.264,827,2.744,1364,4.264,1923,5.899,1924,8.323,1925,5.899,1926,5.899,1927,5.899,1928,5.899,1929,5.899,1930,5.899,1931,5.899,1932,5.899,1933,5.899,1934,5.899,1935,5.899,1936,5.899,1937,5.899,1938,5.899]],["title/miscellaneous/enumerations.html",[1939,2.417,1940,4.211]],["body/miscellaneous/enumerations.html",[24,0.013,38,3.013,55,3.185,62,3.349,197,0.009,198,0.011,199,0.009,204,0.477,215,0.554,408,1.869,467,1.724,482,2.023,540,2.513,598,3.349,606,2.87,607,2.741,615,3.349,616,3.349,619,3.329,621,3.013,622,3.552,623,3.349,626,4.315,629,4.315,633,4.315,635,4.068,639,4.068,641,4.315,642,4.315,1243,4.433,1244,5.385,1254,5.966,1255,5.966,1256,5.966,1257,5.966,1258,5.385,1745,4.075,1939,4.075,1940,4.911,1941,5.638,1942,5.638,1943,5.638]],["title/index.html",[204,0.283,1944,2.913,1945,2.913]],["body/index.html",[0,0.866,4,0.161,13,1.498,24,0.01,27,5.531,28,3.988,32,3.666,34,4.419,35,2.466,36,2.466,37,2.004,38,2.71,39,4.419,41,3.988,42,1.929,43,1.06,53,2.466,55,2.983,61,5.531,150,0.452,197,0.008,198,0.01,199,0.01,258,2.084,277,2.71,306,4.419,337,2.169,339,2.582,348,4.419,349,3.988,351,3.666,463,0.573,517,3.759,530,2.853,554,3.81,589,4.419,615,3.013,636,3.196,675,5.812,713,2.582,869,3.988,1703,4.419,1946,5.072,1947,5.072,1948,5.072,1949,5.072,1950,7.787,1951,7.392,1952,5.072,1953,4.419,1954,5.072,1955,5.072,1956,5.072,1957,5.072,1958,5.072,1959,4.419,1960,5.072,1961,5.072,1962,5.072,1963,7.624,1964,7.908,1965,5.072,1966,5.072,1967,5.072,1968,5.072,1969,5.072,1970,5.072,1971,5.072,1972,4.419,1973,5.072,1974,7.034,1975,5.072,1976,5.072,1977,5.072,1978,5.072,1979,5.072,1980,5.072,1981,5.072,1982,5.072,1983,4.419,1984,6.414,1985,6.414,1986,7.392,1987,5.072,1988,6.414,1989,6.414,1990,5.072,1991,5.072,1992,5.072,1993,7.034,1994,6.414,1995,5.072,1996,5.072,1997,5.072]],["title/license.html",[1944,2.913,1945,2.913,1998,2.913]],["body/license.html",[4,0.176,9,0.16,20,0.355,22,0.121,24,0.007,26,0.138,31,1.72,32,1.582,36,1.064,38,1.169,40,4.293,45,1.906,49,6.984,50,2.225,51,0.832,53,1.064,54,1.379,58,2.78,61,1.72,64,1.906,81,1.33,90,0.865,91,1.72,109,3.048,112,0.718,113,1.471,132,1.169,134,0.624,136,1.064,150,0.389,182,0.669,197,0.006,198,0.006,199,0.004,277,1.169,336,1.906,339,1.114,372,2.809,414,1.582,453,2.596,465,0.624,469,1.869,476,1.114,488,0.865,494,1.169,496,1.169,503,2.226,517,3.589,522,1.114,535,1.114,536,0.865,549,1.231,550,1.231,608,1.3,623,2.078,637,1.379,675,1.72,869,3.437,1043,6.565,1051,1.906,1056,3.808,1057,3.048,1153,1.471,1203,6.516,1204,1.906,1205,1.906,1320,1.906,1321,1.906,1334,4.579,1358,1.906,1630,1.582,1699,3.048,1700,1.906,1747,5.576,1953,3.048,1959,1.906,1972,3.808,1998,6.967,1999,4.994,2000,4.371,2001,4.371,2002,2.188,2003,2.188,2004,2.188,2005,6.549,2006,7.092,2007,4.994,2008,5.46,2009,2.188,2010,7.273,2011,6.716,2012,1.906,2013,2.188,2014,6.716,2015,7.092,2016,5.823,2017,6.716,2018,3.499,2019,2.188,2020,5.46,2021,2.188,2022,2.188,2023,2.188,2024,4.994,2025,2.188,2026,6.549,2027,2.188,2028,4.994,2029,3.499,2030,3.499,2031,2.188,2032,4.371,2033,3.499,2034,3.499,2035,2.188,2036,3.499,2037,5.823,2038,2.188,2039,3.499,2040,2.188,2041,2.188,2042,2.188,2043,2.188,2044,2.188,2045,2.188,2046,4.371,2047,2.188,2048,4.371,2049,3.499,2050,2.188,2051,2.188,2052,5.823,2053,6.549,2054,4.994,2055,2.188,2056,2.188,2057,2.188,2058,2.188,2059,2.188,2060,2.188,2061,2.188,2062,4.371,2063,3.499,2064,2.188,2065,6.549,2066,3.499,2067,2.188,2068,3.499,2069,7.48,2070,2.188,2071,2.188,2072,2.188,2073,2.188,2074,3.499,2075,3.499,2076,2.188,2077,2.188,2078,2.188,2079,2.188,2080,4.994,2081,5.46,2082,2.188,2083,3.499,2084,4.994,2085,3.499,2086,2.188,2087,5.46,2088,3.499,2089,2.188,2090,2.188,2091,4.371,2092,2.188,2093,2.188,2094,2.188,2095,2.188,2096,3.499,2097,2.188,2098,2.188,2099,2.188,2100,4.371,2101,2.188,2102,2.188,2103,4.371,2104,2.188,2105,2.188,2106,2.188,2107,4.994,2108,6.716,2109,2.188,2110,2.188,2111,3.499,2112,6.351,2113,4.371,2114,4.994,2115,3.499,2116,3.499,2117,3.499,2118,3.499,2119,4.371,2120,3.499,2121,4.371,2122,3.499,2123,3.499,2124,3.499,2125,3.499,2126,2.188,2127,3.499,2128,2.188,2129,5.46,2130,6.113,2131,4.371,2132,3.499,2133,2.188,2134,3.499,2135,3.499,2136,2.188,2137,2.188,2138,4.371,2139,3.499,2140,2.188,2141,2.188,2142,2.188,2143,4.371,2144,2.188,2145,2.188,2146,3.499,2147,3.499,2148,2.188,2149,2.188,2150,2.188,2151,2.188,2152,2.188,2153,2.188,2154,2.188,2155,3.499,2156,2.188,2157,2.188,2158,2.188,2159,2.188,2160,2.188,2161,2.188,2162,5.46,2163,2.188,2164,4.371,2165,2.188,2166,2.188,2167,4.371,2168,2.188,2169,2.188,2170,2.188,2171,2.188,2172,6.351,2173,2.188,2174,2.188,2175,2.188,2176,2.188,2177,2.188,2178,4.994,2179,3.499,2180,4.994,2181,2.188,2182,2.188,2183,2.188,2184,4.371,2185,2.188,2186,2.188,2187,3.499,2188,3.499,2189,2.188,2190,2.188,2191,2.188,2192,2.188,2193,3.499,2194,3.499,2195,2.188,2196,2.188,2197,2.188,2198,2.188,2199,2.188,2200,2.188,2201,2.188,2202,2.188,2203,4.371,2204,4.994,2205,2.188,2206,2.188,2207,2.188,2208,2.188,2209,2.188,2210,2.188,2211,2.188,2212,2.188,2213,2.188,2214,2.188,2215,3.499,2216,2.188,2217,2.188,2218,3.499,2219,2.188,2220,4.994,2221,2.188,2222,2.188,2223,2.188,2224,2.188,2225,2.188,2226,4.994,2227,4.371,2228,4.371,2229,4.371,2230,3.499,2231,3.499,2232,3.499,2233,2.188,2234,2.188,2235,2.188,2236,2.188,2237,2.188,2238,2.188,2239,3.499,2240,2.188,2241,2.188,2242,2.188,2243,2.188,2244,5.46,2245,2.188,2246,2.188,2247,2.188,2248,2.188,2249,2.188,2250,2.188,2251,2.188,2252,2.188,2253,5.46,2254,2.188,2255,2.188,2256,2.188,2257,2.188,2258,2.188,2259,2.188,2260,2.188,2261,2.188,2262,2.188,2263,2.188,2264,2.188,2265,2.188,2266,2.188,2267,2.188,2268,2.188,2269,2.188,2270,4.371,2271,2.188,2272,2.188,2273,2.188,2274,3.499,2275,2.188,2276,2.188,2277,2.188,2278,2.188,2279,2.188,2280,2.188,2281,2.188,2282,2.188,2283,2.188,2284,2.188,2285,2.188,2286,2.188,2287,2.188,2288,2.188,2289,3.499,2290,2.188,2291,2.188,2292,2.188,2293,3.499,2294,3.499,2295,2.188,2296,2.188,2297,2.188,2298,2.188,2299,2.188,2300,2.188,2301,2.188,2302,2.188,2303,2.188,2304,2.188,2305,2.188,2306,2.188,2307,2.188,2308,2.188,2309,2.188,2310,2.188,2311,2.188,2312,2.188,2313,2.188,2314,2.188]],["title/modules.html",[262,2.557]],["body/modules.html",[24,0.011,32,5.791,51,2.985,197,0.01,198,0.011,199,0.01,261,4.063,262,2.811,272,4.063,273,4.063,274,3.59,282,5.385,353,6.008,1224,4.369,1228,4.063,1258,6.299,1259,4.063,1720,4.369,1724,4.063,2315,7.852]],["title/overview.html",[1316,4.323]],["body/overview.html",[1,1.74,2,1.206,24,0.014,119,1.296,144,1.014,152,2.101,154,1.74,156,2.101,158,2.101,161,1.74,163,1.74,166,1.68,168,2.101,170,1.68,172,2.101,174,2.101,176,1.68,177,1.68,179,1.74,181,2.029,184,1.68,186,1.68,188,1.68,191,1.74,193,1.68,197,0.006,198,0.008,199,0.006,237,3.43,238,2.56,260,1.448,261,5.49,262,1.771,263,2.142,264,2.262,265,2.399,266,2.399,267,1.939,268,3.317,269,3.317,270,3.317,271,3.317,272,4.099,273,5.247,274,5.005,275,3.34,276,2.399,277,2.035,299,2.399,425,2.994,465,1.086,569,3.317,570,3.317,571,2.965,572,3.842,573,4.099,1145,2.56,1224,5.772,1225,3.317,1226,3.317,1227,3.317,1228,4.099,1259,4.95,1316,2.994,1385,4.95,1386,2.752,1395,3.317,1396,3.317,1397,3.317,1398,3.317,1399,4.95,1400,4.95,1720,5.833,1721,3.317,1722,3.317,1723,3.317,1724,4.099,1828,3.317,2012,3.317,2316,3.808,2317,5.301,2318,3.808]],["title/routes.html",[314,3.696]],["body/routes.html",[24,0.012,197,0.011,198,0.012,199,0.011,314,4.438]],["title/miscellaneous/variables.html",[1939,2.417,2319,4.211]],["body/miscellaneous/variables.html",[24,0.014,197,0.008,198,0.01,199,0.008,204,0.419,215,0.813,234,2.076,235,1.96,402,1.459,407,2.11,408,1.838,759,3.9,842,4.972,843,4.321,844,4.972,845,4.321,846,4.972,847,4.321,848,4.972,849,4.321,850,4.321,851,4.972,852,4.321,853,4.972,854,4.321,855,4.972,856,4.321,857,4.972,858,4.321,859,4.972,860,4.321,1334,4.972,1350,3.9,1351,4.972,1364,4.571,1778,4.321,1915,4.321,1916,6.387,1917,4.321,1918,4.321,1919,5.509,1920,5.509,1939,3.586,1983,5.509,2319,4.321,2320,6.324,2321,8.043,2322,4.961,2323,4.961,2324,4.961,2325,4.961,2326,4.961]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.10.3",{"_index":1938,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["0.22",{"_index":374,"title":{},"body":{"components/BannerComponent.html":{}}}],["0.2rem",{"_index":1840,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["0.6.2",{"_index":1933,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1897,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1900,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1902,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1914,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1913,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1893,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1901,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1891,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1894,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1892,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1898,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1899,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["1.1rem",{"_index":140,"title":{},"body":{"components/AboutComponent.html":{},"components/ChildGroupingComponent.html":{}}}],["1.2rem",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{}}}],["1.3rem",{"_index":386,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionComponent.html":{}}}],["1.5rem",{"_index":366,"title":{},"body":{"components/BannerComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["1.7rem",{"_index":371,"title":{},"body":{"components/BannerComponent.html":{}}}],["1.8rem",{"_index":385,"title":{},"body":{"components/BannerComponent.html":{}}}],["1/4",{"_index":1909,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1908,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1911,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1912,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":342,"title":{},"body":{"components/BannerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["100",{"_index":456,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":1221,"title":{},"body":{"components/InformationComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["10px",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["10rem",{"_index":1813,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["11",{"_index":1169,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["11.0.0",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["11.1.1",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["11.1.2",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["1100px",{"_index":387,"title":{},"body":{"components/BannerComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{}}}],["1200px",{"_index":1079,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{}}}],["1400px",{"_index":1874,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["150",{"_index":543,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["16",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["18",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{}}}],["18px",{"_index":384,"title":{},"body":{"components/BannerComponent.html":{}}}],["1em",{"_index":1071,"title":{},"body":{"components/FooterComponent.html":{}}}],["1fr",{"_index":1328,"title":{},"body":{"components/OverviewComponent.html":{}}}],["1px",{"_index":424,"title":{},"body":{"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["1rem",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["2",{"_index":687,"title":{},"body":{"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["2.0",{"_index":2001,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":1936,"title":{},"body":{"dependencies.html":{}}}],["2.2rem",{"_index":752,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["2.5rem",{"_index":388,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologiesComponent.html":{}}}],["20",{"_index":419,"title":{},"body":{"components/BottomNavComponent.html":{},"coverage.html":{}}}],["200",{"_index":1807,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["2004",{"_index":2003,"title":{},"body":{"license.html":{}}}],["2021",{"_index":1050,"title":{},"body":{"components/FooterComponent.html":{}}}],["21",{"_index":2316,"title":{},"body":{"overview.html":{}}}],["212121",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{}}}],["23",{"_index":2318,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1171,"title":{},"body":{"components/HeaderComponent.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["2em",{"_index":1181,"title":{},"body":{"components/HeaderComponent.html":{}}}],["2px",{"_index":1170,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["2rem",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["3",{"_index":425,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{},"overview.html":{}}}],["3.5rem",{"_index":1869,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["30",{"_index":1711,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["30em",{"_index":1707,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["35",{"_index":1341,"title":{},"body":{"components/OverviewComponent.html":{}}}],["3rem",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["3s",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["4",{"_index":2317,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1903,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":376,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologyListComponent.html":{}}}],["40px",{"_index":383,"title":{},"body":{"components/BannerComponent.html":{}}}],["4em",{"_index":1073,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["4px",{"_index":373,"title":{},"body":{"components/BannerComponent.html":{}}}],["4rem",{"_index":1074,"title":{},"body":{"components/FooterComponent.html":{}}}],["5",{"_index":1828,"title":{},"body":{"components/TechnologyListComponent.html":{},"overview.html":{}}}],["5.5rem",{"_index":1177,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5/5",{"_index":1904,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1906,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":414,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"license.html":{}}}],["500",{"_index":1069,"title":{},"body":{"components/FooterComponent.html":{}}}],["510px",{"_index":426,"title":{},"body":{"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{}}}],["550px",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{}}}],["55em",{"_index":1189,"title":{},"body":{"components/HeaderComponent.html":{}}}],["57rem",{"_index":1078,"title":{},"body":{"components/FooterComponent.html":{}}}],["5rem",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["5s",{"_index":1339,"title":{},"body":{"components/OverviewComponent.html":{}}}],["6.6.3",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1907,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":459,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["620px",{"_index":1190,"title":{},"body":{"components/HeaderComponent.html":{}}}],["6em",{"_index":1186,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7",{"_index":1338,"title":{},"body":{"components/OverviewComponent.html":{}}}],["70",{"_index":1333,"title":{},"body":{"components/OverviewComponent.html":{}}}],["790px",{"_index":142,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/TechnologyListComponent.html":{}}}],["7rem",{"_index":753,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["80",{"_index":1706,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["83",{"_index":1905,"title":{},"body":{"coverage.html":{}}}],["850px",{"_index":1654,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["8rem",{"_index":135,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["9",{"_index":2012,"title":{},"body":{"license.html":{},"overview.html":{}}}],["90",{"_index":681,"title":{},"body":{"components/CriterionComponent.html":{},"components/TechnologiesComponent.html":{}}}],["900",{"_index":368,"title":{},"body":{"components/BannerComponent.html":{},"components/FooterComponent.html":{}}}],["900px",{"_index":1717,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["910px",{"_index":1718,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["93vw",{"_index":1863,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["95",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{}}}],["95rem",{"_index":1191,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{}}}],["9rem",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{}}}],["_scss/global/variables",{"_index":416,"title":{},"body":{"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["_scss/shared",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["a[sort.property",{"_index":1512,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["about'},{'name",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["about.component.html",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["above",{"_index":2207,"title":{},"body":{"license.html":{}}}],["academic",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{}}}],["acceptance",{"_index":2272,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":2270,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":243,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["act",{"_index":2278,"title":{},"body":{"license.html":{}}}],["acting",{"_index":2022,"title":{},"body":{"license.html":{}}}],["activatedroute",{"_index":1084,"title":{},"body":{"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":1152,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["active",{"_index":1185,"title":{},"body":{"components/HeaderComponent.html":{}}}],["acts",{"_index":2251,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":196,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["add",{"_index":2194,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":2196,"title":{},"body":{"license.html":{}}}],["additional",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["additions",{"_index":2082,"title":{},"body":{"license.html":{}}}],["advised",{"_index":2268,"title":{},"body":{"license.html":{}}}],["against",{"_index":2147,"title":{},"body":{"license.html":{}}}],["agree",{"_index":2281,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":2229,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":2212,"title":{},"body":{"license.html":{}}}],["aims",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{}}}],["align",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["alleging",{"_index":2152,"title":{},"body":{"license.html":{}}}],["allvalues.includes(v",{"_index":1545,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["allvalues.push(v.value",{"_index":1541,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["alone",{"_index":2144,"title":{},"body":{"license.html":{}}}],["along",{"_index":2185,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":2195,"title":{},"body":{"license.html":{}}}],["alpha",{"_index":1359,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["already",{"_index":1036,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["and(b",{"_index":2168,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":2175,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":2181,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":2275,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1951,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":1422,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["angular/cdk/layout",{"_index":1651,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["angular/cli",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":411,"title":{},"body":{"components/BottomNavComponent.html":{},"modules/CoreModule.html":{},"components/FrameworkRendererComponent.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":252,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"injectables/DataService.html":{}}}],["angular/compiler",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"modules/CoreModule.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":712,"title":{},"body":{"components/CriterionFilterComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1286,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/bottom",{"_index":1309,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":1262,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":1275,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":1302,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":1290,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":1279,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":1281,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":1277,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1264,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":1284,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":1273,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":1296,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":1298,"title":{},"body":{"modules/MaterialModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["angular/material/progress",{"_index":1270,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":1314,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1288,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1268,"title":{},"body":{"modules/MaterialModule.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["angular/material/slide",{"_index":1304,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slider",{"_index":1312,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":1292,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tabs",{"_index":1300,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1266,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":1294,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tree",{"_index":1306,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"dependencies.html":{}}}],["annotations",{"_index":2072,"title":{},"body":{"license.html":{}}}],["answers",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{}}}],["apache",{"_index":1999,"title":{},"body":{"license.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"index.html":{}}}],["app.component",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["app_initializer",{"_index":575,"title":{},"body":{"modules/CoreModule.html":{}}}],["appcomponent",{"_index":152,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":241,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["appconfigservice",{"_index":237,"title":{"injectables/AppConfigService.html":{}},"body":{"injectables/AppConfigService.html":{},"modules/CoreModule.html":{},"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{},"overview.html":{}}}],["appconfigservice.loadappconfig",{"_index":592,"title":{},"body":{"modules/CoreModule.html":{}}}],["appear",{"_index":2190,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":2068,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":2227,"title":{},"body":{"license.html":{}}}],["applies",{"_index":2137,"title":{},"body":{"license.html":{}}}],["apply",{"_index":2289,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":261,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":298,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appropriate",{"_index":2298,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":2238,"title":{},"body":{"license.html":{}}}],["approutes",{"_index":319,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":272,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arbitrary",{"_index":640,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["archives",{"_index":2305,"title":{},"body":{"license.html":{}}}],["arguments",{"_index":1791,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["arising",{"_index":2258,"title":{},"body":{"license.html":{}}}],["around",{"_index":1174,"title":{},"body":{"components/HeaderComponent.html":{}}}],["array.from(criteriavalues.get(f.criterionid)).sort(((a",{"_index":982,"title":{},"body":{"injectables/DataService.html":{}}}],["array.from(criteriavalues.get(f.criterionid).values",{"_index":988,"title":{},"body":{"injectables/DataService.html":{}}}],["array.from(filtervalue.value",{"_index":1543,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["array.from(placement.values",{"_index":1682,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["array.from(reviewedcriterion.values).length",{"_index":1548,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["array.from(this.criterioninstance.values",{"_index":663,"title":{},"body":{"components/CriterionComponent.html":{}}}],["array.from(value",{"_index":1394,"title":{},"body":{"pipes/SetToArrayPipe.html":{}}}],["array.from(view.groupings).foreach((grouping",{"_index":1583,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["array.isarray(value",{"_index":739,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["array.pipe",{"_index":1407,"title":{},"body":{"modules/SharedModule.html":{}}}],["array.pipe.ts",{"_index":1388,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"coverage.html":{}}}],["array.pipe.ts:7",{"_index":1392,"title":{},"body":{"pipes/SetToArrayPipe.html":{}}}],["arrow_back_ios",{"_index":1860,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["arrow_forward",{"_index":1836,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["arrow_forward_ios",{"_index":1862,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["arrow_upward",{"_index":415,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["artifacts",{"_index":1977,"title":{},"body":{"index.html":{}}}],["asc",{"_index":1432,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{}}}],["aspect",{"_index":523,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["asserted",{"_index":2287,"title":{},"body":{"license.html":{}}}],["assets/data/framework/criteria.json",{"_index":843,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/filters.json",{"_index":858,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/frameworks.json",{"_index":852,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/groupings.json",{"_index":845,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/view",{"_index":849,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/views.json",{"_index":847,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/info/resources.json",{"_index":860,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/platforms",{"_index":856,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/platforms/platforms.json",{"_index":854,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/images/vendor/logo",{"_index":1250,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["associated",{"_index":2242,"title":{},"body":{"license.html":{}}}],["assume",{"_index":2240,"title":{},"body":{"license.html":{}}}],["attach",{"_index":2290,"title":{},"body":{"license.html":{}}}],["attached",{"_index":2067,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":1960,"title":{},"body":{"index.html":{}}}],["attribution",{"_index":2178,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":2018,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":2062,"title":{},"body":{"license.html":{}}}],["auto",{"_index":362,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["automatically",{"_index":1969,"title":{},"body":{"index.html":{}}}],["available",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{},"modules.html":{}}}],["aws",{"_index":531,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["b",{"_index":983,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["b5ca8f",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{}}}],["b[sort.property",{"_index":1513,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["backend",{"_index":867,"title":{},"body":{"injectables/DataService.html":{}}}],["background",{"_index":354,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["banner",{"_index":332,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner'},{'name",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["banner.component.html",{"_index":334,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner.component.scss",{"_index":333,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__description",{"_index":375,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__heading",{"_index":365,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__quick",{"_index":379,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__summary",{"_index":377,"title":{},"body":{"components/BannerComponent.html":{}}}],["bannercomponent",{"_index":154,"title":{"components/BannerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["based",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["basis",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["behalf",{"_index":2087,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":616,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["behaviorsubject",{"_index":1423,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject(0",{"_index":1436,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject(initialquery",{"_index":1452,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject(undefined",{"_index":1454,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject>(initialsort",{"_index":1450,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behind",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["below",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["beneficial",{"_index":2045,"title":{},"body":{"license.html":{}}}],["beta.33",{"_index":1930,"title":{},"body":{"dependencies.html":{}}}],["bg",{"_index":454,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{}}}],["bind",{"_index":2079,"title":{},"body":{"license.html":{}}}],["block",{"_index":669,"title":{},"body":{"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["block__filter",{"_index":749,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["blockicon",{"_index":604,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["blockname",{"_index":603,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["blog",{"_index":1208,"title":{},"body":{"interfaces/InfoResourceSection.html":{}}}],["body",{"_index":751,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["boilerplate",{"_index":2291,"title":{},"body":{"license.html":{}}}],["bool",{"_index":626,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"pipes/YesNoPipe.html":{}}}],["bootstrap",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}],["border",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["bottom",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["bottomnav",{"_index":1787,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["bottomnavcomponent",{"_index":156,"title":{"components/BottomNavComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["box",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["brackets",{"_index":2294,"title":{},"body":{"license.html":{}}}],["breadcrumbs",{"_index":513,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["break",{"_index":1116,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["browse",{"_index":353,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"modules.html":{}}}],["browser",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"components/TechnologiesComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":307,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["browsing",{"_index":1949,"title":{},"body":{"index.html":{}}}],["browsingmode",{"_index":1613,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["build",{"_index":1950,"title":{},"body":{"index.html":{}}}],["buildgroupings",{"_index":760,"title":{},"body":{"injectables/DataService.html":{}}}],["buildgroupings(data",{"_index":783,"title":{},"body":{"injectables/DataService.html":{}}}],["button",{"_index":754,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["buttons",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{}}}],["c",{"_index":884,"title":{},"body":{"injectables/DataService.html":{},"components/TechnologiesComponent.html":{}}}],["c.colspan",{"_index":1590,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["c.criterionid",{"_index":1678,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["c.default",{"_index":905,"title":{},"body":{"injectables/DataService.html":{}}}],["c.description",{"_index":904,"title":{},"body":{"injectables/DataService.html":{}}}],["c.displayname",{"_index":1859,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["c.id",{"_index":883,"title":{},"body":{"injectables/DataService.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["c.name",{"_index":903,"title":{},"body":{"injectables/DataService.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["c.technologycategory.tolocalelowercase",{"_index":964,"title":{},"body":{"injectables/DataService.html":{}}}],["c.viewids.foreach(id",{"_index":906,"title":{},"body":{"injectables/DataService.html":{}}}],["canfilter",{"_index":1749,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["canfilter(filtervalue",{"_index":1514,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["card",{"_index":1135,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["carry",{"_index":2170,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":828,"title":{},"body":{"injectables/DataService.html":{}}}],["catcherror(dataservice.handleerror",{"_index":876,"title":{},"body":{"injectables/DataService.html":{}}}],["categories",{"_index":1206,"title":{},"body":{"interfaces/InfoResourceSection.html":{}}}],["category",{"_index":484,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{}}}],["category.tolocalelowercase",{"_index":931,"title":{},"body":{"injectables/DataService.html":{}}}],["cause",{"_index":2034,"title":{},"body":{"license.html":{}}}],["ccc",{"_index":1584,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["cell",{"_index":1867,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["center",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["change",{"_index":1971,"title":{},"body":{"index.html":{}}}],["changed",{"_index":2174,"title":{},"body":{"license.html":{}}}],["changedetection",{"_index":1609,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectionstrategy",{"_index":1648,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1610,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectorref",{"_index":1621,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectorref.detectchanges",{"_index":1656,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["character",{"_index":2257,"title":{},"body":{"license.html":{}}}],["charge",{"_index":2121,"title":{},"body":{"license.html":{}}}],["check",{"_index":1996,"title":{},"body":{"index.html":{}}}],["check_circle",{"_index":341,"title":{},"body":{"components/BannerComponent.html":{}}}],["checkboxes",{"_index":638,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["checkrouterevent",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["checkrouterevent(e",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["child",{"_index":159,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["child(even",{"_index":1873,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["childgroupingcomponent",{"_index":158,"title":{"components/ChildGroupingComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["children",{"_index":1240,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["choose",{"_index":336,"title":{},"body":{"components/BannerComponent.html":{},"license.html":{}}}],["choosing",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{}}}],["chosenvalue",{"_index":1547,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["chosenvalues",{"_index":1550,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["chosenvalues.indexof(value",{"_index":1554,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["chosenvalues.length",{"_index":1551,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["claim",{"_index":2149,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2139,"title":{},"body":{"license.html":{}}}],["class",{"_index":26,"title":{"classes/AppPage.html":{},"classes/CriterionValue.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"classes/TableColumn.html":{},"classes/TechnologyDataSource.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"license.html":{}}}],["class=\"criterion__value",{"_index":672,"title":{},"body":{"components/CriterionComponent.html":{}}}],["class=\"sidenav__filter",{"_index":1696,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["classes",{"_index":299,"title":{},"body":{"classes/AppPage.html":{},"classes/CriterionValue.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"classes/TableColumn.html":{},"classes/TechnologyDataSource.html":{},"overview.html":{}}}],["classification",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"index.html":{}}}],["classificationcriterion",{"_index":464,"title":{"interfaces/ClassificationCriterion.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["classificationframework",{"_index":483,"title":{"interfaces/ClassificationFramework.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["classificationframeworkresponse",{"_index":551,"title":{"interfaces/ClassificationFrameworkResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["classifications",{"_index":497,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["classificationview",{"_index":501,"title":{"interfaces/ClassificationView.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"coverage.html":{}}}],["classificationviewcombination",{"_index":489,"title":{"interfaces/ClassificationViewCombination.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["classificationviewcombinationresponse",{"_index":557,"title":{"interfaces/ClassificationViewCombinationResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["classificationviewresponse",{"_index":559,"title":{"interfaces/ClassificationViewResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["classificationviews",{"_index":568,"title":{},"body":{"interfaces/ClassificationViewCombination.html":{}}}],["classificationviews]{@link",{"_index":500,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["classified",{"_index":468,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["clear",{"_index":748,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["clearfilter",{"_index":695,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["cli",{"_index":1994,"title":{},"body":{"index.html":{}}}],["click",{"_index":1702,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["close",{"_index":1695,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["cloud",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{}}}],["cloud_done",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["cluster_appmodule",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":569,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":570,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_informationmodule",{"_index":1225,"title":{},"body":{"modules/InformationModule.html":{},"overview.html":{}}}],["cluster_informationmodule_declarations",{"_index":1226,"title":{},"body":{"modules/InformationModule.html":{},"overview.html":{}}}],["cluster_informationmodule_imports",{"_index":1227,"title":{},"body":{"modules/InformationModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1395,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1396,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1397,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":1398,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_technologiesmodule",{"_index":1721,"title":{},"body":{"modules/TechnologiesModule.html":{},"overview.html":{}}}],["cluster_technologiesmodule_declarations",{"_index":1723,"title":{},"body":{"modules/TechnologiesModule.html":{},"overview.html":{}}}],["cluster_technologiesmodule_imports",{"_index":1722,"title":{},"body":{"modules/TechnologiesModule.html":{},"overview.html":{}}}],["code",{"_index":869,"title":{},"body":{"injectables/DataService.html":{},"index.html":{},"license.html":{}}}],["collected",{"_index":530,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"index.html":{}}}],["color",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["color.service",{"_index":586,"title":{},"body":{"modules/CoreModule.html":{}}}],["color.service.ts",{"_index":1351,"title":{},"body":{"injectables/RandomColorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["color.service.ts:11",{"_index":1360,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["color.service.ts:6",{"_index":1353,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["color:string",{"_index":1592,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["colspan",{"_index":1559,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["column",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["columns",{"_index":1326,"title":{},"body":{"components/OverviewComponent.html":{}}}],["columnstodisplay",{"_index":1578,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["combination",{"_index":496,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"license.html":{}}}],["combination.views.add(view",{"_index":908,"title":{},"body":{"injectables/DataService.html":{}}}],["combinations",{"_index":556,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["combinations.json",{"_index":850,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["combinelatest",{"_index":825,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["combinelatest([this.criteriabasedquery",{"_index":1456,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["combinelatest([this.filtereddata",{"_index":1466,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["combining",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologiesComponent.html":{}}}],["combs.find(c",{"_index":1008,"title":{},"body":{"injectables/DataService.html":{}}}],["combs.find(v",{"_index":921,"title":{},"body":{"injectables/DataService.html":{}}}],["comment",{"_index":550,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"license.html":{}}}],["commercial",{"_index":1321,"title":{},"body":{"components/OverviewComponent.html":{},"license.html":{}}}],["common",{"_index":2027,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":577,"title":{},"body":{"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{}}}],["communication",{"_index":2091,"title":{},"body":{"license.html":{}}}],["community.github",{"_index":519,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["comparison",{"_index":1746,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["compiled",{"_index":2059,"title":{},"body":{"license.html":{}}}],["completewords",{"_index":1878,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["compliance",{"_index":2308,"title":{},"body":{"license.html":{}}}],["complies",{"_index":2201,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"overview.html":{}}}],["comprises",{"_index":499,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["comprising",{"_index":493,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["computer",{"_index":2263,"title":{},"body":{"license.html":{}}}],["concat(extension.png",{"_index":1253,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["concat(grouping.name",{"_index":1689,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["concat(logolocator",{"_index":1252,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["concerning",{"_index":1058,"title":{},"body":{"components/FooterComponent.html":{}}}],["conditions",{"_index":2006,"title":{},"body":{"license.html":{}}}],["conducted",{"_index":537,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["conf.find(c",{"_index":963,"title":{},"body":{"injectables/DataService.html":{}}}],["config",{"_index":1141,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["config.service",{"_index":588,"title":{},"body":{"modules/CoreModule.html":{},"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["config.service.ts",{"_index":240,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["config.service.ts:11",{"_index":249,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:19",{"_index":251,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:6",{"_index":247,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configuration",{"_index":608,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["confirming",{"_index":547,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["connect",{"_index":1418,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["consequential",{"_index":2256,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":2277,"title":{},"body":{"license.html":{}}}],["console.error(err",{"_index":872,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log('found",{"_index":1509,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["console.log('new",{"_index":1485,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["console.log(nextquery",{"_index":1487,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["conspicuously",{"_index":2104,"title":{},"body":{"license.html":{}}}],["const",{"_index":318,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DataService.html":{},"modules/InformationRoutingModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["constitutes",{"_index":2153,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["constructor(@optional",{"_index":594,"title":{},"body":{"modules/CoreModule.html":{}}}],["constructor(data",{"_index":1444,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["constructor(dataservice",{"_index":1149,"title":{},"body":{"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["constructor(fb",{"_index":698,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["constructor(http",{"_index":245,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{}}}],["constructor(private",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["constructor(route",{"_index":1083,"title":{},"body":{"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["constructor(router",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(targetmodule",{"_index":1031,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["constructor(viewportscroller",{"_index":399,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["construed",{"_index":2197,"title":{},"body":{"license.html":{}}}],["contact",{"_index":1167,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contain",{"_index":470,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["contained",{"_index":637,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["container",{"_index":1705,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["containing",{"_index":529,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["containsall",{"_index":641,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["containsany",{"_index":639,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["containsany(filtervalue",{"_index":1546,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["containsone",{"_index":635,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["containsone(filtervalue",{"_index":1549,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["content",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["contents",{"_index":2191,"title":{},"body":{"license.html":{}}}],["context",{"_index":1919,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":2036,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":2081,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":2143,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":2203,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2108,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":2154,"title":{},"body":{"license.html":{}}}],["control",{"_index":2024,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":2025,"title":{},"body":{"license.html":{}}}],["controls",{"_index":720,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["controls.push(this.fb.control(false",{"_index":723,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["conversions",{"_index":2060,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2160,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2167,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2015,"title":{},"body":{"license.html":{}}}],["core/core.module",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/app",{"_index":1157,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["core/services/data.service",{"_index":1156,"title":{},"body":{"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["coremodule",{"_index":273,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["corresponding",{"_index":1703,"title":{},"body":{"components/TechnologiesComponent.html":{},"index.html":{}}}],["count",{"_index":1356,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["counter",{"_index":1594,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["counterclaim",{"_index":2150,"title":{},"body":{"license.html":{}}}],["cover",{"_index":359,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{}}}],["coverage",{"_index":1889,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["criteria",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["criteria.has(id",{"_index":1022,"title":{},"body":{"injectables/DataService.html":{}}}],["criteriabasedquery",{"_index":597,"title":{"interfaces/CriteriaBasedQuery.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["criteriacolumns",{"_index":1574,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["criteriafilterlookup",{"_index":1676,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["criteriagrouping",{"_index":442,"title":{"interfaces/CriteriaGrouping.html":{}},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["criteriagroupingresponse",{"_index":561,"title":{"interfaces/CriteriaGroupingResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["criteriagroupingspath",{"_index":844,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["criteriaids",{"_index":563,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["criterialookup",{"_index":881,"title":{},"body":{"injectables/DataService.html":{}}}],["criteriapath",{"_index":842,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["criteriaquery",{"_index":1461,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criteriareview",{"_index":566,"title":{"interfaces/CriteriaReview.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["criteriavalues",{"_index":968,"title":{},"body":{"injectables/DataService.html":{}}}],["criteriavalues.get(key",{"_index":973,"title":{},"body":{"injectables/DataService.html":{}}}],["criteriavalues.set(key",{"_index":976,"title":{},"body":{"injectables/DataService.html":{}}}],["criterion",{"_index":164,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["criterion'},{'name",{"_index":162,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["criterion.component.html",{"_index":646,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion.component.scss",{"_index":645,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion.description",{"_index":664,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion.examplevalues",{"_index":666,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion/criterion.component",{"_index":1408,"title":{},"body":{"modules/SharedModule.html":{}}}],["criterion__heading",{"_index":676,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__icon",{"_index":683,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__reference",{"_index":684,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__title",{"_index":677,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__value",{"_index":679,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterioncomponent",{"_index":161,"title":{"components/CriterionComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["criterionfiltercomponent",{"_index":163,"title":{"components/CriterionFilterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["criterionfilterconfiguration",{"_index":606,"title":{"interfaces/CriterionFilterConfiguration.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["criterionfiltertype",{"_index":619,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["criterionfiltertype.bool",{"_index":987,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.containsall",{"_index":1517,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.containsany",{"_index":1521,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.containsone",{"_index":1518,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.excludesall",{"_index":1519,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.lte",{"_index":980,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltervalue",{"_index":600,"title":{"interfaces/CriterionFilterValue.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["criterionid",{"_index":533,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["criterioninstance",{"_index":448,"title":{"interfaces/CriterionInstance.html":{}},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["criterioninstance.values.foreach(v",{"_index":974,"title":{},"body":{"injectables/DataService.html":{}}}],["criterionvalue",{"_index":534,"title":{"classes/CriterionValue.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"coverage.html":{}}}],["cross",{"_index":2148,"title":{},"body":{"license.html":{}}}],["current",{"_index":1683,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["current.filters.push(config",{"_index":1692,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["currentindex",{"_index":1440,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["cursor",{"_index":1137,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyListComponent.html":{}}}],["custom",{"_index":512,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["customary",{"_index":2222,"title":{},"body":{"license.html":{}}}],["d.reviewedcriteria.foreach((criterioninstance",{"_index":970,"title":{},"body":{"injectables/DataService.html":{}}}],["damages",{"_index":2253,"title":{},"body":{"license.html":{}}}],["data",{"_index":258,"title":{},"body":{"injectables/AppConfigService.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"index.html":{}}}],["data.filter(platform",{"_index":1499,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["data.foreach(g",{"_index":1018,"title":{},"body":{"injectables/DataService.html":{}}}],["data.length",{"_index":1472,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["data.slice(startindex",{"_index":1473,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["data['resolveddata",{"_index":1090,"title":{},"body":{"components/FrameworkComponent.html":{},"components/ResourcesComponent.html":{}}}],["data['resolveddata'][0",{"_index":1663,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["data['resolveddata'][1",{"_index":1667,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["data['resolveddata'][2",{"_index":1669,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["dataservice",{"_index":571,"title":{"injectables/DataService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{},"overview.html":{}}}],["datasource",{"_index":1417,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["date",{"_index":536,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"license.html":{}}}],["declarations",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}],["declare",{"_index":1363,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["decoration",{"_index":685,"title":{},"body":{"components/CriterionComponent.html":{}}}],["decorators",{"_index":1643,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["dedicated",{"_index":610,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["default",{"_index":407,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["defaultcategory",{"_index":1158,"title":{},"body":{"guards/FrameworkResolver.html":{}}}],["defaulttechcategory",{"_index":244,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["defend",{"_index":2283,"title":{},"body":{"license.html":{}}}],["defined",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"license.html":{}}}],["defines",{"_index":609,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["definition",{"_index":2029,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":2009,"title":{},"body":{"license.html":{}}}],["delete",{"_index":1533,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["deliberate",{"_index":2248,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":263,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":590,"title":{},"body":{"modules/CoreModule.html":{}}}],["derivative",{"_index":2069,"title":{},"body":{"license.html":{}}}],["derived",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["desc",{"_index":1433,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["describe",{"_index":521,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["describing",{"_index":549,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"license.html":{}}}],["description",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"license.html":{}}}],["designated",{"_index":2106,"title":{},"body":{"license.html":{}}}],["desired",{"_index":614,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["detailed",{"_index":1701,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["details",{"_index":1133,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["details'},{'name",{"_index":190,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["details.component",{"_index":1730,"title":{},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["details.component.html",{"_index":1786,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.scss",{"_index":1785,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts",{"_index":1784,"title":{},"body":{"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1796,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:15",{"_index":1798,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:16",{"_index":1797,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":1790,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":1794,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:32",{"_index":1793,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details/technology",{"_index":1729,"title":{},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["determining",{"_index":2237,"title":{},"body":{"license.html":{}}}],["dev",{"_index":1966,"title":{},"body":{"index.html":{}}}],["development",{"_index":1962,"title":{},"body":{"index.html":{}}}],["different",{"_index":494,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["direct",{"_index":2032,"title":{},"body":{"license.html":{}}}],["direction",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/FooterComponent.html":{},"components/OverviewComponent.html":{},"license.html":{}}}],["directive",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["directives",{"_index":195,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1975,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1980,"title":{},"body":{"index.html":{}}}],["disclaimer",{"_index":2225,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":1419,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["discussing",{"_index":2101,"title":{},"body":{"license.html":{}}}],["display",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["display:table",{"_index":1868,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["displayname",{"_index":617,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TableColumn.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyTableComponent.html":{}}}],["dist",{"_index":1979,"title":{},"body":{"index.html":{}}}],["distinctvalues",{"_index":971,"title":{},"body":{"injectables/DataService.html":{}}}],["distinctvalues.add(v.value",{"_index":975,"title":{},"body":{"injectables/DataService.html":{}}}],["distribute",{"_index":2129,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2184,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":2008,"title":{},"body":{"license.html":{}}}],["divider",{"_index":680,"title":{},"body":{"components/CriterionComponent.html":{}}}],["docs",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{}}}],["document",{"_index":2013,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["don't",{"_index":2297,"title":{},"body":{"license.html":{}}}],["dossier",{"_index":946,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["dossierpath",{"_index":950,"title":{},"body":{"injectables/DataService.html":{}}}],["dossiers",{"_index":967,"title":{},"body":{"injectables/DataService.html":{}}}],["dossiers.foreach(d",{"_index":969,"title":{},"body":{"injectables/DataService.html":{}}}],["dossierspath",{"_index":855,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dossierspath.concat(technologyid",{"_index":951,"title":{},"body":{"injectables/DataService.html":{}}}],["dynamic",{"_index":1932,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["e.g",{"_index":511,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["e2e",{"_index":1991,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":300,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":305,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":303,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":2114,"title":{},"body":{"license.html":{}}}],["ease",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{}}}],["easier",{"_index":2303,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":2070,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":2073,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":2088,"title":{},"body":{"license.html":{}}}],["element",{"_index":146,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["element(by.css('app",{"_index":308,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":1564,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["elements",{"_index":611,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["ellipsis",{"_index":1880,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["enclosed",{"_index":2293,"title":{},"body":{"license.html":{}}}],["end",{"_index":675,"title":{},"body":{"components/CriterionComponent.html":{},"index.html":{},"license.html":{}}}],["endindex",{"_index":1471,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["ensure",{"_index":579,"title":{},"body":{"modules/CoreModule.html":{}}}],["ensuremoduleloadedonceguard",{"_index":578,"title":{"classes/EnsureModuleLoadedOnceGuard.html":{}},"body":{"modules/CoreModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["entities",{"_index":2023,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2017,"title":{},"body":{"license.html":{}}}],["entry",{"_index":1552,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["entry.value",{"_index":1553,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyTableComponent.html":{}}}],["enum",{"_index":621,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1940,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":631,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["err",{"_index":824,"title":{},"body":{"injectables/DataService.html":{}}}],["err.body?.error",{"_index":871,"title":{},"body":{"injectables/DataService.html":{}}}],["err.error",{"_index":862,"title":{},"body":{"injectables/DataService.html":{}}}],["err.error.message",{"_index":866,"title":{},"body":{"injectables/DataService.html":{}}}],["err.status",{"_index":870,"title":{},"body":{"injectables/DataService.html":{}}}],["error",{"_index":864,"title":{},"body":{"injectables/DataService.html":{}}}],["error(`${targetmodule.constructor.name",{"_index":1035,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["errorevent",{"_index":863,"title":{},"body":{"injectables/DataService.html":{}}}],["errormessage",{"_index":861,"title":{},"body":{"injectables/DataService.html":{}}}],["errors",{"_index":1065,"title":{},"body":{"components/FooterComponent.html":{}}}],["etc",{"_index":1210,"title":{},"body":{"interfaces/InfoResourceSection.html":{}}}],["even",{"_index":2267,"title":{},"body":{"license.html":{}}}],["evenly",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["event",{"_index":1630,"title":{},"body":{"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"license.html":{}}}],["event.pageindex",{"_index":1495,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["event.pagesize",{"_index":1492,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["eventemitter",{"_index":703,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["example",{"_index":476,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"license.html":{}}}],["examples",{"_index":665,"title":{},"body":{"components/CriterionComponent.html":{}}}],["examplevalues",{"_index":473,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["except",{"_index":2131,"title":{},"body":{"license.html":{}}}],["excludesall",{"_index":642,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["excluding",{"_index":2103,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2120,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1988,"title":{},"body":{"index.html":{}}}],["executed",{"_index":2213,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":2243,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":2047,"title":{},"body":{"license.html":{}}}],["existing",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{}}}],["explicitly",{"_index":2205,"title":{},"body":{"license.html":{}}}],["explore",{"_index":338,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{}}}],["export",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["exports",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":2230,"title":{},"body":{"license.html":{}}}],["extends",{"_index":593,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["extensible",{"_index":350,"title":{},"body":{"components/BannerComponent.html":{}}}],["extension",{"_index":1254,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["extracriteriontitle",{"_index":434,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["extractgroupings",{"_index":1617,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["extratitletext",{"_index":647,"title":{},"body":{"components/CriterionComponent.html":{}}}],["f",{"_index":924,"title":{},"body":{"injectables/DataService.html":{}}}],["f.description",{"_index":918,"title":{},"body":{"injectables/DataService.html":{}}}],["f.filtertype",{"_index":979,"title":{},"body":{"injectables/DataService.html":{}}}],["f.filtervalues",{"_index":984,"title":{},"body":{"injectables/DataService.html":{}}}],["f.find(item",{"_index":929,"title":{},"body":{"injectables/DataService.html":{}}}],["f.id",{"_index":915,"title":{},"body":{"injectables/DataService.html":{}}}],["f.name",{"_index":917,"title":{},"body":{"injectables/DataService.html":{}}}],["f.technologycategory",{"_index":916,"title":{},"body":{"injectables/DataService.html":{}}}],["f.viewcombinationids.foreach(id",{"_index":919,"title":{},"body":{"injectables/DataService.html":{}}}],["faas",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["faastener",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["failure",{"_index":2264,"title":{},"body":{"license.html":{}}}],["false",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["faq",{"_index":1038,"title":{},"body":{"components/FaqComponent.html":{},"modules/InformationRoutingModule.html":{}}}],["faq'},{'name",{"_index":167,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["faq.component.html",{"_index":1040,"title":{},"body":{"components/FaqComponent.html":{}}}],["faq.component.scss",{"_index":1039,"title":{},"body":{"components/FaqComponent.html":{}}}],["faq/faq.component",{"_index":1231,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["faqcomponent",{"_index":166,"title":{"components/FaqComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["faults",{"_index":1052,"title":{},"body":{"components/FooterComponent.html":{}}}],["fb",{"_index":701,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{}}}],["features",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{}}}],["fee",{"_index":2271,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1750,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["fetch(event",{"_index":1491,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["fff",{"_index":1168,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ffffff",{"_index":363,"title":{},"body":{"components/BannerComponent.html":{},"components/FooterComponent.html":{}}}],["field",{"_index":1282,"title":{},"body":{"modules/MaterialModule.html":{},"components/TechnologyListComponent.html":{}}}],["fields",{"_index":2292,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":2040,"title":{},"body":{"license.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":2158,"title":{},"body":{"license.html":{}}}],["files",{"_index":1972,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":607,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filter'},{'name",{"_index":165,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["filter.component",{"_index":1733,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["filter.component.html",{"_index":692,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.scss",{"_index":691,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts",{"_index":690,"title":{},"body":{"components/CriterionFilterComponent.html":{},"coverage.html":{}}}],["filter.component.ts:11",{"_index":702,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:12",{"_index":704,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:14",{"_index":709,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:15",{"_index":700,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:20",{"_index":706,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:67",{"_index":705,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.displayname",{"_index":747,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.filters.foreach((f",{"_index":978,"title":{},"body":{"injectables/DataService.html":{}}}],["filter/criterion",{"_index":689,"title":{},"body":{"components/CriterionFilterComponent.html":{},"modules/TechnologiesModule.html":{},"coverage.html":{}}}],["filter_alt",{"_index":1704,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterblock.blockicon",{"_index":1697,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterblock.blockname",{"_index":1698,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterconfiguration",{"_index":1570,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["filterconfigurationspath",{"_index":857,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filtereddata",{"_index":1442,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filterelement",{"_index":693,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filterid",{"_index":613,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["filtering",{"_index":615,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["filteringresult",{"_index":1505,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filterlookup",{"_index":1632,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterlookup.get(c.id",{"_index":1691,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filters",{"_index":605,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["filtertype",{"_index":618,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["filtervalue",{"_index":1770,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["filtervalue.filtertype",{"_index":1515,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filtervalue.value",{"_index":1516,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filtervalues",{"_index":620,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["find",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{}}}],["first",{"_index":1142,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["fit",{"_index":1335,"title":{},"body":{"components/OverviewComponent.html":{}}}],["fitness",{"_index":2234,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1982,"title":{},"body":{"index.html":{}}}],["flat",{"_index":1128,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["flex",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["flexlayoutmodule",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["flow",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["following",{"_index":2164,"title":{},"body":{"license.html":{}}}],["font",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["footer",{"_index":1045,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":169,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["footer.component.html",{"_index":1047,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1046,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":1410,"title":{},"body":{"modules/SharedModule.html":{}}}],["footer__heading",{"_index":1072,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer__section",{"_index":1070,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":168,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forkjoin",{"_index":1738,"title":{},"body":{"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["forkjoin([technologies",{"_index":1742,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["form",{"_index":1747,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"license.html":{}}}],["format",{"_index":1358,"title":{},"body":{"injectables/RandomColorService.html":{},"license.html":{}}}],["formbuilder",{"_index":699,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{}}}],["formcontrol",{"_index":707,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["formgroup",{"_index":708,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["forming",{"_index":471,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["formsmodule",{"_index":1404,"title":{},"body":{"modules/SharedModule.html":{}}}],["found",{"_index":1344,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":183,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["found.component",{"_index":317,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["found.component.css",{"_index":1345,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":1346,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1343,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":1348,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":1347,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":316,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["framework",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"index.html":{}}}],["framework'},{'name",{"_index":171,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["framework.component.html",{"_index":1082,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["framework.component.scss",{"_index":1081,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["framework.description",{"_index":1126,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework.name",{"_index":1125,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework.viewcombinationids",{"_index":1001,"title":{},"body":{"injectables/DataService.html":{}}}],["framework.viewcombinations.add(viewcombination",{"_index":922,"title":{},"body":{"injectables/DataService.html":{}}}],["framework/framework.component",{"_index":1236,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["framework__grouping",{"_index":1132,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework__info",{"_index":1130,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework__root",{"_index":1131,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework__view",{"_index":1140,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["frameworkcomponent",{"_index":170,"title":{"components/FrameworkComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["frameworkid",{"_index":789,"title":{},"body":{"injectables/DataService.html":{}}}],["frameworkrenderercomponent",{"_index":172,"title":{"components/FrameworkRendererComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["frameworkresolver",{"_index":1144,"title":{"guards/FrameworkResolver.html":{}},"body":{"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["frameworks",{"_index":913,"title":{},"body":{"injectables/DataService.html":{}}}],["frameworks.find(f",{"_index":925,"title":{},"body":{"injectables/DataService.html":{}}}],["frameworks.foreach(f",{"_index":914,"title":{},"body":{"injectables/DataService.html":{}}}],["frameworkspath",{"_index":851,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frameworkviewcombinationspath",{"_index":848,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frameworkviewspath",{"_index":846,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":2123,"title":{},"body":{"license.html":{}}}],["full",{"_index":323,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{}}}],["function",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"index.html":{}}}],["further",{"_index":1992,"title":{},"body":{"index.html":{}}}],["future",{"_index":516,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["fws",{"_index":995,"title":{},"body":{"injectables/DataService.html":{}}}],["fws.find(f",{"_index":1000,"title":{},"body":{"injectables/DataService.html":{}}}],["g",{"_index":1013,"title":{},"body":{"injectables/DataService.html":{}}}],["g.criteriaids",{"_index":1020,"title":{},"body":{"injectables/DataService.html":{}}}],["g.criteriaids.foreach(id",{"_index":1021,"title":{},"body":{"injectables/DataService.html":{}}}],["g.id",{"_index":1012,"title":{},"body":{"injectables/DataService.html":{}}}],["g.locator",{"_index":1025,"title":{},"body":{"injectables/DataService.html":{}}}],["g.name",{"_index":450,"title":{},"body":{"components/ChildGroupingComponent.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{}}}],["g.parentid",{"_index":1026,"title":{},"body":{"injectables/DataService.html":{}}}],["gap",{"_index":1329,"title":{},"body":{"components/OverviewComponent.html":{}}}],["generate",{"_index":1974,"title":{},"body":{"index.html":{}}}],["generated",{"_index":623,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["generatefilterstructure",{"_index":1618,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["generategroupingcolumns",{"_index":1844,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["generategroupingcolumns(grouping",{"_index":1591,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["generation",{"_index":514,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["generic",{"_index":539,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["getcriteria",{"_index":761,"title":{},"body":{"injectables/DataService.html":{}}}],["getdefaulttechcategory",{"_index":250,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getdefaultviewcombinationdata",{"_index":762,"title":{},"body":{"injectables/DataService.html":{}}}],["getdefaultviewcombinationdata(frameworkid",{"_index":787,"title":{},"body":{"injectables/DataService.html":{}}}],["getdossier",{"_index":763,"title":{},"body":{"injectables/DataService.html":{}}}],["getdossier(technologyid",{"_index":790,"title":{},"body":{"injectables/DataService.html":{}}}],["getdossiersofcategory",{"_index":764,"title":{},"body":{"injectables/DataService.html":{}}}],["getdossiersofcategory(category",{"_index":793,"title":{},"body":{"injectables/DataService.html":{}}}],["getfilteringresult",{"_index":1751,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["getfilteringresult(filtervalue",{"_index":1535,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["getframeworkforcategory",{"_index":765,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkforcategory(techcategory",{"_index":795,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkfortechnologytype",{"_index":766,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkfortechnologytype(category",{"_index":798,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkgroupingsdata",{"_index":767,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkgroupingsdata(frameworkid",{"_index":800,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworks",{"_index":768,"title":{},"body":{"injectables/DataService.html":{}}}],["getgroupings",{"_index":769,"title":{},"body":{"injectables/DataService.html":{}}}],["getinforesources",{"_index":770,"title":{},"body":{"injectables/DataService.html":{}}}],["getlogopath",{"_index":1246,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["getlogopath(logolocator",{"_index":1248,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["getrandomcolor",{"_index":1352,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["getrandomcolor(hue",{"_index":1354,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["gettechnologies",{"_index":771,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologies(withdossier",{"_index":805,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologiesofcategory",{"_index":772,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologiesofcategory(category",{"_index":808,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnology",{"_index":773,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnology(id",{"_index":810,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologyfilter",{"_index":774,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologyfilter(category",{"_index":812,"title":{},"body":{"injectables/DataService.html":{}}}],["getting",{"_index":1944,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettitletext",{"_index":301,"title":{},"body":{"classes/AppPage.html":{}}}],["getviewcombinations",{"_index":775,"title":{},"body":{"injectables/DataService.html":{}}}],["getviewgroupingsdata",{"_index":776,"title":{},"body":{"injectables/DataService.html":{}}}],["getviewgroupingsdata(viewid",{"_index":815,"title":{},"body":{"injectables/DataService.html":{}}}],["getviews",{"_index":777,"title":{},"body":{"injectables/DataService.html":{}}}],["getviewsdata",{"_index":778,"title":{},"body":{"injectables/DataService.html":{}}}],["getviewsdata(viewcombinationid",{"_index":819,"title":{},"body":{"injectables/DataService.html":{}}}],["give",{"_index":2165,"title":{},"body":{"license.html":{}}}],["given",{"_index":540,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["go",{"_index":1995,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":2261,"title":{},"body":{"license.html":{}}}],["governing",{"_index":2313,"title":{},"body":{"license.html":{}}}],["grant",{"_index":2113,"title":{},"body":{"license.html":{}}}],["granted",{"_index":2049,"title":{},"body":{"license.html":{}}}],["granting",{"_index":2019,"title":{},"body":{"license.html":{}}}],["grants",{"_index":2116,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2315,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":1954,"title":{},"body":{"index.html":{}}}],["gray",{"_index":1136,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["greater",{"_index":634,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["grey",{"_index":455,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{}}}],["grid",{"_index":1325,"title":{},"body":{"components/OverviewComponent.html":{}}}],["grid__footer",{"_index":1068,"title":{},"body":{"components/FooterComponent.html":{}}}],["grossly",{"_index":2249,"title":{},"body":{"license.html":{}}}],["group",{"_index":509,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["grouping",{"_index":431,"title":{},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/InfoResourceSection.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping'},{'name",{"_index":160,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.component",{"_index":1406,"title":{},"body":{"modules/SharedModule.html":{}}}],["grouping.component.html",{"_index":433,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.scss",{"_index":432,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts",{"_index":430,"title":{},"body":{"components/ChildGroupingComponent.html":{},"coverage.html":{}}}],["grouping.component.ts:10",{"_index":443,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:11",{"_index":447,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:12",{"_index":444,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:13",{"_index":441,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:14",{"_index":445,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:15",{"_index":440,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.criteria",{"_index":1685,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["grouping.criteria.foreach((c",{"_index":1595,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.criteria.foreach(c",{"_index":1690,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["grouping.criteria.size",{"_index":1686,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["grouping.groupings",{"_index":1602,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.groupings.foreach(g",{"_index":1603,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.id",{"_index":1121,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.name",{"_index":1599,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping/child",{"_index":429,"title":{},"body":{"components/ChildGroupingComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["grouping__criterion",{"_index":461,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{}}}],["grouping__path",{"_index":460,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping__title",{"_index":457,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["groupingcolumnids",{"_index":1576,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns",{"_index":1575,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns.foreach(c",{"_index":1589,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns.length",{"_index":1586,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns.push",{"_index":1600,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingids",{"_index":560,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["groupings",{"_index":435,"title":{},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["groupings]{@link",{"_index":520,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["groupingslookup",{"_index":889,"title":{},"body":{"injectables/DataService.html":{}}}],["groupingslookup.has(id",{"_index":896,"title":{},"body":{"injectables/DataService.html":{}}}],["grow",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["gte",{"_index":633,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["guard",{"_index":1143,"title":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1145,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"overview.html":{}}}],["h.png",{"_index":1179,"title":{},"body":{"components/HeaderComponent.html":{}}}],["handleerror",{"_index":780,"title":{},"body":{"injectables/DataService.html":{}}}],["handleerror(err",{"_index":822,"title":{},"body":{"injectables/DataService.html":{}}}],["harmful",{"_index":1066,"title":{},"body":{"components/FooterComponent.html":{}}}],["harmless",{"_index":2285,"title":{},"body":{"license.html":{}}}],["header",{"_index":1162,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["header'},{'name",{"_index":175,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["header.component.html",{"_index":1164,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1163,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1409,"title":{},"body":{"modules/SharedModule.html":{}}}],["header__logo",{"_index":1176,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__menu",{"_index":1173,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__spacer",{"_index":1175,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__toolbar",{"_index":1172,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":174,"title":{"components/HeaderComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":370,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["help",{"_index":1993,"title":{},"body":{"index.html":{}}}],["helps",{"_index":486,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["hereby",{"_index":2115,"title":{},"body":{"license.html":{}}}],["herein",{"_index":2209,"title":{},"body":{"license.html":{}}}],["hierarchy",{"_index":472,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["high",{"_index":345,"title":{},"body":{"components/BannerComponent.html":{}}}],["hold",{"_index":2284,"title":{},"body":{"license.html":{}}}],["home",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["home.component.html",{"_index":1194,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1193,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/about/about.component",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["home/banner/banner.component",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["home/home.component",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home/overview/overview.component",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["homecomponent",{"_index":176,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["hostlistener",{"_index":1799,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["hostlistener('window:scroll",{"_index":1803,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["hostlisteners",{"_index":1788,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["hover",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{}}}],["html",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["http",{"_index":248,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{}}}],["http://localhost:4200",{"_index":1968,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses",{"_index":2004,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":2310,"title":{},"body":{"license.html":{}}}],["httpclient",{"_index":246,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{}}}],["httpclientmodule",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["hue",{"_index":1361,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["icon",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{},"components/CriterionComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{}}}],["id",{"_index":474,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"classes/TableColumn.html":{},"interfaces/Technology.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyTableComponent.html":{}}}],["identification",{"_index":2304,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":481,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"coverage.html":{}}}],["identifying",{"_index":2296,"title":{},"body":{"license.html":{}}}],["ii",{"_index":2038,"title":{},"body":{"license.html":{}}}],["iii",{"_index":2044,"title":{},"body":{"license.html":{}}}],["img",{"_index":1870,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["implements",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["implied",{"_index":2231,"title":{},"body":{"license.html":{}}}],["import",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"license.html":{}}}],["import(`src/app/information/information.module`).then(m",{"_index":325,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import(`src/app/technologies/technologies.module`).then(m",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["imports",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["improving",{"_index":2102,"title":{},"body":{"license.html":{}}}],["inability",{"_index":2259,"title":{},"body":{"license.html":{}}}],["inaccuracies",{"_index":1063,"title":{},"body":{"components/FooterComponent.html":{}}}],["incidental",{"_index":2255,"title":{},"body":{"license.html":{}}}],["include",{"_index":453,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"license.html":{}}}],["included",{"_index":2066,"title":{},"body":{"license.html":{}}}],["includeframeworkinfo",{"_index":1100,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["includes",{"_index":1320,"title":{},"body":{"components/OverviewComponent.html":{},"license.html":{}}}],["including",{"_index":2053,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":2085,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":2111,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":2286,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":2282,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":2273,"title":{},"body":{"license.html":{}}}],["index",{"_index":204,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":599,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaReview.html":{}}}],["indicated",{"_index":2064,"title":{},"body":{"license.html":{}}}],["indicates",{"_index":502,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["indirect",{"_index":2033,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2046,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["inforesource",{"_index":1198,"title":{"interfaces/InfoResource.html":{}},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"coverage.html":{}}}],["inforesourcesection",{"_index":840,"title":{"interfaces/InfoResourceSection.html":{}},"body":{"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"coverage.html":{}}}],["inforesourcespath",{"_index":859,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"license.html":{}}}],["information'},{'name",{"_index":178,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["information.component",{"_index":1232,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["information.component.html",{"_index":1213,"title":{},"body":{"components/InformationComponent.html":{}}}],["information.component.scss",{"_index":1212,"title":{},"body":{"components/InformationComponent.html":{}}}],["information/resolvers/framework",{"_index":1411,"title":{},"body":{"modules/SharedModule.html":{}}}],["informational",{"_index":2192,"title":{},"body":{"license.html":{}}}],["informationcomponent",{"_index":177,"title":{"components/InformationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["informationmodule",{"_index":1224,"title":{"modules/InformationModule.html":{}},"body":{"modules/InformationModule.html":{},"modules.html":{},"overview.html":{}}}],["informationroutingmodule",{"_index":1228,"title":{"modules/InformationRoutingModule.html":{}},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["inforoutes",{"_index":1239,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["infringed",{"_index":2142,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2155,"title":{},"body":{"license.html":{}}}],["initialize",{"_index":1117,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["initialquery",{"_index":1446,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["initialsort",{"_index":1445,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["initialvalues",{"_index":729,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["initialvalues.filter((x",{"_index":732,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["injectable",{"_index":236,"title":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["injectables",{"_index":238,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"overview.html":{}}}],["inline",{"_index":1719,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["input",{"_index":410,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["inputs",{"_index":397,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["instance",{"_index":478,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["instanceof",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{}}}],["institute",{"_index":2145,"title":{},"body":{"license.html":{}}}],["intended",{"_index":1947,"title":{},"body":{"index.html":{}}}],["intentionally",{"_index":2083,"title":{},"body":{"license.html":{}}}],["interacting",{"_index":1955,"title":{},"body":{"index.html":{}}}],["interface",{"_index":463,"title":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":465,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{},"overview.html":{}}}],["interfaces/classification",{"_index":449,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["interfaces/filtering",{"_index":1427,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["interfaces/technology",{"_index":1425,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["introduced",{"_index":1957,"title":{},"body":{"index.html":{}}}],["irrevocable",{"_index":2124,"title":{},"body":{"license.html":{}}}],["isarrayofstrings(value",{"_index":738,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["ispaginated",{"_index":1438,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["issue",{"_index":2097,"title":{},"body":{"license.html":{}}}],["item",{"_index":378,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/HeaderComponent.html":{}}}],["item.id",{"_index":948,"title":{},"body":{"injectables/DataService.html":{}}}],["item.technologycategory.tolocalelowercase",{"_index":930,"title":{},"body":{"injectables/DataService.html":{}}}],["items",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["items.find(item",{"_index":947,"title":{},"body":{"injectables/DataService.html":{}}}],["items.map",{"_index":934,"title":{},"body":{"injectables/DataService.html":{}}}],["january",{"_index":2002,"title":{},"body":{"license.html":{}}}],["java",{"_index":542,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["jpeg",{"_index":1257,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["jpg",{"_index":1256,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["json",{"_index":667,"title":{},"body":{"components/CriterionComponent.html":{},"injectables/DataService.html":{}}}],["justify",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["karma",{"_index":1990,"title":{},"body":{"index.html":{}}}],["key",{"_index":567,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["keyof",{"_index":1430,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["keystodelete",{"_index":1524,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["keystodelete.foreach(key",{"_index":1532,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["keystodelete.push(key",{"_index":1528,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["kind",{"_index":1057,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["label",{"_index":1218,"title":{},"body":{"components/InformationComponent.html":{}}}],["lack",{"_index":1061,"title":{},"body":{"components/FooterComponent.html":{}}}],["lambda",{"_index":532,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["language",{"_index":2312,"title":{},"body":{"license.html":{}}}],["lastquery",{"_index":1481,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["lastsort",{"_index":1476,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["law",{"_index":2228,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":2151,"title":{},"body":{"license.html":{}}}],["layout",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["learn",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{}}}],["left",{"_index":686,"title":{},"body":{"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["legal",{"_index":2020,"title":{},"body":{"license.html":{}}}],["legend",{"_index":144,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"modules/CoreModule.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"overview.html":{}}}],["length",{"_index":1831,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["less",{"_index":630,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["level",{"_index":347,"title":{},"body":{"components/BannerComponent.html":{}}}],["liability",{"_index":2244,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2252,"title":{},"body":{"license.html":{}}}],["library_books",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/InformationComponent.html":{}}}],["licensable",{"_index":2140,"title":{},"body":{"license.html":{}}}],["license",{"_index":1998,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":2199,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":2307,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":2156,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":518,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["licensor",{"_index":2014,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1877,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["limit).lastindexof",{"_index":1883,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["limitation",{"_index":2232,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":2314,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2054,"title":{},"body":{"license.html":{}}}],["line",{"_index":369,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionComponent.html":{}}}],["link",{"_index":488,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"components/InformationComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["link.label",{"_index":1220,"title":{},"body":{"components/InformationComponent.html":{}}}],["links",{"_index":380,"title":{},"body":{"components/BannerComponent.html":{}}}],["list",{"_index":382,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"components/HeaderComponent.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["list'},{'name",{"_index":192,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["list.component",{"_index":1728,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["list.component.html",{"_index":1820,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.scss",{"_index":1819,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts",{"_index":1818,"title":{},"body":{"components/TechnologyListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":1824,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts:11",{"_index":1823,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts:16",{"_index":1827,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts:21",{"_index":1825,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list/technology",{"_index":1727,"title":{},"body":{"modules/TechnologiesModule.html":{},"components/TechnologyListComponent.html":{},"coverage.html":{}}}],["list__card",{"_index":1839,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__cards",{"_index":1838,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__explore",{"_index":1842,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__logo",{"_index":1841,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__paginator",{"_index":1843,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__search",{"_index":1837,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["lists",{"_index":2095,"title":{},"body":{"license.html":{}}}],["literal",{"_index":1778,"title":{},"body":{"classes/TechnologyDataSource.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":2146,"title":{},"body":{"license.html":{}}}],["loadappconfig",{"_index":242,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["loadchildren",{"_index":324,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":580,"title":{},"body":{"modules/CoreModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["loading",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["location",{"_index":1217,"title":{},"body":{"components/InformationComponent.html":{}}}],["locator",{"_index":510,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["locator.service",{"_index":584,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DataService.html":{}}}],["locator.service.ts",{"_index":1244,"title":{},"body":{"injectables/LogoLocatorService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["locator.service.ts:10",{"_index":1249,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["locator.service.ts:5",{"_index":1247,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["logo",{"_index":835,"title":{},"body":{"injectables/DataService.html":{}}}],["logolocation",{"_index":935,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["logolocator",{"_index":781,"title":{},"body":{"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["logolocatorservice",{"_index":572,"title":{"injectables/LogoLocatorService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"coverage.html":{},"overview.html":{}}}],["logolocatorservice.platformlogodir",{"_index":1251,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["lookup",{"_index":1017,"title":{},"body":{"injectables/DataService.html":{}}}],["lookup.get(g.parentid).groupings.add(lookup.get(g.id",{"_index":1027,"title":{},"body":{"injectables/DataService.html":{}}}],["lookup.set(g.id",{"_index":1024,"title":{},"body":{"injectables/DataService.html":{}}}],["loss",{"_index":2260,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2266,"title":{},"body":{"license.html":{}}}],["low",{"_index":346,"title":{},"body":{"components/BannerComponent.html":{}}}],["lte",{"_index":629,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["luminosity",{"_index":1355,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["m.informationmodule",{"_index":326,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.technologiesmodule",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["made",{"_index":2063,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":2094,"title":{},"body":{"license.html":{}}}],["main",{"_index":1067,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologiesComponent.html":{}}}],["make",{"_index":2133,"title":{},"body":{"license.html":{}}}],["makes",{"_index":1054,"title":{},"body":{"components/FooterComponent.html":{}}}],["making",{"_index":2051,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":2265,"title":{},"body":{"license.html":{}}}],["managed",{"_index":2099,"title":{},"body":{"license.html":{}}}],["management",{"_index":2035,"title":{},"body":{"license.html":{}}}],["map",{"_index":446,"title":{},"body":{"components/ChildGroupingComponent.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{}}}],["map(([combs",{"_index":912,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([criteria",{"_index":880,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([data",{"_index":1468,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["map(([filter",{"_index":966,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([groupings",{"_index":888,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([items",{"_index":945,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([vcs",{"_index":994,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([views",{"_index":901,"title":{},"body":{"injectables/DataService.html":{}}}],["map((conf",{"_index":962,"title":{},"body":{"injectables/DataService.html":{}}}],["map((f",{"_index":928,"title":{},"body":{"injectables/DataService.html":{}}}],["map((items",{"_index":933,"title":{},"body":{"injectables/DataService.html":{}}}],["map((techs",{"_index":941,"title":{},"body":{"injectables/DataService.html":{}}}],["map(criteria.map(c",{"_index":882,"title":{},"body":{"injectables/DataService.html":{}}}],["map(groupings.map(c",{"_index":890,"title":{},"body":{"injectables/DataService.html":{}}}],["map(groupings.map(g",{"_index":1011,"title":{},"body":{"injectables/DataService.html":{}}}],["map(object.entries(res.reviewedcriteria",{"_index":955,"title":{},"body":{"injectables/DataService.html":{}}}],["map(this.filterconfiguration.filters.map(c",{"_index":1677,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["map(vcs.map(vc",{"_index":997,"title":{},"body":{"injectables/DataService.html":{}}}],["map(views.map(v",{"_index":1006,"title":{},"body":{"injectables/DataService.html":{}}}],["margin",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["marked",{"_index":2105,"title":{},"body":{"license.html":{}}}],["marks",{"_index":2219,"title":{},"body":{"license.html":{}}}],["matautocompletemodule",{"_index":1285,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbottomsheetmodule",{"_index":1308,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":1261,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":1307,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":1274,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcheckboxmodule",{"_index":1301,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":198,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1289,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":1952,"title":{},"body":{"index.html":{}}}],["material.module",{"_index":1402,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodule",{"_index":1259,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1278,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matformfieldmodule",{"_index":1280,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":1276,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":1263,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":1283,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":1272,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":1295,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":1297,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":1269,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":1313,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":1287,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":1567,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["matsidenavmodule",{"_index":1267,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":1311,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":1303,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":1291,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":1299,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":1265,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":1293,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattreemodule",{"_index":1305,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":1077,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["mean",{"_index":2011,"title":{},"body":{"license.html":{}}}],["means",{"_index":2030,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":2056,"title":{},"body":{"license.html":{}}}],["media",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["media.matchmedia('(max",{"_index":1653,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["mediamatcher",{"_index":1622,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["mediaquerylist",{"_index":1641,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["medium",{"_index":2161,"title":{},"body":{"license.html":{}}}],["meet",{"_index":2163,"title":{},"body":{"license.html":{}}}],["menu",{"_index":1166,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu__icon",{"_index":1187,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu__link",{"_index":1180,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu__text",{"_index":1182,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu_book",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"components/InformationComponent.html":{}}}],["merchantability",{"_index":2233,"title":{},"body":{"license.html":{}}}],["merely",{"_index":2078,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":829,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap",{"_index":830,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap((t",{"_index":959,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap((techs",{"_index":957,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap((vc",{"_index":990,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap(v",{"_index":992,"title":{},"body":{"injectables/DataService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"pipes/SetToArrayPipe.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["methods",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["min",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["miscellaneous",{"_index":1939,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mobilequery",{"_index":1614,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["mode",{"_index":1659,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["model",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["modifications",{"_index":2052,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2169,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2193,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":2198,"title":{},"body":{"license.html":{}}}],["module",{"_index":260,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"coverage.html":{},"overview.html":{}}}],["modules",{"_index":262,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"index.html":{},"license.html":{}}}],["moz",{"_index":360,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{}}}],["multi",{"_index":589,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["n/a",{"_index":668,"title":{},"body":{"components/CriterionComponent.html":{}}}],["name",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"index.html":{},"license.html":{}}}],["namebasedquery",{"_index":1437,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["namequery",{"_index":1459,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["names",{"_index":2218,"title":{},"body":{"license.html":{}}}],["nav",{"_index":392,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav'},{'name",{"_index":157,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["nav.component",{"_index":1413,"title":{},"body":{"modules/SharedModule.html":{},"components/TechnologyDetailsComponent.html":{}}}],["nav.component.html",{"_index":394,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.scss",{"_index":393,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts",{"_index":391,"title":{},"body":{"components/BottomNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:10",{"_index":409,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts:11",{"_index":401,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts:16",{"_index":403,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts:19",{"_index":405,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav/bottom",{"_index":390,"title":{},"body":{"components/BottomNavComponent.html":{},"modules/SharedModule.html":{},"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["nav_item",{"_index":1183,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["navbar",{"_index":420,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["navigate",{"_index":1967,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":302,"title":{},"body":{"classes/AppPage.html":{}}}],["navigating",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{}}}],["navigationcancel",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationend",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationerror",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["navlinks",{"_index":1215,"title":{},"body":{"components/InformationComponent.html":{}}}],["necessarily",{"_index":2141,"title":{},"body":{"license.html":{}}}],["needs",{"_index":504,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["negligence",{"_index":2247,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":2250,"title":{},"body":{"license.html":{}}}],["nested",{"_index":462,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["new",{"_index":713,"title":{},"body":{"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":938,"title":{},"body":{"injectables/DataService.html":{}}}],["nextquery",{"_index":1483,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextquery[key",{"_index":1534,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextquery[key].filtertype",{"_index":1526,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextquery[key].value",{"_index":1529,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextsort",{"_index":1478,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["ng",{"_index":1964,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["ngondestroy",{"_index":1370,"title":{},"body":{"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{}}}],["ngoninit",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["no.pipe",{"_index":1414,"title":{},"body":{"modules/SharedModule.html":{}}}],["no.pipe.ts",{"_index":1887,"title":{},"body":{"pipes/YesNoPipe.html":{},"coverage.html":{}}}],["no.pipe.ts:7",{"_index":1888,"title":{},"body":{"pipes/YesNoPipe.html":{}}}],["non",{"_index":2119,"title":{},"body":{"license.html":{}}}],["none",{"_index":427,"title":{},"body":{"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{}}}],["normally",{"_index":2189,"title":{},"body":{"license.html":{}}}],["note",{"_index":548,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["nothing",{"_index":2208,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2065,"title":{},"body":{"license.html":{}}}],["notices",{"_index":2172,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2206,"title":{},"body":{"license.html":{}}}],["nowrap",{"_index":423,"title":{},"body":{"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["null",{"_index":1527,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["number",{"_index":544,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{}}}],["numeric",{"_index":527,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["o",{"_index":361,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{}}}],["obj",{"_index":727,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["obj[this.filter.criterionid",{"_index":728,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["object",{"_index":1334,"title":{},"body":{"components/OverviewComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.keys(criteriaquery).foreach(key",{"_index":1502,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["object.keys(criteriaquery).length",{"_index":1501,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["object.keys(nextquery).foreach(key",{"_index":1525,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["obligations",{"_index":2274,"title":{},"body":{"license.html":{}}}],["observable",{"_index":786,"title":{},"body":{"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"components/OverviewComponent.html":{},"guards/ResourcesResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["obtain",{"_index":2309,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":865,"title":{},"body":{"injectables/DataService.html":{}}}],["of(result",{"_index":1464,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["offer",{"_index":2134,"title":{},"body":{"license.html":{}}}],["official",{"_index":546,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["once.guard",{"_index":581,"title":{},"body":{"modules/CoreModule.html":{}}}],["once.guard.ts",{"_index":1030,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["once.guard.ts:3",{"_index":1032,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["onchanges",{"_index":1649,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["ondestroy",{"_index":1366,"title":{},"body":{"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{}}}],["one",{"_index":339,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"index.html":{},"license.html":{}}}],["ongroupingselected",{"_index":1099,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["ongroupingselected(viewid",{"_index":1110,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["oninit",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["onnamechange",{"_index":1822,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["onnamechange(name",{"_index":1826,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["onqueryupdate",{"_index":1619,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["onqueryupdate($event",{"_index":1628,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["onscrolltotop",{"_index":396,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["onscrolltotop(platformid",{"_index":404,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["onwindowscroll(e",{"_index":1804,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["opacity",{"_index":1337,"title":{},"body":{"components/OverviewComponent.html":{}}}],["open",{"_index":349,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{},"index.html":{}}}],["option.name",{"_index":1810,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["optional",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["options",{"_index":625,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["order",{"_index":1134,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{}}}],["organize",{"_index":490,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["origin",{"_index":2223,"title":{},"body":{"license.html":{}}}],["original",{"_index":2075,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":2037,"title":{},"body":{"license.html":{}}}],["out",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1184,"title":{},"body":{"components/HeaderComponent.html":{}}}],["output",{"_index":710,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["outputs",{"_index":696,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["outstanding",{"_index":2042,"title":{},"body":{"license.html":{}}}],["overflow",{"_index":1864,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["overview",{"_index":1316,"title":{"overview.html":{}},"body":{"components/OverviewComponent.html":{},"overview.html":{}}}],["overview'},{'name",{"_index":180,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["overview.component.html",{"_index":1318,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.scss",{"_index":1317,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overviewcomponent",{"_index":179,"title":{"components/OverviewComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["owner",{"_index":2016,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2039,"title":{},"body":{"license.html":{}}}],["p",{"_index":1523,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["p.platformname",{"_index":1834,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["p.shortdescription",{"_index":1835,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["package",{"_index":1922,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["page",{"_index":182,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["pageevent",{"_index":1426,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["pagenotfoundcomponent",{"_index":181,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagenumber",{"_index":1435,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["pagesize",{"_index":1447,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{}}}],["pagesizeoptions",{"_index":1821,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["paginateddata",{"_index":1443,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["panel",{"_index":1694,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parameters",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["params['browsingmode",{"_index":1660,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parent",{"_index":436,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["parentgroup",{"_index":1634,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parentgroup.concat",{"_index":1688,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parentgroupingname",{"_index":1593,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["parentgroupingname.concat('.').concat(grouping.name",{"_index":1598,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["parentid",{"_index":562,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["parentmodule",{"_index":595,"title":{},"body":{"modules/CoreModule.html":{}}}],["part",{"_index":2180,"title":{},"body":{"license.html":{}}}],["partial",{"_index":1475,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["particular",{"_index":522,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"license.html":{}}}],["party",{"_index":2188,"title":{},"body":{"license.html":{}}}],["patent",{"_index":2130,"title":{},"body":{"license.html":{}}}],["path",{"_index":320,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["pathmatch",{"_index":322,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{}}}],["pattern.png",{"_index":356,"title":{},"body":{"components/BannerComponent.html":{}}}],["percent",{"_index":2041,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1959,"title":{},"body":{"index.html":{},"license.html":{}}}],["permission",{"_index":2216,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":2048,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":2117,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":2179,"title":{},"body":{"license.html":{}}}],["pink",{"_index":1075,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["pipe",{"_index":875,"title":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}},"body":{"injectables/DataService.html":{},"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{}}}],["pipes",{"_index":1386,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1393,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["placement",{"_index":1633,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["placement.get(grouping.name",{"_index":1684,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["placement.set(grouping.name",{"_index":1687,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["places",{"_index":2183,"title":{},"body":{"license.html":{}}}],["platform",{"_index":337,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyDossier.html":{},"components/TechnologyListComponent.html":{},"index.html":{}}}],["platform.description",{"_index":1809,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["platform.platformname",{"_index":1808,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["platform.platformname.tolocalelowercase().includes(namequery",{"_index":1500,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["platformid",{"_index":406,"title":{},"body":{"components/BottomNavComponent.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["platformlogodir",{"_index":1245,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["platformname",{"_index":1666,"title":{},"body":{"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["platformroutes",{"_index":1743,"title":{},"body":{"modules/TechnologiesRoutingModule.html":{}}}],["platforms",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"index.html":{}}}],["platforms__button",{"_index":1331,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__container",{"_index":1323,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__controls",{"_index":1712,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__description",{"_index":1713,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__filter",{"_index":1714,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__header",{"_index":1715,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__item",{"_index":1330,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__logo",{"_index":1332,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__logos",{"_index":1324,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__settings",{"_index":1716,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platform’s",{"_index":1956,"title":{},"body":{"index.html":{}}}],["png",{"_index":1255,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["pointer",{"_index":1138,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyListComponent.html":{}}}],["populaterenderblocks",{"_index":1620,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["populaterenderblocks(grouping",{"_index":1631,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["position",{"_index":417,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["possibility",{"_index":2269,"title":{},"body":{"license.html":{}}}],["possible",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{}}}],["posts",{"_index":1209,"title":{},"body":{"interfaces/InfoResourceSection.html":{}}}],["power",{"_index":2031,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":2050,"title":{},"body":{"license.html":{}}}],["preloadallmodules",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":330,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prepare",{"_index":2126,"title":{},"body":{"license.html":{}}}],["previous",{"_index":972,"title":{},"body":{"injectables/DataService.html":{}}}],["primitive",{"_index":541,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["printed",{"_index":2302,"title":{},"body":{"license.html":{}}}],["private",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{}}}],["processdata",{"_index":1752,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["processdata(data",{"_index":1498,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["prod",{"_index":1981,"title":{},"body":{"index.html":{}}}],["product",{"_index":1051,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["production",{"_index":1983,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":1322,"title":{},"body":{"components/OverviewComponent.html":{}}}],["project",{"_index":1976,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":2171,"title":{},"body":{"license.html":{}}}],["promise",{"_index":304,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["property",{"_index":1429,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{}}}],["prototype",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{}}}],["protractor",{"_index":306,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"modules/CoreModule.html":{},"license.html":{}}}],["provided",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["provider",{"_index":1053,"title":{},"body":{"components/FooterComponent.html":{}}}],["providers",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}],["provides",{"_index":1953,"title":{},"body":{"index.html":{},"license.html":{}}}],["prunequery",{"_index":1753,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["prunequery(nextquery",{"_index":1522,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["public",{"_index":694,"title":{},"body":{"components/CriterionFilterComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["publication",{"_index":1958,"title":{},"body":{"index.html":{}}}],["publications",{"_index":1207,"title":{},"body":{"interfaces/InfoResourceSection.html":{}}}],["publicly",{"_index":2127,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2100,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2028,"title":{},"body":{"license.html":{}}}],["q&a",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{}}}],["query",{"_index":1484,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["querybycriteria",{"_index":1754,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["querybycriteria(query",{"_index":1480,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["querybyname",{"_index":1755,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["querybyname(query",{"_index":1489,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["question_answer",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{}}}],["questions",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{}}}],["radius",{"_index":1710,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["randomcolor",{"_index":1364,"title":{},"body":{"injectables/RandomColorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["randomcolorservice",{"_index":573,"title":{"injectables/RandomColorService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/RandomColorService.html":{},"coverage.html":{},"overview.html":{}}}],["range",{"_index":981,"title":{},"body":{"injectables/DataService.html":{}}}],["range[0",{"_index":985,"title":{},"body":{"injectables/DataService.html":{}}}],["range[range.length",{"_index":986,"title":{},"body":{"injectables/DataService.html":{}}}],["reactiveformsmodule",{"_index":1405,"title":{},"body":{"modules/SharedModule.html":{}}}],["read",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{}}}],["readable",{"_index":2182,"title":{},"body":{"license.html":{}}}],["readme",{"_index":1997,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":1214,"title":{},"body":{"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reason",{"_index":2288,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":2221,"title":{},"body":{"license.html":{}}}],["received",{"_index":2109,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2166,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":2300,"title":{},"body":{"license.html":{}}}],["redirectto",{"_index":321,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{}}}],["redistributing",{"_index":2239,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":2159,"title":{},"body":{"license.html":{}}}],["reference",{"_index":1202,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/ResourcesComponent.html":{}}}],["references",{"_index":545,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["regarding",{"_index":2214,"title":{},"body":{"license.html":{}}}],["related",{"_index":1201,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["relatedcriteria",{"_index":1019,"title":{},"body":{"injectables/DataService.html":{}}}],["relatedcriteria.add(criteria.get(id",{"_index":1023,"title":{},"body":{"injectables/DataService.html":{}}}],["reload",{"_index":1970,"title":{},"body":{"index.html":{}}}],["remain",{"_index":2076,"title":{},"body":{"license.html":{}}}],["remarks",{"_index":624,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["renderedfilter",{"_index":1615,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["renderedfilterblock",{"_index":602,"title":{"interfaces/RenderedFilterBlock.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["renderer",{"_index":1094,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer'},{'name",{"_index":173,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["renderer.component",{"_index":1412,"title":{},"body":{"modules/SharedModule.html":{}}}],["renderer.component.html",{"_index":1096,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.scss",{"_index":1095,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts",{"_index":1093,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"coverage.html":{}}}],["renderer.component.ts:12",{"_index":1104,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:13",{"_index":1105,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:14",{"_index":1108,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:15",{"_index":1103,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:16",{"_index":1106,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:17",{"_index":1107,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:19",{"_index":1112,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:20",{"_index":1102,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:25",{"_index":1109,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:38",{"_index":1111,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer/framework",{"_index":1092,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["rendering",{"_index":507,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["renderreviewdata",{"_index":437,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["renderreviewdata]=\"renderreviewdata",{"_index":451,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["repeat",{"_index":357,"title":{},"body":{"components/BannerComponent.html":{}}}],["repeat(4",{"_index":1327,"title":{},"body":{"components/OverviewComponent.html":{}}}],["repeat(5",{"_index":1340,"title":{},"body":{"components/OverviewComponent.html":{}}}],["replaced",{"_index":2295,"title":{},"body":{"license.html":{}}}],["represent",{"_index":1205,"title":{},"body":{"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["representation",{"_index":491,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["representations",{"_index":1055,"title":{},"body":{"components/FooterComponent.html":{}}}],["representatives",{"_index":2093,"title":{},"body":{"license.html":{}}}],["representing",{"_index":467,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["reproduce",{"_index":2125,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":2224,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":2007,"title":{},"body":{"license.html":{}}}],["require",{"_index":1920,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":2220,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"index.html":{}}}],["res",{"_index":953,"title":{},"body":{"injectables/DataService.html":{}}}],["res.resource",{"_index":1380,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["res.reviewdate",{"_index":954,"title":{},"body":{"injectables/DataService.html":{}}}],["research",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResourceSection.html":{},"index.html":{}}}],["reserved",{"_index":515,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["reset",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}],["resolve",{"_index":1148,"title":{},"body":{"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["resolve(route",{"_index":1151,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["resolveddata",{"_index":1241,"title":{},"body":{"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["resolver.service",{"_index":1235,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["resolver.service.ts",{"_index":1147,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:10",{"_index":1815,"title":{},"body":{"guards/TechnologyDetailsResolverService.html":{}}}],["resolver.service.ts:11",{"_index":1736,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["resolver.service.ts:13",{"_index":1383,"title":{},"body":{"guards/ResourcesResolver.html":{}}}],["resolver.service.ts:14",{"_index":1155,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["resolver.service.ts:15",{"_index":1737,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["resolver.service.ts:8",{"_index":1382,"title":{},"body":{"guards/ResourcesResolver.html":{}}}],["resolver.service.ts:9",{"_index":1150,"title":{},"body":{"guards/FrameworkResolver.html":{}}}],["resolvers/framework",{"_index":1238,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["resolvers/resources",{"_index":1234,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["resource",{"_index":1200,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{}}}],["resources",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationRoutingModule.html":{},"components/ResourcesComponent.html":{}}}],["resources'},{'name",{"_index":185,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["resources.component.html",{"_index":1368,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources.component.scss",{"_index":1367,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources/resources.component",{"_index":1230,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["resourcescomponent",{"_index":184,"title":{"components/ResourcesComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcesresolver",{"_index":1233,"title":{"guards/ResourcesResolver.html":{}},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"guards/ResourcesResolver.html":{},"coverage.html":{}}}],["respective",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["response",{"_index":555,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["responsibility",{"_index":2280,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":2236,"title":{},"body":{"license.html":{}}}],["result",{"_index":197,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.dossier",{"_index":939,"title":{},"body":{"injectables/DataService.html":{}}}],["result.filter(t",{"_index":1504,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["result.length",{"_index":1463,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["result.push(combination",{"_index":909,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(framework",{"_index":923,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(groupingslookup.get(id",{"_index":1015,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(lookup.get(g.id",{"_index":1028,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(view",{"_index":898,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(viewslookup.get(id",{"_index":1010,"title":{},"body":{"injectables/DataService.html":{}}}],["result.sort((a",{"_index":1511,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["result.viewcombinations.add(viewcombination",{"_index":926,"title":{},"body":{"injectables/DataService.html":{}}}],["resulting",{"_index":2055,"title":{},"body":{"license.html":{}}}],["results",{"_index":199,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":2176,"title":{},"body":{"license.html":{}}}],["return",{"_index":253,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"modules/CoreModule.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["returned",{"_index":868,"title":{},"body":{"injectables/DataService.html":{}}}],["returns",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["reverse",{"_index":1879,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["review",{"_index":487,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["reviewdata",{"_index":438,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["reviewdata]=\"reviewdata",{"_index":452,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["reviewdate",{"_index":538,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["reviewed",{"_index":343,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"components/OverviewComponent.html":{}}}],["reviewedcriteria",{"_index":565,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["reviewedcriterion",{"_index":1536,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reviewedcriterion.values",{"_index":1539,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reviewedcriterion.values[0].value",{"_index":1540,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reviewmode",{"_index":648,"title":{},"body":{"components/CriterionComponent.html":{}}}],["reviewvalue",{"_index":1538,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["revisions",{"_index":2071,"title":{},"body":{"license.html":{}}}],["rgba(0",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{}}}],["right",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["rights",{"_index":2276,"title":{},"body":{"license.html":{}}}],["risks",{"_index":2241,"title":{},"body":{"license.html":{}}}],["root",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["root'},{'name",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["route",{"_index":1086,"title":{},"body":{"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["route.params['platformid",{"_index":1816,"title":{},"body":{"guards/TechnologyDetailsResolverService.html":{}}}],["router",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["router.events.subscribe((e",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["routermodule.forchild(inforoutes",{"_index":1242,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["routermodule.forchild(platformroutes",{"_index":1744,"title":{},"body":{"modules/TechnologiesRoutingModule.html":{}}}],["routermodule.forroot",{"_index":329,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1154,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["routes",{"_index":314,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"modules/InformationModule.html":{},"modules/TechnologiesModule.html":{}}}],["routing.module.ts",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["row",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["row:nth",{"_index":1872,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["royalty",{"_index":2122,"title":{},"body":{"license.html":{}}}],["run",{"_index":1963,"title":{},"body":{"index.html":{}}}],["running",{"_index":1984,"title":{},"body":{"index.html":{}}}],["runtimes",{"_index":524,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["rxjs",{"_index":827,"title":{},"body":{"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"components/OverviewComponent.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":834,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["s.unsubscribe",{"_index":1673,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["safety",{"_index":1059,"title":{},"body":{"components/FooterComponent.html":{}}}],["salad",{"_index":1139,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyListComponent.html":{}}}],["same",{"_index":2301,"title":{},"body":{"license.html":{}}}],["scaffolding",{"_index":1973,"title":{},"body":{"index.html":{}}}],["screen",{"_index":137,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["scroll",{"_index":1861,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["scrollleft",{"_index":1605,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["scrollright",{"_index":1607,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["scrolltoanchor",{"_index":398,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["search",{"_index":351,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"index.html":{}}}],["section",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["section.description",{"_index":1379,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["section.title",{"_index":1378,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["section__card",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["section__cards",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{}}}],["section_disclaimer",{"_index":1076,"title":{},"body":{"components/FooterComponent.html":{}}}],["sections",{"_index":1204,"title":{},"body":{"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["see",{"_index":2311,"title":{},"body":{"license.html":{}}}],["seed",{"_index":1357,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["selectedgrouping",{"_index":1097,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["selectedstrings",{"_index":731,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["selectedstrings.length",{"_index":735,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["selectedviewcombination",{"_index":1101,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["selection",{"_index":348,"title":{},"body":{"components/BannerComponent.html":{},"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["self",{"_index":682,"title":{},"body":{"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sell",{"_index":2135,"title":{},"body":{"license.html":{}}}],["sent",{"_index":2092,"title":{},"body":{"license.html":{}}}],["separable",{"_index":2077,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2211,"title":{},"body":{"license.html":{}}}],["serve",{"_index":1965,"title":{},"body":{"index.html":{}}}],["server",{"_index":554,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{},"index.html":{}}}],["service",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"index.html":{},"license.html":{}}}],["services/app",{"_index":587,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/data.service",{"_index":582,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/logo",{"_index":583,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/random",{"_index":585,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":475,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["set([...previous",{"_index":977,"title":{},"body":{"injectables/DataService.html":{}}}],["settimeout",{"_index":412,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["settings",{"_index":622,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["settoarray",{"_index":1389,"title":{},"body":{"pipes/SetToArrayPipe.html":{}}}],["settoarraypipe",{"_index":1385,"title":{"pipes/SetToArrayPipe.html":{}},"body":{"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["shadow",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["shall",{"_index":2010,"title":{},"body":{"license.html":{}}}],["shared/bottom",{"_index":1800,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["shared/datasource",{"_index":1566,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["shared/interfaces/classification",{"_index":836,"title":{},"body":{"injectables/DataService.html":{},"components/FrameworkComponent.html":{},"guards/FrameworkResolver.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{}}}],["shared/interfaces/filtering",{"_index":711,"title":{},"body":{"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyTableComponent.html":{}}}],["shared/interfaces/info",{"_index":841,"title":{},"body":{"injectables/DataService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{}}}],["shared/interfaces/responses",{"_index":839,"title":{},"body":{"injectables/DataService.html":{}}}],["shared/interfaces/technology",{"_index":838,"title":{},"body":{"injectables/DataService.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["shared/page",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/shared.module",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"modules/InformationModule.html":{},"modules/TechnologiesModule.html":{}}}],["sharedmodule",{"_index":274,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules.html":{},"overview.html":{}}}],["sharereplay",{"_index":831,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["sharereplay(1",{"_index":877,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["shares",{"_index":2043,"title":{},"body":{"license.html":{}}}],["sheet",{"_index":1310,"title":{},"body":{"modules/MaterialModule.html":{}}}],["shortdescription",{"_index":1748,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["shrink",{"_index":421,"title":{},"body":{"components/BottomNavComponent.html":{},"components/TechnologiesComponent.html":{}}}],["sidenav",{"_index":1571,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sidenav__accordion",{"_index":1709,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["sidenav__filter",{"_index":1708,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["simplechanges",{"_index":1650,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["simpledatasource",{"_index":1415,"title":{"interfaces/SimpleDataSource.html":{}},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{}}}],["simplify",{"_index":1948,"title":{},"body":{"index.html":{}}}],["size",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["skipself",{"_index":576,"title":{},"body":{"modules/CoreModule.html":{}}}],["slider",{"_index":632,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["smooth",{"_index":1865,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["software",{"_index":469,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["sole",{"_index":2279,"title":{},"body":{"license.html":{}}}],["solely",{"_index":2235,"title":{},"body":{"license.html":{}}}],["solid",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sort",{"_index":1428,"title":{"interfaces/Sort.html":{}},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{}}}],["sort.order",{"_index":1510,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["sortby",{"_index":1756,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["sortby(sort",{"_index":1474,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["spacer",{"_index":381,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologyListComponent.html":{}}}],["span')).gettext",{"_index":309,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":2326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":2254,"title":{},"body":{"license.html":{}}}],["specific",{"_index":535,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["specified",{"_index":636,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"index.html":{}}}],["spinner",{"_index":1271,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../data.service.ts",{"_index":2321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filtering.ts",{"_index":1941,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logo",{"_index":1942,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../random",{"_index":2324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../technology.ts",{"_index":1943,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":2320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core.module.ts",{"_index":574,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/ensure",{"_index":1029,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["src/app/core/services/app",{"_index":239,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["src/app/core/services/data.service.ts",{"_index":759,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/data.service.ts:105",{"_index":814,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:138",{"_index":802,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:170",{"_index":796,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:201",{"_index":799,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:209",{"_index":806,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:234",{"_index":809,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:244",{"_index":811,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:267",{"_index":791,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:283",{"_index":794,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:293",{"_index":813,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:333",{"_index":801,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:34",{"_index":782,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:345",{"_index":788,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:367",{"_index":820,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:386",{"_index":816,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:39",{"_index":823,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:405",{"_index":804,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:413",{"_index":784,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:50",{"_index":785,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:58",{"_index":803,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:72",{"_index":818,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/logo",{"_index":1243,"title":{},"body":{"injectables/LogoLocatorService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/services/random",{"_index":1350,"title":{},"body":{"injectables/RandomColorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/home/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/home/about/about.component.ts:8",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/home/banner/banner.component.ts",{"_index":331,"title":{},"body":{"components/BannerComponent.html":{},"coverage.html":{}}}],["src/app/home/banner/banner.component.ts:8",{"_index":335,"title":{},"body":{"components/BannerComponent.html":{}}}],["src/app/home/home.component.ts",{"_index":1192,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:9",{"_index":1196,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/overview/overview.component.ts",{"_index":1315,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/home/overview/overview.component.ts:11",{"_index":1319,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/information/faq/faq.component.ts",{"_index":1037,"title":{},"body":{"components/FaqComponent.html":{},"coverage.html":{}}}],["src/app/information/faq/faq.component.ts:12",{"_index":1042,"title":{},"body":{"components/FaqComponent.html":{}}}],["src/app/information/faq/faq.component.ts:8",{"_index":1041,"title":{},"body":{"components/FaqComponent.html":{}}}],["src/app/information/framework/framework.component.ts",{"_index":1080,"title":{},"body":{"components/FrameworkComponent.html":{},"coverage.html":{}}}],["src/app/information/framework/framework.component.ts:11",{"_index":1085,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["src/app/information/framework/framework.component.ts:16",{"_index":1087,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["src/app/information/information",{"_index":1237,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["src/app/information/information.component.ts",{"_index":1211,"title":{},"body":{"components/InformationComponent.html":{},"coverage.html":{}}}],["src/app/information/information.component.ts:10",{"_index":1219,"title":{},"body":{"components/InformationComponent.html":{}}}],["src/app/information/information.component.ts:14",{"_index":1216,"title":{},"body":{"components/InformationComponent.html":{}}}],["src/app/information/information.module.ts",{"_index":1229,"title":{},"body":{"modules/InformationModule.html":{}}}],["src/app/information/resolvers/framework",{"_index":1146,"title":{},"body":{"guards/FrameworkResolver.html":{},"coverage.html":{}}}],["src/app/information/resolvers/resources",{"_index":1381,"title":{},"body":{"guards/ResourcesResolver.html":{},"coverage.html":{}}}],["src/app/information/resources/resources.component.ts",{"_index":1365,"title":{},"body":{"components/ResourcesComponent.html":{},"coverage.html":{}}}],["src/app/information/resources/resources.component.ts:12",{"_index":1374,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/information/resources/resources.component.ts:13",{"_index":1371,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/information/resources/resources.component.ts:18",{"_index":1373,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/information/resources/resources.component.ts:24",{"_index":1372,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/shared/bottom",{"_index":389,"title":{},"body":{"components/BottomNavComponent.html":{},"coverage.html":{}}}],["src/app/shared/child",{"_index":428,"title":{},"body":{"components/ChildGroupingComponent.html":{},"coverage.html":{}}}],["src/app/shared/criterion/criterion.component.ts",{"_index":644,"title":{},"body":{"components/CriterionComponent.html":{},"coverage.html":{}}}],["src/app/shared/criterion/criterion.component.ts:10",{"_index":650,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:11",{"_index":652,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:12",{"_index":651,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:13",{"_index":655,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:14",{"_index":654,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:15",{"_index":657,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:16",{"_index":649,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:21",{"_index":656,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/datasource.ts",{"_index":1416,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{}}}],["src/app/shared/datasource.ts:10",{"_index":1420,"title":{},"body":{"interfaces/SimpleDataSource.html":{}}}],["src/app/shared/datasource.ts:101",{"_index":1777,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:12",{"_index":1421,"title":{},"body":{"interfaces/SimpleDataSource.html":{}}}],["src/app/shared/datasource.ts:131",{"_index":1769,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:146",{"_index":1779,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:170",{"_index":1776,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:198",{"_index":1772,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:207",{"_index":1773,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:21",{"_index":1760,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:22",{"_index":1764,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:23",{"_index":1767,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:24",{"_index":1758,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:25",{"_index":1763,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:27",{"_index":1762,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:28",{"_index":1768,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:29",{"_index":1759,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:30",{"_index":1765,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:31",{"_index":1761,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:32",{"_index":1757,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:34",{"_index":1766,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:62",{"_index":1782,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:68",{"_index":1780,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:77",{"_index":1781,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:81",{"_index":1775,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:87",{"_index":1783,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:91",{"_index":1771,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:98",{"_index":1774,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":1044,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:12",{"_index":1049,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:8",{"_index":1048,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/framework",{"_index":1091,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":1161,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:8",{"_index":1165,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/interfaces/classification.ts",{"_index":466,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/classification.ts:171",{"_index":758,"title":{},"body":{"classes/CriterionValue.html":{}}}],["src/app/shared/interfaces/classification.ts:175",{"_index":757,"title":{},"body":{"classes/CriterionValue.html":{}}}],["src/app/shared/interfaces/classification.ts:179",{"_index":756,"title":{},"body":{"classes/CriterionValue.html":{}}}],["src/app/shared/interfaces/filtering.ts",{"_index":598,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/interfaces/filtering.ts:53",{"_index":601,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{}}}],["src/app/shared/interfaces/info.ts",{"_index":1199,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/responses.ts",{"_index":552,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/responses.ts:53",{"_index":643,"title":{},"body":{"interfaces/CriteriaReview.html":{}}}],["src/app/shared/interfaces/technology.ts",{"_index":1745,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/material.module.ts",{"_index":1260,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/shared/page",{"_index":1342,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/set",{"_index":1387,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1401,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/truncate.pipe.ts",{"_index":1875,"title":{},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["src/app/shared/truncate.pipe.ts:7",{"_index":1881,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["src/app/shared/yes",{"_index":1886,"title":{},"body":{"pipes/YesNoPipe.html":{},"coverage.html":{}}}],["src/app/technologies/criterion",{"_index":688,"title":{},"body":{"components/CriterionFilterComponent.html":{},"coverage.html":{}}}],["src/app/technologies/technologies",{"_index":1735,"title":{},"body":{"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"coverage.html":{}}}],["src/app/technologies/technologies.component.ts",{"_index":1608,"title":{},"body":{"components/TechnologiesComponent.html":{},"coverage.html":{}}}],["src/app/technologies/technologies.component.ts:114",{"_index":1629,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:25",{"_index":1646,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:26",{"_index":1647,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:27",{"_index":1639,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:28",{"_index":1638,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:29",{"_index":1640,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:31",{"_index":1637,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:32",{"_index":1636,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:34",{"_index":1642,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:36",{"_index":1645,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:37",{"_index":1623,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:51",{"_index":1627,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:74",{"_index":1626,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:78",{"_index":1624,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:87",{"_index":1625,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:94",{"_index":1635,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.module.ts",{"_index":1725,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["src/app/technologies/technology",{"_index":1556,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1917,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1918,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":678,"title":{},"body":{"components/CriterionComponent.html":{},"components/TechnologyListComponent.html":{}}}],["started",{"_index":1945,"title":{"index.html":{},"license.html":{}},"body":{}}],["startindex",{"_index":1469,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["state",{"_index":1153,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"license.html":{}}}],["stated",{"_index":2132,"title":{},"body":{"license.html":{}}}],["statement",{"_index":2200,"title":{},"body":{"license.html":{}}}],["statements",{"_index":1890,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":779,"title":{},"body":{"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["stating",{"_index":2173,"title":{},"body":{"license.html":{}}}],["sticky",{"_index":418,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["stoppage",{"_index":2262,"title":{},"body":{"license.html":{}}}],["store",{"_index":479,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["stored",{"_index":1978,"title":{},"body":{"index.html":{}}}],["stretch",{"_index":755,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["string",{"_index":402,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":528,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["style",{"_index":750,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sub",{"_index":508,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["subgroups",{"_index":439,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["subject",{"_index":1699,"title":{},"body":{"components/TechnologiesComponent.html":{},"license.html":{}}}],["sublicense",{"_index":2128,"title":{},"body":{"license.html":{}}}],["submission",{"_index":2202,"title":{},"body":{"license.html":{}}}],["submit",{"_index":2086,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":2084,"title":{},"body":{"license.html":{}}}],["subscription",{"_index":1369,"title":{},"body":{"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{}}}],["subscriptions",{"_index":1616,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["subsequently",{"_index":2110,"title":{},"body":{"license.html":{}}}],["such",{"_index":1203,"title":{},"body":{"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["suitability",{"_index":1060,"title":{},"body":{"components/FooterComponent.html":{}}}],["suitable",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["suiting",{"_index":340,"title":{},"body":{"components/BannerComponent.html":{}}}],["super(parentmodule",{"_index":596,"title":{},"body":{"modules/CoreModule.html":{}}}],["supersede",{"_index":2210,"title":{},"body":{"license.html":{}}}],["support",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{},"license.html":{},"modules.html":{}}}],["supported",{"_index":525,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["supportedplatforms",{"_index":1195,"title":{},"body":{"components/HomeComponent.html":{},"components/OverviewComponent.html":{}}}],["supportedplatformspath",{"_index":853,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":1258,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["switchmap",{"_index":1424,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["switchmap(([criteriaquery",{"_index":1458,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["syntax",{"_index":2299,"title":{},"body":{"license.html":{}}}],["system",{"_index":1946,"title":{},"body":{"index.html":{}}}],["systems",{"_index":2096,"title":{},"body":{"license.html":{}}}],["t",{"_index":1431,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["t.category.tolocalelowercase",{"_index":943,"title":{},"body":{"injectables/DataService.html":{}}}],["t.dossier.reviewedcriteria.get(key",{"_index":1508,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["t.dossier.reviewedcriteria.has(key",{"_index":1506,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["table",{"_index":194,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["table.component",{"_index":1731,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["table.component.html",{"_index":1568,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["table.component.scss",{"_index":1569,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["table.component.ts",{"_index":1558,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:10",{"_index":1561,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:11",{"_index":1560,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:20",{"_index":1846,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:21",{"_index":1848,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:22",{"_index":1847,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:23",{"_index":1849,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:25",{"_index":1857,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:27",{"_index":1854,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:28",{"_index":1856,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:29",{"_index":1855,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:31",{"_index":1845,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:37",{"_index":1851,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:61",{"_index":1850,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:8",{"_index":1563,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:87",{"_index":1852,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:9",{"_index":1562,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:91",{"_index":1853,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table/technology",{"_index":1557,"title":{},"body":{"classes/TableColumn.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["tablecolumn",{"_index":1555,"title":{"classes/TableColumn.html":{}},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["tablecontainer",{"_index":1573,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1921,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1222,"title":{},"body":{"components/InformationComponent.html":{}}}],["tabs__links",{"_index":1223,"title":{},"body":{"components/InformationComponent.html":{}}}],["take",{"_index":832,"title":{},"body":{"injectables/DataService.html":{}}}],["target",{"_index":1542,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["target.every(v",{"_index":1544,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["targetmodule",{"_index":1033,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["tech",{"_index":1866,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["tech.platformname",{"_index":1858,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["techcategory",{"_index":797,"title":{},"body":{"injectables/DataService.html":{}}}],["techname",{"_index":1579,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["technameheader",{"_index":1577,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["technologies",{"_index":485,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["technologies'},{'name",{"_index":187,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["technologies.component",{"_index":1726,"title":{},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["technologies.component.html",{"_index":1612,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["technologies.component.scss",{"_index":1611,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["technologiescomponent",{"_index":186,"title":{"components/TechnologiesComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["technologiesmodule",{"_index":1720,"title":{"modules/TechnologiesModule.html":{}},"body":{"modules/TechnologiesModule.html":{},"modules.html":{},"overview.html":{}}}],["technologiesresolver",{"_index":1732,"title":{"guards/TechnologiesResolver.html":{}},"body":{"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"coverage.html":{}}}],["technologiesroutingmodule",{"_index":1724,"title":{"modules/TechnologiesRoutingModule.html":{}},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["technology",{"_index":189,"title":{"interfaces/Technology.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["technology__header",{"_index":1811,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["technology__logo",{"_index":1812,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["technology__view",{"_index":1814,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["technologycategory",{"_index":482,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["technologydatasource",{"_index":1434,"title":{"classes/TechnologyDataSource.html":{}},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["technologydatasource(this.technologies",{"_index":1665,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["technologydatasource.canfilter(criteriaquery[key",{"_index":1503,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["technologydatasource.containsany(filtervalue",{"_index":1537,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["technologydetailscomponent",{"_index":188,"title":{"components/TechnologyDetailsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["technologydetailsresolverservice",{"_index":1734,"title":{"guards/TechnologyDetailsResolverService.html":{}},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["technologydossier",{"_index":837,"title":{"interfaces/TechnologyDossier.html":{}},"body":{"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{}}}],["technologydossierresponse",{"_index":564,"title":{"interfaces/TechnologyDossierResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["technologyfilterconfiguration",{"_index":612,"title":{"interfaces/TechnologyFilterConfiguration.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["technologyid",{"_index":792,"title":{},"body":{"injectables/DataService.html":{}}}],["technologylistcomponent",{"_index":191,"title":{"components/TechnologyListComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["technologytablecomponent",{"_index":193,"title":{"components/TechnologyTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["techs",{"_index":958,"title":{},"body":{"injectables/DataService.html":{}}}],["techs.filter(t",{"_index":942,"title":{},"body":{"injectables/DataService.html":{}}}],["temp",{"_index":1002,"title":{},"body":{"injectables/DataService.html":{}}}],["temp.default",{"_index":1004,"title":{},"body":{"injectables/DataService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["terminate",{"_index":2157,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2005,"title":{},"body":{"license.html":{}}}],["test",{"_index":1987,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1986,"title":{},"body":{"index.html":{}}}],["text",{"_index":372,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["text_snippet",{"_index":653,"title":{},"body":{"components/CriterionComponent.html":{}}}],["then(data",{"_index":256,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["theory",{"_index":2245,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":2080,"title":{},"body":{"license.html":{}}}],["third",{"_index":2187,"title":{},"body":{"license.html":{}}}],["this.appconfig",{"_index":257,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.appconfig?.defaulttechcategory",{"_index":259,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.bottomnav.totop",{"_index":1805,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["this.browsingmode",{"_index":1661,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.buildgroupings(groupings",{"_index":885,"title":{},"body":{"injectables/DataService.html":{}}}],["this.checkrouterevent(e",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["this.columnstodisplay.push(c.id",{"_index":1597,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.config.defaulttechcategory",{"_index":1159,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["this.criteriabasedquery",{"_index":1451,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.criteriabasedquery.getvalue",{"_index":1482,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.criteriabasedquery.next(nextquery",{"_index":1488,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.criteriacolumns.push",{"_index":1596,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.criterion.name",{"_index":660,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.criterioninstance",{"_index":661,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.currentindex",{"_index":1494,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.data",{"_index":1448,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.dataservice.getframeworkforcategory(defaultcategory",{"_index":1160,"title":{},"body":{"guards/FrameworkResolver.html":{}}}],["this.dataservice.getframeworkfortechnologytype(category",{"_index":1740,"title":{},"body":{"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["this.dataservice.getinforesources",{"_index":1384,"title":{},"body":{"guards/ResourcesResolver.html":{}}}],["this.dataservice.gettechnologies",{"_index":1197,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.dataservice.gettechnologiesofcategory(category",{"_index":1739,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["this.dataservice.gettechnology(id",{"_index":1817,"title":{},"body":{"guards/TechnologyDetailsResolverService.html":{}}}],["this.dataservice.gettechnologyfilter(category",{"_index":1741,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["this.datasource",{"_index":1664,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.datasource.fetch({pageindex",{"_index":1830,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.datasource.pagesize",{"_index":1833,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.datasource.querybycriteria($event",{"_index":1693,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.datasource.querybyname(name",{"_index":1829,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.datasource.totalinputsize",{"_index":1832,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.extractgroupings",{"_index":1670,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.extratitletext",{"_index":658,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.fb.array",{"_index":721,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.fb.control(null",{"_index":719,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.fb.control(this.filter.filtertype",{"_index":725,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.fb.group",{"_index":724,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filter.filtertype",{"_index":714,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filter.filtervalues",{"_index":730,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filter.filtervalues.foreach(v",{"_index":722,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterconfiguration",{"_index":1668,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.filtereddata",{"_index":1455,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.filterelement",{"_index":718,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.get('filtertype').setvalue(this.filtertype.containsone",{"_index":746,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.markaspristine",{"_index":736,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.reset",{"_index":742,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.value.checkboxes[i",{"_index":733,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.value.filtertype",{"_index":734,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.valuechanges.subscribe(value",{"_index":726,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.bool",{"_index":715,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.containsall",{"_index":743,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.containsany",{"_index":716,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.containsone",{"_index":744,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.excludesall",{"_index":745,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.lte",{"_index":717,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.framework",{"_index":1089,"title":{},"body":{"components/FrameworkComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["this.framework.viewcombinations",{"_index":1114,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{}}}],["this.framework.viewcombinations.foreach(vc",{"_index":1802,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["this.framework.viewcombinations.foreach(viewcomb",{"_index":1580,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.generatefilterstructure",{"_index":1671,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.generategroupingcolumns(g",{"_index":1604,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.generategroupingcolumns(grouping",{"_index":1585,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.getcriteria",{"_index":878,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdefaultviewcombinationdata(frameworkid).pipe",{"_index":989,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdossier(id",{"_index":944,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdossier(item.id).pipe(take(1)).subscribe",{"_index":937,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdossier(t.id",{"_index":960,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdossiersofcategory(category",{"_index":965,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getfilteringresult(criteriaquery[key",{"_index":1507,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.getframeworks().pipe",{"_index":927,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getgroupings",{"_index":886,"title":{},"body":{"injectables/DataService.html":{}}}],["this.gettechnologies(withdossier).pipe",{"_index":940,"title":{},"body":{"injectables/DataService.html":{}}}],["this.gettechnologiesofcategory(category).pipe",{"_index":956,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getviewcombinations",{"_index":910,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getviewgroupingsdata(v.id",{"_index":993,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getviews",{"_index":899,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getviewsdata(vc.id",{"_index":991,"title":{},"body":{"injectables/DataService.html":{}}}],["this.groupingcolumnids.push(grouping.id",{"_index":1601,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.groupingcolumns.push(...groupingcolumns",{"_index":1587,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.groupings.foreach(g",{"_index":1679,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.groupings.push(...array.from(v.groupings",{"_index":1675,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.http.get('/assets/config.json",{"_index":254,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.http.get(criteriagroupingspath",{"_index":879,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(criteriapath",{"_index":874,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(dossierpath",{"_index":952,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(filterconfigurationspath).pipe",{"_index":961,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(frameworkspath",{"_index":911,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(frameworkviewcombinationspath",{"_index":900,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(frameworkviewspath",{"_index":887,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(inforesourcespath",{"_index":1016,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(supportedplatformspath",{"_index":932,"title":{},"body":{"injectables/DataService.html":{}}}],["this.ispaginated",{"_index":1497,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.loading",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["this.logolocator.getlogopath(item.logolocator",{"_index":936,"title":{},"body":{"injectables/DataService.html":{}}}],["this.logolocator.getlogopath(technology.logolocator",{"_index":949,"title":{},"body":{"injectables/DataService.html":{}}}],["this.mobilequery",{"_index":1652,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.mobilequery.addeventlistener('change",{"_index":1655,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.namebasedquery",{"_index":1453,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.namebasedquery.next(query",{"_index":1490,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagenumber$]).pipe",{"_index":1467,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagenumber.asobservable",{"_index":1441,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagenumber.next(event.pageindex",{"_index":1493,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagesize",{"_index":1470,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.paginateddata",{"_index":1465,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.platform",{"_index":1801,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["this.populaterenderblocks(g",{"_index":1680,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.processdata(this.data",{"_index":1460,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.prunequery(nextquery",{"_index":1486,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.renderedfilter",{"_index":1681,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.resources",{"_index":1376,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.route.data.subscribe(data",{"_index":1088,"title":{},"body":{"components/FrameworkComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":1658,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.selectedgrouping.get(viewid)?.id",{"_index":1120,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.selectedgrouping.set(viewid",{"_index":1122,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.selectedviewcombination",{"_index":1113,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["this.selectedviewcombination.views.foreach(v",{"_index":1118,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.sort",{"_index":1449,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.sort.getvalue",{"_index":1477,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.sort.next(nextsort",{"_index":1479,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.sort]).pipe",{"_index":1457,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.subscription",{"_index":1375,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":1377,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.subscriptions.foreach(s",{"_index":1672,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.subscriptions.push",{"_index":1657,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.tablecontainer.nativeelement.scrollleft",{"_index":1606,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.technologies",{"_index":1662,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.title",{"_index":659,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.totalinputsize",{"_index":1462,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.updatequery.emit(obj",{"_index":737,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.values",{"_index":662,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.viewportscroller.scrolltoanchor(grouping.id",{"_index":1124,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.viewportscroller.scrolltoanchor(platformid",{"_index":413,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["this.viewtoggles.set(v.id",{"_index":1119,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["those",{"_index":2138,"title":{},"body":{"license.html":{}}}],["through",{"_index":1700,"title":{},"body":{"components/TechnologiesComponent.html":{},"license.html":{}}}],["throw",{"_index":1034,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["throwerror",{"_index":826,"title":{},"body":{"injectables/DataService.html":{}}}],["throwerror(errormessage",{"_index":873,"title":{},"body":{"injectables/DataService.html":{}}}],["title",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/PageNotFoundComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"license.html":{}}}],["titlepage",{"_index":1349,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["toarray",{"_index":833,"title":{},"body":{"injectables/DataService.html":{}}}],["toggle",{"_index":628,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"components/FrameworkRendererComponent.html":{},"modules/MaterialModule.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["togglepagination",{"_index":1496,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["top",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["topromise",{"_index":255,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["tort",{"_index":2246,"title":{},"body":{"license.html":{}}}],["totalinputsize",{"_index":1439,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["totop",{"_index":395,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["tracking",{"_index":2098,"title":{},"body":{"license.html":{}}}],["trade",{"_index":2217,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":2177,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2215,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":2136,"title":{},"body":{"license.html":{}}}],["transform",{"_index":1390,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["transform(value",{"_index":1391,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["transformation",{"_index":2057,"title":{},"body":{"license.html":{}}}],["transition",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{}}}],["translates",{"_index":627,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["translation",{"_index":2058,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["true",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":526,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["truncate",{"_index":1876,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["truncate.pipe",{"_index":1403,"title":{},"body":{"modules/SharedModule.html":{}}}],["truncatepipe",{"_index":1399,"title":{"pipes/TruncatePipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["tslib",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":741,"title":{},"body":{"components/CriterionFilterComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"pipes/YesNoPipe.html":{}}}],["types",{"_index":2061,"title":{},"body":{"license.html":{}}}],["typographical",{"_index":1064,"title":{},"body":{"components/FooterComponent.html":{}}}],["ui",{"_index":506,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["undefined",{"_index":1123,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{}}}],["under",{"_index":2026,"title":{},"body":{"license.html":{}}}],["union",{"_index":2021,"title":{},"body":{"license.html":{}}}],["unique",{"_index":480,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["unit",{"_index":1985,"title":{},"body":{"index.html":{}}}],["unless",{"_index":2204,"title":{},"body":{"license.html":{}}}],["updatequery",{"_index":697,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["url(\"../../../assets/images/logo",{"_index":1178,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url(../../../assets/images/bg",{"_index":355,"title":{},"body":{"components/BannerComponent.html":{}}}],["use",{"_index":517,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":505,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{}}}],["usefactory",{"_index":591,"title":{},"body":{"modules/CoreModule.html":{}}}],["useful",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{}}}],["user",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["using",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{},"license.html":{}}}],["v",{"_index":1007,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["v.description",{"_index":894,"title":{},"body":{"injectables/DataService.html":{}}}],["v.groupingids.foreach(id",{"_index":895,"title":{},"body":{"injectables/DataService.html":{}}}],["v.id",{"_index":892,"title":{},"body":{"injectables/DataService.html":{}}}],["v.length",{"_index":1520,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["v.name",{"_index":893,"title":{},"body":{"injectables/DataService.html":{}}}],["v.png",{"_index":1188,"title":{},"body":{"components/HeaderComponent.html":{}}}],["v.value",{"_index":674,"title":{},"body":{"components/CriterionComponent.html":{}}}],["value",{"_index":408,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.every(item",{"_index":740,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["value.length",{"_index":1884,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value.substr(0",{"_index":1882,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value.substr(limit",{"_index":1885,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["valueindex",{"_index":673,"title":{},"body":{"components/CriterionComponent.html":{}}}],["values",{"_index":477,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["values[0].value",{"_index":670,"title":{},"body":{"components/CriterionComponent.html":{}}}],["valuetocheck",{"_index":1530,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["valuetocheck.length",{"_index":1531,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["var",{"_index":148,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["variable",{"_index":1896,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2319,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vc",{"_index":999,"title":{},"body":{"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["vc.default",{"_index":1115,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["vc.id",{"_index":998,"title":{},"body":{"injectables/DataService.html":{}}}],["vc.viewids.foreach(id",{"_index":1009,"title":{},"body":{"injectables/DataService.html":{}}}],["vc.views.foreach(v",{"_index":1674,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["vclookup",{"_index":996,"title":{},"body":{"injectables/DataService.html":{}}}],["vclookup.get(id",{"_index":1003,"title":{},"body":{"injectables/DataService.html":{}}}],["verbal",{"_index":2089,"title":{},"body":{"license.html":{}}}],["version",{"_index":2000,"title":{},"body":{"license.html":{}}}],["vertical",{"_index":1336,"title":{},"body":{"components/OverviewComponent.html":{}}}],["via",{"_index":1989,"title":{},"body":{"index.html":{}}}],["view",{"_index":498,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["view.description",{"_index":1129,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["view.groupingids.foreach(id",{"_index":1014,"title":{},"body":{"injectables/DataService.html":{}}}],["view.groupings.add(groupingslookup.get(id",{"_index":897,"title":{},"body":{"injectables/DataService.html":{}}}],["view.name",{"_index":1127,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["view_list",{"_index":352,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["viewchild",{"_index":1565,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["viewchild('bottomnavcomponent",{"_index":1795,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["viewchild('content",{"_index":1572,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewchild('sidenav",{"_index":1644,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["viewcolspan",{"_index":1588,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewcomb.default",{"_index":1581,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewcomb.views.foreach(view",{"_index":1582,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewcombination",{"_index":920,"title":{},"body":{"injectables/DataService.html":{}}}],["viewcombinationid",{"_index":821,"title":{},"body":{"injectables/DataService.html":{}}}],["viewcombinationids",{"_index":553,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["viewcombinations",{"_index":495,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{}}}],["viewcombinations.foreach(c",{"_index":902,"title":{},"body":{"injectables/DataService.html":{}}}],["viewid",{"_index":817,"title":{},"body":{"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{}}}],["viewids",{"_index":558,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["viewportscroller",{"_index":400,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["views",{"_index":492,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["views.find(v",{"_index":907,"title":{},"body":{"injectables/DataService.html":{}}}],["views.foreach(v",{"_index":891,"title":{},"body":{"injectables/DataService.html":{}}}],["viewslookup",{"_index":1005,"title":{},"body":{"injectables/DataService.html":{}}}],["viewtoggles",{"_index":1098,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["violet",{"_index":458,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FooterComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["viruses",{"_index":1062,"title":{},"body":{"components/FooterComponent.html":{}}}],["visualize",{"_index":1961,"title":{},"body":{"index.html":{}}}],["void",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["warranties",{"_index":1056,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["warranty",{"_index":2226,"title":{},"body":{"license.html":{}}}],["way",{"_index":344,"title":{},"body":{"components/BannerComponent.html":{}}}],["webkit",{"_index":358,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/OverviewComponent.html":{}}}],["weight",{"_index":367,"title":{},"body":{"components/BannerComponent.html":{}}}],["wherever",{"_index":2186,"title":{},"body":{"license.html":{}}}],["whether",{"_index":503,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"classes/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["white",{"_index":422,"title":{},"body":{"components/BottomNavComponent.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["whole",{"_index":2074,"title":{},"body":{"license.html":{}}}],["width",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["window.pageyoffset",{"_index":1806,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["window:scroll",{"_index":1789,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["window:scroll(e",{"_index":1792,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["withdossier",{"_index":807,"title":{},"body":{"injectables/DataService.html":{}}}],["within",{"_index":2112,"title":{},"body":{"license.html":{}}}],["without",{"_index":2162,"title":{},"body":{"license.html":{}}}],["word",{"_index":1871,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["work",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["works",{"_index":1043,"title":{},"body":{"components/FaqComponent.html":{},"license.html":{}}}],["worldwide",{"_index":2118,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["writing",{"_index":2107,"title":{},"body":{"license.html":{}}}],["written",{"_index":2090,"title":{},"body":{"license.html":{}}}],["yes",{"_index":1362,"title":{},"body":{"injectables/RandomColorService.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/YesNoPipe.html":{}}}],["yesno",{"_index":671,"title":{},"body":{"components/CriterionComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/YesNoPipe.html":{}}}],["yesnopipe",{"_index":1400,"title":{"pipes/YesNoPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"overview.html":{}}}],["yyyy",{"_index":2306,"title":{},"body":{"license.html":{}}}],["z",{"_index":364,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{}}}],["zone.js",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/about/about.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/about/about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-home-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent {\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  About\n  \n    FaaStener is a research prototype which aims to provide support in choosing suitable Function-as-a-Service\n    platforms based on the user-provided requirements.\n    The classification framework behind FaaStener is derived by combining existing academic work and documentation\n    of available Function-as-a-Service platforms.\n    You can find more information about the classification framework, FaaStener, and FaaS cloud service model with\n    additional resources by navigating using the respective buttons below.\n  \n\n\n  \n    \n      menu_book\n       Framework\n       Learn about the classification framework and available\n        criteria.\n      READ MORE\n    \n\n    \n      cloud_done\n      Docs\n       Information on how to work with FaaStener and its features. \n      READ MORE\n    \n\n    \n      library_books\n      Resources\n       Useful resources about Function-as-a-Service cloud service\n        model. \n      READ MORE\n    \n\n    \n      question_answer\n      Q&A\n      Answers to some possible questions.\n      READ MORE\n    -->\n  \n\n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n}\n\n.about-section {\n  width: 95%;\n  margin-bottom: .5rem;\n}\n\n.about-section__cards {\n  display: flex;\n  flex-flow: wrap;\n  justify-content: space-evenly;\n}\n\n.about-section__card {\n  margin: .5rem;\n  border-top: .2rem solid #212121;\n  transition: all .3s ease;\n  flex-basis: 18%;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n\n  &:hover {\n    border-top: .2rem solid #b5ca8f;\n    box-shadow: 0 10px 16px rgba(0, 0, 0, 0.2) !important;\n\n    .about-section__card-icon {\n      color: #b5ca8f;\n    }\n  }\n}\n\n.about-section__card-icon {\n  font-size: 3rem !important;\n  transition: all .3s ease;\n  margin-right: 1rem;\n}\n\n.about-section__card-title {\n  padding-top: 1rem;\n  font-size: 1rem;\n}\n\n.about-section__card-description {\n  flex: 1;\n  font-size: .8rem;\n}\n\n@media screen and (min-width: 550px) {\n  .about-section__card-title {\n    font-size: 1.1rem;\n  }\n\n  .about-section__card-description {\n    flex: 1;\n    font-size: .9rem;\n  }\n}\n\n\n@media (min-width: 790px) {\n  .about-section__card-title {\n    font-size: 1.2rem;\n  }\n\n  .about-section__card-description {\n    flex: 1;\n    font-size: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  About      FaaStener is a research prototype which aims to provide support in choosing suitable Function-as-a-Service    platforms based on the user-provided requirements.    The classification framework behind FaaStener is derived by combining existing academic work and documentation    of available Function-as-a-Service platforms.    You can find more information about the classification framework, FaaStener, and FaaS cloud service model with    additional resources by navigating using the respective buttons below.              menu_book       Framework       Learn about the classification framework and available        criteria.      READ MORE              cloud_done      Docs       Information on how to work with FaaStener and its features.       READ MORE              library_books      Resources       Useful resources about Function-as-a-Service cloud service        model.       READ MORE              question_answer      Q&A      Answers to some possible questions.      READ MORE    -->  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                template\n                \n  \n    \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkRouterEvent\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkRouterEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRouterEvent(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    \n      \n        \n      \n      \n    \n  `\n})\nexport class AppComponent implements OnInit {\n  loading: boolean;\n\n  constructor(private router: Router) {\n    router.events.subscribe((e) => this.checkRouterEvent(e));\n  }\n\n  ngOnInit(): void {\n  }\n\n  private checkRouterEvent(e): void {\n    if (e instanceof NavigationStart) {\n      this.loading = true;\n    }\n\n    if (e instanceof NavigationCancel || e instanceof NavigationEnd || e instanceof NavigationError) {\n      this.loading = false;\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/app-config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                appConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadAppConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    defaultTechCategory\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/app-config.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAppConfig\n                        \n                        \n                    \n                \n            \n            \n                \nloadAppConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/app-config.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            appConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/app-config.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        defaultTechCategory\n                    \n                \n\n                \n                    \n                        getdefaultTechCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/app-config.service.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class AppConfigService {\n  private appConfig: any;\n\n  constructor(private http: HttpClient) {\n  }\n\n  loadAppConfig() {\n    return this.http.get('/assets/config.json')\n      .toPromise()\n      .then(data => {\n        this.appConfig = data;\n      });\n  }\n\n  get defaultTechCategory() {\n    return this.appConfig?.defaultTechCategory;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBannerComponent\n\nBannerComponent\n\nAppModule -->\n\nBannerComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nAppModule -->\n\nOverviewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            BannerComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            OverviewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {AppRoutingModule} from './app-routing.module';\nimport {CoreModule} from './core/core.module';\nimport {SharedModule} from './shared/shared.module';\nimport {HomeComponent} from './home/home.component';\nimport {AboutComponent} from './home/about/about.component';\nimport {BannerComponent} from './home/banner/banner.component';\nimport {OverviewComponent} from './home/overview/overview.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    CoreModule,\n    SharedModule,\n    AppRoutingModule\n  ],\n  declarations: [AppComponent, HomeComponent, AboutComponent, BannerComponent, OverviewComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\nimport {PageNotFoundComponent} from './shared/page-not-found/page-not-found.component';\nimport {HomeComponent} from './home/home.component';\n\nconst appRoutes: Routes = [\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\n  {path: 'home', component: HomeComponent},\n  {path: 'info', loadChildren: () => \"import(`src/app/information/information.module`).then(m => m.InformationModule)\"},\n  {path: 'platforms', loadChildren: () => \"import(`src/app/technologies/technologies.module`).then(m => m.TechnologiesModule)\"},\n  {path: '**', component: PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      {\n        preloadingStrategy: PreloadAllModules\n      }\n    )\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BannerComponent.html":{"url":"components/BannerComponent.html","title":"component - BannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/banner/banner.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-banner\n            \n\n            \n                styleUrls\n                ./banner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./banner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/banner/banner.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-home-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent {\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n  \n    Choose your Function-as-a-Service Platform\n  \n  \n    Explore available Function-as-a-Service platforms and find one suiting your requirements.\n  \n\n\n  \n    \n      check_circle\n       10 reviewed platforms, more on the way \n    \n    \n      check_circle\n       High- and low-level platform selection criteria\n    \n    \n      check_circle\n       Open source and extensible \n    \n  \n\n  \n    \n      search\n      Find a Platform\n    \n    \n    \n      view_list\n      Browse Platforms\n    \n  \n\n\n    \n\n    \n                \n                    ./banner.component.scss\n                \n                @import \"../../_scss/shared\";\n\n.banner {\n  background: url(../../../assets/images/bg-pattern.png) repeat;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: auto;\n  color: #ffffff;\n  z-index: -10;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n}\n\n.banner__heading {\n  margin: 1rem auto 0;\n  padding: 0 1rem;\n  font-size: 1.5rem !important;\n  font-weight: 900;\n  line-height: 1.7rem;\n  text-shadow: 0 4px 4px rgba(0, 0, 0, 0.22);\n}\n\n.banner__description {\n  margin: .8rem auto 0;\n  padding: 0 1rem;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5rem;\n}\n\n.banner__summary {\n  margin: 2rem 0;\n  display: flex;\n  flex-flow: column wrap;\n  align-content: center;\n}\n\n.banner__summary-item {\n  margin-bottom: .5rem;\n  display: flex;\n  align-content: center;\n}\n\n.banner__summary-item-text {\n  padding: .2rem 0 0 .5rem;\n  font-size: .9rem;\n}\n\n.banner__quick-links {\n  margin: 1rem 0;\n  display: flex;\n  justify-content: center;\n}\n\n.banner__quick-links-spacer {\n  margin: 0 .5rem;\n}\n\n.banner-description-list {\n  margin: 0 auto 40px;\n  font-size: 18px;\n}\n\n\n@media (min-width: 790px) {\n  .banner__heading {\n    font-size: 1.8rem !important;\n  }\n\n  .banner__description {\n    font-size: 1.3rem;\n  }\n\n  .banner__summary-item-text {\n    font-size: 1rem;\n  }\n\n}\n\n@media (min-width: 1100px) {\n  .banner__heading {\n    font-size: 2rem !important;\n    margin-top: 3rem;\n  }\n\n  .banner__quick-links {\n    margin: 1rem 0 3rem 0;\n  }\n\n  .banner__summary {\n    margin: 2.5rem 0;\n  }\n\n  .banner__summary-item {\n    margin: 0 2rem .5rem 0;\n    display: flex;\n    align-content: center;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Choose your Function-as-a-Service Platform        Explore available Function-as-a-Service platforms and find one suiting your requirements.              check_circle       10 reviewed platforms, more on the way               check_circle       High- and low-level platform selection criteria              check_circle       Open source and extensible                   search      Find a Platform                  view_list      Browse Platforms      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BottomNavComponent.html":{"url":"components/BottomNavComponent.html","title":"component - BottomNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BottomNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/bottom-nav/bottom-nav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-bottom-nav\n            \n\n            \n                styleUrls\n                ./bottom-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./bottom-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toTop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onScrollToTop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scrollToAnchor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewportScroller: ViewportScroller)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewportScroller\n                                                  \n                                                        \n                                                                        ViewportScroller\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scrollToAnchor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onScrollToTop\n                        \n                        \n                    \n                \n            \n            \n                \nonScrollToTop(platformId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    platformId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toTop\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ViewportScroller} from '@angular/common';\n\n@Component({\n  selector: 'app-bottom-nav',\n  templateUrl: './bottom-nav.component.html',\n  styleUrls: ['./bottom-nav.component.scss']\n})\nexport class BottomNavComponent implements OnInit {\n  toTop = false;\n  @Input() scrollToAnchor: string;\n\n  constructor(private viewportScroller: ViewportScroller) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onScrollToTop(platformId: string) {\n    setTimeout(() => {\n      this.viewportScroller.scrollToAnchor(platformId);\n    }, 50);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    arrow_upward\n    To Top\n  \n\n\n    \n\n    \n                \n                    ./bottom-nav.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  position: sticky;\n  position: -webkit-sticky;\n  bottom: 0;\n  z-index: 20;\n}\n\n.bottom-navbar {\n  flex-shrink: 0;\n  padding: 0;\n  height: 3rem !important;\n  background: white;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-evenly;\n  box-shadow: 0 0 1px rgba(0, 0, 0, .3);\n}\n\n@media screen and (min-width: 510px) {\n  .bottom-navbar {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        arrow_upward    To Top  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BottomNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChildGroupingComponent.html":{"url":"components/ChildGroupingComponent.html","title":"component - ChildGroupingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChildGroupingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/child-grouping/child-grouping.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-child-grouping\n            \n\n            \n                styleUrls\n                ./child-grouping.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./child-grouping.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraCriterionTitle\n                            \n                            \n                                groupings\n                            \n                            \n                                parent\n                            \n                            \n                                renderReviewData\n                            \n                            \n                                reviewData\n                            \n                            \n                                subGroups\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/child-grouping/child-grouping.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraCriterionTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupings\n                    \n                \n                \n                    \n                        Type :         CriteriaGrouping[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parent\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        renderReviewData\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewData\n                    \n                \n                \n                    \n                        Type :         Map\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subGroups\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {CriteriaGrouping, CriterionInstance} from '../interfaces/classification';\n\n@Component({\n  selector: 'app-child-grouping',\n  templateUrl: './child-grouping.component.html',\n  styleUrls: ['./child-grouping.component.scss']\n})\nexport class ChildGroupingComponent {\n  @Input() groupings: CriteriaGrouping[];\n  @Input() subGroups: boolean = false;\n  @Input() parent: string = '';\n  @Input() extraCriterionTitle: string;\n  @Input() renderReviewData = false;\n  @Input() reviewData: Map;\n\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Grouping: {{g.name}}\n      {{parent + ' > ' + g.name}}\n    \n\n\n    \n      \n        \n        \n      \n\n      \n        \n        \n      \n    \n\n\n     ' + g.name\"\n                        [renderReviewData]=\"renderReviewData\"\n                        [reviewData]=\"reviewData\">\n    \n  \n\n\n\n    \n\n    \n                \n                    ./child-grouping.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  @include bg-grey;\n  margin: 0 .2rem;\n}\n\n.child-grouping {\n  margin: 0;\n  height: 100%;\n}\n\n.child-grouping__title {\n  padding: 1rem 1rem .5rem 1rem;\n  font-size: 1.1rem;\n  color: $violet-600;\n}\n\n.child-grouping__path {\n  padding: 0 1rem 1rem 1rem;\n}\n\n.child-grouping__criterion {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-items: center;\n  margin: .5rem;\n}\n\n.child-grouping__criterion--nested {\n  @include bg-grey;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Grouping: {{g.name}}      {{parent + \\' > \\' + g.name}}                                                                         \\' + g.name\"                        [renderReviewData]=\"renderReviewData\"                        [reviewData]=\"reviewData\">      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChildGroupingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationCriterion.html":{"url":"interfaces/ClassificationCriterion.html","title":"interface - ClassificationCriterion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationCriterion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a classification criterion for a to-be-classified software.\nGroupings can also contain other groupings, forming a hierarchy for criteria.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        exampleValues\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Criterion description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exampleValues\n                                    \n                                \n                                \n                                    \n                                        exampleValues:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Example values which an instance of this criterion CriterionInstance can store.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique criterion identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Criterion name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * Category of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport class CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationFramework.html":{"url":"interfaces/ClassificationFramework.html","title":"interface - ClassificationFramework","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationFramework\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        technologyCategory\n                                \n                                \n                                        viewCombinations\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Framework description (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique framework identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Framework name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category of technologies this framework helps to review.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewCombinations\n                                    \n                                \n                                \n                                    \n                                        viewCombinations:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of ClassificationViewCombination which organize the representation of views comprising different criteria groupings.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * Category of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport class CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationFrameworkResponse.html":{"url":"interfaces/ClassificationFrameworkResponse.html","title":"interface - ClassificationFrameworkResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationFrameworkResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        technologyCategory\n                                \n                                \n                                        viewCombinationIds\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewCombinationIds\n                                    \n                                \n                                \n                                    \n                                        viewCombinationIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationView.html":{"url":"interfaces/ClassificationView.html","title":"interface - ClassificationView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a classification view which comprises one or more CriteriaGrouping.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        groupings\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupings\n                                    \n                                \n                                \n                                    \n                                        groupings:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of CriteriaGrouping which organize the representation of criteria and optional sub-groupings.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique view identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * Category of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport class CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationViewCombination.html":{"url":"interfaces/ClassificationViewCombination.html","title":"interface - ClassificationViewCombination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationViewCombination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a combination of classifications view which comprises one or more ClassificationViews.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        default\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        views\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates whether this combination needs to be used for default UI rendering (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View combination description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique view combination identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View combination name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                    \n                                \n                                \n                                    \n                                        views:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of ClassificationView which organize the representation of criteria groupings.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * Category of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport class CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationViewCombinationResponse.html":{"url":"interfaces/ClassificationViewCombinationResponse.html","title":"interface - ClassificationViewCombinationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationViewCombinationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a server response with available combinations of classification views.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        default\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        viewIds\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewIds\n                                    \n                                \n                                \n                                    \n                                        viewIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationViewResponse.html":{"url":"interfaces/ClassificationViewResponse.html","title":"interface - ClassificationViewResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationViewResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a server response with available classification views.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        groupingIds\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupingIds\n                                    \n                                \n                                \n                                    \n                                        groupingIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAppConfigService\n\nAppConfigService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAppConfigService->CoreModule\n\n\n\n\n\nDataService\n\nDataService\n\nCoreModule -->\n\nDataService->CoreModule\n\n\n\n\n\nLogoLocatorService\n\nLogoLocatorService\n\nCoreModule -->\n\nLogoLocatorService->CoreModule\n\n\n\n\n\nRandomColorService\n\nRandomColorService\n\nCoreModule -->\n\nRandomColorService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            DataService\n                        \n                        \n                            LogoLocatorService\n                        \n                        \n                            RandomColorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {APP_INITIALIZER, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {EnsureModuleLoadedOnceGuard} from './ensure-module-loaded-once.guard';\nimport {DataService} from './services/data.service';\nimport {LogoLocatorService} from './services/logo-locator.service';\nimport {RandomColorService} from './services/random-color.service';\nimport {AppConfigService} from './services/app-config.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  providers: [\n    AppConfigService,\n    DataService,\n    LogoLocatorService,\n    RandomColorService,\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [AppConfigService],\n      useFactory: (appConfigService: AppConfigService) => {\n        return () => {\n          return appConfigService.loadAppConfig();\n        };\n      }\n    }]\n})\nexport class CoreModule extends EnsureModuleLoadedOnceGuard {\n\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    super(parentModule);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaBasedQuery.html":{"url":"interfaces/CriteriaBasedQuery.html","title":"interface - CriteriaBasedQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriteriaBasedQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        CriterionFilterValue\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interfaces/filtering.ts:53\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface RenderedFilterBlock {\n  blockName: string;\n  blockIcon?: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  filterId: string;\n  technologyCategory: string;\n  name: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  criterionId: string;\n  displayName: string;\n  filterType: CriterionFilterType;\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n *\n * @remarks\n * Available options:\n * -- bool:  indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n * -- lte: indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n * -- gte: indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n * -- containsOne: at least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n * -- containsAny: at least 1 arbitrary text value must be contained, translates to a toggle in the UI\n * -- containsAll: all specified text values must be contained, translates to a group of checkboxes in the UI\n * -- excludesAll: all specified text values must not be contained, translates to a group of checkboxes in the UI\n */\nexport enum CriterionFilterType {\n  bool = 'bool',\n  lte = 'lte',\n  gte = 'gte',\n  containsOne = 'containsOne',\n  containsAny = 'containsAny',\n  containsAll = 'containsAll',\n  excludesAll = 'excludesAll'\n}\n\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\nexport interface CriterionFilterValue {\n  filterType?: CriterionFilterType;\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaGrouping.html":{"url":"interfaces/CriteriaGrouping.html","title":"interface - CriteriaGrouping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriteriaGrouping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a group of ClassificationCriterion.\nGroupings can also contain other groupings, forming a hierarchy for criteria.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        criteria\n                                \n                                \n                                            Optional\n                                        groupings\n                                \n                                \n                                        id\n                                \n                                \n                                        locator\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                    \n                                \n                                \n                                    \n                                        criteria:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A set of ClassificationCriterion which describe a particular aspect of the reviewed technology.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupings\n                                    \n                                \n                                \n                                    \n                                        groupings:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A set of Sub-groupings which organize the representation of criteria and optional sub-groupings.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique grouping identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locator\n                                    \n                                \n                                \n                                    \n                                        locator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Grouping locator which can be used, e.g., for custom breadcrumbs generation.\nReserved for future use.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Grouping name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * Category of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport class CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaGroupingResponse.html":{"url":"interfaces/CriteriaGroupingResponse.html","title":"interface - CriteriaGroupingResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriteriaGroupingResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a server response with available criteria groupings.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        criteriaIds\n                                \n                                \n                                        id\n                                \n                                \n                                        locator\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        parentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteriaIds\n                                    \n                                \n                                \n                                    \n                                        criteriaIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locator\n                                    \n                                \n                                \n                                    \n                                        locator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentId\n                                    \n                                \n                                \n                                    \n                                        parentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaReview.html":{"url":"interfaces/CriteriaReview.html","title":"interface - CriteriaReview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriteriaReview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        CriterionInstance\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interfaces/responses.ts:53\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CriterionComponent.html":{"url":"components/CriterionComponent.html","title":"component - CriterionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CriterionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/criterion/criterion.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-criterion\n            \n\n            \n                styleUrls\n                ./criterion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./criterion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                criterion\n                            \n                            \n                                criterionInstance\n                            \n                            \n                                extraTitleText\n                            \n                            \n                                icon\n                            \n                            \n                                reviewMode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/criterion/criterion.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        criterion\n                    \n                \n                \n                    \n                        Type :         ClassificationCriterion\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        criterionInstance\n                    \n                \n                \n                    \n                        Type :         CriterionInstance\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        extraTitleText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text_snippet'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/criterion/criterion.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CriterionValue[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ClassificationCriterion, CriterionInstance, CriterionValue} from '../interfaces/classification';\n\n@Component({\n  selector: 'app-criterion',\n  templateUrl: './criterion.component.html',\n  styleUrls: ['./criterion.component.scss']\n})\nexport class CriterionComponent implements OnInit {\n  @Input() criterion: ClassificationCriterion;\n  @Input() extraTitleText: string;\n  @Input() criterionInstance: CriterionInstance;\n  @Input() reviewMode: boolean;\n  @Input() icon: string = 'text_snippet';\n  title: string;\n  values: CriterionValue[];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.extraTitleText ? this.title = this.extraTitleText + this.criterion.name : this.title = this.criterion.name;\n    if (this.criterionInstance) {\n      this.values = Array.from(this.criterionInstance.values);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{icon}}\n      {{title}}\n    \n  \n   {{criterion.description }}\n  \n     Examples: {{criterion.exampleValues | json }} \n  \n\n\n\n  \n    \n      {{icon}}\n      {{title}}: \n    \n\n\n    \n      \n        N/A\n        block\n      \n    \n\n    \n      \n        {{values[0].value | yesNo }}\n        info\n        \n         [{{i + 1}}] \n      \n    \n  \n\n   1\" class=\"criterion__value-list-block\">\n    \n      \n        {{valueIndex + 1 + \". \" + v.value}}\n        info\n        \n        \n          [{{i + 1}}]\n        \n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./criterion.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  width: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: flex-end;\n}\n\n.criterion__heading-line {\n  width: 100%;\n  margin: .5rem 0;\n  display: flex;\n  flex-flow: row nowrap;\n}\n\n.criterion__title-block {\n  display: flex;\n  flex-flow: row nowrap;\n  align-content: center;\n  justify-content: flex-start;\n  flex: 1 1 min-content;\n}\n\n.criterion__value-block {\n  display: flex;\n  flex-flow: row nowrap;\n  align-content: center;\n  justify-content: flex-end;\n  flex: 1 1 min-content;\n}\n\n.criterion__value-list-item {\n  font-size: 1rem;\n  line-height: 1rem;\n  margin: .5rem 0;\n}\n\n.criterion__value-list-item-divider {\n  margin: .5rem 0;\n}\n\n.criterion__value-list-block {\n  margin-top: .5rem;\n  display: flex;\n  flex-flow: column nowrap;\n  width: 90%;\n  align-self: center;\n}\n\n.criterion__heading-line-block-item {\n  align-self: center;\n  font-size: 1rem;\n  line-height: 1rem;\n}\n\n.criterion__icon {\n  font-size: 1.3rem;\n}\n\n.criterion__reference {\n  font-size: 1rem;\n  text-decoration: none;\n  padding-left: .2rem;\n}\n\n.criterion__title {\n  flex: 1;\n}\n\n.child-grouping__criterion-description {\n  flex: 2 0 100%;\n}\n\n.child-grouping__criterion-examples {\n  flex: 2 0 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{icon}}      {{title}}         {{criterion.description }}       Examples: {{criterion.exampleValues | json }}               {{icon}}      {{title}}:                       N/A        block                            {{values[0].value | yesNo }}        info                 [{{i + 1}}]                1\" class=\"criterion__value-list-block\">                  {{valueIndex + 1 + \". \" + v.value}}        info                          [{{i + 1}}]                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CriterionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CriterionFilterComponent.html":{"url":"components/CriterionFilterComponent.html","title":"component - CriterionFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CriterionFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/criterion-filter/criterion-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-criterion-filter\n            \n\n            \n                styleUrls\n                ./criterion-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./criterion-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterElement\n                            \n                            \n                                    Public\n                                FilterType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearFilter\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateQuery\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         CriterionFilterConfiguration\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateQuery\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearFilter\n                        \n                        \n                    \n                \n            \n            \n                \nclearFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl | FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            FilterType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CriterionFilterType\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {CriteriaBasedQuery, CriterionFilterConfiguration, CriterionFilterType} from '../../shared/interfaces/filtering';\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-criterion-filter',\n  templateUrl: './criterion-filter.component.html',\n  styleUrls: ['./criterion-filter.component.scss']\n})\nexport class CriterionFilterComponent implements OnInit {\n  @Input() filter: CriterionFilterConfiguration;\n  @Output() updateQuery = new EventEmitter();\n\n  filterElement: FormControl | FormGroup;\n  public FilterType = CriterionFilterType;\n\n  constructor(private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    if (this.filter.filterType === this.FilterType.bool || this.filter.filterType === this.FilterType.containsAny || this.filter.filterType === this.FilterType.lte) {\n      this.filterElement = this.fb.control(null);\n    } else {\n      let controls = this.fb.array([]);\n      this.filter.filterValues.forEach(v => controls.push(this.fb.control(false)));\n      this.filterElement = this.fb.group({\n        checkboxes: controls,\n        filterType: this.fb.control(this.filter.filterType)\n      });\n    }\n\n    this.filterElement.valueChanges.subscribe(value => {\n      let obj = {};\n      if (this.filter.filterType === this.FilterType.bool || this.filter.filterType === this.FilterType.containsAny) {\n        obj[this.filter.criterionId] = {\n          filterType: this.filter.filterType,\n          value: value as boolean\n        };\n      } else if (this.filter.filterType === this.FilterType.lte) {\n        obj[this.filter.criterionId] = {\n          filterType: this.filter.filterType,\n          value: value as number\n        };\n      } else {\n        let initialValues = this.filter.filterValues as string[];\n        let selectedStrings = initialValues.filter((x, i) => !!this.filterElement.value.checkboxes[i]);\n\n        obj[this.filter.criterionId] = {\n          filterType: this.filterElement.value.filterType,\n          value: selectedStrings\n        };\n        if (selectedStrings.length === 0) {\n          this.filterElement.markAsPristine();\n        }\n      }\n\n      this.updateQuery.emit(obj);\n    });\n\n\n    function isArrayOfStrings(value: any): boolean {\n      return Array.isArray(value) && value.every(item => typeof item === 'string');\n    }\n\n  }\n\n  clearFilter() {\n    this.filterElement.reset();\n    if (\n      this.filter.filterType === this.FilterType.containsAll ||\n      this.filter.filterType === this.FilterType.containsOne ||\n      this.filter.filterType === this.FilterType.excludesAll\n    ) {\n      this.filterElement.get('filterType').setValue(this.FilterType.containsOne);\n    }\n    this.filterElement.markAsPristine();\n  }\n}\n\n    \n\n    \n        \n  \n    {{filter.displayName}}\n  \n  \n    \n      \n        \n          Available\n        \n      \n      \n        \n          Not Available\n        \n      \n    \n  \n\n\n\n  \n    {{filter.displayName}}\n  \n  \n    \n    \n  \n\n\n\n  \n    {{filter.displayName}}\n  \n  \n    \n      \n        \n          {{value}}\n        \n      \n\n      \n        OR\n        AND\n        NOT\n      \n    \n  \n\n\n\n\n  Clear Filter\n\n\n\n    \n\n    \n                \n                    ./criterion-filter.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.filter-block__filter-values {\n  @include list-style-none;\n  padding-left: .2rem;\n}\n\n.criterion-block {\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.criterion-block__filter-name {\n  margin-bottom: 0;\n}\n\n.criterion-block__filter-body {\n  margin-top: .3rem;\n}\n\n.filter-block__filter-type {\n  height: 2.2rem;\n  margin: 0 auto .7rem;\n  align-items: center;\n}\n\n.clear-filter-button {\n  align-self: stretch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{filter.displayName}}                                Available                                      Not Available                          {{filter.displayName}}                    {{filter.displayName}}                                {{value}}                            OR        AND        NOT              Clear Filter'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CriterionFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionFilterConfiguration.html":{"url":"interfaces/CriterionFilterConfiguration.html","title":"interface - CriterionFilterConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriterionFilterConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a filter configuration for a given ClassificationCriterion.\nThis configuration defines the desired filtering behavior.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        criterionId\n                                \n                                \n                                        displayName\n                                \n                                \n                                        filterType\n                                \n                                \n                                            Optional\n                                        filterValues\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criterionId\n                                    \n                                \n                                \n                                    \n                                        criterionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterType\n                                    \n                                \n                                \n                                    \n                                        filterType:         CriterionFilterType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterValues\n                                    \n                                \n                                \n                                    \n                                        filterValues:      | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RenderedFilterBlock {\n  blockName: string;\n  blockIcon?: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  filterId: string;\n  technologyCategory: string;\n  name: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  criterionId: string;\n  displayName: string;\n  filterType: CriterionFilterType;\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n *\n * @remarks\n * Available options:\n * -- bool:  indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n * -- lte: indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n * -- gte: indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n * -- containsOne: at least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n * -- containsAny: at least 1 arbitrary text value must be contained, translates to a toggle in the UI\n * -- containsAll: all specified text values must be contained, translates to a group of checkboxes in the UI\n * -- excludesAll: all specified text values must not be contained, translates to a group of checkboxes in the UI\n */\nexport enum CriterionFilterType {\n  bool = 'bool',\n  lte = 'lte',\n  gte = 'gte',\n  containsOne = 'containsOne',\n  containsAny = 'containsAny',\n  containsAll = 'containsAll',\n  excludesAll = 'excludesAll'\n}\n\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\nexport interface CriterionFilterValue {\n  filterType?: CriterionFilterType;\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionFilterValue.html":{"url":"interfaces/CriterionFilterValue.html","title":"interface - CriterionFilterValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriterionFilterValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        filterType\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterType\n                                    \n                                \n                                \n                                    \n                                        filterType:         CriterionFilterType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     boolean | number | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | number | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RenderedFilterBlock {\n  blockName: string;\n  blockIcon?: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  filterId: string;\n  technologyCategory: string;\n  name: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  criterionId: string;\n  displayName: string;\n  filterType: CriterionFilterType;\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n *\n * @remarks\n * Available options:\n * -- bool:  indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n * -- lte: indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n * -- gte: indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n * -- containsOne: at least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n * -- containsAny: at least 1 arbitrary text value must be contained, translates to a toggle in the UI\n * -- containsAll: all specified text values must be contained, translates to a group of checkboxes in the UI\n * -- excludesAll: all specified text values must not be contained, translates to a group of checkboxes in the UI\n */\nexport enum CriterionFilterType {\n  bool = 'bool',\n  lte = 'lte',\n  gte = 'gte',\n  containsOne = 'containsOne',\n  containsAny = 'containsAny',\n  containsAll = 'containsAll',\n  excludesAll = 'excludesAll'\n}\n\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\nexport interface CriterionFilterValue {\n  filterType?: CriterionFilterType;\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionInstance.html":{"url":"interfaces/CriterionInstance.html","title":"interface - CriterionInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriterionInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        criterionId\n                                \n                                \n                                            Optional\n                                        reviewDate\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criterionId\n                                    \n                                \n                                \n                                    \n                                        criterionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique ClassificationCriterion identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewDate\n                                    \n                                \n                                \n                                    \n                                        reviewDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A date review was conducted (optional).\nReserved for future use.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of CriterionValue which store the criterion-specific review data for the reviewed technology.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * Category of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport class CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CriterionValue.html":{"url":"classes/CriterionValue.html","title":"class - CriterionValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CriterionValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a generic data value for the given CriterionInstance.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                comment\n                            \n                            \n                                    Optional\n                                references\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/interfaces/classification.ts:179\n                            \n                        \n\n                \n                    \n                        An additional note describing the review value (optional).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            references\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/interfaces/classification.ts:175\n                            \n                        \n\n                \n                    \n                        A list of references, e.g., to official documentation, confirming the review value (optional).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/interfaces/classification.ts:171\n                            \n                        \n\n                \n                    \n                        A value of primitive type representing criterion-specific review data.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * Category of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport class CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildGroupings\n                            \n                            \n                                getCriteria\n                            \n                            \n                                getDefaultViewCombinationData\n                            \n                            \n                                getDossier\n                            \n                            \n                                getDossiersOfCategory\n                            \n                            \n                                getFrameworkForCategory\n                            \n                            \n                                getFrameworkForTechnologyType\n                            \n                            \n                                getFrameworkGroupingsData\n                            \n                            \n                                getFrameworks\n                            \n                            \n                                getGroupings\n                            \n                            \n                                getInfoResources\n                            \n                            \n                                getTechnologies\n                            \n                            \n                                getTechnologiesOfCategory\n                            \n                            \n                                getTechnology\n                            \n                            \n                                getTechnologyFilter\n                            \n                            \n                                getViewCombinations\n                            \n                            \n                                getViewGroupingsData\n                            \n                            \n                                getViews\n                            \n                            \n                                getViewsData\n                            \n                            \n                                    Private\n                                    Static\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logoLocator: LogoLocatorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/data.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logoLocator\n                                                  \n                                                        \n                                                                        LogoLocatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildGroupings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildGroupings(data: CriteriaGroupingResponse[], criteria: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:413\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            CriteriaGroupingResponse[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    criteria\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CriteriaGrouping[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCriteria\n                        \n                        \n                    \n                \n            \n            \n                \ngetCriteria()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDefaultViewCombinationData\n                        \n                        \n                    \n                \n            \n            \n                \ngetDefaultViewCombinationData(frameworkId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:345\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    frameworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDossier\n                        \n                        \n                    \n                \n            \n            \n                \ngetDossier(technologyId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:267\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    technologyId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDossiersOfCategory\n                        \n                        \n                    \n                \n            \n            \n                \ngetDossiersOfCategory(category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFrameworkForCategory\n                        \n                        \n                    \n                \n            \n            \n                \ngetFrameworkForCategory(techCategory: TechnologyCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    techCategory\n                                    \n                                                TechnologyCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFrameworkForTechnologyType\n                        \n                        \n                    \n                \n            \n            \n                \ngetFrameworkForTechnologyType(category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFrameworkGroupingsData\n                        \n                        \n                    \n                \n            \n            \n                \ngetFrameworkGroupingsData(frameworkId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:333\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    frameworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFrameworks\n                        \n                        \n                    \n                \n            \n            \n                \ngetFrameworks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGroupings\n                        \n                        \n                    \n                \n            \n            \n                \ngetGroupings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInfoResources\n                        \n                        \n                    \n                \n            \n            \n                \ngetInfoResources()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:405\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTechnologies\n                        \n                        \n                    \n                \n            \n            \n                \ngetTechnologies(withDossier)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    withDossier\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTechnologiesOfCategory\n                        \n                        \n                    \n                \n            \n            \n                \ngetTechnologiesOfCategory(category: string, withDossier)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    withDossier\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTechnology\n                        \n                        \n                    \n                \n            \n            \n                \ngetTechnology(id: string, withDossier)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    withDossier\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTechnologyFilter\n                        \n                        \n                    \n                \n            \n            \n                \ngetTechnologyFilter(category: TechnologyCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                TechnologyCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getViewCombinations\n                        \n                        \n                    \n                \n            \n            \n                \ngetViewCombinations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getViewGroupingsData\n                        \n                        \n                    \n                \n            \n            \n                \ngetViewGroupingsData(viewId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:386\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getViews\n                        \n                        \n                    \n                \n            \n            \n                \ngetViews()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getViewsData\n                        \n                        \n                    \n                \n            \n            \n                \ngetViewsData(viewCombinationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:367\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewCombinationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(err: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {combineLatest, Observable, throwError} from 'rxjs';\nimport {catchError, map, mergeAll, mergeMap, shareReplay, take, toArray} from 'rxjs/operators';\nimport {LogoLocatorService} from './logo-locator.service';\nimport {\n  ClassificationCriterion,\n  ClassificationFramework,\n  ClassificationView,\n  ClassificationViewCombination,\n  CriteriaGrouping\n} from '../../shared/interfaces/classification';\nimport {Technology, TechnologyCategory, TechnologyDossier} from '../../shared/interfaces/technology';\nimport {\n  ClassificationFrameworkResponse,\n  ClassificationViewCombinationResponse,\n  ClassificationViewResponse,\n  CriteriaGroupingResponse, TechnologyDossierResponse\n} from '../../shared/interfaces/responses';\nimport {CriterionFilterType, TechnologyFilterConfiguration} from '../../shared/interfaces/filtering';\nimport {InfoResourceSection} from '../../shared/interfaces/info';\n\nconst criteriaPath = '/assets/data/framework/criteria.json';\nconst criteriaGroupingsPath = '/assets/data/framework/groupings.json';\nconst frameworkViewsPath = '/assets/data/framework/views.json';\nconst frameworkViewCombinationsPath = '/assets/data/framework/view-combinations.json';\nconst frameworksPath = '/assets/data/framework/frameworks.json';\nconst supportedPlatformsPath = '/assets/data/platforms/platforms.json';\nconst dossiersPath: string = '/assets/data/platforms/';\nconst filterConfigurationsPath = '/assets/data/framework/filters.json';\nconst infoResourcesPath = '/assets/data/info/resources.json';\n\n@Injectable()\nexport class DataService {\n\n  constructor(private http: HttpClient, private logoLocator: LogoLocatorService) {\n  }\n\n  private static handleError(err: any): Observable {\n    let errorMessage: string;\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      errorMessage = `Backend returned code ${err.status}: ${err.body?.error}`;\n    }\n    console.error(err);\n    return throwError(errorMessage);\n  }\n\n  getCriteria(): Observable {\n    return this.http.get(criteriaPath)\n      .pipe(\n        catchError(DataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  getGroupings(): Observable {\n    return combineLatest([\n      this.getCriteria(),\n      this.http.get(criteriaGroupingsPath)\n    ]).pipe(\n      map(([criteria, groupings]) => {\n        const criteriaLookup = new Map(criteria.map(c => [c.id, c] as [string, ClassificationCriterion]));\n        return this.buildGroupings(groupings, criteriaLookup);\n      }),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViews(): Observable {\n    return combineLatest([\n      this.getGroupings(),\n      this.http.get(frameworkViewsPath)\n    ]).pipe(\n      map(([groupings, views]) => {\n          const groupingsLookup = new Map(groupings.map(c => [c.id, c] as [string, CriteriaGrouping]));\n          let result: ClassificationView[] = [];\n\n          views.forEach(v => {\n            let view: ClassificationView = {\n              id: v.id,\n              name: v.name,\n              description: v.description,\n              groupings: new Set()\n            };\n\n            v.groupingIds.forEach(id => {\n              if (groupingsLookup.has(id)) {\n                view.groupings.add(groupingsLookup.get(id));\n              }\n            });\n            result.push(view);\n          });\n\n          return result;\n        }\n      ),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViewCombinations(): Observable {\n    return combineLatest([\n      this.getViews(),\n      this.http.get(frameworkViewCombinationsPath)\n    ]).pipe(\n      map(([views, viewCombinations]) => {\n          let result: ClassificationViewCombination[] = [];\n          viewCombinations.forEach(c => {\n            let combination: ClassificationViewCombination = {\n              id: c.id,\n              name: c.name,\n              description: c.description,\n              default: c.default,\n              views: new Set()\n            };\n\n            c.viewIds.forEach(id => {\n              let view = views.find(v => id === v.id);\n              if (view) {\n                combination.views.add(view);\n              }\n            });\n            result.push(combination);\n          });\n\n          return result;\n        }\n      ),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getFrameworks(): Observable {\n    return combineLatest([\n      this.getViewCombinations(),\n      this.http.get(frameworksPath)\n    ]).pipe(\n      map(([combs, frameworks]) => {\n        let result: ClassificationFramework[] = [];\n        frameworks.forEach(f => {\n          let framework: ClassificationFramework = {\n            id: f.id,\n            technologyCategory: f.technologyCategory,\n            name: f.name,\n            description: f.description,\n            viewCombinations: new Set()\n          };\n\n          f.viewCombinationIds.forEach(id => {\n            let viewCombination = combs.find(v => id === v.id);\n            if (viewCombination) {\n              framework.viewCombinations.add(viewCombination);\n            }\n          });\n          result.push(framework);\n        });\n\n        return result;\n      }),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getFrameworkForCategory(techCategory: TechnologyCategory): Observable {\n    return combineLatest([\n      this.getViewCombinations(),\n      this.http.get(frameworksPath)\n    ]).pipe(\n      map(([combs, frameworks]) => {\n        let result: ClassificationFramework;\n        let f = frameworks.find(f => f.technologyCategory === techCategory);\n\n        result = {\n          id: f.id,\n          technologyCategory: f.technologyCategory,\n          name: f.name,\n          description: f.description,\n          viewCombinations: new Set()\n        };\n\n        f.viewCombinationIds.forEach(id => {\n          let viewCombination = combs.find(v => id === v.id);\n          if (viewCombination) {\n            result.viewCombinations.add(viewCombination);\n          }\n        });\n\n        return result;\n      }),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getFrameworkForTechnologyType(category: string): Observable {\n    return this.getFrameworks().pipe(\n      map((f) => f.find(item => item.technologyCategory.toLocaleLowerCase() === category.toLocaleLowerCase())),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getTechnologies(withDossier = false): Observable {\n    return this.http.get(supportedPlatformsPath)\n      .pipe(\n        map((items) =>\n          items.map(\n            item => {\n              let result: Technology = {\n                ...item,\n                logoLocation: this.logoLocator.getLogoPath(item.logoLocator)\n              };\n              if (withDossier) {\n                this.getDossier(item.id).pipe(take(1)).subscribe({\n                  next: value => value ? result.dossier = value : false,\n                  error: catchError\n                });\n              }\n              return result;\n            }\n          )\n        ),\n        shareReplay(1),\n        catchError(DataService.handleError)\n      );\n  }\n\n  getTechnologiesOfCategory(category: string, withDossier = false): Observable {\n    return this.getTechnologies(withDossier).pipe(\n      map((techs) =>\n        techs.filter(t => t.category.toLocaleLowerCase() === category.toLocaleLowerCase())\n      ),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getTechnology(id: string, withDossier = false): Observable {\n    return combineLatest([\n      this.http.get(supportedPlatformsPath),\n      this.getDossier(id)\n    ]).pipe(\n      map(([items, dossier]) => {\n          let technology: Technology = items.find(item => item.id === id);\n          let result: Technology = {\n            ...technology,\n            logoLocation: this.logoLocator.getLogoPath(technology.logoLocator)\n          };\n          if (withDossier) {\n            result.dossier = dossier;\n          }\n          return result;\n        }\n      ),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n\n  }\n\n  getDossier(technologyId: string): Observable {\n    const dossierPath = dossiersPath.concat(technologyId, '.json');\n    return this.http.get(dossierPath)\n      .pipe(\n        map( (res) => {\n          return {\n            platformId: technologyId,\n            reviewDate: res.reviewDate,\n            reviewedCriteria: new Map(Object.entries(res.reviewedCriteria))\n          } as TechnologyDossier;\n        }),\n        catchError(DataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  getDossiersOfCategory(category: string): Observable {\n    return this.getTechnologiesOfCategory(category).pipe(\n      mergeMap((techs) => techs),\n      mergeMap((t) => this.getDossier(t.id)),\n      toArray(),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getTechnologyFilter(category: TechnologyCategory): Observable {\n    return combineLatest([\n      this.http.get(filterConfigurationsPath).pipe(\n        map((conf) => conf.find(c => c.technologyCategory.toLocaleLowerCase() === category.toLocaleLowerCase())),\n      ),\n      this.getDossiersOfCategory(category)\n    ]).pipe(\n      map(([filter, dossiers]) => {\n          const criteriaValues = new Map>();\n          dossiers.forEach(d => {\n\n            d.reviewedCriteria.forEach((criterionInstance, key) => {\n              const distinctValues = new Set();\n              const previous: Set = criteriaValues.get(key);\n\n              criterionInstance.values.forEach(v => distinctValues.add(v.value));\n              if (previous) {\n                criteriaValues.set(key, new Set([...previous, ...distinctValues]));\n              } else {\n                criteriaValues.set(key, distinctValues);\n              }\n            });\n          });\n\n          filter.filters.forEach((f) => {\n            if (f.filterType === CriterionFilterType.lte) {\n              const range: number[] = Array.from(criteriaValues.get(f.criterionId)).sort(((a, b) => a > b ? 1 : -1));\n              f.filterValues = [range[0], range[range.length - 1]];\n            } else if (f.filterType !== CriterionFilterType.bool) {\n              f.filterValues = Array.from(criteriaValues.get(f.criterionId).values());\n            }\n          });\n          return filter;\n        }\n      ),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getFrameworkGroupingsData(frameworkId: string): Observable {\n    return this.getDefaultViewCombinationData(frameworkId).pipe(\n      mergeMap((vc) => this.getViewsData(vc.id)),\n      mergeAll(),\n      mergeMap(v => this.getViewGroupingsData(v.id)),\n      mergeAll(),\n      toArray(),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getDefaultViewCombinationData(frameworkId: string): Observable {\n    return combineLatest([\n      this.http.get(frameworkViewCombinationsPath),\n      this.http.get(frameworksPath),\n    ]).pipe(\n      map(([vcs, fws]) => {\n        const vcLookup = new Map(vcs.map(vc => [vc.id, vc] as [string, ClassificationViewCombinationResponse]));\n        let framework = fws.find(f => f.id === frameworkId);\n        if (framework) {\n          for (let id of framework.viewCombinationIds) {\n            let temp = vcLookup.get(id);\n            if (temp && temp.default) {\n              return temp;\n            }\n          }\n        }\n      }),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViewsData(viewCombinationId: string): Observable {\n    return combineLatest([\n      this.http.get(frameworkViewCombinationsPath),\n      this.http.get(frameworkViewsPath)\n    ]).pipe(\n      map(([combs, views]) => {\n        const viewsLookup = new Map(views.map(v => [v.id, v] as [string, ClassificationViewResponse]));\n        let result = [];\n        let vc = combs.find(c => c.id === viewCombinationId);\n        if (vc) {\n          vc.viewIds.forEach(id => result.push(viewsLookup.get(id)));\n        }\n        return result;\n      }),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViewGroupingsData(viewId: string): Observable {\n    return combineLatest([\n      this.http.get(frameworkViewsPath),\n      this.http.get(criteriaGroupingsPath)])\n      .pipe(\n        map(([views, groupings]) => {\n          const groupingsLookup = new Map(groupings.map(g => [g.id, g] as [string, CriteriaGroupingResponse]));\n          let result = [];\n          let view = views.find(v => v.id === viewId);\n          if (view) {\n            view.groupingIds.forEach(id => result.push(groupingsLookup.get(id)));\n          }\n          return result;\n        }),\n        catchError(DataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  getInfoResources(): Observable {\n    return this.http.get(infoResourcesPath)\n      .pipe(\n        catchError(DataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  private buildGroupings(data: CriteriaGroupingResponse[], criteria: Map): CriteriaGrouping[] {\n    const result: CriteriaGrouping[] = [];\n    const lookup: Map = new Map();\n\n    data.forEach(g => {\n        let relatedCriteria: Set = new Set();\n        if (g.criteriaIds) {\n          g.criteriaIds.forEach(id => criteria.has(id) ? relatedCriteria.add(criteria.get(id)) : false);\n        }\n        lookup.set(g.id, ({\n          id: g.id,\n          name: g.name,\n          locator: g.locator,\n          groupings: new Set(),\n          criteria: relatedCriteria\n        } as CriteriaGrouping));\n      }\n    );\n\n    data.forEach(g => {\n      if (g.parentId) {\n        lookup.get(g.parentId).groupings.add(lookup.get(g.id));\n      } else {\n        result.push(lookup.get(g.id));\n      }\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnsureModuleLoadedOnceGuard.html":{"url":"classes/EnsureModuleLoadedOnceGuard.html","title":"class - EnsureModuleLoadedOnceGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnsureModuleLoadedOnceGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ensure-module-loaded-once.guard.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(targetModule: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/ensure-module-loaded-once.guard.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        targetModule\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EnsureModuleLoadedOnceGuard {\n  constructor(targetModule: any) {\n    if (targetModule) {\n      throw new Error(`${targetModule.constructor.name} has already been loaded. Import this module in the AppModule only.`);\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FaqComponent.html":{"url":"components/FaqComponent.html","title":"component - FaqComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FaqComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/faq/faq.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-faq\n            \n\n            \n                styleUrls\n                ./faq.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./faq.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/information/faq/faq.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/faq/faq.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.scss']\n})\nexport class FaqComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        faq works!\n\n    \n\n    \n                \n                    ./faq.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'faq works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FaqComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    © 2021 FaaStener\n    \n      This SOFTWARE PRODUCT is provided \"as is\" and \"with all faults.\"\n      THE PROVIDER makes no representations or warranties of any kind concerning the safety, suitability, lack\n      of viruses, inaccuracies, typographical errors, or other harmful components of this SOFTWARE PRODUCT.\n    \n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                @import \"../../_scss/global/variables\";\n\n.main-grid__footer {\n  height: 100%;\n  background-color: $violet-500;\n  color: #ffffff;\n  display: flex;\n  justify-content: center;\n}\n\n.footer__section {\n  margin: 0;\n  padding: 1em;\n  display: flex;\n  flex-direction: column;\n  justify-items: center;\n  align-items: center;\n}\n\n.footer__heading {\n  padding: 0 .4em .5rem .4rem;\n  border-bottom: .2rem solid $pink-900;\n}\n\n.section_disclaimer {\n  max-width: 57rem;\n}\n\n@media screen and (min-width: 1100px) {\n  .footer__section {\n    max-width: 1200px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      © 2021 FaaStener          This SOFTWARE PRODUCT is provided \"as is\" and \"with all faults.\"      THE PROVIDER makes no representations or warranties of any kind concerning the safety, suitability, lack      of viruses, inaccuracies, typographical errors, or other harmful components of this SOFTWARE PRODUCT.      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameworkComponent.html":{"url":"components/FrameworkComponent.html","title":"component - FrameworkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FrameworkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/framework/framework.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-framework\n            \n\n            \n                styleUrls\n                ./framework.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./framework.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                framework\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/framework/framework.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/framework/framework.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            framework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassificationFramework\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information/framework/framework.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ClassificationFramework} from '../../shared/interfaces/classification';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-framework',\n  templateUrl: './framework.component.html',\n  styleUrls: ['./framework.component.scss']\n})\nexport class FrameworkComponent implements OnInit {\n  framework: ClassificationFramework;\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.framework = data['resolvedData'];\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./framework.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FrameworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameworkRendererComponent.html":{"url":"components/FrameworkRendererComponent.html","title":"component - FrameworkRendererComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FrameworkRendererComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/framework-renderer/framework-renderer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-framework-renderer\n            \n\n            \n                styleUrls\n                ./framework-renderer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./framework-renderer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedGrouping\n                            \n                            \n                                viewToggles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onGroupingSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraCriterionTitle\n                            \n                            \n                                framework\n                            \n                            \n                                includeFrameworkInfo\n                            \n                            \n                                renderReviewData\n                            \n                            \n                                reviewData\n                            \n                            \n                                selectedViewCombination\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, viewportScroller: ViewportScroller)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewportScroller\n                                                  \n                                                        \n                                                                        ViewportScroller\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraCriterionTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        framework\n                    \n                \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        includeFrameworkInfo\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        renderReviewData\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewData\n                    \n                \n                \n                    \n                        Type :         Map\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedViewCombination\n                    \n                \n                \n                    \n                        Type :         ClassificationViewCombination\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onGroupingSelected\n                        \n                        \n                    \n                \n            \n            \n                \nonGroupingSelected(viewId: string, grouping: CriteriaGrouping)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    grouping\n                                    \n                                                CriteriaGrouping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedGrouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewToggles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ClassificationFramework, ClassificationViewCombination, CriteriaGrouping, CriterionInstance} from '../interfaces/classification';\nimport {ViewportScroller} from '@angular/common';\n\n@Component({\n  selector: 'app-framework-renderer',\n  templateUrl: './framework-renderer.component.html',\n  styleUrls: ['./framework-renderer.component.scss']\n})\nexport class FrameworkRendererComponent implements OnInit {\n  @Input() framework: ClassificationFramework;\n  @Input() includeFrameworkInfo = true;\n  @Input() selectedViewCombination: ClassificationViewCombination;\n  @Input() extraCriterionTitle: string;\n  @Input() renderReviewData: boolean = false;\n  @Input() reviewData: Map;\n\n  viewToggles: Map = new Map();\n  selectedGrouping: Map = new Map();\n\n  constructor(private route: ActivatedRoute, private viewportScroller: ViewportScroller) {\n  }\n\n  ngOnInit(): void {\n    if (!this.selectedViewCombination) {\n      for (let vc of this.framework.viewCombinations) {\n        if (vc.default) {\n          this.selectedViewCombination = vc;\n          break;\n        }\n      }\n    }\n    // Initialize default view configuration\n    this.selectedViewCombination.views.forEach(v => this.viewToggles.set(v.id, false));\n  }\n\n  onGroupingSelected(viewId: string, grouping: CriteriaGrouping) {\n    if (this.selectedGrouping.get(viewId)?.id === grouping.id) {\n      this.selectedGrouping.set(viewId, undefined);\n    } else {\n      this.selectedGrouping.set(viewId, grouping);\n      setTimeout(() => {\n        this.viewportScroller.scrollToAnchor(grouping.id);\n      }, 50);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{framework.name}}\n    {{framework.description}}\n  \n\n  \n    \n      \n        {{view.name}}\n        \n        Flat View\n        \n      \n      {{view.description}}\n\n      \n        \n          \n          \n          \n            \n              {{g.name}}\n            \n          \n        \n      \n\n      \n        \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./framework-renderer.component.scss\n                \n                @import \"../../_scss/shared\";\n\n.framework {\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 0 1rem;\n  align-items: center;\n  height: 100%;\n}\n\n.framework__info {\n}\n\n.framework__root-groupings {\n  display: flex;\n  flex-flow: row wrap;\n}\n\n.framework__grouping-details {\n  order: 2;\n  flex: 100% 0;\n  padding-bottom: 1rem;\n}\n\n.framework__root-grouping-card {\n  margin: .2rem;\n  background: $gray-card;\n  cursor: pointer;\n  flex: 1 1 min-content;\n  order: 3;\n\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: $salad-600;\n  }\n}\n\n\n.framework__view {\n  margin: 1.5rem 0;\n  display: flex;\n  flex-flow: column nowrap;\n  width: 100%;\n}\n\n.framework__view-config-row {\n  display: flex;\n  align-items: center;\n}\n\n.framework__view-title {\n  flex: 1 1 auto;\n}\n\n.framework__view-toggle {\n  flex: 0 0 auto;\n  font-size: .8rem;\n}\n\n.framework__root-grouping-card--first {\n  order: 1;\n  background: $salad-600;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{framework.name}}    {{framework.description}}                      {{view.name}}                Flat View                    {{view.description}}                                                                      {{g.name}}                                                                      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FrameworkRendererComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/FrameworkResolver.html":{"url":"guards/FrameworkResolver.html","title":"guard - FrameworkResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    FrameworkResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/information/resolvers/framework-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, config: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/resolvers/framework-resolver.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resolvers/framework-resolver.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {ClassificationFramework} from '../../shared/interfaces/classification';\nimport {Observable} from 'rxjs';\nimport {DataService} from '../../core/services/data.service';\nimport {AppConfigService} from '../../core/services/app-config.service';\n\n@Injectable()\nexport class FrameworkResolver implements Resolve {\n\n  constructor(private dataService: DataService, private config: AppConfigService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    let defaultCategory = this.config.defaultTechCategory;\n    return this.dataService.getFrameworkForCategory(defaultCategory);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/header/header.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n  \n    \n      menu\n      \n       Home \n       About \n       Platforms \n       Contact Us \n      \n      \n    \n\n    \n      \n         Home \n         About \n         Platforms \n         Contact Us \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  z-index: 10;\n  background: #fff;\n  box-shadow: 0 0 1px rgba(0, 0, 0, .11), 0 1px 2px rgba(0, 0, 0, .25);\n}\n\n.header__toolbar {\n  margin: 0;\n  height: 4em;\n  display: flex;\n  justify-content: center;\n}\n\n.header__menu {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  margin: 0;\n  padding: 0 !important;\n  justify-content: space-around;\n  align-items: center;\n  @include list-style-none;\n}\n\n.header__spacer {\n  display: none;\n  flex-grow: 2;\n}\n\n.header__logo {\n  width: 100%;\n  height: auto;\n  max-width: 5.5rem;\n  padding-top: .5rem;\n  content: url(\"../../../assets/images/logo-h.png\");\n}\n\n.menu__link {\n  display: block !important;\n  height: 100% !important;\n  width: 100% !important;\n  padding-top: 2em !important;\n}\n\n.menu__text {\n  display: none;\n}\n\n.menu__link, .menu__link-icon {\n  @include nav_item;\n  outline: 0;\n}\n\n.menu__link--active {\n  color: $pink-main !important;\n}\n\n@media screen and (min-width: 510px) {\n  .header__toolbar {\n    height: 6em;\n  }\n\n  .menu__icon {\n    display: none;\n  }\n\n  .header__logo {\n    content: url(\"../../../assets/images/logo-v.png\");\n    max-width: 3rem;\n  }\n\n  .menu__text {\n    display: flex;\n    height: 100%;\n    align-items: center;\n  }\n\n  .menu__link-icon {\n    margin-top: .55em !important;\n  }\n}\n\n@media screen and (min-width: 620px) {\n  .menu__link {\n    font-size: .95rem;\n  }\n\n  .header__spacer {\n    display: list-item;\n  }\n\n  .header__logo {\n    margin: 0 1rem 0 2rem;\n  }\n\n  .menu__link-icon {\n    margin-right: 2rem !important;\n  }\n}\n\n@media screen and (min-width: 1100px) {\n  .header__menu {\n    max-width: 1200px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu             Home        About        Platforms        Contact Us                                    Home          About          Platforms          Contact Us             '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                supportedPlatforms$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            supportedPlatforms$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.dataService.getTechnologies()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {DataService} from '../core/services/data.service';\n\n@Component({\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n  supportedPlatforms$ = this.dataService.getTechnologies();\n\n  constructor(private dataService: DataService) {\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                :host {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoResource.html":{"url":"interfaces/InfoResource.html","title":"interface - InfoResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InfoResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/info.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing an information resource related to a specific technology category.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        reference\n                                \n                                \n                                        resource\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference\n                                    \n                                \n                                \n                                    \n                                        reference:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource\n                                    \n                                \n                                \n                                    \n                                        resource:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface InfoResourceSection {\n  id: string;\n  title: string;\n  description: string;\n  technologyCategory: string;\n  resources: InfoResource[];\n}\n\n/**\n * An interface representing an information resource related to a specific technology category.\n */\nexport interface InfoResource {\n  id?: string;\n  resource: string;\n  reference: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoResourceSection.html":{"url":"interfaces/InfoResourceSection.html","title":"interface - InfoResourceSection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InfoResourceSection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/info.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a section grouping information resources.\nSuch sections represent different categories of additional information, e.g., research publications, blog posts, etc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        resources\n                                \n                                \n                                        technologyCategory\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resources\n                                    \n                                \n                                \n                                    \n                                        resources:         InfoResource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InfoResource[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface InfoResourceSection {\n  id: string;\n  title: string;\n  description: string;\n  technologyCategory: string;\n  resources: InfoResource[];\n}\n\n/**\n * An interface representing an information resource related to a specific technology category.\n */\nexport interface InfoResource {\n  id?: string;\n  resource: string;\n  reference: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationComponent.html":{"url":"components/InformationComponent.html","title":"component - InformationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InformationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/information.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-information\n            \n\n            \n                styleUrls\n                ./information.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                framework\n                            \n                            \n                                    Readonly\n                                navLinks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/information/information.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            framework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassificationFramework\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information/information.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            navLinks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {location: 'framework', label: 'Framework', icon: 'menu_book'},\n    {location: 'resources', label: 'Resources', icon: 'library_books'}\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information/information.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ClassificationFramework} from '../shared/interfaces/classification';\n\n@Component({\n  selector: 'app-information',\n  templateUrl: './information.component.html',\n  styleUrls: ['./information.component.scss']\n})\nexport class InformationComponent {\n  readonly navLinks = [\n    {location: 'framework', label: 'Framework', icon: 'menu_book'},\n    {location: 'resources', label: 'Resources', icon: 'library_books'}\n  ];\n  framework: ClassificationFramework;\n\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      {{ link.label }}\n    \n  \n\n\n\n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./information.component.scss\n                \n                @import \"../_scss/shared\";\n\n:host {\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.info-tabs {\n  width: 100%;\n  color: white;\n  display: flex;\n}\n\n.info-tabs__links {\n  width: 100%;\n  display: flex;\n  margin: 0 auto;\n}\n\n.info-tabs--link {\n  flex: 1 1 auto;\n  font-size: .8rem;\n}\n\n.info-main {\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  width: 100%;\n}\n\n@media screen and (min-width: 1100px) {\n  .info-tabs__links {\n    max-width: 1200px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ link.label }}              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InformationModule.html":{"url":"modules/InformationModule.html","title":"module - InformationModule","body":"\n                   \n\n\n\n\n    Modules\n    InformationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InformationModule\n\n\n\ncluster_InformationModule_declarations\n\n\n\ncluster_InformationModule_imports\n\n\n\n\nFaqComponent\n\nFaqComponent\n\n\n\nInformationModule\n\nInformationModule\n\nInformationModule -->\n\nFaqComponent->InformationModule\n\n\n\n\n\nFrameworkComponent\n\nFrameworkComponent\n\nInformationModule -->\n\nFrameworkComponent->InformationModule\n\n\n\n\n\nInformationComponent\n\nInformationComponent\n\nInformationModule -->\n\nInformationComponent->InformationModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nInformationModule -->\n\nResourcesComponent->InformationModule\n\n\n\n\n\nInformationRoutingModule\n\nInformationRoutingModule\n\nInformationModule -->\n\nInformationRoutingModule->InformationModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nInformationModule -->\n\nSharedModule->InformationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/information/information.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FaqComponent\n                        \n                        \n                            FrameworkComponent\n                        \n                        \n                            InformationComponent\n                        \n                        \n                            ResourcesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InformationRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ResourcesComponent} from './resources/resources.component';\nimport {FaqComponent} from './faq/faq.component';\nimport {InformationComponent} from './information.component';\nimport {InformationRoutingModule} from './information-routing.module';\nimport {SharedModule} from '../shared/shared.module';\nimport {ResourcesResolver} from './resolvers/resources-resolver.service';\nimport {FrameworkComponent} from './framework/framework.component';\n\n@NgModule({\n  declarations: [ResourcesComponent, FaqComponent, InformationComponent, FrameworkComponent],\n  imports: [CommonModule, SharedModule, InformationRoutingModule],\n  providers: [ResourcesResolver]\n})\nexport class InformationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InformationRoutingModule.html":{"url":"modules/InformationRoutingModule.html","title":"module - InformationRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    InformationRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/information/information-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ResourcesComponent} from './resources/resources.component';\nimport {FaqComponent} from './faq/faq.component';\nimport {InformationComponent} from './information.component';\nimport {FrameworkResolver} from './resolvers/framework-resolver.service';\nimport {ResourcesResolver} from './resolvers/resources-resolver.service';\nimport {FrameworkComponent} from './framework/framework.component';\n\nconst infoRoutes: Routes = [\n  {\n    path: '',\n    component: InformationComponent,\n    children: [\n      {path: '', pathMatch: 'full', redirectTo: 'framework'},\n      {path: 'framework', component: FrameworkComponent, resolve: {resolvedData: FrameworkResolver}},\n      {path: 'resources', component: ResourcesComponent, resolve: {resolvedData: ResourcesResolver}},\n      {path: 'faq', component: FaqComponent}\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(infoRoutes)],\n  exports: [RouterModule]\n})\nexport class InformationRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoLocatorService.html":{"url":"injectables/LogoLocatorService.html","title":"injectable - LogoLocatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogoLocatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/logo-locator.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                platformLogoDir\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLogoPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/logo-locator.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLogoPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetLogoPath(logoLocator: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/logo-locator.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logoLocator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            platformLogoDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/images/vendor/logo/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/logo-locator.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class LogoLocatorService {\n  static readonly platformLogoDir = '/assets/images/vendor/logo/';\n\n  constructor() {\n  }\n\n  getLogoPath(logoLocator: string) {\n    return LogoLocatorService.platformLogoDir\n      .concat(logoLocator)\n      .concat(Extension.png);\n  }\n}\n\nenum Extension {\n  png = '.png',\n  jpg = '.jpg',\n  jpeg = '.jpeg',\n  svg = '.svg'\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatListModule} from '@angular/material/list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatRadioModule} from '@angular/material/radio';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatProgressSpinnerModule,\n    MatListModule,\n    MatCardModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatTreeModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatSliderModule,\n    MatRadioModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatProgressSpinnerModule,\n    MatListModule,\n    MatCardModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatTreeModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatSliderModule,\n    MatRadioModule\n  ]\n})\nexport class MaterialModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/overview/overview.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                ./overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                supportedPlatforms$\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/overview/overview.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        supportedPlatforms$\n                    \n                \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/overview/overview.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Technology} from '../../shared/interfaces/technology';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent {\n  @Input() supportedPlatforms$: Observable;\n\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  Reviewed Platforms\n  \n    Explore the list of reviewed platforms which includes commercial and open source products.\n  \n\n  \n    \n      \n        \n          \n            \n          \n        \n      \n    \n\n    \n      Browse Platforms\n    \n  \n\n\n\n    \n\n    \n                \n                    ./overview.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n  @include bg-grey;\n}\n\n.platforms {\n  width: 95%;\n  margin-bottom: 1.5rem;\n}\n\n.platforms__container {\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n}\n\n\n.platforms__logos {\n  flex: 1 1 auto;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  justify-items: center;\n  grid-gap: .5rem;\n  list-style: none;\n  padding: .5rem;\n}\n\n.platforms__item {\n  margin: .5rem;\n\n  align-self: center;\n}\n\n.platforms__button {\n  width: 50%;\n}\n\n.platforms__logo {\n  max-width: 70%;\n  height: auto;\n  object-fit: cover;\n  vertical-align: bottom;\n  justify-self: center;\n  opacity: .7;\n  transition: opacity .5s ease-out;\n  -moz-transition: opacity .5s ease-out;\n  -webkit-transition: opacity .5s ease-out;\n  -o-transition: opacity .5s ease-out;\n\n  &:hover {\n    opacity: 1;\n  }\n}\n\n@media screen and (min-width: 550px) {\n  .platforms__logos {\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n  }\n\n  .platforms__button {\n    width: 35%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Reviewed Platforms      Explore the list of reviewed platforms which includes commercial and open source products.                                                                                  Browse Platforms      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/page-not-found/page-not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/page-not-found/page-not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/page-not-found/page-not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  Title\n\n\nPage not found\n\n\n\n    \n\n    \n                \n                    ./page-not-found.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    TitlePage not found'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RandomColorService.html":{"url":"injectables/RandomColorService.html","title":"injectable - RandomColorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RandomColorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/random-color.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRandomColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/random-color.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRandomColor\n                        \n                        \n                    \n                \n            \n            \n                \ngetRandomColor(hue?, luminosity?, count?, seed?, format?, alpha?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/random-color.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hue\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    luminosity\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    count\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    seed\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    format\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    alpha\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\ndeclare let randomColor: any;\n\n@Injectable()\nexport class RandomColorService {\n\n  constructor() {\n  }\n\n  getRandomColor(hue?, luminosity?, count?, seed?, format?, alpha?) {\n    return randomColor({\n      hue: hue, luminosity: luminosity, count: count, seed: seed, format: format, alpha: alpha\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RenderedFilterBlock.html":{"url":"interfaces/RenderedFilterBlock.html","title":"interface - RenderedFilterBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RenderedFilterBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        blockIcon\n                                \n                                \n                                        blockName\n                                \n                                \n                                        filters\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockIcon\n                                    \n                                \n                                \n                                    \n                                        blockIcon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockName\n                                    \n                                \n                                \n                                    \n                                        blockName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         CriterionFilterConfiguration[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterConfiguration[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RenderedFilterBlock {\n  blockName: string;\n  blockIcon?: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  filterId: string;\n  technologyCategory: string;\n  name: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  criterionId: string;\n  displayName: string;\n  filterType: CriterionFilterType;\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n *\n * @remarks\n * Available options:\n * -- bool:  indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n * -- lte: indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n * -- gte: indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n * -- containsOne: at least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n * -- containsAny: at least 1 arbitrary text value must be contained, translates to a toggle in the UI\n * -- containsAll: all specified text values must be contained, translates to a group of checkboxes in the UI\n * -- excludesAll: all specified text values must not be contained, translates to a group of checkboxes in the UI\n */\nexport enum CriterionFilterType {\n  bool = 'bool',\n  lte = 'lte',\n  gte = 'gte',\n  containsOne = 'containsOne',\n  containsAny = 'containsAny',\n  containsAll = 'containsAll',\n  excludesAll = 'excludesAll'\n}\n\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\nexport interface CriterionFilterValue {\n  filterType?: CriterionFilterType;\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourcesComponent.html":{"url":"components/ResourcesComponent.html","title":"component - ResourcesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourcesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/resources/resources.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-resources\n            \n\n            \n                styleUrls\n                ./resources.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./resources.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resources\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/resources/resources.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resources/resources.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resources/resources.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InfoResourceSection[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information/resources/resources.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information/resources/resources.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {InfoResourceSection} from '../../shared/interfaces/info';\n\n@Component({\n  selector: 'app-resources',\n  templateUrl: './resources.component.html',\n  styleUrls: ['./resources.component.scss']\n})\nexport class ResourcesComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n  resources: InfoResourceSection[];\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.route.data.subscribe(data => {\n      this.resources = data['resolvedData'];\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    {{section.title}}\n  \n  \n    {{section.description}}\n  \n\n  \n    [{{i + 1}}]\n    \n      {{res.resource}}\n      (reference)\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./resources.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{section.title}}        {{section.description}}        [{{i + 1}}]          {{res.resource}}      (reference)      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResourcesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ResourcesResolver.html":{"url":"guards/ResourcesResolver.html","title":"guard - ResourcesResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ResourcesResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/information/resolvers/resources-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/resolvers/resources-resolver.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resolvers/resources-resolver.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {DataService} from '../../core/services/data.service';\nimport {InfoResourceSection} from '../../shared/interfaces/info';\n\n@Injectable()\nexport class ResourcesResolver implements Resolve {\n\n  constructor(private dataService: DataService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    return this.dataService.getInfoResources();\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SetToArrayPipe.html":{"url":"pipes/SetToArrayPipe.html","title":"pipe - SetToArrayPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SetToArrayPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/set-to-array.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        setToArray\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: Set)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/set-to-array.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'setToArray'\n})\nexport class SetToArrayPipe implements PipeTransform {\n  transform(value: Set) {\n    return Array.from(value);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_imports\n\n\n\n\nBottomNavComponent\n\nBottomNavComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nBottomNavComponent->SharedModule\n\n\n\n\n\nChildGroupingComponent\n\nChildGroupingComponent\n\nSharedModule -->\n\nChildGroupingComponent->SharedModule\n\n\n\n\n\nCriterionComponent\n\nCriterionComponent\n\nSharedModule -->\n\nCriterionComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nFrameworkRendererComponent\n\nFrameworkRendererComponent\n\nSharedModule -->\n\nFrameworkRendererComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nSharedModule -->\n\nPageNotFoundComponent->SharedModule\n\n\n\n\n\nSetToArrayPipe\n\nSetToArrayPipe\n\nSharedModule -->\n\nSetToArrayPipe->SharedModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nSharedModule -->\n\nTruncatePipe->SharedModule\n\n\n\n\n\nYesNoPipe\n\nYesNoPipe\n\nSharedModule -->\n\nYesNoPipe->SharedModule\n\n\n\n\n\nBottomNavComponent \n\nBottomNavComponent \n\nBottomNavComponent  -->\n\nSharedModule->BottomNavComponent \n\n\n\n\n\nChildGroupingComponent \n\nChildGroupingComponent \n\nChildGroupingComponent  -->\n\nSharedModule->ChildGroupingComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nFrameworkRendererComponent \n\nFrameworkRendererComponent \n\nFrameworkRendererComponent  -->\n\nSharedModule->FrameworkRendererComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nPageNotFoundComponent \n\nPageNotFoundComponent \n\nPageNotFoundComponent  -->\n\nSharedModule->PageNotFoundComponent \n\n\n\n\n\nSetToArrayPipe \n\nSetToArrayPipe \n\nSetToArrayPipe  -->\n\nSharedModule->SetToArrayPipe \n\n\n\n\n\nTruncatePipe \n\nTruncatePipe \n\nTruncatePipe  -->\n\nSharedModule->TruncatePipe \n\n\n\n\n\nYesNoPipe \n\nYesNoPipe \n\nYesNoPipe  -->\n\nSharedModule->YesNoPipe \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BottomNavComponent\n                        \n                        \n                            ChildGroupingComponent\n                        \n                        \n                            CriterionComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            FrameworkRendererComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            SetToArrayPipe\n                        \n                        \n                            TruncatePipe\n                        \n                        \n                            YesNoPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BottomNavComponent\n                        \n                        \n                            ChildGroupingComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            FrameworkRendererComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            SetToArrayPipe\n                        \n                        \n                            TruncatePipe\n                        \n                        \n                            YesNoPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MaterialModule} from './material.module';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\nimport {RouterModule} from '@angular/router';\nimport {TruncatePipe} from './truncate.pipe';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ChildGroupingComponent} from './child-grouping/child-grouping.component';\nimport {SetToArrayPipe} from './set-to-array.pipe';\nimport {CriterionComponent} from './criterion/criterion.component';\nimport {HeaderComponent} from './header/header.component';\nimport {FooterComponent} from './footer/footer.component';\nimport {FrameworkResolver} from '../information/resolvers/framework-resolver.service';\nimport {FrameworkRendererComponent} from './framework-renderer/framework-renderer.component';\nimport {BottomNavComponent} from './bottom-nav/bottom-nav.component';\nimport {YesNoPipe} from './yes-no.pipe';\n\n@NgModule({\n  declarations: [\n    PageNotFoundComponent,\n    TruncatePipe,\n    SetToArrayPipe,\n    YesNoPipe,\n    ChildGroupingComponent,\n    CriterionComponent,\n    HeaderComponent,\n    FooterComponent,\n    FrameworkRendererComponent,\n    BottomNavComponent\n  ],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MaterialModule, RouterModule],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    PageNotFoundComponent,\n    TruncatePipe,\n    SetToArrayPipe,\n    YesNoPipe,\n    ChildGroupingComponent,\n    HeaderComponent,\n    FooterComponent,\n    FrameworkRendererComponent,\n    BottomNavComponent\n  ],\n  providers: [FrameworkResolver]\n})\nexport class SharedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDataSource.html":{"url":"interfaces/SimpleDataSource.html","title":"interface - SimpleDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datasource.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DataSource\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connect\n                                \n                                \n                                    disconnect\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, combineLatest, Observable, of} from 'rxjs';\nimport {map, shareReplay, switchMap} from 'rxjs/operators';\nimport {Technology} from './interfaces/technology';\nimport {PageEvent} from '@angular/material/paginator';\nimport {CriteriaBasedQuery, CriterionFilterType, CriterionFilterValue} from './interfaces/filtering';\nimport {CriterionInstance} from './interfaces/classification';\n\nexport interface SimpleDataSource extends DataSource {\n  connect(): Observable;\n\n  disconnect(): void;\n}\n\nexport interface Sort {\n  property: keyof T\n  order: 'asc' | 'desc'\n}\n\nexport class TechnologyDataSource implements SimpleDataSource {\n  private readonly data: Technology[];\n  private readonly pageNumber = new BehaviorSubject(0);\n  private readonly sort: BehaviorSubject>;\n  private readonly criteriaBasedQuery: BehaviorSubject;\n  private readonly nameBasedQuery: BehaviorSubject;\n\n  public isPaginated = true;\n  public totalInputSize: number;\n  public currentIndex: number = 0;\n  public pageNumber$ = this.pageNumber.asObservable();\n  public filteredData$: Observable;\n  public paginatedData$: Observable;\n\n  constructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, public pageSize = 10) {\n    this.data = data;\n    this.sort = new BehaviorSubject>(initialSort);\n    this.criteriaBasedQuery = new BehaviorSubject(initialQuery);\n    this.nameBasedQuery = new BehaviorSubject(undefined);\n\n    this.filteredData$ = combineLatest([this.criteriaBasedQuery, this.nameBasedQuery, this.sort]).pipe(\n      switchMap(([criteriaQuery, nameQuery, sort]) => {\n          let result = this.processData(this.data, criteriaQuery, nameQuery, sort);\n          this.totalInputSize = result.length;\n          return of(result);\n        }\n      ),\n      shareReplay(1)\n    );\n\n    this.paginatedData$ = combineLatest([this.filteredData$, this.pageNumber$]).pipe(\n      map(([data, pageNumber]) => {\n        let startIndex = pageNumber * this.pageSize;\n        let endIndex = startIndex + this.pageSize;\n        if (endIndex > data.length) {\n          endIndex = data.length;\n        }\n        return data.slice(startIndex, endIndex);\n      })\n    );\n  }\n\n  sortBy(sort: Partial>): void {\n    const lastSort = this.sort.getValue();\n    const nextSort = {...lastSort, ...sort};\n    this.sort.next(nextSort);\n  }\n\n  queryByCriteria(query: CriteriaBasedQuery): void {\n    const lastQuery = this.criteriaBasedQuery.getValue();\n    const nextQuery = {...lastQuery, ...query};\n    console.log('new query:');\n    this.pruneQuery(nextQuery);\n    console.log(nextQuery);\n    this.criteriaBasedQuery.next(nextQuery);\n  }\n\n  queryByName(query: string): void {\n    this.nameBasedQuery.next(query);\n  }\n\n  fetch(event: PageEvent): void {\n    this.pageSize = event.pageSize;\n    this.pageNumber.next(event.pageIndex);\n    this.currentIndex = event.pageIndex;\n  }\n\n  togglePagination(): void {\n    this.isPaginated = !this.isPaginated;\n  }\n\n  connect(): Observable {\n    if (this.isPaginated) {\n      return this.paginatedData$;\n    }\n    return this.filteredData$;\n  }\n\n  disconnect(): void {\n  }\n\n  private processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort): Technology[] {\n    let result: Technology[] = data;\n    if (nameQuery) {\n      result = data.filter(platform => nameQuery ? platform.platformName.toLocaleLowerCase().includes(nameQuery) : true);\n    }\n\n    if (criteriaQuery && Object.keys(criteriaQuery).length !== 0) {\n      Object.keys(criteriaQuery).forEach(key => {\n        if (TechnologyDataSource.canFilter(criteriaQuery[key])) {\n          result = result.filter(t => {\n            let filteringResult = false;\n            if (t.dossier.reviewedCriteria.has(key)) {\n              filteringResult = this.getFilteringResult(criteriaQuery[key], t.dossier.reviewedCriteria.get(key));\n            }\n            return filteringResult;\n          });\n        }\n      });\n      console.log('found: ' + result.length);\n    }\n\n    if (sort && sort.order === 'asc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? 1 : -1);\n    } else if (sort && sort.order === 'desc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? -1 : 1);\n    }\n\n    return result;\n  }\n\n  private static canFilter(filterValue: CriterionFilterValue): boolean {\n    if (filterValue.filterType && filterValue.filterType === CriterionFilterType.lte) {\n      return typeof filterValue.value === 'number';\n    } else if (filterValue.filterType && filterValue.filterType === CriterionFilterType.containsAll ||\n      filterValue.filterType === CriterionFilterType.containsOne ||\n      filterValue.filterType === CriterionFilterType.excludesAll) {\n      let v = filterValue.value as string[];\n      return v && v.length > 0;\n    } else if (filterValue.filterType === CriterionFilterType.bool || filterValue.filterType === CriterionFilterType.containsAny) {\n      return typeof filterValue.value === 'boolean';\n    }\n\n    return false;\n  }\n\n  private pruneQuery(nextQuery: { [p: string]: CriterionFilterValue }) {\n    let keysToDelete = [];\n    Object.keys(nextQuery).forEach(key => {\n        if (nextQuery[key].filterType === null) {\n          keysToDelete.push(key);\n        } else if (nextQuery[key].filterType === CriterionFilterType.bool ||\n          nextQuery[key].filterType === CriterionFilterType.containsAny ||\n          nextQuery[key].filterType === CriterionFilterType.lte) {\n          if (nextQuery[key].value === null) {\n            keysToDelete.push(key);\n          }\n        } else if (nextQuery[key].filterType === CriterionFilterType.containsOne ||\n          nextQuery[key].filterType === CriterionFilterType.containsAll ||\n          nextQuery[key].filterType === CriterionFilterType.excludesAll) {\n          let valueToCheck = nextQuery[key].value as string[];\n          if (valueToCheck.length === 0) {\n            keysToDelete.push(key);\n          }\n        }\n      }\n    );\n    keysToDelete.forEach(key => delete nextQuery[key]);\n  }\n\n  private getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    if (filterValue.filterType === CriterionFilterType.containsAny) {\n      return TechnologyDataSource.containsAny(filterValue, reviewedCriterion);\n    }\n\n    for (let reviewValue of reviewedCriterion.values) {\n      if (filterValue.filterType === CriterionFilterType.lte) {\n        return reviewedCriterion.values[0].value  allValues.push(v.value));\n        let target = Array.from(filterValue.value as string[]);\n\n        if (filterValue.filterType === CriterionFilterType.containsAll) {\n          return target.every(v => allValues.includes(v));\n        } else if (filterValue.filterType === CriterionFilterType.excludesAll) {\n          return target.every(v => !allValues.includes(v));\n        }\n      }\n    }\n  }\n\n  private static containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValue = filterValue.value as boolean;\n    if (chosenValue) {\n      return Array.from(reviewedCriterion.values).length > 0;\n    } else {\n      return Array.from(reviewedCriterion.values).length === 0;\n    }\n  }\n\n  private static containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValues = filterValue.value as string[];\n    if (chosenValues && chosenValues.length > 0) {\n      for (let entry of reviewedCriterion.values) {\n        let value = entry.value as string;\n        if (chosenValues.indexOf(value) !== -1) {\n          return true;\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sort.html":{"url":"interfaces/Sort.html","title":"interface - Sort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Sort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datasource.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        order\n                                \n                                \n                                        property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:     \"asc\" | \"desc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"asc\" | \"desc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                    \n                                \n                                \n                                    \n                                        property:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, combineLatest, Observable, of} from 'rxjs';\nimport {map, shareReplay, switchMap} from 'rxjs/operators';\nimport {Technology} from './interfaces/technology';\nimport {PageEvent} from '@angular/material/paginator';\nimport {CriteriaBasedQuery, CriterionFilterType, CriterionFilterValue} from './interfaces/filtering';\nimport {CriterionInstance} from './interfaces/classification';\n\nexport interface SimpleDataSource extends DataSource {\n  connect(): Observable;\n\n  disconnect(): void;\n}\n\nexport interface Sort {\n  property: keyof T\n  order: 'asc' | 'desc'\n}\n\nexport class TechnologyDataSource implements SimpleDataSource {\n  private readonly data: Technology[];\n  private readonly pageNumber = new BehaviorSubject(0);\n  private readonly sort: BehaviorSubject>;\n  private readonly criteriaBasedQuery: BehaviorSubject;\n  private readonly nameBasedQuery: BehaviorSubject;\n\n  public isPaginated = true;\n  public totalInputSize: number;\n  public currentIndex: number = 0;\n  public pageNumber$ = this.pageNumber.asObservable();\n  public filteredData$: Observable;\n  public paginatedData$: Observable;\n\n  constructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, public pageSize = 10) {\n    this.data = data;\n    this.sort = new BehaviorSubject>(initialSort);\n    this.criteriaBasedQuery = new BehaviorSubject(initialQuery);\n    this.nameBasedQuery = new BehaviorSubject(undefined);\n\n    this.filteredData$ = combineLatest([this.criteriaBasedQuery, this.nameBasedQuery, this.sort]).pipe(\n      switchMap(([criteriaQuery, nameQuery, sort]) => {\n          let result = this.processData(this.data, criteriaQuery, nameQuery, sort);\n          this.totalInputSize = result.length;\n          return of(result);\n        }\n      ),\n      shareReplay(1)\n    );\n\n    this.paginatedData$ = combineLatest([this.filteredData$, this.pageNumber$]).pipe(\n      map(([data, pageNumber]) => {\n        let startIndex = pageNumber * this.pageSize;\n        let endIndex = startIndex + this.pageSize;\n        if (endIndex > data.length) {\n          endIndex = data.length;\n        }\n        return data.slice(startIndex, endIndex);\n      })\n    );\n  }\n\n  sortBy(sort: Partial>): void {\n    const lastSort = this.sort.getValue();\n    const nextSort = {...lastSort, ...sort};\n    this.sort.next(nextSort);\n  }\n\n  queryByCriteria(query: CriteriaBasedQuery): void {\n    const lastQuery = this.criteriaBasedQuery.getValue();\n    const nextQuery = {...lastQuery, ...query};\n    console.log('new query:');\n    this.pruneQuery(nextQuery);\n    console.log(nextQuery);\n    this.criteriaBasedQuery.next(nextQuery);\n  }\n\n  queryByName(query: string): void {\n    this.nameBasedQuery.next(query);\n  }\n\n  fetch(event: PageEvent): void {\n    this.pageSize = event.pageSize;\n    this.pageNumber.next(event.pageIndex);\n    this.currentIndex = event.pageIndex;\n  }\n\n  togglePagination(): void {\n    this.isPaginated = !this.isPaginated;\n  }\n\n  connect(): Observable {\n    if (this.isPaginated) {\n      return this.paginatedData$;\n    }\n    return this.filteredData$;\n  }\n\n  disconnect(): void {\n  }\n\n  private processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort): Technology[] {\n    let result: Technology[] = data;\n    if (nameQuery) {\n      result = data.filter(platform => nameQuery ? platform.platformName.toLocaleLowerCase().includes(nameQuery) : true);\n    }\n\n    if (criteriaQuery && Object.keys(criteriaQuery).length !== 0) {\n      Object.keys(criteriaQuery).forEach(key => {\n        if (TechnologyDataSource.canFilter(criteriaQuery[key])) {\n          result = result.filter(t => {\n            let filteringResult = false;\n            if (t.dossier.reviewedCriteria.has(key)) {\n              filteringResult = this.getFilteringResult(criteriaQuery[key], t.dossier.reviewedCriteria.get(key));\n            }\n            return filteringResult;\n          });\n        }\n      });\n      console.log('found: ' + result.length);\n    }\n\n    if (sort && sort.order === 'asc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? 1 : -1);\n    } else if (sort && sort.order === 'desc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? -1 : 1);\n    }\n\n    return result;\n  }\n\n  private static canFilter(filterValue: CriterionFilterValue): boolean {\n    if (filterValue.filterType && filterValue.filterType === CriterionFilterType.lte) {\n      return typeof filterValue.value === 'number';\n    } else if (filterValue.filterType && filterValue.filterType === CriterionFilterType.containsAll ||\n      filterValue.filterType === CriterionFilterType.containsOne ||\n      filterValue.filterType === CriterionFilterType.excludesAll) {\n      let v = filterValue.value as string[];\n      return v && v.length > 0;\n    } else if (filterValue.filterType === CriterionFilterType.bool || filterValue.filterType === CriterionFilterType.containsAny) {\n      return typeof filterValue.value === 'boolean';\n    }\n\n    return false;\n  }\n\n  private pruneQuery(nextQuery: { [p: string]: CriterionFilterValue }) {\n    let keysToDelete = [];\n    Object.keys(nextQuery).forEach(key => {\n        if (nextQuery[key].filterType === null) {\n          keysToDelete.push(key);\n        } else if (nextQuery[key].filterType === CriterionFilterType.bool ||\n          nextQuery[key].filterType === CriterionFilterType.containsAny ||\n          nextQuery[key].filterType === CriterionFilterType.lte) {\n          if (nextQuery[key].value === null) {\n            keysToDelete.push(key);\n          }\n        } else if (nextQuery[key].filterType === CriterionFilterType.containsOne ||\n          nextQuery[key].filterType === CriterionFilterType.containsAll ||\n          nextQuery[key].filterType === CriterionFilterType.excludesAll) {\n          let valueToCheck = nextQuery[key].value as string[];\n          if (valueToCheck.length === 0) {\n            keysToDelete.push(key);\n          }\n        }\n      }\n    );\n    keysToDelete.forEach(key => delete nextQuery[key]);\n  }\n\n  private getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    if (filterValue.filterType === CriterionFilterType.containsAny) {\n      return TechnologyDataSource.containsAny(filterValue, reviewedCriterion);\n    }\n\n    for (let reviewValue of reviewedCriterion.values) {\n      if (filterValue.filterType === CriterionFilterType.lte) {\n        return reviewedCriterion.values[0].value  allValues.push(v.value));\n        let target = Array.from(filterValue.value as string[]);\n\n        if (filterValue.filterType === CriterionFilterType.containsAll) {\n          return target.every(v => allValues.includes(v));\n        } else if (filterValue.filterType === CriterionFilterType.excludesAll) {\n          return target.every(v => !allValues.includes(v));\n        }\n      }\n    }\n  }\n\n  private static containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValue = filterValue.value as boolean;\n    if (chosenValue) {\n      return Array.from(reviewedCriterion.values).length > 0;\n    } else {\n      return Array.from(reviewedCriterion.values).length === 0;\n    }\n  }\n\n  private static containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValues = filterValue.value as string[];\n    if (chosenValues && chosenValues.length > 0) {\n      for (let entry of reviewedCriterion.values) {\n        let value = entry.value as string;\n        if (chosenValues.indexOf(value) !== -1) {\n          return true;\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableColumn.html":{"url":"classes/TableColumn.html","title":"class - TableColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/technologies/technology-table/technology-table.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                colSpan\n                            \n                            \n                                displayName\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            colSpan\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {TechnologyDataSource} from '../../shared/datasource';\nimport {ClassificationFramework, CriteriaGrouping} from '../../shared/interfaces/classification';\nimport {TechnologyFilterConfiguration} from '../../shared/interfaces/filtering';\nimport {MatSidenav} from '@angular/material/sidenav';\n\nexport class TableColumn {\n  id: string;\n  displayName: string;\n  colSpan?: number;\n  color?: string;\n}\n\n@Component({\n  selector: 'app-technology-table',\n  templateUrl: './technology-table.component.html',\n  styleUrls: ['./technology-table.component.scss']\n})\nexport class TechnologyTableComponent implements OnInit {\n  @Input() dataSource: TechnologyDataSource;\n  @Input() framework: ClassificationFramework;\n  @Input() filterConfiguration: TechnologyFilterConfiguration;\n  @Input() sidenav: MatSidenav;\n\n  @ViewChild('content') tableContainer: ElementRef;\n\n  criteriaColumns: TableColumn[] = [];\n  groupingColumns: TableColumn[] = [];\n  groupingColumnIds: string[] = ['techNameHeader'];\n\n  columnsToDisplay = ['techName'];\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n    this.framework.viewCombinations.forEach(viewComb => {\n      if (viewComb.default) {\n        viewComb.views.forEach(view => {\n          let groupingColumns: TableColumn[] = [];\n          Array.from(view.groupings).forEach((grouping, index) => {\n            let color = index % 2 === 0 ? '#ccc' : 'white';\n            this.generateGroupingColumns(grouping, groupingColumns, color);\n          });\n          if (groupingColumns.length > 0) {\n            this.groupingColumns.push(...groupingColumns);\n            let viewColspan = 0;\n            groupingColumns.forEach(c => {\n              if (c.colSpan) {\n                viewColspan += c.colSpan;\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  private generateGroupingColumns(grouping: CriteriaGrouping, groupingColumns: TableColumn[], color:string, parentGroupingName?: string) {\n    let counter = 0;\n    grouping.criteria.forEach((c, index) => {\n      this.criteriaColumns.push({\n        id: c.id,\n        displayName: c.name,\n        color: color\n      } as TableColumn);\n      this.columnsToDisplay.push(c.id);\n      counter += 1;\n    });\n    if (counter > 0) {\n      let name = parentGroupingName ? parentGroupingName.concat('.').concat(grouping.name) : grouping.name;\n      groupingColumns.push({\n        id: grouping.id,\n        displayName: name,\n        color: color,\n        colSpan: counter\n      } as TableColumn);\n      this.groupingColumnIds.push(grouping.id);\n    }\n    if (grouping.groupings) {\n      grouping.groupings.forEach(g => this.generateGroupingColumns(g, groupingColumns, color, grouping.name));\n    }\n  }\n\n  scrollLeft() {\n    this.tableContainer.nativeElement.scrollLeft -= 150;\n  }\n\n  scrollRight() {\n    this.tableContainer.nativeElement.scrollLeft += 150;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologiesComponent.html":{"url":"components/TechnologiesComponent.html","title":"component - TechnologiesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TechnologiesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technologies.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technologies\n            \n\n            \n                styleUrls\n                ./technologies.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technologies.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                browsingMode\n                            \n                            \n                                dataSource\n                            \n                            \n                                filterConfiguration\n                            \n                            \n                                framework\n                            \n                            \n                                groupings\n                            \n                            \n                                mobileQuery\n                            \n                            \n                                renderedFilter\n                            \n                            \n                                sidenav\n                            \n                            \n                                subscriptions\n                            \n                            \n                                technologies\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractGroupings\n                            \n                            \n                                    Private\n                                generateFilterStructure\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onQueryUpdate\n                            \n                            \n                                    Private\n                                populateRenderBlocks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, route: ActivatedRoute, fb: FormBuilder, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technologies.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                    MediaMatcher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractGroupings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractGroupings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateFilterStructure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateFilterStructure()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onQueryUpdate\n                        \n                        \n                    \n                \n            \n            \n                \nonQueryUpdate($event: CriteriaBasedQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                CriteriaBasedQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            populateRenderBlocks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populateRenderBlocks(grouping: CriteriaGrouping, filterLookup: Map, placement: Map, parentGroup?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grouping\n                                    \n                                                CriteriaGrouping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filterLookup\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    placement\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            browsingMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'explore'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TechnologyDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterConfiguration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TechnologyFilterConfiguration\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            framework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassificationFramework\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CriteriaGrouping[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobileQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MediaQueryList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderedFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RenderedFilterBlock[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('sidenav')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            technologies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Technology[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {DataService} from '../core/services/data.service';\nimport {Subscription} from 'rxjs';\nimport {Technology} from '../shared/interfaces/technology';\nimport {ActivatedRoute} from '@angular/router';\nimport {TechnologyDataSource} from '../shared/datasource';\nimport {ClassificationFramework, CriteriaGrouping} from '../shared/interfaces/classification';\nimport {\n  CriteriaBasedQuery,\n  CriterionFilterConfiguration,\n  RenderedFilterBlock,\n  TechnologyFilterConfiguration\n} from '../shared/interfaces/filtering';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {MediaMatcher} from '@angular/cdk/layout';\nimport {FormBuilder} from '@angular/forms';\n\n@Component({\n  selector: 'app-technologies',\n  templateUrl: './technologies.component.html',\n  styleUrls: ['./technologies.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TechnologiesComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  technologies: Technology[];\n  framework: ClassificationFramework;\n  filterConfiguration: TechnologyFilterConfiguration;\n  groupings: CriteriaGrouping[] = [];\n\n  dataSource: TechnologyDataSource;\n  browsingMode = 'explore';\n\n  renderedFilter: RenderedFilterBlock[] = [];\n\n  @ViewChild('sidenav') sidenav: MatSidenav;\n  mobileQuery: MediaQueryList;\n\n  constructor(\n    private dataService: DataService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private changeDetectorRef: ChangeDetectorRef,\n    private media: MediaMatcher\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 850px)');\n    this.mobileQuery.addEventListener('change', () => changeDetectorRef.detectChanges());\n  }\n\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.route.queryParams.subscribe(params => {\n        const mode = params['browsingMode'];\n        if (mode) {\n          this.browsingMode = mode;\n        }\n      })\n    );\n\n    this.subscriptions.push(\n      this.route.data.subscribe(data => {\n        this.technologies = data['resolvedData'][0];\n        this.dataSource = new TechnologyDataSource(this.technologies, {property: 'platformName', order: 'asc'}, {});\n        this.framework = data['resolvedData'][1];\n        this.filterConfiguration = data['resolvedData'][2];\n\n        this.extractGroupings();\n        this.generateFilterStructure();\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private extractGroupings() {\n    for (let vc of this.framework.viewCombinations) {\n      if (vc.default) {\n        vc.views.forEach(v => this.groupings.push(...Array.from(v.groupings)));\n        break;\n      }\n    }\n  }\n\n  private generateFilterStructure() {\n    const criteriaFilterLookup = new Map(this.filterConfiguration.filters.map(c => [c.criterionId, c] as [string, CriterionFilterConfiguration]));\n    let placement: Map = new Map();\n    this.groupings.forEach(g => this.populateRenderBlocks(g, criteriaFilterLookup, placement));\n    this.renderedFilter = Array.from(placement.values());\n  }\n\n  private populateRenderBlocks(grouping: CriteriaGrouping, filterLookup: Map, placement: Map, parentGroup?: string) {\n    let current = placement.get(grouping.name);\n\n    if (current === undefined && grouping.criteria && grouping.criteria.size > 0) {\n      placement.set(grouping.name, {blockName: parentGroup ? parentGroup.concat(' : ').concat(grouping.name) : grouping.name, filters: []});\n      current = placement.get(grouping.name);\n    }\n\n    grouping.criteria.forEach(c => {\n      let config = filterLookup.get(c.id);\n      if (config) {\n        current.filters.push(config);\n      }\n    });\n\n    if (grouping.groupings) {\n      grouping.groupings.forEach(g => this.populateRenderBlocks(g, filterLookup, placement, grouping.name));\n    }\n  }\n\n  onQueryUpdate($event: CriteriaBasedQuery) {\n    this.dataSource.queryByCriteria($event);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Filter Panel\n        \n        \n          close\n        \n      \n      \n        Filter platforms by combining criteria values.\n      \n\n    \n\n    \n      \n         0\"\n                             class=\"sidenav__filter-block\">\n          \n            \n              {{filterBlock.blockIcon}}\n              {{filterBlock.blockName}}\n            \n          \n          \n\n          \n          \n\n        \n\n      \n\n    \n  \n\n  \n    \n    \n      \n        Platform Browser\n        \n        \n          \n            subject\n          \n          \n            search\n          \n        \n      \n\n      \n        \n          Browse through the list of available platforms, for a detailed view click on the corresponding platform.\n        \n        \n          filter_alt\n          Filters\n        \n      \n\n      \n      \n\n      \n      \n    \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./technologies.component.scss\n                \n                @import \"../_scss/shared\";\n@import \"../_scss/global/variables\";\n\n:host {\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.sidenav-container {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n  flex: 1;\n}\n\n.sidenav {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n  flex: 1;\n  width: 80%;\n  max-width: 30em;\n}\n\n.sidenav__filter-header {\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 1rem;\n}\n\n.sidenav__filter-title {\n  display: flex;\n  flex-flow: row nowrap;\n}\n\n.sidenav__accordion {\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.sidenav__filter-block {\n  flex-grow: 1;\n  flex-shrink: 0;\n  box-shadow: none !important;\n  border-radius: 0 !important;\n  border-bottom: 1px solid $gray-30;\n}\n\n.content-container {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n  flex: 1;\n}\n\n.platforms-main {\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  @include bg-grey;\n  padding-top: 1.5rem;\n}\n\n.platforms__controls {\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: space-evenly;\n  width: 90%;\n}\n\n.platforms__description-block {\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  width: 90%;\n}\n\n.platforms__description {\n  flex: 1 1 max-content;\n}\n\n.platforms__filter-button {\n  height: 2.5rem;\n  @include nav_item;\n}\n\n.platforms__filter-button-title {\n  display: none;\n}\n\n.platforms__header {\n  flex: 1 1 auto;\n}\n\n.platforms__settings {\n  @include nav_item;\n}\n\n@media screen and (min-width: 900px) {\n  .platforms__controls, .platforms__description-block  {\n    max-width: 910px;\n  }\n\n  .platforms__filter-button-title {\n    display: inline;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Filter Panel                          close                            Filter platforms by combining criteria values.                             0\"                             class=\"sidenav__filter-block\">                                    {{filterBlock.blockIcon}}              {{filterBlock.blockName}}                                                                                                Platform Browser                                      subject                                search                                                Browse through the list of available platforms, for a detailed view click on the corresponding platform.                          filter_alt          Filters                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologiesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TechnologiesModule.html":{"url":"modules/TechnologiesModule.html","title":"module - TechnologiesModule","body":"\n                   \n\n\n\n\n    Modules\n    TechnologiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TechnologiesModule\n\n\n\ncluster_TechnologiesModule_imports\n\n\n\ncluster_TechnologiesModule_declarations\n\n\n\n\nCriterionFilterComponent\n\nCriterionFilterComponent\n\n\n\nTechnologiesModule\n\nTechnologiesModule\n\nTechnologiesModule -->\n\nCriterionFilterComponent->TechnologiesModule\n\n\n\n\n\nTechnologiesComponent\n\nTechnologiesComponent\n\nTechnologiesModule -->\n\nTechnologiesComponent->TechnologiesModule\n\n\n\n\n\nTechnologyDetailsComponent\n\nTechnologyDetailsComponent\n\nTechnologiesModule -->\n\nTechnologyDetailsComponent->TechnologiesModule\n\n\n\n\n\nTechnologyListComponent\n\nTechnologyListComponent\n\nTechnologiesModule -->\n\nTechnologyListComponent->TechnologiesModule\n\n\n\n\n\nTechnologyTableComponent\n\nTechnologyTableComponent\n\nTechnologiesModule -->\n\nTechnologyTableComponent->TechnologiesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTechnologiesModule -->\n\nSharedModule->TechnologiesModule\n\n\n\n\n\nTechnologiesRoutingModule\n\nTechnologiesRoutingModule\n\nTechnologiesModule -->\n\nTechnologiesRoutingModule->TechnologiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/technologies/technologies.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CriterionFilterComponent\n                        \n                        \n                            TechnologiesComponent\n                        \n                        \n                            TechnologyDetailsComponent\n                        \n                        \n                            TechnologyListComponent\n                        \n                        \n                            TechnologyTableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TechnologiesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TechnologiesComponent} from './technologies.component';\nimport {TechnologiesRoutingModule} from './technologies-routing.module';\nimport {SharedModule} from '../shared/shared.module';\nimport {TechnologyListComponent} from './technology-list/technology-list.component';\nimport {TechnologyDetailsComponent} from './technology-details/technology-details.component';\nimport {TechnologyTableComponent} from './technology-table/technology-table.component';\nimport {TechnologiesResolver} from './technologies-resolver.service';\nimport {CriterionFilterComponent} from './criterion-filter/criterion-filter.component';\nimport {TechnologyDetailsResolverService} from './technology-details-resolver.service';\n\n@NgModule({\n  declarations: [TechnologiesComponent, TechnologyListComponent, TechnologyDetailsComponent, TechnologyTableComponent, CriterionFilterComponent],\n  imports: [CommonModule, SharedModule, TechnologiesRoutingModule],\n  providers: [TechnologiesResolver, TechnologyDetailsResolverService]\n\n})\nexport class TechnologiesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TechnologiesResolver.html":{"url":"guards/TechnologiesResolver.html","title":"guard - TechnologiesResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TechnologiesResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/technologies/technologies-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, config: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technologies-resolver.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies-resolver.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {ClassificationFramework} from '../shared/interfaces/classification';\nimport {forkJoin, Observable} from 'rxjs';\nimport {DataService} from '../core/services/data.service';\nimport {Technology} from '../shared/interfaces/technology';\nimport {TechnologyFilterConfiguration} from '../shared/interfaces/filtering';\nimport {AppConfigService} from '../core/services/app-config.service';\n\n@Injectable()\nexport class TechnologiesResolver implements Resolve {\n  constructor(private dataService: DataService, private config: AppConfigService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    let category = this.config.defaultTechCategory;\n\n    const technologies = this.dataService.getTechnologiesOfCategory(category, true);\n    const framework = this.dataService.getFrameworkForTechnologyType(category);\n    const filter = this.dataService.getTechnologyFilter(category);\n\n    return forkJoin([technologies, framework, filter]);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TechnologiesRoutingModule.html":{"url":"modules/TechnologiesRoutingModule.html","title":"module - TechnologiesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TechnologiesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/technologies/technologies-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {TechnologiesComponent} from './technologies.component';\nimport {TechnologyDetailsComponent} from './technology-details/technology-details.component';\nimport {TechnologiesResolver} from './technologies-resolver.service';\nimport {TechnologyDetailsResolverService} from './technology-details-resolver.service';\n\nconst platformRoutes: Routes = [\n  {path: '', component: TechnologiesComponent, resolve: {resolvedData: TechnologiesResolver}},\n  {path: ':platformId', component: TechnologyDetailsComponent, resolve: {resolvedData: TechnologyDetailsResolverService}}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(platformRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class TechnologiesRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Technology.html":{"url":"interfaces/Technology.html","title":"interface - Technology","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Technology\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/technology.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a technology for comparison,\nwhich might contain the review data in a form of a TechnologyDossier.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        dossier\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        logoLocation\n                                \n                                \n                                        logoLocator\n                                \n                                \n                                        platformName\n                                \n                                \n                                            Optional\n                                        shortDescription\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dossier\n                                    \n                                \n                                \n                                    \n                                        dossier:         TechnologyDossier\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyDossier\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoLocation\n                                    \n                                \n                                \n                                    \n                                        logoLocation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoLocator\n                                    \n                                \n                                \n                                    \n                                        logoLocator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformName\n                                    \n                                \n                                \n                                    \n                                        platformName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortDescription\n                                    \n                                \n                                \n                                    \n                                        shortDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {CriterionInstance} from './classification';\n\n/**\n * An interface representing a technology for comparison,\n * which might contain the review data in a form of a {@link TechnologyDossier}.\n *\n * @example a FaaS platform\n */\nexport interface Technology {\n  id: string;\n  category: TechnologyCategory;\n  logoLocator: string;\n  logoLocation?: string;\n  platformName: string;\n  shortDescription?: string;\n  description?: string;\n  dossier?: TechnologyDossier;\n}\n\n/**\n * An interface representing a set of {@link CriterionInstance} related to a particular technology.\n */\nexport interface TechnologyDossier {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: Map;\n}\n\nexport enum TechnologyCategory {\n  faas = 'faas'\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TechnologyDataSource.html":{"url":"classes/TechnologyDataSource.html","title":"class - TechnologyDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TechnologyDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datasource.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            SimpleDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                criteriaBasedQuery\n                            \n                            \n                                    Public\n                                currentIndex\n                            \n                            \n                                    Private\n                                    Readonly\n                                data\n                            \n                            \n                                    Public\n                                filteredData$\n                            \n                            \n                                    Public\n                                isPaginated\n                            \n                            \n                                    Private\n                                    Readonly\n                                nameBasedQuery\n                            \n                            \n                                    Private\n                                    Readonly\n                                pageNumber\n                            \n                            \n                                    Public\n                                pageNumber$\n                            \n                            \n                                    Public\n                                pageSize\n                            \n                            \n                                    Public\n                                paginatedData$\n                            \n                            \n                                    Private\n                                    Readonly\n                                sort\n                            \n                            \n                                    Public\n                                totalInputSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                canFilter\n                            \n                            \n                                connect\n                            \n                            \n                                    Private\n                                    Static\n                                containsAny\n                            \n                            \n                                    Private\n                                    Static\n                                containsOne\n                            \n                            \n                                disconnect\n                            \n                            \n                                fetch\n                            \n                            \n                                    Private\n                                getFilteringResult\n                            \n                            \n                                    Private\n                                processData\n                            \n                            \n                                    Private\n                                pruneQuery\n                            \n                            \n                                queryByCriteria\n                            \n                            \n                                queryByName\n                            \n                            \n                                sortBy\n                            \n                            \n                                togglePagination\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, pageSize: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/datasource.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Technology[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialSort\n                                                  \n                                                        \n                                                                    Sort\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialQuery\n                                                  \n                                                        \n                                                                        CriteriaBasedQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pageSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            criteriaBasedQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Technology[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isPaginated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nameBasedQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            pageNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(0)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageNumber$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.pageNumber.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            paginatedData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            totalInputSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            canFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canFilter(filterValue: CriterionFilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            containsAny\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewedCriterion\n                                    \n                                                CriterionInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            containsOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewedCriterion\n                                    \n                                                CriterionInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \nfetch(event: PageEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            PageEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFilteringResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewedCriterion\n                                    \n                                                CriterionInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            processData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Technology[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    criteriaQuery\n                                    \n                                                CriteriaBasedQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameQuery\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sort\n                                    \n                                            Sort\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Technology[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            pruneQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pruneQuery(nextQuery: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nextQuery\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryByCriteria\n                        \n                        \n                    \n                \n            \n            \n                \nqueryByCriteria(query: CriteriaBasedQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                CriteriaBasedQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryByName\n                        \n                        \n                    \n                \n            \n            \n                \nqueryByName(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortBy\n                        \n                        \n                    \n                \n            \n            \n                \nsortBy(sort: Partial>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sort\n                                    \n                                            Partial>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            togglePagination\n                        \n                        \n                    \n                \n            \n            \n                \ntogglePagination()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, combineLatest, Observable, of} from 'rxjs';\nimport {map, shareReplay, switchMap} from 'rxjs/operators';\nimport {Technology} from './interfaces/technology';\nimport {PageEvent} from '@angular/material/paginator';\nimport {CriteriaBasedQuery, CriterionFilterType, CriterionFilterValue} from './interfaces/filtering';\nimport {CriterionInstance} from './interfaces/classification';\n\nexport interface SimpleDataSource extends DataSource {\n  connect(): Observable;\n\n  disconnect(): void;\n}\n\nexport interface Sort {\n  property: keyof T\n  order: 'asc' | 'desc'\n}\n\nexport class TechnologyDataSource implements SimpleDataSource {\n  private readonly data: Technology[];\n  private readonly pageNumber = new BehaviorSubject(0);\n  private readonly sort: BehaviorSubject>;\n  private readonly criteriaBasedQuery: BehaviorSubject;\n  private readonly nameBasedQuery: BehaviorSubject;\n\n  public isPaginated = true;\n  public totalInputSize: number;\n  public currentIndex: number = 0;\n  public pageNumber$ = this.pageNumber.asObservable();\n  public filteredData$: Observable;\n  public paginatedData$: Observable;\n\n  constructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, public pageSize = 10) {\n    this.data = data;\n    this.sort = new BehaviorSubject>(initialSort);\n    this.criteriaBasedQuery = new BehaviorSubject(initialQuery);\n    this.nameBasedQuery = new BehaviorSubject(undefined);\n\n    this.filteredData$ = combineLatest([this.criteriaBasedQuery, this.nameBasedQuery, this.sort]).pipe(\n      switchMap(([criteriaQuery, nameQuery, sort]) => {\n          let result = this.processData(this.data, criteriaQuery, nameQuery, sort);\n          this.totalInputSize = result.length;\n          return of(result);\n        }\n      ),\n      shareReplay(1)\n    );\n\n    this.paginatedData$ = combineLatest([this.filteredData$, this.pageNumber$]).pipe(\n      map(([data, pageNumber]) => {\n        let startIndex = pageNumber * this.pageSize;\n        let endIndex = startIndex + this.pageSize;\n        if (endIndex > data.length) {\n          endIndex = data.length;\n        }\n        return data.slice(startIndex, endIndex);\n      })\n    );\n  }\n\n  sortBy(sort: Partial>): void {\n    const lastSort = this.sort.getValue();\n    const nextSort = {...lastSort, ...sort};\n    this.sort.next(nextSort);\n  }\n\n  queryByCriteria(query: CriteriaBasedQuery): void {\n    const lastQuery = this.criteriaBasedQuery.getValue();\n    const nextQuery = {...lastQuery, ...query};\n    console.log('new query:');\n    this.pruneQuery(nextQuery);\n    console.log(nextQuery);\n    this.criteriaBasedQuery.next(nextQuery);\n  }\n\n  queryByName(query: string): void {\n    this.nameBasedQuery.next(query);\n  }\n\n  fetch(event: PageEvent): void {\n    this.pageSize = event.pageSize;\n    this.pageNumber.next(event.pageIndex);\n    this.currentIndex = event.pageIndex;\n  }\n\n  togglePagination(): void {\n    this.isPaginated = !this.isPaginated;\n  }\n\n  connect(): Observable {\n    if (this.isPaginated) {\n      return this.paginatedData$;\n    }\n    return this.filteredData$;\n  }\n\n  disconnect(): void {\n  }\n\n  private processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort): Technology[] {\n    let result: Technology[] = data;\n    if (nameQuery) {\n      result = data.filter(platform => nameQuery ? platform.platformName.toLocaleLowerCase().includes(nameQuery) : true);\n    }\n\n    if (criteriaQuery && Object.keys(criteriaQuery).length !== 0) {\n      Object.keys(criteriaQuery).forEach(key => {\n        if (TechnologyDataSource.canFilter(criteriaQuery[key])) {\n          result = result.filter(t => {\n            let filteringResult = false;\n            if (t.dossier.reviewedCriteria.has(key)) {\n              filteringResult = this.getFilteringResult(criteriaQuery[key], t.dossier.reviewedCriteria.get(key));\n            }\n            return filteringResult;\n          });\n        }\n      });\n      console.log('found: ' + result.length);\n    }\n\n    if (sort && sort.order === 'asc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? 1 : -1);\n    } else if (sort && sort.order === 'desc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? -1 : 1);\n    }\n\n    return result;\n  }\n\n  private static canFilter(filterValue: CriterionFilterValue): boolean {\n    if (filterValue.filterType && filterValue.filterType === CriterionFilterType.lte) {\n      return typeof filterValue.value === 'number';\n    } else if (filterValue.filterType && filterValue.filterType === CriterionFilterType.containsAll ||\n      filterValue.filterType === CriterionFilterType.containsOne ||\n      filterValue.filterType === CriterionFilterType.excludesAll) {\n      let v = filterValue.value as string[];\n      return v && v.length > 0;\n    } else if (filterValue.filterType === CriterionFilterType.bool || filterValue.filterType === CriterionFilterType.containsAny) {\n      return typeof filterValue.value === 'boolean';\n    }\n\n    return false;\n  }\n\n  private pruneQuery(nextQuery: { [p: string]: CriterionFilterValue }) {\n    let keysToDelete = [];\n    Object.keys(nextQuery).forEach(key => {\n        if (nextQuery[key].filterType === null) {\n          keysToDelete.push(key);\n        } else if (nextQuery[key].filterType === CriterionFilterType.bool ||\n          nextQuery[key].filterType === CriterionFilterType.containsAny ||\n          nextQuery[key].filterType === CriterionFilterType.lte) {\n          if (nextQuery[key].value === null) {\n            keysToDelete.push(key);\n          }\n        } else if (nextQuery[key].filterType === CriterionFilterType.containsOne ||\n          nextQuery[key].filterType === CriterionFilterType.containsAll ||\n          nextQuery[key].filterType === CriterionFilterType.excludesAll) {\n          let valueToCheck = nextQuery[key].value as string[];\n          if (valueToCheck.length === 0) {\n            keysToDelete.push(key);\n          }\n        }\n      }\n    );\n    keysToDelete.forEach(key => delete nextQuery[key]);\n  }\n\n  private getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    if (filterValue.filterType === CriterionFilterType.containsAny) {\n      return TechnologyDataSource.containsAny(filterValue, reviewedCriterion);\n    }\n\n    for (let reviewValue of reviewedCriterion.values) {\n      if (filterValue.filterType === CriterionFilterType.lte) {\n        return reviewedCriterion.values[0].value  allValues.push(v.value));\n        let target = Array.from(filterValue.value as string[]);\n\n        if (filterValue.filterType === CriterionFilterType.containsAll) {\n          return target.every(v => allValues.includes(v));\n        } else if (filterValue.filterType === CriterionFilterType.excludesAll) {\n          return target.every(v => !allValues.includes(v));\n        }\n      }\n    }\n  }\n\n  private static containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValue = filterValue.value as boolean;\n    if (chosenValue) {\n      return Array.from(reviewedCriterion.values).length > 0;\n    } else {\n      return Array.from(reviewedCriterion.values).length === 0;\n    }\n  }\n\n  private static containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValues = filterValue.value as string[];\n    if (chosenValues && chosenValues.length > 0) {\n      for (let entry of reviewedCriterion.values) {\n        let value = entry.value as string;\n        if (chosenValues.indexOf(value) !== -1) {\n          return true;\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologyDetailsComponent.html":{"url":"components/TechnologyDetailsComponent.html","title":"component - TechnologyDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TechnologyDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technology-details/technology-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technology-details\n            \n\n            \n                styleUrls\n                ./technology-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technology-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bottomNav\n                            \n                            \n                                framework\n                            \n                            \n                                platform\n                            \n                            \n                                selectedViewCombination\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-details/technology-details.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:scroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:scroll(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-details/technology-details.component.ts:32\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-details/technology-details.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bottomNav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BottomNavComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('bottomNavComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-details/technology-details.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            framework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassificationFramework\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-details/technology-details.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Technology\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-details/technology-details.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedViewCombination\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassificationViewCombination\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-details/technology-details.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, HostListener, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Technology} from '../../shared/interfaces/technology';\nimport {ClassificationFramework, ClassificationViewCombination} from '../../shared/interfaces/classification';\nimport {BottomNavComponent} from '../../shared/bottom-nav/bottom-nav.component';\n\n@Component({\n  selector: 'app-technology-details',\n  templateUrl: './technology-details.component.html',\n  styleUrls: ['./technology-details.component.scss']\n})\nexport class TechnologyDetailsComponent implements OnInit {\n  @ViewChild('bottomNavComponent') bottomNav: BottomNavComponent;\n\n  platform: Technology;\n  framework: ClassificationFramework;\n  selectedViewCombination: ClassificationViewCombination;\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.platform = data['resolvedData'][0];\n      this.framework = data['resolvedData'][1];\n\n      this.framework.viewCombinations.forEach(vc => vc.default ? this.selectedViewCombination = vc : false);\n    });\n  }\n\n  @HostListener('window:scroll', ['$event'])\n  onWindowScroll(e) {\n    this.bottomNav.toTop = window.pageYOffset > 200;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    {{platform.platformName}}\n    {{platform.description}}\n\n    \n      Technology View Mode\n      \n        {{ option.name }}\n      \n    \n  \n  \n  \n\n\n\n  \n    home Home\n  \n  \n    view_list Platforms\n  \n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./technology-details.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.technology {\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  margin: 0 auto;\n}\n\n.technology__header-block {\n  padding: 0 1rem;\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.technology__logo {\n  max-height: 5rem;\n  max-width: 10rem;\n  margin: 1.5rem .5rem 0;\n  border: none;\n  align-self: center;\n}\n\n.technology__header {\n  margin-top: 2rem;\n  align-self: center;\n  //color: $violet-600;\n}\n\n.technology__view-title {\n  margin-left: .5rem;\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{platform.platformName}}    {{platform.description}}          Technology View Mode              {{ option.name }}                      home Home        view_list Platforms  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologyDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TechnologyDetailsResolverService.html":{"url":"guards/TechnologyDetailsResolverService.html","title":"guard - TechnologyDetailsResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TechnologyDetailsResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/technologies/technology-details-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, config: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-details-resolver.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-details-resolver.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {ClassificationFramework} from '../shared/interfaces/classification';\nimport {forkJoin, Observable} from 'rxjs';\nimport {DataService} from '../core/services/data.service';\nimport {Technology} from '../shared/interfaces/technology';\nimport {AppConfigService} from '../core/services/app-config.service';\n\n@Injectable()\nexport class TechnologyDetailsResolverService implements Resolve {\n  constructor(private dataService: DataService, private config: AppConfigService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    const id = route.params['platformId'];\n    const category = this.config.defaultTechCategory;\n\n    return forkJoin([\n      this.dataService.getTechnology(id, true),\n      this.dataService.getFrameworkForTechnologyType(category)\n    ]);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TechnologyDossier.html":{"url":"interfaces/TechnologyDossier.html","title":"interface - TechnologyDossier","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TechnologyDossier\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/technology.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a set of CriterionInstance related to a particular technology.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        platformId\n                                \n                                \n                                            Optional\n                                        reviewDate\n                                \n                                \n                                        reviewedCriteria\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewDate\n                                    \n                                \n                                \n                                    \n                                        reviewDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewedCriteria\n                                    \n                                \n                                \n                                    \n                                        reviewedCriteria:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {CriterionInstance} from './classification';\n\n/**\n * An interface representing a technology for comparison,\n * which might contain the review data in a form of a {@link TechnologyDossier}.\n *\n * @example a FaaS platform\n */\nexport interface Technology {\n  id: string;\n  category: TechnologyCategory;\n  logoLocator: string;\n  logoLocation?: string;\n  platformName: string;\n  shortDescription?: string;\n  description?: string;\n  dossier?: TechnologyDossier;\n}\n\n/**\n * An interface representing a set of {@link CriterionInstance} related to a particular technology.\n */\nexport interface TechnologyDossier {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: Map;\n}\n\nexport enum TechnologyCategory {\n  faas = 'faas'\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TechnologyDossierResponse.html":{"url":"interfaces/TechnologyDossierResponse.html","title":"interface - TechnologyDossierResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TechnologyDossierResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        platformId\n                                \n                                \n                                            Optional\n                                        reviewDate\n                                \n                                \n                                        reviewedCriteria\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewDate\n                                    \n                                \n                                \n                                    \n                                        reviewDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewedCriteria\n                                    \n                                \n                                \n                                    \n                                        reviewedCriteria:         CriteriaReview\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriteriaReview\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TechnologyFilterConfiguration.html":{"url":"interfaces/TechnologyFilterConfiguration.html","title":"interface - TechnologyFilterConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TechnologyFilterConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a filter configuration for a given technology TechnologyCategory.\nThis configuration defines which criteria have dedicated filter elements in the UI.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filterId\n                                \n                                \n                                        filters\n                                \n                                \n                                        name\n                                \n                                \n                                        technologyCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterId\n                                    \n                                \n                                \n                                    \n                                        filterId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         CriterionFilterConfiguration[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterConfiguration[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RenderedFilterBlock {\n  blockName: string;\n  blockIcon?: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  filterId: string;\n  technologyCategory: string;\n  name: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  criterionId: string;\n  displayName: string;\n  filterType: CriterionFilterType;\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n *\n * @remarks\n * Available options:\n * -- bool:  indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n * -- lte: indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n * -- gte: indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n * -- containsOne: at least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n * -- containsAny: at least 1 arbitrary text value must be contained, translates to a toggle in the UI\n * -- containsAll: all specified text values must be contained, translates to a group of checkboxes in the UI\n * -- excludesAll: all specified text values must not be contained, translates to a group of checkboxes in the UI\n */\nexport enum CriterionFilterType {\n  bool = 'bool',\n  lte = 'lte',\n  gte = 'gte',\n  containsOne = 'containsOne',\n  containsAny = 'containsAny',\n  containsAll = 'containsAll',\n  excludesAll = 'excludesAll'\n}\n\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\nexport interface CriterionFilterValue {\n  filterType?: CriterionFilterType;\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologyListComponent.html":{"url":"components/TechnologyListComponent.html","title":"component - TechnologyListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TechnologyListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technology-list/technology-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technology-list\n            \n\n            \n                styleUrls\n                ./technology-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technology-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageSizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNameChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-list/technology-list.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :         TechnologyDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-list/technology-list.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-list/technology-list.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNameChange\n                        \n                        \n                    \n                \n            \n            \n                \nonNameChange(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-list/technology-list.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSizeOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [5, 10]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-list/technology-list.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {TechnologyDataSource} from '../../shared/datasource';\n\n@Component({\n  selector: 'app-technology-list',\n  templateUrl: './technology-list.component.html',\n  styleUrls: ['./technology-list.component.scss']\n})\nexport class TechnologyListComponent implements OnInit {\n  @Input() dataSource: TechnologyDataSource;\n  pageSizeOptions: number[] = [5, 10];\n\n  constructor() {\n  }\n\n  onNameChange(name: string) {\n    this.dataSource.queryByName(name);\n    this.dataSource.fetch({pageIndex: 0, length: this.dataSource.totalInputSize, pageSize: this.dataSource.pageSize});\n  }\n\n  ngOnInit(): void {\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n      Filter by name\n      \n      search\n    \n  \n\n  \n    \n      \n        \n         {{p.platformName}} -->\n\n        \n          \n            {{p.shortDescription}}\n          \n\n        \n\n        \n          arrow_forward\n        \n\n      \n    \n  \n\n  \n  \n\n\n\n\n    \n\n    \n                \n                    ./technology-list.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  flex: 1;\n}\n\n.platforms-list {\n  margin-bottom: 1rem;\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.platforms-list__search {\n  display: flex;\n  justify-content: center;\n}\n\n.platforms-list__search-field {\n  width: 80%;\n}\n\n.platforms-list__cards {\n  flex: 1;\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: flex-start;\n}\n\n.platforms-list__card {\n  margin: 0.2rem .5rem 0 .5rem;\n  padding: 0 .5rem !important;\n  border-left: .2rem solid $violet-400;\n  transition: all .3s ease;\n  flex: 1 1 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n\n  &:hover {\n    border-left: .2rem solid $salad-600;\n    box-shadow: 0 10px 16px rgba(0, 0, 0, 0.2) !important;\n    cursor: pointer;\n  }\n}\n\n.platforms-list__logo {\n  max-height: 3rem;\n  max-width: 3rem;\n  margin: 0 .5rem;\n  border: none;\n  align-self: center;\n}\n\n.platforms-list__card-spacer {\n  flex-grow: 2;\n}\n\n.platforms-list__card-description {\n  flex: 1;\n  font-size: .8rem;\n  padding-right: .5rem;\n}\n\n.platforms-list__explore-button {\n  @include nav_item;\n}\n\n.platforms-list__paginator {\n  background: none;\n}\n\n@media (min-width: 790px) {\n  .platform-section__card-description {\n    display: flex;\n    flex: 1;\n    font-size: .95rem;\n  }\n\n  .platforms-list__cards {\n    display: flex;\n    flex-flow: row wrap;\n  }\n\n  .platforms-list__card {\n    flex: 1 1 auto;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n  }\n\n}\n\n@media screen and (min-width: 900px) {\n  .platforms-list {\n    max-width: 910px;\n    min-width: 900px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Filter by name            search                                   {{p.platformName}} -->                              {{p.shortDescription}}                                    arrow_forward                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologyListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologyTableComponent.html":{"url":"components/TechnologyTableComponent.html","title":"component - TechnologyTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TechnologyTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technology-table/technology-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technology-table\n            \n\n            \n                styleUrls\n                ./technology-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technology-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnsToDisplay\n                            \n                            \n                                criteriaColumns\n                            \n                            \n                                groupingColumnIds\n                            \n                            \n                                groupingColumns\n                            \n                            \n                                tableContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateGroupingColumns\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                scrollLeft\n                            \n                            \n                                scrollRight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                filterConfiguration\n                            \n                            \n                                framework\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :         TechnologyDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filterConfiguration\n                    \n                \n                \n                    \n                        Type :         TechnologyFilterConfiguration\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        framework\n                    \n                \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sidenav\n                    \n                \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateGroupingColumns\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateGroupingColumns(grouping: CriteriaGrouping, groupingColumns: TableColumn[], color: string, parentGroupingName?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grouping\n                                    \n                                                CriteriaGrouping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupingColumns\n                                    \n                                                TableColumn[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentGroupingName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollLeft\n                        \n                        \n                    \n                \n            \n            \n                \nscrollLeft()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollRight\n                        \n                        \n                    \n                \n            \n            \n                \nscrollRight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnsToDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['techName']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            criteriaColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TableColumn[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupingColumnIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['techNameHeader']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupingColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TableColumn[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('content')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {TechnologyDataSource} from '../../shared/datasource';\nimport {ClassificationFramework, CriteriaGrouping} from '../../shared/interfaces/classification';\nimport {TechnologyFilterConfiguration} from '../../shared/interfaces/filtering';\nimport {MatSidenav} from '@angular/material/sidenav';\n\nexport class TableColumn {\n  id: string;\n  displayName: string;\n  colSpan?: number;\n  color?: string;\n}\n\n@Component({\n  selector: 'app-technology-table',\n  templateUrl: './technology-table.component.html',\n  styleUrls: ['./technology-table.component.scss']\n})\nexport class TechnologyTableComponent implements OnInit {\n  @Input() dataSource: TechnologyDataSource;\n  @Input() framework: ClassificationFramework;\n  @Input() filterConfiguration: TechnologyFilterConfiguration;\n  @Input() sidenav: MatSidenav;\n\n  @ViewChild('content') tableContainer: ElementRef;\n\n  criteriaColumns: TableColumn[] = [];\n  groupingColumns: TableColumn[] = [];\n  groupingColumnIds: string[] = ['techNameHeader'];\n\n  columnsToDisplay = ['techName'];\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n    this.framework.viewCombinations.forEach(viewComb => {\n      if (viewComb.default) {\n        viewComb.views.forEach(view => {\n          let groupingColumns: TableColumn[] = [];\n          Array.from(view.groupings).forEach((grouping, index) => {\n            let color = index % 2 === 0 ? '#ccc' : 'white';\n            this.generateGroupingColumns(grouping, groupingColumns, color);\n          });\n          if (groupingColumns.length > 0) {\n            this.groupingColumns.push(...groupingColumns);\n            let viewColspan = 0;\n            groupingColumns.forEach(c => {\n              if (c.colSpan) {\n                viewColspan += c.colSpan;\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  private generateGroupingColumns(grouping: CriteriaGrouping, groupingColumns: TableColumn[], color:string, parentGroupingName?: string) {\n    let counter = 0;\n    grouping.criteria.forEach((c, index) => {\n      this.criteriaColumns.push({\n        id: c.id,\n        displayName: c.name,\n        color: color\n      } as TableColumn);\n      this.columnsToDisplay.push(c.id);\n      counter += 1;\n    });\n    if (counter > 0) {\n      let name = parentGroupingName ? parentGroupingName.concat('.').concat(grouping.name) : grouping.name;\n      groupingColumns.push({\n        id: grouping.id,\n        displayName: name,\n        color: color,\n        colSpan: counter\n      } as TableColumn);\n      this.groupingColumnIds.push(grouping.id);\n    }\n    if (grouping.groupings) {\n      grouping.groupings.forEach(g => this.generateGroupingColumns(g, groupingColumns, color, grouping.name));\n    }\n  }\n\n  scrollLeft() {\n    this.tableContainer.nativeElement.scrollLeft -= 150;\n  }\n\n  scrollRight() {\n    this.tableContainer.nativeElement.scrollLeft += 150;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Name\n    \n\n    \n      Name\n      \n        \n          \n           {{tech.platformName}}\n        \n      \n    \n\n    \n      \n         {{c.displayName}}\n      \n    \n\n    \n      \n         {{c.displayName}}\n        \n          \n            \n              {{entry.value | yesNo }}\n            \n          \n        \n      \n    \n\n    \n    \n    \n  \n\n\n  \n    arrow_back_ios Scroll Left\n  \n  \n    arrow_forward_ios Scroll Right\n  \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./technology-table.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.table-container {\n  align-self: center;\n  flex-grow: 1;\n  height: auto;\n  width: 93vw;\n  margin-bottom: 3rem;\n  overflow: scroll;\n  scroll-behavior: smooth;\n}\n\n.tech-name-header-cell {\n  display:table-cell;\n  background: white;\n  min-width: 3.5rem;\n  border-right: 2px solid $violet-600;\n}\n\n.grouping-header-cell {\n  display:table-cell;\n  min-width: 3.5rem;\n  padding: 0 .5rem;\n  border-right: 1px solid $gray-10;\n}\n\n.criterion-header-cell {\n  display:table-cell;\n  min-width: 5rem;\n  padding: 0 1rem;\n  border-right: 1px solid $gray-10;\n  border-bottom: 1px solid $gray-10;\n}\n\n.tech-name-cell {\n  height: 100%;\n  padding: 0 !important;\n  display:table-cell;\n  background: white;\n  min-width: 3.5rem;\n  border-right: 2px solid $violet-600;\n\n  img {\n    max-width: 2rem;\n  }\n}\n\n.tech-name-content {\n  height: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n}\n\n.value-cell {\n  padding: 0 1rem !important;\n  word-wrap: break-word !important;\n}\n\n.value-list {\n  display: flex;\n  flex-flow: row wrap;\n}\n\n.value {\n  font-size: .8rem;\n}\n\n/*.tech-row:nth-child(even) {\n  background-color: $gray-10;\n}*/\n\n@media screen and (min-width: 900px) {\n  .table-container {\n    max-width: 1400px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Name              Name                                   {{tech.platformName}}                                     {{c.displayName}}                             {{c.displayName}}                                            {{entry.value | yesNo }}                                                            arrow_back_ios Scroll Left        arrow_forward_ios Scroll Right  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologyTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TruncatePipe.html":{"url":"pipes/TruncatePipe.html","title":"pipe - TruncatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TruncatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/truncate.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        truncate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, limit: number, completeWords, reverse, ellipsis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/truncate.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        25\n                                    \n\n                                \n                                \n                                    completeWords\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    reverse\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    ellipsis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '...'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, reverse = false, ellipsis = '...') {\n    if (completeWords) {\n      limit = value.substr(0, limit).lastIndexOf(' ');\n    }\n    if (!reverse) {\n      return value.length > limit ? value.substr(0, limit) + ellipsis : value;\n    } else {\n      return value.length > limit ? value.substr(limit, value.length) : value;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/YesNoPipe.html":{"url":"pipes/YesNoPipe.html","title":"pipe - YesNoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  YesNoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/yes-no.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        yesNo\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/yes-no.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'yesNo'\n})\nexport class YesNoPipe implements PipeTransform {\n  transform(value: any) {\n    if (typeof value === 'boolean') {\n      return value ? 'yes' : 'no';\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/ensure-module-loaded-once.guard.ts\n            \n            class\n            EnsureModuleLoadedOnceGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/app-config.service.ts\n            \n            injectable\n            AppConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            criteriaGroupingsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            criteriaPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            dossiersPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            filterConfigurationsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            frameworksPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            frameworkViewCombinationsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            frameworkViewsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            infoResourcesPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            supportedPlatformsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/logo-locator.service.ts\n            \n            injectable\n            LogoLocatorService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/random-color.service.ts\n            \n            injectable\n            RandomColorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/random-color.service.ts\n            \n            variable\n            randomColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/home/banner/banner.component.ts\n            \n            component\n            BannerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/overview/overview.component.ts\n            \n            component\n            OverviewComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/faq/faq.component.ts\n            \n            component\n            FaqComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/framework/framework.component.ts\n            \n            component\n            FrameworkComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/information/information.component.ts\n            \n            component\n            InformationComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/information/resolvers/framework-resolver.service.ts\n            \n            guard\n            FrameworkResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/resolvers/resources-resolver.service.ts\n            \n            guard\n            ResourcesResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/resources/resources.component.ts\n            \n            component\n            ResourcesComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/bottom-nav/bottom-nav.component.ts\n            \n            component\n            BottomNavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/child-grouping/child-grouping.component.ts\n            \n            component\n            ChildGroupingComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/criterion/criterion.component.ts\n            \n            component\n            CriterionComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/datasource.ts\n            \n            class\n            TechnologyDataSource\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/shared/datasource.ts\n            \n            interface\n            SimpleDataSource\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/datasource.ts\n            \n            interface\n            Sort\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/framework-renderer/framework-renderer.component.ts\n            \n            component\n            FrameworkRendererComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            class\n            CriterionValue\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationCriterion\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationFramework\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationView\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationViewCombination\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            CriteriaGrouping\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            CriterionInstance\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            CriteriaBasedQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            CriterionFilterConfiguration\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            CriterionFilterValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            RenderedFilterBlock\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            TechnologyFilterConfiguration\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/info.ts\n            \n            interface\n            InfoResource\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/info.ts\n            \n            interface\n            InfoResourceSection\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            ClassificationFrameworkResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            ClassificationViewCombinationResponse\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            ClassificationViewResponse\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            CriteriaGroupingResponse\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            CriteriaReview\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            TechnologyDossierResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/technology.ts\n            \n            interface\n            Technology\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/technology.ts\n            \n            interface\n            TechnologyDossier\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/set-to-array.pipe.ts\n            \n            pipe\n            SetToArrayPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/truncate.pipe.ts\n            \n            pipe\n            TruncatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/yes-no.pipe.ts\n            \n            pipe\n            YesNoPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/technologies/criterion-filter/criterion-filter.component.ts\n            \n            component\n            CriterionFilterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/technologies/technologies-resolver.service.ts\n            \n            guard\n            TechnologiesResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/technologies/technologies.component.ts\n            \n            component\n            TechnologiesComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-details-resolver.service.ts\n            \n            guard\n            TechnologyDetailsResolverService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-details/technology-details.component.ts\n            \n            component\n            TechnologyDetailsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-list/technology-list.component.ts\n            \n            component\n            TechnologyListComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-table/technology-table.component.ts\n            \n            component\n            TechnologyTableComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-table/technology-table.component.ts\n            \n            class\n            TableColumn\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.1.1\n        \n            @angular/cdk : ^11.1.1\n        \n            @angular/cli : ^11.1.2\n        \n            @angular/common : ^11.1.1\n        \n            @angular/compiler : ^11.1.1\n        \n            @angular/core : ^11.1.1\n        \n            @angular/flex-layout : ^11.0.0-beta.33\n        \n            @angular/forms : ^11.1.1\n        \n            @angular/material : ^11.1.1\n        \n            @angular/platform-browser : ^11.1.1\n        \n            @angular/platform-browser-dynamic : ^11.1.1\n        \n            @angular/router : ^11.1.1\n        \n            randomcolor : ^0.6.2\n        \n            rxjs : ^6.6.3\n        \n            tslib : ^2.0.0\n        \n            zone.js : ^0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CriterionFilterType   (src/.../filtering.ts)\n                        \n                        \n                            Extension   (src/.../logo-locator.service.ts)\n                        \n                        \n                            TechnologyCategory   (src/.../technology.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/interfaces/filtering.ts\n    \n        \n            \n                \n                    \n                        \n                        CriterionFilterType\n                    \n                \n                    \n                        \n                            An enum representing a filter type for a given CriterionFilterConfiguration.\nBased on these settings the respective filtering behavior is generated.\n\n                        \n                    \n                        \n                            \n                                 bool\n                            \n                        \n                        \n                            \n                                Value : bool\n                            \n                        \n                        \n                            \n                                 lte\n                            \n                        \n                        \n                            \n                                Value : lte\n                            \n                        \n                        \n                            \n                                 gte\n                            \n                        \n                        \n                            \n                                Value : gte\n                            \n                        \n                        \n                            \n                                 containsOne\n                            \n                        \n                        \n                            \n                                Value : containsOne\n                            \n                        \n                        \n                            \n                                 containsAny\n                            \n                        \n                        \n                            \n                                Value : containsAny\n                            \n                        \n                        \n                            \n                                 containsAll\n                            \n                        \n                        \n                            \n                                Value : containsAll\n                            \n                        \n                        \n                            \n                                 excludesAll\n                            \n                        \n                        \n                            \n                                Value : excludesAll\n                            \n                        \n            \n        \n\n    src/app/core/services/logo-locator.service.ts\n    \n        \n            \n                \n                    \n                        \n                        Extension\n                    \n                \n                        \n                            \n                                 png\n                            \n                        \n                        \n                            \n                                Value : .png\n                            \n                        \n                        \n                            \n                                 jpg\n                            \n                        \n                        \n                            \n                                Value : .jpg\n                            \n                        \n                        \n                            \n                                 jpeg\n                            \n                        \n                        \n                            \n                                Value : .jpeg\n                            \n                        \n                        \n                            \n                                 svg\n                            \n                        \n                        \n                            \n                                Value : .svg\n                            \n                        \n            \n        \n\n    src/app/shared/interfaces/technology.ts\n    \n        \n            \n                \n                    \n                        \n                        TechnologyCategory\n                    \n                \n                        \n                            \n                                 faas\n                            \n                        \n                        \n                            \n                                Value : faas\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFaaStener\nFaaStener is an open source selection support system intended to simplify browsing and filtering Function-as-a-Service (FaaS) platforms.\nIt is build using Angular and Angular Material and provides a graphical user interface for interacting with the platform’s data collected using the classification framework introduced in this research publication.\nUsing FaaStener, one can perform multi-attribute search for suitable FaaS platform based on the specified requirements and to visualize the corresponding results.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InformationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InformationRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TechnologiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TechnologiesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_InformationModule\n\n\n\ncluster_InformationModule_declarations\n\n\n\ncluster_InformationModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TechnologiesModule\n\n\n\ncluster_TechnologiesModule_declarations\n\n\n\ncluster_TechnologiesModule_imports\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBannerComponent\n\nBannerComponent\n\nAppModule -->\n\nBannerComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nAppModule -->\n\nOverviewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nInformationModule\n\nInformationModule\n\nInformationModule -->\n\nSharedModule->InformationModule\n\n\n\n\n\nBottomNavComponent \n\nBottomNavComponent \n\nBottomNavComponent  -->\n\nSharedModule->BottomNavComponent \n\n\n\n\n\nChildGroupingComponent \n\nChildGroupingComponent \n\nChildGroupingComponent  -->\n\nSharedModule->ChildGroupingComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nFrameworkRendererComponent \n\nFrameworkRendererComponent \n\nFrameworkRendererComponent  -->\n\nSharedModule->FrameworkRendererComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nPageNotFoundComponent \n\nPageNotFoundComponent \n\nPageNotFoundComponent  -->\n\nSharedModule->PageNotFoundComponent \n\n\n\n\n\nSetToArrayPipe \n\nSetToArrayPipe \n\nSetToArrayPipe  -->\n\nSharedModule->SetToArrayPipe \n\n\n\n\n\nTruncatePipe \n\nTruncatePipe \n\nTruncatePipe  -->\n\nSharedModule->TruncatePipe \n\n\n\n\n\nYesNoPipe \n\nYesNoPipe \n\nYesNoPipe  -->\n\nSharedModule->YesNoPipe \n\n\n\n\n\nTechnologiesModule\n\nTechnologiesModule\n\nTechnologiesModule -->\n\nSharedModule->TechnologiesModule\n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nCoreModule -->\n\nAppConfigService->CoreModule\n\n\n\n\n\nDataService\n\nDataService\n\nCoreModule -->\n\nDataService->CoreModule\n\n\n\n\n\nLogoLocatorService\n\nLogoLocatorService\n\nCoreModule -->\n\nLogoLocatorService->CoreModule\n\n\n\n\n\nRandomColorService\n\nRandomColorService\n\nCoreModule -->\n\nRandomColorService->CoreModule\n\n\n\n\n\nFaqComponent\n\nFaqComponent\n\nInformationModule -->\n\nFaqComponent->InformationModule\n\n\n\n\n\nFrameworkComponent\n\nFrameworkComponent\n\nInformationModule -->\n\nFrameworkComponent->InformationModule\n\n\n\n\n\nInformationComponent\n\nInformationComponent\n\nInformationModule -->\n\nInformationComponent->InformationModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nInformationModule -->\n\nResourcesComponent->InformationModule\n\n\n\n\n\nInformationRoutingModule\n\nInformationRoutingModule\n\nInformationModule -->\n\nInformationRoutingModule->InformationModule\n\n\n\n\n\nBottomNavComponent\n\nBottomNavComponent\n\nSharedModule -->\n\nBottomNavComponent->SharedModule\n\n\n\n\n\nChildGroupingComponent\n\nChildGroupingComponent\n\nSharedModule -->\n\nChildGroupingComponent->SharedModule\n\n\n\n\n\nCriterionComponent\n\nCriterionComponent\n\nSharedModule -->\n\nCriterionComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nFrameworkRendererComponent\n\nFrameworkRendererComponent\n\nSharedModule -->\n\nFrameworkRendererComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nSharedModule -->\n\nPageNotFoundComponent->SharedModule\n\n\n\n\n\nSetToArrayPipe\n\nSetToArrayPipe\n\nSharedModule -->\n\nSetToArrayPipe->SharedModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nSharedModule -->\n\nTruncatePipe->SharedModule\n\n\n\n\n\nYesNoPipe\n\nYesNoPipe\n\nSharedModule -->\n\nYesNoPipe->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nCriterionFilterComponent\n\nCriterionFilterComponent\n\nTechnologiesModule -->\n\nCriterionFilterComponent->TechnologiesModule\n\n\n\n\n\nTechnologiesComponent\n\nTechnologiesComponent\n\nTechnologiesModule -->\n\nTechnologiesComponent->TechnologiesModule\n\n\n\n\n\nTechnologyDetailsComponent\n\nTechnologyDetailsComponent\n\nTechnologiesModule -->\n\nTechnologyDetailsComponent->TechnologiesModule\n\n\n\n\n\nTechnologyListComponent\n\nTechnologyListComponent\n\nTechnologiesModule -->\n\nTechnologyListComponent->TechnologiesModule\n\n\n\n\n\nTechnologyTableComponent\n\nTechnologyTableComponent\n\nTechnologiesModule -->\n\nTechnologyTableComponent->TechnologiesModule\n\n\n\n\n\nTechnologiesRoutingModule\n\nTechnologiesRoutingModule\n\nTechnologiesModule -->\n\nTechnologiesRoutingModule->TechnologiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    21 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    23 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            criteriaGroupingsPath   (src/.../data.service.ts)\n                        \n                        \n                            criteriaPath   (src/.../data.service.ts)\n                        \n                        \n                            dossiersPath   (src/.../data.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            filterConfigurationsPath   (src/.../data.service.ts)\n                        \n                        \n                            frameworksPath   (src/.../data.service.ts)\n                        \n                        \n                            frameworkViewCombinationsPath   (src/.../data.service.ts)\n                        \n                        \n                            frameworkViewsPath   (src/.../data.service.ts)\n                        \n                        \n                            infoResourcesPath   (src/.../data.service.ts)\n                        \n                        \n                            randomColor   (src/.../random-color.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            supportedPlatformsPath   (src/.../data.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/data.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            criteriaGroupingsPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/groupings.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            criteriaPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/criteria.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dossiersPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/platforms/'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterConfigurationsPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/filters.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frameworksPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/frameworks.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frameworkViewCombinationsPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/view-combinations.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frameworkViewsPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/views.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            infoResourcesPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/info/resources.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            supportedPlatformsPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/platforms/platforms.json'\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/random-color.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            randomColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
