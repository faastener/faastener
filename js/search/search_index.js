var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.494,1,1.145]],["body/components/AboutComponent.html",[0,0.686,1,1.748,2,1.496,3,0.105,4,0.081,5,1.063,6,1.102,7,1.063,8,1.063,9,0.081,10,2.821,11,0.956,12,2.574,13,2.392,14,1.941,15,1.55,16,5.574,17,1.55,18,4.722,19,1.249,20,0.469,21,3.238,22,0.136,23,0.487,24,0.013,25,0.105,26,0.318,27,5.659,28,4.114,29,4.722,30,4.722,31,3.713,32,3.414,33,4.722,34,4.114,35,3.031,36,3.208,37,2.491,38,2.523,39,4.114,40,3.713,41,3.713,42,2.586,43,1.534,44,4.722,45,4.114,46,4.114,47,4.722,48,4.722,49,5.337,50,2.404,51,2.85,52,4.114,53,3.626,54,3.86,55,2.196,56,4.722,57,4.722,58,3.274,59,4.285,60,4.722,61,2.656,62,2.805,63,4.722,64,4.114,65,4.114,66,4.722,67,1.496,68,7.197,69,4.722,70,4.722,71,4.722,72,4.114,73,3.174,74,4.722,75,4.722,76,4.722,77,4.722,78,4.722,79,1.385,80,1.443,81,2.12,82,2.986,83,2.02,84,1.73,85,2.805,86,1.94,87,2.296,88,2.29,89,2.593,90,2.202,91,2.34,92,2.484,93,2.821,94,2.484,95,1.496,96,2.404,97,3.238,98,3.174,99,3.414,100,6.394,101,2.975,102,3.135,103,2.296,104,3.174,105,3.238,106,3.713,107,4.114,108,3.713,109,2.821,110,3.238,111,2.177,112,2.011,113,2.177,114,1.443,115,2.34,116,4.722,117,2.177,118,2.04,119,1.897,120,2.821,121,2.821,122,2.177,123,2.821,124,2.805,125,2.523,126,1.73,127,3.752,128,3.752,129,1.923,130,2.34,131,3.119,132,2.979,133,1.385,134,1.434,135,2.04,136,2.296,137,1.73,138,2.196,139,2.821,140,2.821,141,2.821,142,2.546,143,3.238,144,1.063,145,1.55,146,1.496,147,1.063,148,2.011,149,1.063,150,0.399,151,1.063,152,0.924,153,1.063,154,0.924,155,1.063,156,0.924,157,1.063,158,0.924,159,1.026,160,1.063,161,0.924,162,1.063,163,0.924,164,0.677,165,1.063,166,0.892,167,1.063,168,0.924,169,1.063,170,0.892,171,1.063,172,0.924,173,1.063,174,0.924,175,1.063,176,0.892,177,0.892,178,1.063,179,0.924,180,1.063,181,0.892,182,0.99,183,1.063,184,0.892,185,1.063,186,0.892,187,1.063,188,0.892,189,0.496,190,1.063,191,0.924,192,1.063,193,0.892,194,0.99,195,1.063,196,1.063,197,0.008,198,0.008]],["title/components/AppComponent.html",[0,0.494,152,1.145]],["body/components/AppComponent.html",[0,0.803,1,1.236,2,1.835,3,0.14,4,0.109,5,1.901,7,1.423,8,1.423,9,0.109,11,1.28,12,2.647,13,2.462,14,1.835,19,0.971,20,1.008,22,0.166,23,0.652,24,0.014,25,0.14,26,0.426,43,0.906,95,1.373,144,1.423,145,1.901,146,1.835,147,1.423,148,2.285,149,1.423,150,0.519,151,1.423,152,1.985,153,1.423,154,1.236,155,1.423,156,1.236,157,1.423,158,1.236,159,1.373,160,1.423,161,1.236,162,1.423,163,1.236,164,0.906,165,1.423,166,1.194,167,1.423,168,1.236,169,1.423,170,1.194,171,1.423,172,1.236,173,1.423,174,1.236,175,1.423,176,1.194,177,1.194,178,1.423,179,1.236,180,1.423,181,1.194,182,1.326,183,1.423,184,1.194,185,1.423,186,1.194,187,1.423,188,1.194,189,0.581,190,1.423,191,1.236,192,1.423,193,1.194,194,1.326,195,1.423,196,1.423,197,0.009,198,0.009,199,3.776,200,1.652,201,2.679,202,5.044,203,0.367,204,1.05,205,6.521,206,1.489,207,2.906,208,5.791,209,2.859,210,4.334,211,7.462,212,5.791,213,1.71,214,0.569,215,0.872,216,5.791,217,4.334,218,6.318,219,1.489,220,2.549,221,4.334,222,1.542,223,5.791,224,5.791,225,5.791,226,5.791,227,1.781,228,1.854,229,4.334,230,4.334,231,6.063,232,5.791,233,1.423,234,1.712]],["title/injectables/AppConfigService.html",[235,1.789,236,2.258]],["body/injectables/AppConfigService.html",[3,0.181,4,0.141,9,0.141,19,1.253,20,1.108,22,0.196,23,0.842,24,0.014,25,0.181,26,0.55,150,0.4,197,0.011,198,0.011,203,0.473,204,1.236,206,1.753,207,3.276,213,1.651,214,0.67,215,0.842,219,1.438,228,2.391,235,3.037,236,3.832,237,3.759,238,6.832,239,4.871,240,7.35,241,7.65,242,6.814,243,7.35,244,4.871,245,6.664,246,6.814,247,5.936,248,5.591,249,5.591,250,5.591,251,4.396,252,2.692,253,5.591,254,5.591,255,5.591,256,5.591,257,1.903,258,5.591]],["title/modules/AppModule.html",[259,1.867,260,2.699]],["body/modules/AppModule.html",[1,2.214,3,0.162,4,0.126,9,0.126,13,1.479,22,0.237,23,0.754,24,0.013,25,0.162,26,0.492,152,2.343,154,2.214,176,2.139,179,2.214,197,0.01,198,0.01,251,3.938,260,5.662,261,2.33,262,3.578,263,4.363,264,4.363,265,4.363,266,4.363,267,5.218,268,5.218,269,4.61,270,4.009,271,3.156,272,2.676,273,5.008,274,4.009,275,3.4,276,6.363,277,6.363,278,5.543,279,3.367,280,3.4,281,6.363,282,4.363,283,4.363,284,6.363,285,5.008,286,6.363,287,5.008,288,3.938,289,5.008,290,3.938,291,4.363,292,5.008,293,5.008,294,5.008]],["title/classes/AppPage.html",[26,0.395,295,3.157]],["body/classes/AppPage.html",[3,0.192,4,0.15,9,0.15,20,1.025,22,0.171,24,0.013,25,0.192,26,0.585,90,2.352,146,1.886,197,0.011,198,0.011,202,5.186,203,0.503,206,1.82,219,1.82,252,2.796,279,4.002,295,5.564,296,4.002,297,5.186,298,7.813,299,7.813,300,5.954,301,8.094,302,5.954,303,5.186,304,5.954,305,5.954,306,5.954]],["title/modules/AppRoutingModule.html",[259,1.867,267,2.699]],["body/modules/AppRoutingModule.html",[0,0.847,3,0.222,4,0.143,9,0.143,14,2.18,22,0.221,23,0.855,24,0.014,25,0.184,26,0.559,37,2.081,176,1.896,181,1.896,197,0.011,198,0.011,227,2.335,261,2.643,267,4.626,275,3.037,280,3.677,291,4.951,307,5.683,308,4.468,309,6.881,310,4.974,311,4.626,312,5.683,313,4.108,314,4.951,315,2.335,316,6.881,317,5.296,318,4.951,319,4.951,320,4.108,321,6.881,322,5.683,323,5.683,324,5.683,325,5.683,326,5.683,327,5.683,328,3.82]],["title/components/BannerComponent.html",[0,0.494,154,1.145]],["body/components/BannerComponent.html",[0,0.698,1,0.952,2,1.53,3,0.108,4,0.143,5,1.096,6,1.136,7,1.096,8,1.096,9,0.084,11,0.986,12,2.582,13,2.4,14,1.969,15,1.585,17,1.585,19,1.271,20,0.483,22,0.139,23,0.502,24,0.014,25,0.108,26,0.328,35,2.77,36,2.77,37,2.517,41,3.796,43,0.698,51,2.246,52,5.414,53,2.347,67,1.53,79,1.428,81,2.507,82,2.8,83,1.428,85,1.983,86,2.554,88,2.709,89,1.553,90,2.605,92,2.152,94,3.39,95,1.53,96,3.164,102,1.877,103,3.022,113,2.244,114,2.152,118,2.103,119,2.724,122,2.244,124,3.369,126,1.784,127,4.013,128,4.108,129,2.868,131,3.609,133,2.426,134,0.859,135,2.103,136,2.347,138,2.246,141,2.908,142,2.625,144,1.096,145,1.585,146,1.53,147,1.096,148,2.041,149,1.096,150,0.406,151,1.096,152,0.952,153,1.096,154,1.773,155,1.096,156,0.952,157,1.096,158,0.952,159,1.058,160,1.096,161,0.952,162,1.096,163,0.952,164,0.698,165,1.096,166,0.92,167,1.096,168,0.952,169,1.096,170,0.92,171,1.096,172,0.952,173,1.096,174,0.952,175,1.096,176,0.92,177,0.92,178,1.096,179,0.952,180,1.096,181,0.92,182,1.021,183,1.096,184,0.92,185,1.096,186,0.92,187,1.096,188,0.92,189,0.505,190,1.096,191,0.952,192,1.096,193,0.92,194,1.021,195,1.096,196,1.096,197,0.008,198,0.008,203,0.282,329,2.908,330,6.215,331,5.672,332,4.828,333,3.338,334,4.206,335,2.94,336,3.796,337,2.458,338,4.828,339,6.874,340,3.369,341,2.58,342,4.828,343,4.828,344,4.828,345,4.828,346,4.206,347,3.796,348,4.828,349,3.49,350,4.206,351,3.49,352,3.917,353,3.338,354,3.338,355,3.338,356,2.625,357,4.941,358,2.908,359,2.908,360,3.164,361,2.908,362,2.625,363,5.672,364,3.246,365,4.828,366,2.908,367,4.206,368,2.065,369,3.338,370,3.19,371,4.828,372,3.338,373,4.828,374,2.908,375,6.874,376,4.178,377,5.672,378,5.672,379,2.908,380,1.021,381,3.338,382,3.338,383,3.338,384,2.908,385,2.413,386,2.908]],["title/components/BottomNavComponent.html",[0,0.494,156,1.145]],["body/components/BottomNavComponent.html",[0,0.759,1,1.109,2,1.704,3,0.126,4,0.098,5,1.276,6,1.323,7,1.276,8,1.276,9,0.098,11,1.148,12,2.621,13,2.438,14,1.704,15,1.765,17,1.765,19,0.871,20,1.011,22,0.191,23,0.585,24,0.014,25,0.126,26,0.382,43,0.812,79,1.662,80,1.732,81,2.044,82,2.436,83,1.662,84,2.077,89,1.808,90,1.535,92,1.732,95,2.482,98,2.613,99,2.809,102,3.024,117,2.613,118,2.449,119,2.52,122,2.613,124,2.309,129,2.309,133,1.662,136,1.889,137,2.077,138,1.808,144,1.276,145,1.765,146,1.704,147,1.276,148,2.184,149,1.276,150,0.499,151,1.276,152,1.109,153,1.276,154,1.109,155,1.276,156,1.898,157,1.276,158,1.109,159,1.231,160,1.276,161,1.109,162,1.276,163,1.109,164,0.812,165,1.276,166,1.071,167,1.276,168,1.109,169,1.276,170,1.071,171,1.276,172,1.109,173,1.276,174,1.109,175,1.276,176,1.071,177,1.071,178,1.276,179,1.109,180,1.276,181,1.071,182,1.189,183,1.276,184,1.071,185,1.276,186,1.071,187,1.276,188,1.071,189,0.549,190,1.276,191,1.109,192,1.276,193,1.071,194,1.189,195,1.276,196,1.276,197,0.009,198,0.009,200,1.534,201,2.533,203,0.455,204,0.975,206,1.383,209,2.733,213,1.588,214,0.606,215,0.809,219,1.383,220,2.258,228,1.662,234,2.124,352,2.309,356,3.056,362,3.056,368,1.662,387,6.292,388,5.221,389,3.386,390,5.377,391,6.165,392,5.377,393,6.165,394,5.377,395,3.024,396,6.165,397,3.887,398,6.292,399,5.377,400,1.266,401,3.887,402,3.887,403,5.377,404,3.887,405,1.889,406,1,407,0.812,408,2.873,409,2.309,410,3.386,411,3.887,412,2.809,413,5.377,414,2.309,415,5.377,416,5.377,417,3.386,418,5.377,419,3.386,420,2.809,421,1.979,422,2.809,423,3.056,424,3.386,425,2.186]],["title/components/ChildGroupingComponent.html",[0,0.494,158,1.145]],["body/components/ChildGroupingComponent.html",[0,0.743,1,1.066,2,1.658,3,0.121,4,0.094,5,1.227,6,1.272,7,1.227,8,1.227,9,0.094,11,1.104,12,2.612,13,2.429,14,1.658,15,1.718,17,1.718,19,1.353,20,1.061,22,0.173,23,0.563,24,0.014,25,0.121,26,0.368,43,0.781,79,1.599,80,1.666,81,1.421,82,2.067,83,1.599,84,1.997,85,2.22,86,1.536,87,2.544,88,2.15,89,1.738,94,2.691,95,1.184,96,2.664,103,1.817,119,2.055,126,1.997,127,1.997,128,1.997,131,3.633,133,2.238,140,3.256,144,1.227,145,1.718,146,1.658,147,1.227,148,2.147,149,1.227,150,0.432,151,1.227,152,1.066,153,1.227,154,1.066,155,1.227,156,1.066,157,1.227,158,1.866,159,2.506,160,1.227,161,1.066,162,1.227,163,1.066,164,0.781,165,1.227,166,1.03,167,1.227,168,1.066,169,1.227,170,1.03,171,1.227,172,1.066,173,1.227,174,1.066,175,1.227,176,1.03,177,1.03,178,1.227,179,1.066,180,1.227,181,1.03,182,1.143,183,1.227,184,1.03,185,1.227,186,1.03,187,1.227,188,1.03,189,0.538,190,1.227,191,1.066,192,1.227,193,1.03,194,1.143,195,1.227,196,1.227,197,0.008,198,0.008,203,0.316,214,0.702,222,1.393,234,2.584,368,1.599,395,2.943,400,1.095,406,1.553,407,1.262,408,3.914,426,6.512,427,5.877,428,3.256,429,3.347,430,6.038,431,5.233,432,5.26,433,2.296,434,6.885,435,5.26,436,5.26,437,6.038,438,5.233,439,3.738,440,2.481,441,3.738,442,3.738,443,3.738,444,2.796,445,3.738,446,1.143,447,2.355,448,5.61,449,5.233,450,5.233,451,3.108,452,4.114,453,4.114,454,2.102,455,3.738,456,2.513,457,2.513,458,3.738,459,4.558,460,3.738]],["title/interfaces/ClassificationCriterion.html",[461,0.433,462,1.586]],["body/interfaces/ClassificationCriterion.html",[3,0.097,4,0.075,9,0.075,22,0.086,24,0.014,25,0.221,35,1.331,36,1.331,37,1.094,42,2.602,43,1.317,50,1.521,53,2.585,55,1.389,58,1.596,67,2.228,134,1.954,150,0.548,164,1.603,189,0.525,197,0.007,198,0.007,203,0.253,204,0.807,214,0.62,215,1.082,222,1.185,233,0.981,257,2.005,335,1.277,337,2.707,341,2.378,380,1.627,400,1.469,406,1.144,407,1.43,429,2.585,433,2.859,440,2.421,446,1.802,461,0.835,462,2.49,463,0.823,464,1.68,465,2.238,466,2.643,467,2.378,468,2.842,469,3.159,470,3.159,471,3.5,472,2.309,473,3.199,474,2.89,475,2.589,476,3.159,477,3.159,478,2.643,479,2.643,480,2.643,481,2.704,482,2.602,483,1.861,484,2.643,485,2.842,486,2.97,487,2.473,488,2.585,489,1.331,490,2.274,491,2.274,492,1.774,493,1.774,494,1.774,495,2.927,496,1.68,497,1.983,498,1.017,499,1.596,500,1.452,501,1.774,502,3.5,503,3.5,504,1.774,505,1.68,506,3.367,507,1.774,508,3.419,509,1.774,510,2.707,511,1.389,512,1.331,513,1.774,514,1.389,515,1.774,516,3.159,517,1.389,518,1.903,519,1.983,520,1.774,521,1.774,522,1.774,523,2.643,524,2.643,525,2.378,526,1.331,527,1.331,528,1.774,529,1.774,530,2.265,531,1.774,532,2.643,533,3.159,534,1.774,535,1.68,536,1.596,537,1.774,538,1.389,539,2.265,540,2.265,541,1.758,542,1.774,543,1.18,544,1.774,545,1.774,546,1.596,547,0.981,548,2.643,549,1.774,550,1.774,551,1.774,552,1.68,553,1.68]],["title/interfaces/ClassificationFramework.html",[461,0.433,498,1.366]],["body/interfaces/ClassificationFramework.html",[3,0.094,4,0.074,9,0.074,22,0.084,24,0.014,25,0.22,35,1.951,36,1.951,37,1.603,42,2.657,43,1.521,50,1.488,53,2.834,55,1.359,58,1.562,67,2.214,134,1.946,150,0.546,164,1.493,189,0.519,197,0.007,198,0.007,203,0.247,204,0.794,214,0.644,215,1.095,222,1.165,233,0.96,257,1.984,335,1.25,337,2.968,341,2.339,380,1.339,400,1.465,406,1.126,407,1.37,429,2.552,433,2.809,440,2.395,446,1.606,461,0.831,462,2.303,463,0.805,464,1.644,465,2.226,466,1.736,467,1.562,468,2.339,469,2.6,470,2.6,471,1.736,472,2.294,473,3.209,474,2.792,475,2.157,476,2.6,477,2.6,478,1.736,479,1.736,480,1.736,481,2.685,482,2.584,483,2.182,484,3.118,485,3.115,486,2.957,487,2.904,488,3.186,489,1.951,490,2.67,491,2.493,492,2.6,493,2.6,494,2.6,495,3.056,496,2.462,497,2.34,498,1.49,499,1.562,500,2.128,501,2.6,502,3.709,503,3.709,504,2.6,505,3.279,506,3.336,507,1.736,508,3.397,509,1.736,510,2.672,511,1.359,512,1.303,513,1.736,514,1.359,515,1.736,516,3.118,517,1.359,518,1.872,519,1.951,520,1.736,521,1.736,522,1.736,523,2.6,524,2.6,525,2.339,526,1.303,527,1.303,528,1.736,529,1.736,530,2.229,531,1.736,532,2.6,533,3.118,534,1.736,535,1.644,536,1.562,537,1.736,538,1.359,539,2.229,540,2.229,541,1.73,542,1.736,543,1.155,544,1.736,545,1.736,546,1.562,547,0.96,548,2.6,549,1.736,550,1.736,551,1.736,552,1.644,553,1.644,554,1.303]],["title/interfaces/ClassificationFrameworkResponse.html",[461,0.433,555,2.145]],["body/interfaces/ClassificationFrameworkResponse.html",[3,0.159,4,0.124,9,0.124,22,0.181,24,0.014,25,0.25,42,2.635,51,3.224,67,1.557,134,1.986,150,0.561,189,0.438,197,0.01,198,0.01,203,0.416,204,1.14,214,0.742,215,0.946,222,1.308,400,1.525,405,2.389,406,1.264,433,1.868,446,1.923,461,0.867,463,1.354,465,2.12,472,2.578,473,3.173,483,2.348,489,2.19,490,2.688,518,2.102,519,2.19,526,2.19,527,2.19,541,1.941,543,1.941,555,3.359,556,2.919,557,4.603,558,4.117,559,4.367,560,2.626,561,3.096,562,2.626,563,3.096,564,2.626,565,3.096,566,3.096,567,2.626,568,2.626,569,3.535,570,2.286]],["title/interfaces/ClassificationView.html",[461,0.433,510,2.044]],["body/interfaces/ClassificationView.html",[3,0.097,4,0.076,9,0.076,22,0.087,24,0.014,25,0.222,35,1.344,36,1.344,37,1.104,42,2.61,43,1.322,50,1.535,53,2.878,55,1.403,58,1.611,67,2.235,134,1.958,150,0.549,164,1.506,189,0.527,197,0.007,198,0.007,203,0.255,204,0.813,214,0.622,215,1.062,222,1.193,233,0.99,257,2.015,335,1.29,337,3.014,341,2.395,380,1.371,400,1.47,406,1.153,407,1.386,429,2.6,433,2.921,440,2.724,446,1.636,461,0.836,462,2.339,463,0.831,464,1.696,465,2.243,466,1.791,467,1.611,468,2.395,469,2.662,470,2.662,471,1.791,472,2.316,473,3.224,474,2.821,475,2.197,476,2.662,477,2.662,478,1.791,479,1.791,480,1.791,481,2.712,482,2.61,483,1.869,484,2.662,485,3.164,486,2.976,487,2.488,488,2.6,489,1.344,490,2.287,491,2.287,492,1.791,493,1.791,494,1.791,495,2.936,496,1.696,497,1.998,498,1.026,499,1.611,500,1.466,501,1.791,502,3.758,503,3.758,504,1.791,505,1.696,506,3.381,507,1.791,508,3.662,509,1.791,510,3.014,511,1.403,512,1.344,513,1.791,514,1.403,515,1.791,516,3.517,517,1.403,518,1.917,519,1.998,520,1.791,521,1.791,522,1.791,523,2.662,524,2.662,525,2.395,526,1.344,527,1.344,528,1.791,529,1.791,530,2.282,531,1.791,532,2.662,533,3.177,534,1.791,535,1.696,536,1.611,537,1.791,538,1.403,539,2.282,540,2.282,541,1.771,542,1.791,543,1.191,544,1.791,545,1.791,546,1.611,547,0.99,548,2.662,549,1.791,550,1.791,551,1.791,552,1.696,553,1.696]],["title/interfaces/ClassificationViewCombination.html",[461,0.433,487,1.867]],["body/interfaces/ClassificationViewCombination.html",[3,0.096,4,0.074,9,0.074,22,0.085,24,0.014,25,0.221,35,1.319,36,1.319,37,1.084,42,2.503,43,1.312,50,1.506,53,2.851,55,1.376,58,1.581,67,2.222,134,1.951,150,0.547,164,1.498,189,0.522,197,0.007,198,0.007,203,0.25,204,0.801,214,0.647,215,1.099,222,1.561,233,0.971,257,1.996,335,1.265,337,2.986,341,2.361,380,1.351,400,1.467,406,1.693,407,1.376,429,2.571,433,2.817,440,2.41,446,1.617,461,0.833,462,2.317,463,0.815,464,1.664,465,2.233,466,1.757,467,1.581,468,2.361,469,2.624,470,2.624,471,1.757,472,2.303,473,3.215,474,2.803,475,2.173,476,2.624,477,2.624,478,1.757,479,1.757,480,1.757,481,2.695,482,2.594,483,1.854,484,2.624,485,3.134,486,2.964,487,2.728,488,2.571,489,1.319,490,2.816,491,2.508,492,1.757,493,1.757,494,1.757,495,2.918,496,1.664,497,1.969,498,1.007,499,1.581,500,1.438,501,1.757,502,3.728,503,3.728,504,1.757,505,1.664,506,3.9,507,2.624,508,3.648,509,1.757,510,2.986,511,2.055,512,1.969,513,2.624,514,2.055,515,2.624,516,3.141,517,1.376,518,1.89,519,1.969,520,1.757,521,1.757,522,1.757,523,2.624,524,2.624,525,2.361,526,1.319,527,1.319,528,1.757,529,1.757,530,2.249,531,1.757,532,2.624,533,3.141,534,1.757,535,1.664,536,1.581,537,1.757,538,1.376,539,2.249,540,2.249,541,1.746,542,1.757,543,1.169,544,1.757,545,1.757,546,1.581,547,0.971,548,2.624,549,1.757,550,1.757,551,1.757,552,1.664,553,1.664,571,2.959]],["title/interfaces/ClassificationViewCombinationResponse.html",[461,0.433,560,2.145]],["body/interfaces/ClassificationViewCombinationResponse.html",[3,0.157,4,0.122,9,0.122,22,0.179,24,0.014,25,0.249,42,2.763,51,3.38,67,1.535,134,2.013,150,0.56,189,0.432,197,0.01,198,0.01,203,0.41,204,1.13,214,0.739,215,0.938,222,1.833,400,1.523,405,2.356,406,1.869,433,1.842,446,1.905,461,0.872,463,1.335,465,2.223,472,2.569,473,3.161,483,2.034,489,2.776,490,2.945,518,2.072,519,2.16,526,2.16,527,2.16,541,1.914,543,1.914,555,2.589,556,2.878,557,3.053,558,4.317,559,4.579,560,3.329,561,4.579,562,2.589,563,3.053,564,2.589,565,3.053,566,3.053,567,2.589,568,2.589,569,3.503,570,2.254]],["title/interfaces/ClassificationViewResponse.html",[461,0.433,562,2.145]],["body/interfaces/ClassificationViewResponse.html",[3,0.159,4,0.124,9,0.124,22,0.181,24,0.014,25,0.25,42,2.78,51,3.4,67,1.559,134,2.02,150,0.562,189,0.438,197,0.01,198,0.01,203,0.416,204,1.141,214,0.719,222,1.31,400,1.525,405,2.393,406,1.266,433,1.871,446,1.925,461,0.874,463,1.356,465,2.236,472,2.579,473,3.175,483,2.049,489,2.194,490,2.966,518,2.105,519,2.194,526,2.194,527,2.194,541,1.944,543,1.944,555,2.63,556,2.923,557,3.101,558,4.342,559,4.606,560,2.63,561,3.101,562,3.362,563,4.606,564,2.63,565,3.101,566,3.101,567,2.63,568,2.63,569,3.539,570,2.289]],["title/modules/CoreModule.html",[259,1.867,268,2.699]],["body/modules/CoreModule.html",[3,0.172,4,0.134,9,0.134,22,0.229,23,0.799,24,0.014,25,0.172,26,0.522,31,4.172,197,0.011,198,0.011,215,0.799,233,1.742,236,4.577,259,2.468,261,2.468,262,3.711,268,5.586,270,4.157,271,3.343,272,2.835,274,3.343,275,2.835,280,3.526,409,3.152,572,4.622,573,4.622,574,3.829,575,4.43,576,5.295,577,5.306,578,4.769,579,6.598,580,6.598,581,4.769,582,4.769,583,5.306,584,4.172,585,5.306,586,5.306,587,5.306,588,4.622,589,5.306,590,5.306,591,5.306,592,3.836,593,4.622,594,5.306,595,5.306,596,5.306,597,3.836,598,5.306,599,5.306,600,5.306]],["title/interfaces/CriteriaBasedQuery.html",[461,0.433,601,1.867]],["body/interfaces/CriteriaBasedQuery.html",[3,0.116,4,0.09,9,0.09,20,0.856,22,0.103,24,0.014,25,0.228,38,3.159,61,2.864,62,3.819,67,1.873,112,1.672,125,1.921,134,0.925,150,0.485,164,1.064,189,0.527,197,0.008,198,0.008,214,0.667,222,0.957,233,1.18,234,1.421,257,1.224,370,3.616,380,1.967,400,1.4,407,1.547,461,0.833,462,1.421,463,0.991,465,2.216,474,1.477,475,2.642,481,2.54,482,1.936,483,1.899,486,2.784,491,1.538,495,1.538,497,3.141,511,2.75,512,2.635,514,3.55,517,2.75,538,1.672,547,2.228,554,1.603,570,2.368,601,2.368,602,2.136,603,3.872,604,3.325,605,3.423,606,3.024,607,3.596,608,3.132,609,3.273,610,3.596,611,3.974,612,3.273,613,2.417,614,2.417,615,4.276,616,3.689,617,2.022,618,2.266,619,2.266,620,2.417,621,4.186,622,3.423,623,2.417,624,3.423,625,1.672,626,2.417,627,2.417,628,3.024,629,3.024,630,2.136,631,2.266,632,3.126,633,3.208,634,2.417,635,2.417,636,2.417,637,2.721,638,2.266,639,1.921,640,4.871,641,3.024,642,3.208,643,2.417,644,3.423,645,3.423,646,3.208,647,2.417,648,3.208,649,3.725,650,4.051,651,4.051,652,3.024,653,2.417,654,3.024,655,3.208,656,3.208,657,2.417,658,2.417,659,2.417,660,2.417,661,2.417,662,2.266]],["title/interfaces/CriteriaGrouping.html",[440,1.65,461,0.433]],["body/interfaces/CriteriaGrouping.html",[3,0.095,4,0.074,9,0.074,22,0.084,24,0.014,25,0.22,35,1.305,36,1.305,37,1.072,42,2.494,43,1.306,50,1.491,53,2.555,55,1.362,58,1.565,67,2.372,134,1.839,150,0.546,164,1.494,189,0.557,197,0.007,198,0.007,203,0.248,204,0.795,214,0.645,215,1.127,222,1.167,233,0.961,257,1.986,335,1.252,337,2.675,341,2.808,380,1.341,400,1.465,406,1.128,407,1.371,429,3.188,433,2.97,440,2.567,446,1.607,461,0.832,462,2.591,463,0.807,464,1.647,465,2.227,466,1.739,467,1.565,468,2.808,469,3.122,470,3.122,471,1.739,472,2.295,473,3.26,474,2.793,475,2.159,476,2.604,477,2.604,478,1.739,479,1.739,480,1.739,481,2.686,482,2.585,483,1.846,484,2.604,485,2.808,486,2.958,487,2.444,488,2.555,489,1.305,490,2.248,491,2.495,492,1.739,493,1.739,494,1.739,495,2.908,496,1.647,497,1.954,498,0.996,499,1.565,500,1.424,501,1.739,502,3.712,503,3.712,504,1.739,505,1.647,506,3.339,507,1.739,508,3.399,509,1.739,510,2.675,511,1.362,512,1.305,513,1.739,514,1.362,515,1.739,516,3.712,517,2.039,518,2.805,519,2.342,520,2.604,521,2.604,522,2.604,523,3.122,524,3.122,525,2.808,526,1.954,527,1.954,528,1.739,529,2.604,530,2.675,531,2.604,532,2.604,533,3.122,534,1.739,535,1.647,536,1.565,537,1.739,538,1.362,539,2.232,540,2.232,541,1.732,542,1.739,543,1.157,544,1.739,545,1.739,546,1.565,547,0.961,548,2.604,549,1.739,550,1.739,551,1.739,552,1.647,553,1.647]],["title/interfaces/CriteriaGroupingResponse.html",[461,0.433,564,2.145]],["body/interfaces/CriteriaGroupingResponse.html",[3,0.156,4,0.122,9,0.122,22,0.179,24,0.014,25,0.249,42,2.616,51,3.378,67,1.972,134,1.868,150,0.559,189,0.431,197,0.01,198,0.01,203,0.409,204,1.128,214,0.739,215,1.093,222,1.288,400,1.528,405,2.352,406,1.244,433,2.366,446,1.903,461,0.871,463,1.333,465,2.222,472,2.569,473,3.16,483,2.032,489,2.156,490,2.662,518,3.106,519,2.156,526,2.156,527,2.156,541,1.911,543,1.911,555,2.585,556,2.874,557,3.048,558,4.314,559,4.576,560,2.585,561,3.048,562,2.585,563,3.048,564,3.325,565,4.576,566,4.576,567,2.585,568,2.585,569,3.5,570,2.25]],["title/interfaces/CriteriaReview.html",[461,0.433,569,2.258]],["body/interfaces/CriteriaReview.html",[3,0.168,4,0.131,9,0.131,20,0.752,22,0.187,24,0.014,25,0.253,42,2.703,51,3.307,67,1.645,134,1.829,150,0.533,189,0.462,197,0.01,198,0.01,222,1.382,400,1.517,405,2.524,406,1.335,433,1.974,446,2.175,461,0.875,463,1.431,465,2.175,472,2.447,473,3.062,483,2.1,489,2.314,490,2.784,518,2.22,519,2.314,526,2.314,527,2.314,541,2.051,543,2.051,555,2.774,556,3.084,557,3.271,558,4.223,559,4.48,560,2.774,561,3.271,562,2.774,563,3.271,564,2.774,565,3.271,566,3.271,567,2.774,568,2.774,569,3.999,570,3.027,608,4.523,663,5.192]],["title/components/CriterionComponent.html",[0,0.494,161,1.145]],["body/components/CriterionComponent.html",[0,0.672,1,0.89,2,1.457,3,0.207,4,0.079,5,1.025,6,1.062,7,1.025,8,1.025,9,0.079,11,0.922,12,2.563,13,2.382,14,1.457,15,1.509,17,1.509,19,1.223,20,1.053,22,0.173,23,0.47,24,0.014,25,0.101,26,0.307,43,0.652,79,1.335,80,1.391,81,2.44,82,3.133,83,2.745,84,2.916,86,2.637,88,2.474,89,2.138,90,2.743,92,2.432,94,2.683,95,0.989,96,3.065,102,1.755,103,1.517,112,2.516,114,2.049,119,2.184,125,3.709,127,3.217,128,3.217,131,3.267,132,3.709,133,1.335,134,0.803,138,2.138,144,1.025,145,1.509,146,1.457,147,1.025,148,1.977,149,1.025,150,0.39,151,1.025,152,0.89,153,1.025,154,0.89,155,1.025,156,0.89,157,1.025,158,0.89,159,1.729,160,1.025,161,1.717,162,1.025,163,0.89,164,1.403,165,1.025,166,0.86,167,1.025,168,0.89,169,1.025,170,0.86,171,1.025,172,0.89,173,1.025,174,0.89,175,1.025,176,0.86,177,0.86,178,1.025,179,0.89,180,1.025,181,0.86,182,0.955,183,1.025,184,0.86,185,1.025,186,0.86,187,1.025,188,0.86,189,0.486,190,1.025,191,0.89,192,1.025,193,0.86,194,0.955,195,1.025,196,1.025,197,0.007,198,0.007,200,1.311,201,2.242,203,0.264,204,0.834,206,1.182,209,2.474,214,0.683,219,0.803,220,1.684,222,1.224,367,5.245,368,1.966,370,1.755,376,3.669,380,1.963,384,2.719,395,2.585,400,1.164,406,0.803,407,0.652,408,3.587,414,1.854,421,3.267,425,1.755,446,2.053,447,1.967,454,3.386,459,4.005,462,2.156,475,2.242,539,2.778,612,3.627,664,2.719,665,5.457,666,4.597,667,5.457,668,5.457,669,4.597,670,3.121,671,3.121,672,3.121,673,4.597,674,3.121,675,3.121,676,3.121,677,3.121,678,4.597,679,4.597,680,4.597,681,3.121,682,3.121,683,3.121,684,4.597,685,5.457,686,4.597,687,4.005,688,4.597,689,4.597,690,3.615,691,4.597,692,4.597,693,4.597,694,3.615,695,4.597,696,4.597,697,2.719,698,6.021,699,3.121,700,2.719,701,2.897,702,3.121,703,3.121,704,3.121,705,2.098,706,2.897]],["title/components/CriterionFilterComponent.html",[0,0.494,163,1.145]],["body/components/CriterionFilterComponent.html",[0,0.678,1,0.906,2,1.475,3,0.103,4,0.08,5,1.042,6,1.081,7,1.042,8,1.042,9,0.08,11,0.938,12,2.568,13,2.386,14,1.475,15,1.528,17,1.528,19,0.711,20,1.011,22,0.174,23,0.478,24,0.014,25,0.103,26,0.312,35,1.415,43,0.664,51,2.823,79,1.358,80,1.415,81,1.77,82,2.398,83,1.991,86,1.913,87,1.544,88,1.305,94,2.457,95,1.475,102,1.786,103,1.544,114,2.075,119,1.876,129,1.886,133,1.358,144,1.042,145,1.528,146,1.475,147,1.042,148,1.993,149,1.042,150,0.462,151,1.042,152,0.906,153,1.042,154,0.906,155,1.042,156,0.906,157,1.042,158,0.906,159,1.006,160,1.042,161,0.906,162,1.042,163,1.732,164,1.573,165,1.042,166,0.875,167,1.042,168,0.906,169,1.042,170,0.875,171,1.042,172,0.906,173,1.042,174,0.906,175,1.042,176,0.875,177,0.875,178,1.042,179,0.906,180,1.042,181,0.875,182,0.971,183,1.042,184,0.875,185,1.042,186,0.875,187,1.042,188,0.875,189,0.491,190,1.042,191,0.906,192,1.042,193,0.875,194,0.971,195,1.042,196,1.042,197,0.007,198,0.007,200,1.328,201,2.265,203,0.269,204,0.844,206,1.197,209,2.494,213,0.938,214,0.636,215,0.478,219,1.197,220,2.019,222,1.239,228,1.358,252,1.254,315,2.494,360,1.617,368,1.358,376,2.134,380,0.971,395,2.618,400,0.844,406,0.817,407,1.496,408,2.488,421,2.37,425,1.786,451,1.886,475,1.305,547,1.042,601,1.477,603,3.609,612,1.617,616,2.806,632,2.68,633,4.398,651,2.001,701,2.001,705,2.134,707,6.236,708,5.628,709,2.766,710,5.512,711,4.655,712,5.512,713,3.984,714,6.07,715,4.655,716,5.512,717,3.175,718,5.288,719,4.655,720,4.055,721,3.175,722,5.512,723,3.175,724,3.175,725,3.175,726,5.512,727,5.512,728,3.175,729,4.655,730,2.001,731,2.295,732,1.617,733,7.526,734,4.655,735,4.655,736,4.655,737,4.655,738,3.175,739,4.655,740,3.175,741,3.175,742,3.175,743,3.175,744,3.175,745,3.175,746,3.175,747,5.512,748,3.175,749,3.175,750,4.655,751,3.175,752,3.175,753,3.175,754,3.175,755,4.655,756,3.175,757,3.175,758,3.175,759,3.175,760,2.134,761,3.175,762,3.175,763,3.175,764,3.175,765,3.175,766,6.755,767,5.512,768,6.07,769,2.497,770,3.175,771,3.175,772,3.175,773,2.497,774,3.175]],["title/interfaces/CriterionFilterConfiguration.html",[461,0.433,616,2.044]],["body/interfaces/CriterionFilterConfiguration.html",[3,0.111,4,0.086,9,0.086,20,0.712,22,0.098,24,0.014,25,0.224,38,2.627,61,2.765,62,3.417,67,1.557,112,1.614,125,1.829,134,0.88,150,0.496,164,1.202,189,0.512,197,0.008,198,0.008,203,0.289,204,0.891,214,0.743,215,0.74,222,0.911,233,1.124,234,1.352,257,1.673,370,3.536,380,1.923,400,1.442,407,1.527,461,0.825,462,1.942,463,0.943,465,2.184,474,1.406,475,2.736,481,2.484,482,2.187,483,1.857,486,2.739,491,1.464,495,2.102,497,3.183,511,2.675,512,2.564,514,3.512,517,2.675,538,2.924,547,2.186,554,1.525,570,1.592,601,1.592,602,2.033,603,3.904,604,2.765,605,2.301,606,2.033,609,2.928,611,3.867,612,3.201,613,2.301,614,2.301,615,4.196,616,3.72,617,1.925,618,2.156,619,2.156,620,2.301,621,4.34,622,3.867,623,2.301,624,3.304,625,1.592,626,2.301,627,3.304,628,3.417,629,3.417,630,3.735,631,3.097,632,3.472,633,4.196,634,3.304,635,3.304,636,4.226,637,2.627,638,2.156,639,1.829,640,4.801,641,2.92,642,3.097,643,2.301,644,3.304,645,3.304,646,3.097,647,2.301,648,3.097,649,3.624,650,3.961,651,3.961,652,2.92,653,2.301,654,2.92,655,3.097,656,3.097,657,2.301,658,2.301,659,2.301,660,2.301,661,2.301,662,2.156]],["title/interfaces/CriterionFilterValue.html",[461,0.433,609,2.044]],["body/interfaces/CriterionFilterValue.html",[3,0.112,4,0.087,9,0.087,20,0.716,22,0.099,24,0.014,25,0.225,38,2.643,61,2.782,62,3.75,67,1.567,112,1.624,125,1.845,134,0.888,150,0.478,164,1.034,189,0.515,197,0.008,198,0.008,203,0.292,204,0.897,214,0.744,215,0.745,222,1.539,233,1.133,234,1.364,257,1.175,370,3.55,380,2.127,400,1.415,407,1.631,461,0.827,462,1.364,463,0.951,465,2.19,474,1.418,475,2.745,481,2.284,482,1.881,483,1.864,486,2.747,491,2.116,495,1.477,497,3.099,511,2.689,512,2.576,514,3.562,517,2.689,538,1.606,547,2.351,554,1.539,570,1.606,601,1.606,602,2.051,603,3.89,604,3.251,605,2.321,606,2.051,609,3.214,611,3.886,612,3.214,613,2.321,614,2.321,615,4.21,616,3.645,617,1.942,618,2.175,619,2.175,620,2.321,621,4.13,622,3.325,623,2.321,624,3.886,625,1.606,626,2.321,627,2.321,628,2.938,629,2.938,630,2.051,631,2.175,632,3.38,633,4.21,634,2.321,635,2.321,636,2.321,637,2.643,638,2.175,639,1.845,640,4.813,641,2.938,642,3.117,643,2.321,644,3.325,645,3.325,646,3.117,647,2.321,648,3.117,649,3.642,650,3.978,651,4.21,652,2.938,653,2.321,654,2.938,655,3.117,656,3.117,657,2.321,658,3.325,659,3.325,660,3.325,661,3.325,662,3.117]],["title/interfaces/CriterionInstance.html",[446,1.228,461,0.433]],["body/interfaces/CriterionInstance.html",[3,0.097,4,0.076,9,0.076,22,0.087,24,0.014,25,0.222,35,1.343,36,1.343,37,1.103,42,2.61,43,1.322,50,1.534,53,2.599,55,1.401,58,1.61,67,2.175,134,1.853,150,0.524,164,1.555,189,0.59,197,0.007,198,0.007,203,0.255,204,0.812,214,0.582,215,1.104,222,1.192,233,0.989,257,2.256,335,1.289,337,2.721,341,2.856,380,1.37,400,1.45,406,1.152,407,1.385,429,2.599,433,2.788,440,2.431,446,1.81,461,0.836,462,2.499,463,0.83,464,1.694,465,2.243,466,1.79,467,1.61,468,2.393,469,2.66,470,2.66,471,1.79,472,2.076,473,3.224,474,2.82,475,2.723,476,3.175,477,3.175,478,1.79,479,1.79,480,1.79,481,2.712,482,2.61,483,1.868,484,2.66,485,2.856,486,2.976,487,2.486,488,2.599,489,1.343,490,2.286,491,2.286,492,1.79,493,1.79,494,1.79,495,3.081,496,1.694,497,1.996,498,1.025,499,1.61,500,1.465,501,1.79,502,3.515,503,3.515,504,1.79,505,1.694,506,3.379,507,1.79,508,3.428,509,1.79,510,2.721,511,1.401,512,1.343,513,1.79,514,1.401,515,1.79,516,3.175,517,1.401,518,1.915,519,1.996,520,1.79,521,1.79,522,1.79,523,3.175,524,3.175,525,2.856,526,1.343,527,1.343,528,1.79,529,1.79,530,2.721,531,1.79,532,2.66,533,3.175,534,2.66,535,2.519,536,1.61,537,1.79,538,2.753,539,2.721,540,2.721,541,2.499,542,2.66,543,2.338,544,1.79,545,1.79,546,1.61,547,0.989,548,2.66,549,1.79,550,1.79,551,1.79,552,1.694,553,1.694]],["title/interfaces/CriterionValue.html",[461,0.433,539,2.044]],["body/interfaces/CriterionValue.html",[3,0.096,4,0.075,9,0.075,22,0.085,24,0.014,25,0.221,35,1.324,36,1.324,37,1.088,42,2.507,43,1.314,50,2.256,53,2.577,55,1.381,58,2.368,67,2.164,134,1.846,150,0.522,164,1.527,189,0.523,197,0.007,198,0.007,203,0.251,204,0.803,214,0.618,215,1.143,222,1.564,233,1.455,257,2.244,335,1.27,337,2.698,341,2.368,380,1.621,400,1.468,406,1.14,407,1.586,429,2.577,433,2.778,440,2.414,446,1.797,461,0.834,462,2.322,463,0.818,464,1.67,465,2.268,466,1.764,467,1.587,468,2.368,469,2.632,470,2.632,471,1.764,472,2.064,473,3.148,474,2.807,475,2.177,476,2.632,477,2.632,478,1.764,479,1.764,480,1.764,481,2.605,482,2.507,483,1.857,484,3.148,485,2.832,486,2.967,487,2.465,488,2.577,489,1.324,490,2.267,491,2.267,492,1.764,493,1.764,494,1.764,495,3.125,496,1.67,497,2.362,498,1.011,499,1.587,500,1.444,501,1.764,502,3.49,503,3.49,504,1.764,505,1.67,506,3.359,507,1.764,508,3.413,509,1.764,510,2.698,511,1.381,512,1.324,513,1.764,514,1.381,515,1.764,516,3.148,517,1.381,518,1.895,519,2.362,520,1.764,521,1.764,522,1.764,523,2.632,524,2.632,525,2.368,526,1.324,527,1.324,528,1.764,529,1.764,530,2.256,531,1.764,532,2.632,533,3.49,534,1.764,535,1.67,536,1.587,537,1.764,538,1.381,539,2.698,540,2.698,541,1.751,542,1.764,543,1.173,544,2.632,545,2.632,546,2.368,547,1.74,548,3.916,549,2.632,550,2.632,551,2.632,552,2.492,553,3.305]],["title/injectables/DataService.html",[235,1.789,574,1.952]],["body/injectables/DataService.html",[3,0.058,4,0.045,9,0.045,19,0.402,20,1.067,22,0.181,23,0.27,24,0.014,25,0.058,26,0.176,43,0.797,67,1.406,112,1.251,134,1.141,150,0.523,189,0.473,197,0.005,198,0.005,203,0.152,206,0.765,207,2.505,213,2.048,214,0.672,215,1.044,219,1.88,228,0.767,231,1.562,234,2.323,235,1.326,237,1.205,244,1.562,245,3.865,247,2.591,251,1.41,252,3.064,257,0.61,315,3.288,376,2,400,1.416,405,0.872,406,1.141,407,1.109,433,1.687,440,2.18,444,3.142,448,1.41,462,1.175,472,2.119,473,2.507,483,1.802,487,1.773,490,1.63,498,1.51,505,2.144,506,0.958,508,2.392,510,1.941,518,0.767,543,0.708,547,0.589,554,1.977,555,0.958,560,1.59,562,1.59,564,2.629,567,0.958,568,0.958,570,0.834,574,1.446,575,2.495,588,1.562,603,0.872,625,0.834,632,0.872,687,1.562,730,1.13,732,3.576,775,1.41,776,2.975,777,4.436,778,2.975,779,2.975,780,2.975,781,2.975,782,2.975,783,2.975,784,4.436,785,4.436,786,4.436,787,2.975,788,2.975,789,2.975,790,2.975,791,4.436,792,2.975,793,4.436,794,2.975,795,2.563,796,2.975,797,2.755,798,1.793,799,2.975,800,1.793,801,1.793,802,4.24,803,2.975,804,1.793,805,3.812,806,2.975,807,1.793,808,2.975,809,2.975,810,1.793,811,2.975,812,1.793,813,2.975,814,2.975,815,1.793,816,2.975,817,1.793,818,1.793,819,1.793,820,1.793,821,2.975,822,1.793,823,6.102,824,2.975,825,1.793,826,2.975,827,1.793,828,2.975,829,1.793,830,1.793,831,2.975,832,1.793,833,2.591,834,1.793,835,2.975,836,1.793,837,2.975,838,2.975,839,1.793,840,1.793,841,4.665,842,1.793,843,0.834,844,2.975,845,3.812,846,1.793,847,1.296,848,1.793,849,3.812,850,1.296,851,1.41,852,0.913,853,2,854,1.13,855,1.793,856,1.065,857,1.41,858,1.41,859,1.562,860,1.41,861,1.562,862,1.41,863,1.562,864,1.41,865,1.562,866,1.562,867,1.41,868,1.562,869,1.41,870,1.562,871,1.41,872,1.562,873,1.41,874,1.562,875,1.41,876,1.562,877,3.812,878,1.793,879,1.793,880,2.975,881,1.793,882,1.793,883,1.793,884,1.793,885,1.41,886,1.793,887,1.793,888,1.793,889,1.793,890,1.793,891,3.844,892,7.18,893,5.19,894,1.793,895,2.975,896,1.793,897,2.975,898,1.793,899,3.488,900,2.339,901,1.793,902,1.793,903,3.812,904,1.793,905,2.975,906,1.793,907,4.826,908,1.793,909,5.305,910,1.793,911,1.793,912,1.793,913,1.793,914,1.793,915,1.793,916,1.793,917,3.812,918,2.975,919,1.793,920,1.41,921,1.793,922,1.793,923,1.793,924,2.975,925,1.793,926,1.793,927,2.975,928,3.812,929,3.812,930,2.975,931,1.793,932,2.975,933,2.975,934,1.793,935,1.793,936,1.793,937,4.436,938,2.975,939,1.793,940,1.793,941,1.793,942,1.793,943,1.793,944,1.793,945,1.793,946,1.793,947,1.793,948,1.793,949,1.793,950,1.793,951,1.793,952,1.793,953,3.812,954,2.975,955,1.793,956,1.793,957,2.339,958,1.793,959,1.793,960,1.793,961,2.975,962,1.793,963,1.793,964,1.793,965,1.793,966,1.793,967,1.793,968,2.339,969,1.793,970,1.793,971,1.793,972,1.793,973,1.793,974,1.793,975,1.793,976,1.793,977,1.793,978,1.793,979,1.793,980,1.793,981,1.793,982,1.793,983,1.793,984,1.793,985,1.793,986,1.793,987,1.793,988,1.793,989,1.793,990,1.793,991,1.793,992,1.793,993,3.812,994,2.975,995,1.793,996,1.793,997,1.793,998,2.975,999,1.793,1000,1.793,1001,2.975,1002,1.296,1003,1.793,1004,1.793,1005,2,1006,2.975,1007,1.793,1008,1.793,1009,1.296,1010,1.793,1011,1.793,1012,1.793,1013,1.793,1014,1.793,1015,1.793,1016,1.793,1017,1.793,1018,1.793,1019,1.793,1020,1.793,1021,2.755,1022,1.793,1023,1.793,1024,3.812,1025,1.793,1026,1.793,1027,1.793,1028,1.793,1029,1.296,1030,1.793,1031,1.793,1032,1.793,1033,1.793,1034,2.975,1035,1.793,1036,1.793,1037,1.793,1038,1.793,1039,1.793,1040,2.975,1041,2.975,1042,1.793,1043,1.793,1044,1.793,1045,1.793,1046,1.793,1047,1.793,1048,1.793,1049,1.793,1050,1.793]],["title/classes/EnsureModuleLoadedOnceGuard.html",[26,0.395,582,2.902]],["body/classes/EnsureModuleLoadedOnceGuard.html",[3,0.197,4,0.153,9,0.153,19,1.365,20,0.882,22,0.175,24,0.013,25,0.197,26,0.599,150,0.436,197,0.011,198,0.011,213,1.8,214,0.599,215,0.917,259,3.546,260,4.096,296,4.096,582,5.186,584,5.995,732,3.102,1051,6.249,1052,5.308,1053,7.174,1054,6.093,1055,7.174,1056,6.093,1057,6.093,1058,6.093]],["title/components/FaqComponent.html",[0,0.494,166,1.106]],["body/components/FaqComponent.html",[0,0.84,1,1.357,2,1.95,3,0.154,4,0.12,5,1.562,6,1.619,7,1.562,8,1.562,9,0.12,11,1.405,12,2.666,13,2.482,14,1.95,15,2.021,17,2.021,19,1.529,20,0.891,22,0.137,23,0.716,24,0.013,25,0.154,26,0.468,43,0.994,95,1.507,144,1.562,145,2.021,146,1.95,147,1.562,148,2.369,149,1.562,150,0.488,151,1.562,152,1.357,153,1.562,154,1.357,155,1.562,156,1.357,157,1.562,158,1.357,159,1.507,160,1.562,161,1.357,162,1.562,163,1.357,164,0.994,165,1.562,166,1.989,167,1.562,168,1.357,169,1.562,170,1.311,171,1.562,172,1.357,173,1.562,174,1.357,175,1.562,176,1.311,177,1.311,178,1.562,179,1.357,180,1.562,181,1.311,182,1.455,183,1.562,184,1.311,185,1.562,186,1.311,187,1.562,188,1.311,189,0.608,190,1.562,191,1.357,192,1.562,193,1.311,194,1.455,195,1.562,196,1.562,197,0.01,198,0.01,200,1.756,201,2.804,203,0.402,206,1.583,209,2.965,219,1.223,220,2.254,1059,4.144,1060,6.287,1061,6.825,1062,6.156,1063,4.757,1064,4.757,1065,5.362]],["title/components/FooterComponent.html",[0,0.494,168,1.145]],["body/components/FooterComponent.html",[0,0.775,1,1.153,2,2.143,3,0.131,4,0.102,5,1.327,6,1.376,7,1.327,8,1.327,9,0.102,11,1.194,12,2.631,13,2.447,14,1.75,15,1.814,17,1.814,19,1.41,20,0.8,22,0.159,23,0.609,24,0.013,25,0.131,26,0.397,27,4.343,40,4.343,43,0.845,81,2.101,82,2.486,86,1.661,87,2.686,88,2.586,89,2.569,90,1.597,92,2.805,94,1.802,95,1.75,96,2.058,101,2.547,103,1.965,104,2.717,113,2.717,114,1.802,119,1.88,126,2.952,133,2.363,136,1.965,137,2.16,138,1.88,144,1.327,145,1.814,146,1.75,147,1.327,148,2.221,149,1.327,150,0.45,151,1.327,152,1.153,153,1.327,154,1.153,155,1.327,156,1.153,157,1.327,158,1.153,159,1.281,160,1.327,161,1.153,162,1.327,163,1.153,164,0.845,165,1.327,166,1.114,167,1.327,168,1.929,169,1.327,170,1.114,171,1.327,172,1.153,173,1.327,174,1.153,175,1.327,176,1.114,177,1.114,178,1.327,179,1.153,180,1.327,181,1.114,182,1.236,183,1.327,184,1.114,185,1.327,186,1.114,187,1.327,188,1.114,189,0.561,190,1.327,191,1.153,192,1.327,193,1.114,194,1.236,195,1.327,196,1.327,197,0.009,198,0.009,200,1.576,201,2.586,203,0.342,206,1.421,209,2.779,219,1.04,220,2.023,352,2.401,361,3.522,366,3.522,368,1.729,385,2.922,414,2.401,454,2.274,456,2.717,467,3.614,496,3.107,1066,3.522,1067,5.524,1068,6.293,1069,5.524,1070,4.042,1071,4.042,1072,5.524,1073,5.892,1074,5.524,1075,5.524,1076,5.524,1077,4.812,1078,4.812,1079,5.524,1080,5.524,1081,5.524,1082,5.524,1083,5.524,1084,5.524,1085,5.524,1086,5.524,1087,5.524,1088,2.922,1089,4.042,1090,4.042,1091,5.524,1092,4.042,1093,4.042,1094,3.522,1095,4.042,1096,3.522,1097,4.042,1098,3.107,1099,4.042,1100,3.178]],["title/components/FrameworkComponent.html",[0,0.494,170,1.106]],["body/components/FrameworkComponent.html",[0,0.823,1,1.3,2,1.896,3,0.147,4,0.115,5,1.496,6,1.55,7,1.496,8,1.496,9,0.115,11,1.345,12,2.657,13,2.473,14,1.896,15,1.965,17,1.965,19,1.021,20,0.968,22,0.192,23,0.686,24,0.013,25,0.147,26,0.448,43,1.582,95,1.443,144,1.496,145,1.965,146,1.896,147,1.496,148,2.33,149,1.496,150,0.508,151,1.496,152,1.3,153,1.496,154,1.3,155,1.496,156,1.3,157,1.496,158,1.3,159,1.443,160,1.496,161,1.3,162,1.496,163,1.3,164,0.952,165,1.496,166,1.255,167,1.496,168,1.3,169,1.496,170,1.956,171,1.496,172,1.3,173,1.496,174,1.3,175,1.496,176,1.255,177,1.255,178,1.496,179,1.3,180,1.496,181,1.255,182,1.393,183,1.496,184,1.255,185,1.496,186,1.255,187,1.496,188,1.255,189,0.595,190,1.496,191,1.3,192,1.496,193,1.255,194,1.393,195,1.496,196,1.496,197,0.01,198,0.01,200,1.707,201,2.746,203,0.385,204,1.085,206,1.539,209,2.916,213,1.345,214,0.588,215,0.686,219,1.172,220,2.192,227,1.872,228,1.948,498,2.275,852,2.319,1101,3.968,1102,6.684,1103,5.985,1104,3.293,1105,4.772,1106,5.985,1107,3.198,1108,4.555,1109,3.293,1110,3.582,1111,3.968]],["title/components/FrameworkRendererComponent.html",[0,0.494,172,1.145]],["body/components/FrameworkRendererComponent.html",[0,0.658,1,0.859,2,1.418,3,0.097,4,0.076,5,0.988,6,1.024,7,0.988,8,0.988,9,0.076,11,0.889,12,2.552,13,2.371,14,1.418,15,1.469,17,1.469,19,0.674,20,1.077,22,0.182,23,0.453,24,0.014,25,0.097,26,0.296,43,1.574,79,1.287,81,2.404,82,3.007,83,2.53,84,2.391,85,1.788,86,2.195,87,2.597,88,2.43,89,1.4,90,1.768,92,1.342,94,1.995,95,1.418,103,1.463,112,2.076,114,2.381,115,2.176,119,2.151,127,1.608,128,1.608,131,2.278,132,1.608,133,1.914,135,1.897,138,1.4,144,0.988,145,1.469,146,1.418,147,0.988,148,1.942,149,0.988,150,0.452,151,0.988,152,0.859,153,0.988,154,0.859,155,0.988,156,0.859,157,0.988,158,0.859,159,0.954,160,0.988,161,0.859,162,0.988,163,0.859,164,0.629,165,0.988,166,0.829,167,0.988,168,0.859,169,0.988,170,0.829,171,0.988,172,1.687,173,0.988,174,0.859,175,0.988,176,0.829,177,0.829,178,0.988,179,0.859,180,0.988,181,0.829,182,0.921,183,0.988,184,0.829,185,0.988,186,0.829,187,0.988,188,0.829,189,0.476,190,0.988,191,0.859,192,0.988,193,0.829,194,0.921,195,0.988,196,0.988,197,0.007,198,0.007,200,1.277,201,2.195,203,0.255,204,0.812,206,1.151,207,1.342,209,2.43,213,1.322,214,0.721,215,0.674,219,1.151,220,1.956,222,1.191,227,1.237,228,1.287,233,1.469,234,2.111,315,1.237,352,3.173,360,2.278,364,2.023,368,1.287,395,2.517,398,5.977,400,1.146,406,1.626,407,1.236,408,3.666,409,1.788,410,2.622,412,2.176,421,2.72,423,2.367,429,3.221,432,4.654,433,1.144,435,4.654,436,4.654,440,2.43,444,3.917,446,0.921,447,1.897,448,3.519,454,3.004,457,3.008,487,2.485,498,1.818,508,2.597,621,1.788,641,1.788,706,1.897,732,3.011,833,2.622,1021,3.235,1104,2.176,1105,3.976,1107,2.391,1112,6.56,1113,5.921,1114,2.622,1115,4.475,1116,5.342,1117,4.475,1118,5.342,1119,5.342,1120,4.475,1121,5.342,1122,4.654,1123,4.475,1124,3.01,1125,3.01,1126,3.01,1127,3.01,1128,3.01,1129,3.01,1130,3.01,1131,4.475,1132,3.01,1133,3.01,1134,3.899,1135,2.622,1136,2.367,1137,2.367,1138,3.01,1139,3.01,1140,3.01,1141,3.01,1142,2.367,1143,4.475,1144,2.622,1145,3.01,1146,4.475,1147,4.475,1148,4.475,1149,4.475,1150,4.475,1151,3.01,1152,5.342,1153,3.01,1154,1.693,1155,3.591,1156,5.342,1157,2.367,1158,2.622,1159,2.622,1160,3.899,1161,5.915,1162,2.023,1163,3.01]],["title/guards/FrameworkResolver.html",[1164,2.699,1165,2.699]],["body/guards/FrameworkResolver.html",[3,0.177,4,0.138,9,0.138,19,1.229,20,0.975,22,0.228,23,0.825,24,0.013,25,0.177,26,0.539,150,0.481,197,0.011,198,0.011,200,1.564,203,0.464,206,1.732,207,2.444,213,1.989,214,0.662,215,1.014,219,1.41,227,2.253,228,2.345,235,3.001,236,4.274,252,2.166,315,2.253,498,1.866,574,3.86,592,3.964,802,3.894,843,2.55,852,2.792,1107,2.93,1162,4.898,1165,4.526,1166,3.686,1167,6.348,1168,3.686,1169,4.788,1170,3.455,1171,5.483,1172,4.867,1173,5.493,1174,4.898,1175,5.493,1176,4.777,1177,3.455,1178,4.311,1179,5.483,1180,4.311,1181,5.483]],["title/components/HeaderComponent.html",[0,0.494,174,1.145]],["body/components/HeaderComponent.html",[0,0.729,1,1.029,2,1.617,3,0.117,4,0.091,5,1.185,6,1.228,7,1.185,8,1.185,9,0.091,11,1.066,12,2.603,13,2.42,14,2.235,15,1.676,17,1.676,19,1.327,20,0.522,22,0.17,23,0.543,24,0.014,25,0.117,26,0.355,37,2.358,43,0.754,79,1.543,80,1.608,81,2.817,82,2.544,86,2.097,87,2.481,88,2.434,89,2.374,90,2.544,92,3.358,94,3.029,95,1.143,96,1.837,98,2.425,102,3.331,103,2.481,111,2.425,117,2.425,118,2.273,119,2.676,122,3.431,124,4.401,125,3.165,126,1.928,127,1.928,128,1.928,129,2.143,130,2.608,131,1.837,133,2.533,136,2.88,137,3.165,138,2.755,144,1.185,145,1.676,146,1.617,147,1.185,148,2.114,149,1.185,150,0.424,151,1.185,152,1.029,153,1.185,154,1.029,155,1.185,156,1.029,157,1.185,158,1.029,159,1.143,160,1.185,161,1.029,162,1.185,163,1.029,164,0.754,165,1.185,166,0.994,167,1.185,168,1.029,169,1.185,170,0.994,171,1.185,172,1.029,173,1.185,174,1.837,175,1.185,176,0.994,177,0.994,178,1.185,179,1.029,180,1.185,181,0.994,182,1.104,183,1.185,184,0.994,185,1.185,186,0.994,187,1.185,188,0.994,189,0.528,190,1.185,191,1.029,192,1.185,193,0.994,194,1.104,195,1.185,196,1.185,197,0.008,198,0.008,203,0.305,340,2.143,352,2.143,360,1.837,362,2.837,368,3.017,376,2.425,380,1.561,385,2.608,414,2.143,422,3.69,424,3.143,425,3.622,451,3.032,454,3.968,612,1.837,706,2.273,769,2.837,1088,2.608,1094,3.143,1096,3.143,1098,3.331,1100,2.837,1182,3.143,1183,4.013,1184,5.923,1185,5.104,1186,3.608,1187,5.104,1188,6.44,1189,3.608,1190,3.608,1191,3.143,1192,3.143,1193,5.104,1194,5.104,1195,3.608,1196,5.104,1197,5.923,1198,3.608,1199,5.104,1200,3.608,1201,7.253,1202,3.608,1203,5.104,1204,2.837,1205,3.608,1206,3.608,1207,3.608,1208,3.608,1209,3.608,1210,3.608,1211,3.608,1212,3.143]],["title/components/HomeComponent.html",[0,0.494,176,1.106]],["body/components/HomeComponent.html",[0,0.835,1,1.341,2,1.935,3,0.152,4,0.118,5,1.543,6,1.599,7,1.543,8,1.543,9,0.118,11,1.388,12,2.655,13,2.47,14,1.935,15,2.005,17,2.005,19,1.053,20,0.884,22,0.175,23,0.707,24,0.013,25,0.152,26,0.462,43,0.982,80,2.095,81,1.787,82,2.413,83,2.01,86,1.931,88,1.931,90,1.857,95,1.489,114,2.095,144,1.543,145,2.005,146,1.935,147,1.543,148,2.359,149,1.543,150,0.514,151,1.543,152,1.341,153,1.543,154,1.341,155,1.543,156,1.341,157,1.543,158,1.341,159,1.489,160,1.543,161,1.341,162,1.543,163,1.341,164,0.982,165,1.543,166,1.295,167,1.543,168,1.341,169,1.543,170,1.295,171,1.543,172,1.341,173,1.543,174,1.341,175,1.543,176,1.98,177,1.295,178,1.543,179,1.341,180,1.543,181,1.295,182,1.437,183,1.543,184,1.295,185,1.543,186,1.295,187,1.543,188,1.295,189,0.604,190,1.543,191,1.341,192,1.543,193,1.295,194,1.437,195,1.543,196,1.543,197,0.01,198,0.01,203,0.397,204,1.107,213,1.388,214,0.462,215,0.707,228,2.01,406,1.209,407,0.982,421,2.392,574,3.71,1170,2.961,1177,2.961,1213,4.094,1214,6.785,1215,6.108,1216,5.911,1217,6.108,1218,6.108]],["title/interfaces/InfoResource.html",[461,0.433,1219,2.902]],["body/interfaces/InfoResource.html",[3,0.209,4,0.13,9,0.13,22,0.148,24,0.014,25,0.209,54,4.084,59,3.25,73,4.765,91,5.375,132,3.463,134,1.823,150,0.464,189,0.662,197,0.01,198,0.01,203,0.436,204,1.175,214,0.697,215,0.976,380,1.577,400,1.495,461,0.803,463,1.421,465,1.982,472,2.515,481,2.8,482,2.695,483,2.094,540,3.3,554,3.159,856,3.063,1219,5.375,1220,4.055,1221,7.183,1222,6.149,1223,4.493]],["title/interfaces/InfoResourceSection.html",[461,0.433,856,2.385]],["body/interfaces/InfoResourceSection.html",[3,0.227,4,0.128,9,0.128,22,0.146,24,0.014,25,0.207,54,3.197,59,4.658,73,4.729,91,5.784,132,4.161,134,2.003,150,0.363,189,0.658,197,0.01,198,0.01,203,0.429,204,1.163,214,0.75,380,1.962,400,1.492,461,0.759,463,1.398,465,1.552,472,2.503,481,2.779,482,2.675,483,2.363,540,2.583,554,3.136,856,3.81,1219,5.511,1220,3.989,1221,6.642,1222,5.044,1223,4.42,1224,5.074]],["title/components/InformationComponent.html",[0,0.494,177,1.106]],["body/components/InformationComponent.html",[0,0.772,1,1.147,2,1.744,3,0.236,4,0.101,5,1.32,6,1.369,7,1.32,8,1.32,9,0.101,11,1.188,12,2.629,13,2.446,14,1.744,15,1.807,17,1.807,19,1.406,20,0.909,22,0.18,23,0.605,24,0.014,25,0.13,26,0.395,43,1.59,54,3.468,59,4.253,65,4.795,72,4.795,79,1.72,80,1.792,81,2.566,82,3.006,83,2.354,86,2.262,87,1.955,88,2.262,90,1.589,92,3.151,94,1.792,95,1.274,112,2.061,114,2.453,119,1.369,125,3.606,126,2.149,127,2.149,128,2.149,135,2.534,136,1.955,137,2.149,138,1.871,144,1.32,145,1.807,146,1.744,147,1.32,148,2.216,149,1.32,150,0.449,151,1.32,152,1.147,153,1.32,154,1.147,155,1.32,156,1.147,157,1.32,158,1.147,159,1.274,160,1.32,161,1.147,162,1.32,163,1.147,164,0.841,165,1.32,166,1.108,167,1.32,168,1.147,169,1.32,170,1.108,171,1.32,172,1.147,173,1.32,174,1.147,175,1.32,176,1.108,177,1.86,178,1.32,179,1.147,180,1.32,181,1.108,182,1.23,183,1.32,184,1.108,185,1.32,186,1.108,187,1.32,188,1.108,189,0.559,190,1.32,191,1.147,192,1.32,193,1.108,194,1.23,195,1.32,196,1.32,197,0.009,198,0.009,203,0.34,204,0.998,214,0.541,360,2.802,368,1.72,385,2.907,406,1.034,407,0.841,420,2.907,421,2.802,454,3.53,486,1.589,498,2.136,852,2.047,1088,2.907,1098,2.262,1100,3.162,1225,3.503,1226,6.276,1227,5.505,1228,4.219,1229,6.276,1230,5.505,1231,5.307,1232,6.749,1233,4.022,1234,5.505,1235,3.162,1236,5.505,1237,5.505]],["title/modules/InformationModule.html",[259,1.867,1238,2.902]],["body/modules/InformationModule.html",[3,0.174,4,0.136,9,0.136,22,0.234,23,0.811,24,0.013,25,0.174,26,0.53,54,3.395,166,2.179,170,2.179,177,2.179,184,2.179,197,0.011,198,0.011,261,2.506,262,3.746,269,4.696,270,4.197,271,3.395,272,2.879,274,4.197,275,3.559,280,3.559,288,4.237,290,4.237,409,3.201,578,3.895,581,4.815,1238,6.069,1239,4.694,1240,4.694,1241,4.694,1242,5.315,1243,5.389,1244,4.694,1245,4.694,1246,4.694,1247,4.478,1248,4.694,1249,3.622,1250,4.694]],["title/modules/InformationRoutingModule.html",[259,1.867,1242,2.699]],["body/modules/InformationRoutingModule.html",[0,0.942,3,0.181,4,0.141,9,0.141,22,0.234,23,0.843,24,0.013,25,0.181,26,0.551,43,1.426,59,3.529,166,1.88,170,1.88,177,1.88,184,1.88,197,0.011,198,0.011,227,2.301,261,2.605,274,3.529,275,2.993,280,3.645,308,4.404,310,4.931,311,4.585,315,2.301,317,5.275,318,4.88,319,4.88,320,4.049,328,3.765,1060,4.88,1165,4.585,1169,4.298,1242,4.585,1244,4.88,1245,4.88,1246,4.88,1247,4.585,1248,4.88,1249,4.585,1250,4.88,1251,5.601,1252,5.601,1253,5.601,1254,5.601,1255,5.942,1256,5.601]],["title/injectables/LogoLocatorService.html",[235,1.789,575,2.258]],["body/injectables/LogoLocatorService.html",[3,0.18,4,0.14,9,0.14,19,1.643,20,1.062,22,0.16,23,0.837,24,0.014,25,0.18,26,0.547,150,0.398,197,0.011,198,0.011,203,0.47,204,1.232,206,1.747,213,1.643,214,0.668,215,0.837,219,1.43,235,3.027,237,3.739,252,2.197,400,1.385,406,1.43,407,1.162,575,3.82,637,2.972,795,4.929,797,4.02,1228,4.929,1257,6.004,1258,4.373,1259,7.332,1260,6.792,1261,6.792,1262,6.792,1263,5.561,1264,6.792,1265,5.561,1266,5.561,1267,5.561,1268,4.845,1269,5.916,1270,5.916,1271,5.916,1272,5.34]],["title/modules/MaterialModule.html",[259,1.867,1273,2.699]],["body/modules/MaterialModule.html",[3,0.16,4,0.125,9,0.125,22,0.244,23,0.747,24,0.013,25,0.16,26,0.488,197,0.01,198,0.01,261,2.307,275,2.651,280,3.379,328,3.335,380,1.517,641,3.756,1273,4.251,1274,4.961,1275,6.962,1276,6.324,1277,6.962,1278,4.961,1279,6.962,1280,4.961,1281,6.962,1282,3.586,1283,6.962,1284,4.961,1285,4.961,1286,6.962,1287,4.961,1288,6.962,1289,4.961,1290,6.962,1291,4.961,1292,6.962,1293,4.961,1294,6.962,1295,4.961,1296,4.321,1297,6.962,1298,4.961,1299,6.962,1300,4.961,1301,6.962,1302,4.961,1303,6.962,1304,4.961,1305,6.962,1306,4.961,1307,6.962,1308,4.961,1309,6.962,1310,4.961,1311,6.962,1312,3.586,1313,6.962,1314,4.961,1315,6.962,1316,4.961,1317,6.962,1318,4.961,1319,6.962,1320,4.961,1321,6.962,1322,6.962,1323,4.961,1324,4.961,1325,6.962,1326,4.961,1327,6.962,1328,4.961]],["title/components/OverviewComponent.html",[0,0.494,179,1.145]],["body/components/OverviewComponent.html",[0,0.747,1,1.077,2,1.669,3,0.122,4,0.153,5,1.992,6,1.284,7,1.239,8,1.239,9,0.095,11,1.115,12,2.614,13,2.431,14,1.669,15,1.729,17,1.729,19,1.36,20,0.763,22,0.189,23,0.568,24,0.013,25,0.122,26,0.371,37,2.69,43,0.789,79,1.614,80,1.682,81,2.497,82,2.73,83,1.614,84,2.017,85,2.242,86,2.839,87,2.95,88,3.018,89,2.823,90,2.081,92,3.079,93,3.287,94,2.348,95,1.923,96,3.09,106,5.164,108,5.164,112,1.992,113,2.537,114,1.682,115,2.728,133,1.614,136,1.835,137,2.017,138,1.755,139,3.287,144,1.239,145,1.729,146,1.669,147,1.239,148,2.156,149,1.239,150,0.434,151,1.239,152,1.077,153,1.239,154,1.077,155,1.239,156,1.077,157,1.239,158,1.077,159,1.196,160,1.239,161,1.077,162,1.239,163,1.077,164,0.789,165,1.239,166,1.04,167,1.239,168,1.077,169,1.239,170,1.04,171,1.239,172,1.077,173,1.239,174,1.077,175,1.239,176,1.04,177,1.04,178,1.239,179,1.874,180,1.239,181,1.04,182,1.154,183,1.239,184,1.04,185,1.239,186,1.04,187,1.239,188,1.04,189,0.585,190,1.239,191,1.077,192,1.239,193,1.04,194,1.154,195,1.239,196,1.239,197,0.008,198,0.008,203,0.319,214,0.371,272,3.51,336,4.142,341,3.51,347,4.142,351,3.808,356,2.967,357,3.287,358,3.287,359,3.287,360,2.682,364,2.537,368,1.614,380,1.856,395,2.963,408,2.815,412,2.728,425,2.122,451,2.242,452,2.967,453,2.967,701,3.319,769,2.967,802,3.243,843,1.755,854,2.378,1098,2.122,1216,5.287,1329,3.287,1330,4.142,1331,6.069,1332,5.268,1333,5.268,1334,4.589,1335,4.589,1336,5.268,1337,3.774,1338,5.268,1339,6.909,1340,5.268,1341,3.774,1342,5.268,1343,3.774,1344,3.774,1345,5.268,1346,3.774,1347,3.774,1348,2.967,1349,3.774,1350,3.774,1351,7.157,1352,3.774,1353,6.568,1354,3.774,1355,3.774]],["title/components/PageNotFoundComponent.html",[0,0.494,181,1.106]],["body/components/PageNotFoundComponent.html",[0,0.832,1,1.329,2,1.924,3,0.151,4,0.117,5,1.529,6,1.585,7,1.529,8,1.529,9,0.117,11,1.376,12,2.662,13,2.477,14,1.924,15,1.993,17,1.993,19,1.514,20,0.879,22,0.134,23,0.701,24,0.013,25,0.151,26,0.458,43,0.973,95,1.476,132,2.489,144,1.529,145,1.993,146,1.924,147,1.529,148,2.35,149,1.529,150,0.483,151,1.529,152,1.329,153,1.529,154,1.329,155,1.529,156,1.329,157,1.529,158,1.329,159,1.476,160,1.529,161,1.329,162,1.529,163,1.329,164,0.973,165,1.529,166,1.283,167,1.529,168,1.329,169,1.529,170,1.283,171,1.529,172,1.329,173,1.529,174,1.329,175,1.529,176,1.283,177,1.283,178,1.529,179,1.329,180,1.529,181,1.973,182,2.432,183,1.529,184,1.283,185,1.529,186,1.283,187,1.529,188,1.283,189,0.602,190,1.529,191,1.329,192,1.529,193,1.283,194,1.425,195,1.529,196,1.529,197,0.01,198,0.01,200,1.732,201,2.776,203,0.394,206,1.562,209,2.941,219,1.198,220,1.706,313,4.884,1356,5.885,1357,4.057,1358,7.159,1359,6.756,1360,6.072,1361,4.657,1362,4.657,1363,4.657]],["title/injectables/RandomColorService.html",[235,1.789,576,2.699]],["body/injectables/RandomColorService.html",[3,0.185,4,0.144,9,0.144,19,1.662,20,1,22,0.164,23,0.86,24,0.013,25,0.185,26,0.562,150,0.409,197,0.011,198,0.011,203,0.483,206,1.776,213,1.688,215,0.86,219,1.47,235,3.077,237,3.841,252,2.258,576,4.641,1364,5.834,1365,4.493,1366,6.904,1367,5.714,1368,6.904,1369,7.707,1370,7.707,1371,7.707,1372,6.714,1373,7.707,1374,5.714,1375,6.904,1376,5.796,1377,5.714,1378,4.991]],["title/interfaces/RenderedFilterBlock.html",[461,0.433,617,2.258]],["body/interfaces/RenderedFilterBlock.html",[3,0.112,4,0.087,9,0.087,20,0.839,22,0.1,24,0.014,25,0.225,38,2.652,61,3.259,62,3.442,67,1.572,112,1.629,125,2.652,134,0.892,150,0.513,164,1.037,189,0.516,197,0.008,198,0.008,203,0.293,204,0.9,214,0.721,215,0.747,222,0.923,233,1.139,234,1.37,257,1.18,370,3.557,380,2.047,400,1.427,407,1.533,461,0.827,462,1.37,463,0.956,465,2.193,474,1.425,475,2.599,481,2.289,482,1.887,483,1.868,486,2.751,491,1.483,495,1.483,497,3.103,511,2.695,512,2.583,514,3.565,517,2.695,538,1.613,547,2.197,554,1.546,570,1.613,601,1.613,602,2.06,603,3.873,604,2.791,605,2.331,606,2.06,609,2.95,611,4.499,612,3.65,613,3.336,614,3.336,615,4.772,616,3.902,617,2.791,618,3.986,619,3.127,620,4.252,621,4.136,622,3.336,623,2.331,624,3.336,625,1.613,626,2.331,627,2.331,628,2.948,629,2.948,630,2.06,631,2.185,632,3.075,633,3.127,634,2.331,635,2.331,636,2.331,637,2.652,638,2.185,639,1.853,640,4.819,641,2.948,642,3.127,643,2.331,644,3.336,645,3.336,646,3.127,647,2.331,648,3.127,649,3.651,650,3.986,651,3.986,652,2.948,653,2.331,654,2.948,655,3.127,656,3.127,657,2.331,658,2.331,659,2.331,660,2.331,661,2.331,662,2.185]],["title/components/ResourcesComponent.html",[0,0.494,184,1.106]],["body/components/ResourcesComponent.html",[0,0.798,1,1.223,2,1.821,3,0.139,4,0.108,5,1.407,6,1.459,7,1.407,8,1.407,9,0.108,11,1.266,12,2.644,13,2.46,14,1.821,15,1.887,17,1.887,19,0.96,20,1.046,22,0.199,23,0.645,24,0.014,25,0.139,26,0.421,43,0.896,59,4.553,95,1.358,112,1.887,144,1.407,145,1.887,146,1.821,147,1.407,148,2.275,149,1.407,150,0.495,151,1.407,152,1.223,153,1.407,154,1.223,155,1.407,156,1.223,157,1.407,158,1.223,159,1.358,160,1.407,161,1.223,162,1.407,163,1.223,164,0.896,165,1.407,166,1.181,167,1.407,168,1.223,169,1.407,170,1.181,171,1.407,172,1.223,173,1.407,174,1.223,175,1.407,176,1.181,177,1.181,178,1.407,179,1.223,180,1.407,181,1.181,182,1.311,183,1.407,184,1.909,185,1.407,186,1.181,187,1.407,188,1.181,189,0.578,190,1.407,191,1.223,192,1.407,193,1.181,194,1.311,195,1.407,196,1.407,197,0.009,198,0.009,200,1.64,201,2.664,203,0.362,204,1.042,206,1.478,209,2.847,213,1.266,214,0.638,215,0.645,219,1.478,220,2.537,227,1.761,228,1.833,843,1.994,856,3.852,857,3.37,1104,3.099,1105,4.658,1107,3.071,1109,3.099,1111,3.734,1222,4.519,1379,3.734,1380,5.649,1381,6.485,1382,5.748,1383,6.48,1384,6.036,1385,5.748,1386,4.287,1387,4.287,1388,4.287,1389,4.287,1390,4.287,1391,4.287,1392,5.748,1393,5.748,1394,5.748]],["title/guards/ResourcesResolver.html",[1164,2.699,1247,2.699]],["body/guards/ResourcesResolver.html",[3,0.182,4,0.142,9,0.142,19,1.262,20,0.991,22,0.226,23,0.848,24,0.013,25,0.182,26,0.554,150,0.489,197,0.011,198,0.011,200,1.606,203,0.476,206,1.76,213,2.021,214,0.673,215,1.03,219,1.448,227,2.314,228,2.409,235,3.05,252,2.225,574,3.884,802,3.94,843,2.619,856,3.345,857,4.428,1107,3.009,1166,3.786,1168,3.786,1169,4.832,1170,3.548,1172,4.947,1173,5.544,1174,4.956,1175,5.544,1177,3.548,1247,4.601,1395,6.423,1396,5.632,1397,5.632,1398,5.632]],["title/pipes/SetToArrayPipe.html",[891,2.258,1399,2.699]],["body/pipes/SetToArrayPipe.html",[3,0.195,4,0.152,9,0.152,11,1.779,20,0.872,22,0.173,23,0.907,24,0.013,25,0.195,26,0.592,150,0.543,197,0.011,198,0.011,200,1.718,206,1.549,213,1.779,214,0.592,215,0.907,219,1.549,252,2.379,407,1.259,473,3.117,891,4.007,1399,4.789,1400,4.353,1401,6.207,1402,5.247,1403,7.125,1404,4.735,1405,5.602,1406,6.023,1407,5.602,1408,6.023]],["title/modules/SharedModule.html",[259,1.867,269,2.385]],["body/modules/SharedModule.html",[3,0.136,4,0.106,9,0.106,22,0.235,23,0.632,24,0.013,25,0.136,26,0.413,43,0.878,95,1.331,156,2.283,158,2.283,159,1.331,161,2.109,168,2.283,172,2.283,174,2.283,181,2.205,182,1.285,197,0.009,198,0.009,227,1.726,261,1.954,262,3.189,269,5.03,270,3.572,271,2.646,272,2.244,274,3.572,275,3.03,280,3.03,310,4.098,313,3.036,314,3.659,328,3.811,388,3.036,409,2.495,427,3.302,578,3.036,581,4.639,731,3.036,1113,3.302,1165,3.811,1249,2.823,1273,5.38,1399,5.38,1409,3.659,1410,3.659,1411,3.659,1412,3.659,1413,5.38,1414,5.38,1415,4.2,1416,4.2,1417,4.2,1418,6.418,1419,6.418,1420,4.2,1421,4.2,1422,4.2,1423,4.2,1424,4.2,1425,4.2,1426,4.2,1427,4.2,1428,3.659,1429,4.2,1430,4.2]],["title/interfaces/SimpleDataSource.html",[461,0.433,1431,2.699]],["body/interfaces/SimpleDataSource.html",[3,0.091,4,0.071,9,0.071,20,0.616,22,0.193,24,0.014,25,0.166,26,0.277,112,2.016,119,2.283,189,0.575,197,0.007,198,0.007,200,0.802,203,0.238,206,1.094,207,3.263,219,1.094,220,2.529,222,1.719,233,1.684,234,1.68,252,3.066,257,1.745,315,3.143,340,1.67,400,1.252,407,0.588,444,1.503,446,1.749,447,1.772,461,0.459,463,0.775,547,1.396,597,3.074,601,2.856,604,2.392,609,3.288,632,1.367,713,4.848,732,2.911,760,2.859,795,3.448,802,3.451,841,2.033,843,1.308,847,2.033,850,2.033,893,2.033,907,4.509,1002,3.707,1005,2.859,1009,3.074,1029,3.074,1155,1.89,1228,4.128,1312,2.033,1431,3.448,1432,2.033,1433,3.046,1434,4.828,1435,4.828,1436,2.812,1437,2.812,1438,2.211,1439,4.495,1440,2.211,1441,2.211,1442,3.344,1443,2.211,1444,4.844,1445,2.033,1446,2.211,1447,2.211,1448,3.074,1449,3.344,1450,1.503,1451,4.495,1452,2.211,1453,2.211,1454,2.211,1455,2.211,1456,2.211,1457,2.211,1458,2.211,1459,2.211,1460,2.211,1461,2.211,1462,2.211,1463,2.033,1464,2.211,1465,2.211,1466,2.211,1467,2.211,1468,2.211,1469,3.344,1470,2.211,1471,3.344,1472,2.211,1473,2.211,1474,2.211,1475,4.828,1476,2.211,1477,4.032,1478,2.211,1479,3.344,1480,2.211,1481,3.344,1482,2.211,1483,2.211,1484,2.211,1485,3.344,1486,4.032,1487,4.495,1488,3.344,1489,2.211,1490,2.211,1491,2.211,1492,3.344,1493,2.211,1494,2.211,1495,2.211,1496,2.211,1497,3.344,1498,2.211,1499,2.211,1500,2.211,1501,2.211,1502,2.211,1503,2.211,1504,2.211,1505,2.211,1506,2.211,1507,2.211,1508,2.211,1509,2.211,1510,2.211,1511,2.211,1512,4.032,1513,2.211,1514,2.211,1515,2.211,1516,2.211,1517,2.211,1518,2.211,1519,2.211,1520,4.032,1521,2.211,1522,2.211,1523,2.211,1524,2.211,1525,3.344,1526,3.344,1527,3.344,1528,3.344,1529,2.211,1530,5.835,1531,4.828,1532,4.032,1533,3.344,1534,4.032,1535,2.211,1536,4.032,1537,2.211,1538,2.211,1539,2.211,1540,2.211,1541,5.274,1542,3.344,1543,4.032,1544,3.344,1545,2.211,1546,2.211,1547,2.211,1548,2.211,1549,2.211,1550,2.211,1551,4.495,1552,2.211,1553,2.211,1554,3.344,1555,2.211,1556,2.211,1557,2.211,1558,2.211,1559,3.344,1560,3.344,1561,2.211,1562,3.344,1563,3.344,1564,2.211,1565,3.344,1566,2.211,1567,2.211,1568,2.033,1569,2.211]],["title/interfaces/Sort.html",[461,0.433,1444,2.699]],["body/interfaces/Sort.html",[3,0.091,4,0.071,9,0.071,22,0.193,24,0.014,25,0.166,26,0.278,112,2.019,119,2.285,189,0.576,197,0.007,198,0.007,200,0.805,203,0.239,204,0.773,207,3.266,214,0.278,220,2.459,222,1.722,233,1.687,234,1.685,252,3.068,257,1.749,315,3.145,340,1.676,400,1.254,407,0.59,444,1.508,446,1.752,447,1.778,461,0.46,463,0.778,547,1.4,597,2.04,601,2.861,604,2.398,609,3.293,632,1.372,713,4.854,732,2.916,760,2.867,795,3.455,802,3.286,841,2.04,843,1.313,847,2.04,850,2.04,893,2.04,907,4.514,1002,3.715,1005,2.867,1009,3.083,1029,3.083,1155,3.85,1228,4.134,1312,2.04,1431,2.867,1432,2.04,1433,2.533,1434,3.353,1435,3.353,1438,2.219,1439,4.504,1440,2.219,1441,2.219,1442,3.353,1443,2.219,1444,4.926,1445,4.14,1446,2.219,1447,2.219,1448,4.14,1449,4.504,1450,1.508,1451,4.504,1452,2.219,1453,2.219,1454,2.219,1455,2.219,1456,2.219,1457,2.219,1458,2.219,1459,2.219,1460,2.219,1461,2.219,1462,2.219,1463,2.04,1464,2.219,1465,2.219,1466,2.219,1467,2.219,1468,2.219,1469,3.353,1470,2.219,1471,3.353,1472,2.219,1473,2.219,1474,2.219,1475,4.835,1476,2.219,1477,4.041,1478,2.219,1479,3.353,1480,2.219,1481,3.353,1482,2.219,1483,2.219,1484,2.219,1485,3.353,1486,4.041,1487,4.504,1488,3.353,1489,2.219,1490,2.219,1491,2.219,1492,3.353,1493,2.219,1494,2.219,1495,2.219,1496,2.219,1497,3.353,1498,2.219,1499,2.219,1500,2.219,1501,2.219,1502,2.219,1503,2.219,1504,2.219,1505,2.219,1506,2.219,1507,2.219,1508,2.219,1509,2.219,1510,2.219,1511,2.219,1512,4.041,1513,2.219,1514,2.219,1515,2.219,1516,2.219,1517,2.219,1518,2.219,1519,2.219,1520,4.041,1521,2.219,1522,2.219,1523,2.219,1524,2.219,1525,3.353,1526,3.353,1527,3.353,1528,3.353,1529,2.219,1530,5.84,1531,4.835,1532,4.041,1533,3.353,1534,4.041,1535,2.219,1536,4.041,1537,2.219,1538,2.219,1539,2.219,1540,2.219,1541,5.28,1542,3.353,1543,4.041,1544,3.353,1545,2.219,1546,2.219,1547,2.219,1548,2.219,1549,2.219,1550,2.219,1551,4.504,1552,2.219,1553,2.219,1554,3.353,1555,2.219,1556,2.219,1557,2.219,1558,2.219,1559,3.353,1560,3.353,1561,2.219,1562,3.353,1563,3.353,1564,2.219,1565,3.353,1566,2.219,1567,2.219,1568,2.04,1569,2.219]],["title/classes/TableColumn.html",[26,0.395,1570,2.902]],["body/classes/TableColumn.html",[0,0.698,3,0.136,4,0.106,9,0.106,12,1.333,13,1.242,15,1.381,17,1.381,19,0.942,20,0.996,22,0.206,23,0.633,24,0.014,25,0.183,26,0.558,43,0.879,112,1.381,119,2.443,126,4.163,150,0.406,189,0.572,193,1.159,194,1.286,197,0.009,198,0.009,200,1.2,201,2.331,203,0.581,204,1.029,207,1.875,209,1.728,214,0.676,215,1.035,220,1.54,296,2.827,315,2.639,400,1.413,408,3.836,420,3.04,440,2.331,472,2.357,498,1.931,546,3.032,547,1.863,625,2.639,630,4.264,706,2.65,730,2.65,852,2.141,899,3.307,920,3.307,1142,3.307,1282,3.04,1433,2.498,1450,3.032,1570,5.558,1571,4.524,1572,5.19,1573,3.307,1574,5.989,1575,4.206,1576,4.206,1577,4.206,1578,4.206,1579,4.943,1580,3.04,1581,3.04,1582,4.462,1583,3.664,1584,3.664,1585,3.307,1586,3.307,1587,3.664,1588,3.664,1589,3.664,1590,6.254,1591,3.664,1592,3.664,1593,3.664,1594,3.664,1595,3.664,1596,3.664,1597,3.664,1598,3.664,1599,3.664,1600,3.664,1601,3.664,1602,3.664,1603,4.943,1604,3.664,1605,4.943,1606,3.664,1607,4.943,1608,5.989,1609,3.664,1610,3.664,1611,3.664,1612,3.664,1613,4.462,1614,3.664,1615,3.664,1616,3.307,1617,3.307,1618,3.664,1619,3.664,1620,4.943,1621,3.664]],["title/components/TechnologiesComponent.html",[0,0.494,186,1.106]],["body/components/TechnologiesComponent.html",[0,0.547,1,0.64,2,1.13,3,0.072,4,0.056,5,0.736,6,0.763,7,0.736,8,0.736,9,0.056,11,0.662,12,2.455,13,2.277,14,1.13,15,1.171,17,1.171,19,0.799,20,1.079,22,0.205,23,0.338,24,0.014,25,0.072,26,0.221,37,2.024,43,1.058,46,3.108,51,1.659,67,1.13,79,0.959,80,1,81,2.673,82,3.123,83,2.894,84,2.374,86,2.536,87,2.16,88,2.536,89,1.043,90,2.439,92,2.751,95,1.13,98,1.508,99,1.621,101,2.248,102,1.261,104,1.508,111,1.508,112,2.167,114,2.751,117,1.508,118,1.413,119,1.881,124,2.119,131,1.142,132,2.374,133,1.526,136,2.462,137,1.198,138,1.043,144,0.736,145,1.171,146,1.13,147,0.736,148,1.662,149,0.736,150,0.421,151,0.736,152,0.64,153,0.736,154,0.64,155,0.736,156,0.64,157,0.736,158,0.64,159,0.711,160,0.736,161,0.64,162,0.736,163,0.64,164,0.469,165,0.736,166,0.618,167,0.736,168,0.64,169,0.736,170,0.618,171,0.736,172,0.64,173,0.736,174,0.64,175,0.736,176,0.618,177,0.618,178,0.736,179,0.64,180,0.736,181,0.618,182,0.686,183,0.736,184,0.618,185,0.736,186,1.395,187,0.736,188,0.618,189,0.524,190,0.736,191,0.64,192,0.736,193,0.618,194,0.686,195,0.736,196,0.736,197,0.006,198,0.006,200,1.018,201,1.825,203,0.19,204,0.647,206,0.918,207,3.222,209,2.08,213,1.312,214,0.702,215,0.669,219,1.514,220,2.346,227,0.921,279,2.398,315,2.271,335,2.166,336,2.805,349,2.579,351,2.579,360,1.142,364,1.508,368,1.526,380,1.091,386,1.954,400,1.002,406,1.302,407,1.058,414,1.332,419,1.954,421,3.445,422,1.621,425,2.007,429,1.09,433,1.689,440,2.419,444,3.424,451,2.639,452,1.763,453,1.763,475,1.466,498,1.512,500,2.687,508,1.734,574,2.862,601,2.355,603,2.462,612,2.814,615,2.799,616,1.816,617,2.499,618,1.413,625,2.066,700,3.108,718,4.411,720,3.87,730,1.413,731,1.621,732,2.262,773,3.493,843,1.043,852,1.142,854,1.413,900,1.763,1021,1.621,1088,1.621,1098,2.499,1105,3.404,1107,2.374,1109,1.621,1110,1.763,1135,1.954,1136,1.763,1137,1.763,1144,1.954,1155,1.508,1157,1.763,1162,2.398,1170,1.413,1177,1.413,1183,1.763,1204,2.805,1235,1.763,1282,1.621,1376,1.621,1380,3.87,1383,3.87,1384,4.411,1433,2.639,1445,1.621,1448,1.621,1450,2.374,1580,1.621,1581,1.621,1582,3.493,1585,3.493,1586,4.346,1613,2.805,1616,1.763,1617,1.763,1622,1.954,1623,3.568,1624,3.568,1625,4.443,1626,3.568,1627,4.443,1628,4.443,1629,4.443,1630,4.443,1631,5.064,1632,5.064,1633,3.568,1634,3.568,1635,6.173,1636,5.064,1637,3.568,1638,2.243,1639,2.243,1640,2.243,1641,2.243,1642,3.568,1643,2.243,1644,1.621,1645,3.568,1646,5.064,1647,5.887,1648,5.064,1649,2.243,1650,2.243,1651,2.243,1652,2.243,1653,2.243,1654,2.243,1655,3.568,1656,2.243,1657,1.763,1658,3.568,1659,2.243,1660,2.243,1661,2.243,1662,2.243,1663,2.243,1664,2.243,1665,2.243,1666,2.243,1667,2.243,1668,2.243,1669,2.243,1670,2.243,1671,3.568,1672,2.243,1673,3.87,1674,2.243,1675,2.243,1676,2.243,1677,1.954,1678,2.243,1679,2.243,1680,1.763,1681,1.954,1682,2.243,1683,2.243,1684,2.243,1685,2.243,1686,2.243,1687,2.243,1688,2.243,1689,2.243,1690,3.568,1691,2.243,1692,2.243,1693,2.243,1694,3.568,1695,2.243,1696,2.243,1697,4.443,1698,3.568,1699,2.243,1700,2.243,1701,2.243,1702,2.243,1703,2.243,1704,2.243,1705,2.243,1706,2.243,1707,2.243,1708,3.568,1709,3.568,1710,3.568,1711,3.568,1712,3.568,1713,3.108,1714,3.108,1715,3.568,1716,3.568,1717,3.108,1718,3.568,1719,3.108,1720,1.954,1721,2.243,1722,4.443,1723,2.243,1724,2.243,1725,2.243,1726,3.568,1727,4.443,1728,4.443,1729,2.243,1730,2.243,1731,1.763,1732,1.954,1733,2.243]],["title/modules/TechnologiesModule.html",[259,1.867,1734,2.902]],["body/modules/TechnologiesModule.html",[3,0.167,4,0.13,9,0.13,22,0.236,23,0.778,24,0.013,25,0.167,26,0.508,163,2.232,164,1.08,186,2.156,188,2.156,189,0.663,191,2.232,193,2.156,197,0.01,198,0.01,261,2.403,262,3.649,269,4.647,270,4.088,271,3.255,272,2.76,274,4.088,275,3.467,280,3.467,288,4.062,290,4.062,409,3.068,500,3.154,578,3.734,581,4.69,708,4.062,1154,2.905,1249,4.362,1572,3.734,1734,6.072,1735,4.5,1736,4.5,1737,4.5,1738,5.259,1739,5.166,1740,4.5,1741,4.062,1742,5.166,1743,3.734,1744,4.5,1745,5.166,1746,4.362,1747,5.166,1748,4.362]],["title/guards/TechnologiesResolver.html",[1164,2.699,1746,2.699]],["body/guards/TechnologiesResolver.html",[3,0.171,4,0.133,9,0.133,19,1.183,20,0.952,22,0.232,23,0.795,24,0.013,25,0.171,26,0.519,43,1.375,150,0.47,189,0.47,197,0.011,198,0.011,200,1.506,203,0.446,206,1.692,207,2.353,213,1.943,214,0.647,215,0.99,219,1.358,227,2.169,228,2.258,233,1.733,235,2.931,236,4.217,252,2.086,315,3.081,498,1.797,500,2.567,554,2.353,574,3.824,592,3.816,603,3.197,625,2.456,730,3.326,802,3.828,843,2.456,852,2.688,854,3.326,1107,2.821,1162,4.816,1166,3.549,1168,3.549,1169,4.725,1170,3.326,1172,4.754,1173,5.42,1174,4.816,1175,5.42,1177,3.326,1178,4.151,1180,4.151,1746,4.421,1749,5.633,1750,5.279,1751,5.279,1752,4.599,1753,5.279,1754,4.599,1755,5.279,1756,5.279]],["title/modules/TechnologiesRoutingModule.html",[259,1.867,1738,2.699]],["body/modules/TechnologiesRoutingModule.html",[0,0.858,3,0.188,4,0.146,9,0.146,22,0.231,23,0.875,24,0.013,25,0.188,26,0.571,186,1.922,188,1.922,189,0.621,197,0.011,198,0.011,227,2.387,261,2.702,275,3.104,280,3.726,308,4.568,310,5.041,311,4.688,315,2.387,317,4.688,328,3.905,405,2.824,500,2.824,1154,3.267,1169,4.394,1249,4.688,1255,6.075,1738,4.688,1740,5.061,1743,4.2,1744,5.061,1746,4.688,1748,4.688,1749,4.568,1757,5.81,1758,5.81]],["title/interfaces/Technology.html",[189,0.358,461,0.433]],["body/interfaces/Technology.html",[3,0.126,4,0.098,9,0.098,22,0.112,24,0.014,25,0.2,35,2.755,36,2.971,37,1.976,42,1.485,55,3.101,73,2.626,134,1.973,150,0.386,189,0.734,197,0.009,198,0.009,203,0.33,204,0.978,214,0.743,215,1.137,257,2.462,317,3.627,320,3.9,335,1.67,400,1.494,405,1.899,407,1.128,444,2.883,446,2.039,461,0.755,463,1.076,465,2.039,468,2.883,472,2.189,474,2.739,481,2.634,482,2.35,483,2.066,485,2.087,486,2.634,488,1.899,491,2.307,495,3.171,499,2.087,530,1.989,536,2.883,541,2.132,543,1.543,554,3.118,568,2.087,575,3.749,606,2.32,637,2.883,639,2.883,797,4.819,851,5.241,853,5.08,957,5.241,968,5.241,1154,3.034,1231,4.242,1680,5.241,1759,2.823,1760,4.7,1761,4.242,1762,5.807,1763,4.7,1764,5.807,1765,4.7,1766,4.7,1767,4.7,1768,4.7,1769,4.7,1770,4.7,1771,4.7,1772,4.7,1773,4.242,1774,3.403,1775,3.403,1776,3.403,1777,3.071,1778,4.86,1779,3.403]],["title/classes/TechnologyDataSource.html",[26,0.395,1450,2.145]],["body/classes/TechnologyDataSource.html",[3,0.068,4,0.053,9,0.053,19,0.473,20,1.127,22,0.173,24,0.014,25,0.138,26,0.208,112,1.761,119,2.133,150,0.486,189,0.616,197,0.005,198,0.005,200,0.97,203,0.179,204,0.617,206,0.875,207,3.55,213,2.005,214,0.751,215,1.022,219,1.808,220,2.61,222,1.768,233,1.606,234,1.344,252,2.91,257,2.051,296,1.42,315,2.965,340,2.02,400,1.254,406,1.38,407,1.198,444,1.129,446,2.032,447,1.331,461,0.367,547,1.979,597,1.527,601,3.269,604,2.752,609,3.629,632,1.027,652,2.02,654,2.02,713,5.486,732,2.731,760,2.286,795,4.35,802,3.35,841,1.527,843,0.982,847,1.527,850,1.527,893,1.527,907,4.051,1002,3.086,1005,2.286,1009,2.458,1029,2.458,1155,1.42,1228,4.851,1312,1.527,1431,2.87,1432,1.527,1433,2.02,1434,4.218,1435,4.218,1438,1.661,1439,4.739,1440,1.661,1441,1.661,1442,3.847,1443,1.661,1444,5.033,1445,1.527,1446,1.661,1447,1.661,1448,2.458,1449,2.674,1450,1.817,1451,4.929,1452,2.674,1453,3.356,1454,3.356,1455,3.356,1456,3.356,1457,2.674,1458,3.356,1459,3.356,1460,2.674,1461,3.356,1462,3.356,1463,3.877,1464,1.661,1465,1.661,1466,1.661,1467,1.661,1468,1.661,1469,2.674,1470,1.661,1471,2.674,1472,1.661,1473,1.661,1474,1.661,1475,4.739,1476,1.661,1477,4.218,1478,1.661,1479,2.674,1480,1.661,1481,2.674,1482,1.661,1483,1.661,1484,1.661,1485,2.674,1486,3.356,1487,3.847,1488,2.674,1489,1.661,1490,2.674,1491,3.356,1492,2.674,1493,1.661,1494,1.661,1495,1.661,1496,2.674,1497,2.674,1498,1.661,1499,2.674,1500,1.661,1501,1.661,1502,1.661,1503,1.661,1504,2.674,1505,1.661,1506,2.674,1507,1.661,1508,1.661,1509,1.661,1510,1.661,1511,3.847,1512,3.356,1513,2.674,1514,1.661,1515,1.661,1516,1.661,1517,1.661,1518,1.661,1519,1.661,1520,3.356,1521,1.661,1522,1.661,1523,1.661,1524,1.661,1525,2.674,1526,2.674,1527,2.674,1528,2.674,1529,2.674,1530,5.439,1531,4.218,1532,3.356,1533,2.674,1534,3.356,1535,1.661,1536,3.356,1537,2.674,1538,1.661,1539,1.661,1540,1.661,1541,4.739,1542,2.674,1543,3.356,1544,2.674,1545,1.661,1546,1.661,1547,1.661,1548,1.661,1549,1.661,1550,2.674,1551,5.223,1552,1.661,1553,1.661,1554,2.674,1555,1.661,1556,1.661,1557,1.661,1558,1.661,1559,2.674,1560,2.674,1561,2.674,1562,2.674,1563,2.674,1564,2.674,1565,2.674,1566,1.661,1567,1.661,1568,1.527,1569,1.661,1644,1.527,1780,3.401,1781,3.401,1782,3.401,1783,3.401,1784,3.401,1785,3.401,1786,3.401,1787,3.401,1788,3.401,1789,2.112,1790,2.112,1791,2.112,1792,2.112,1793,2.112,1794,2.112,1795,2.112,1796,2.112,1797,2.112,1798,2.112,1799,2.112,1800,2.112,1801,4.893,1802,2.112,1803,2.112,1804,2.112,1805,2.112,1806,2.112,1807,2.112,1808,2.112,1809,2.962,1810,2.112,1811,2.112,1812,2.112,1813,2.112,1814,2.112]],["title/components/TechnologyDetailsComponent.html",[0,0.494,188,1.106]],["body/components/TechnologyDetailsComponent.html",[0,0.71,1,0.981,2,1.562,3,0.111,4,0.086,5,1.128,6,1.17,7,1.128,8,1.128,9,0.086,11,1.015,12,2.59,13,2.408,14,2.2,15,1.619,17,1.619,19,0.77,20,1.059,22,0.205,23,0.517,24,0.014,25,0.111,26,0.338,37,1.806,43,1.317,79,1.47,80,1.532,81,2.193,82,2.825,83,2.466,86,2.369,88,2.369,90,1.358,92,1.532,94,2.808,95,1.089,96,2.936,101,2.166,102,1.933,103,1.671,112,1.128,114,2.57,119,1.962,126,1.837,131,1.75,132,1.837,133,1.47,144,1.128,145,1.619,146,1.562,147,1.128,148,2.068,149,1.128,150,0.477,151,1.128,152,0.981,153,1.128,154,0.981,155,1.128,156,1.797,157,1.128,158,0.981,159,1.089,160,1.128,161,0.981,162,1.128,163,0.981,164,0.718,165,1.128,166,0.947,167,1.128,168,0.981,169,1.128,170,0.947,171,1.128,172,0.981,173,1.128,174,0.981,175,1.128,176,0.947,177,0.947,178,1.128,179,0.981,180,1.128,181,0.947,182,1.051,183,1.128,184,0.947,185,1.128,186,0.947,187,1.128,188,1.736,189,0.709,190,1.128,191,0.981,192,1.128,193,0.947,194,1.051,195,1.128,196,1.128,197,0.008,198,0.008,200,1.407,201,2.369,203,0.291,204,0.894,206,1.268,209,2.588,213,1.456,214,0.656,215,0.742,218,2.994,219,1.268,220,2.112,227,1.412,228,1.47,234,1.358,335,2.466,350,4.296,360,1.75,364,2.311,368,2.109,388,2.485,414,2.042,421,2.936,425,1.933,456,2.311,457,2.311,487,2.682,498,1.962,508,2.397,612,1.75,701,3.107,705,2.311,852,1.75,854,2.166,1021,2.485,1098,2.773,1104,2.485,1105,4.235,1107,2.635,1109,2.485,1110,2.703,1122,5.023,1134,2.994,1136,2.703,1154,2.773,1235,2.703,1428,2.994,1571,4.693,1580,2.485,1644,4.168,1657,3.877,1673,4.296,1677,2.994,1681,2.994,1743,5.384,1815,2.994,1816,5.766,1817,4.931,1818,5.766,1819,4.931,1820,4.931,1821,4.931,1822,4.931,1823,3.437,1824,3.437,1825,4.931,1826,3.437,1827,4.931,1828,4.931,1829,4.931,1830,3.437,1831,3.437,1832,3.437,1833,3.437,1834,3.437,1835,3.437,1836,3.437,1837,3.437,1838,3.437,1839,3.437,1840,4.931,1841,4.931,1842,4.931,1843,4.931,1844,3.437,1845,3.437,1846,3.437]],["title/guards/TechnologyDetailsResolverService.html",[1164,2.699,1748,2.699]],["body/guards/TechnologyDetailsResolverService.html",[3,0.173,4,0.134,9,0.134,19,1.197,20,0.959,22,0.23,23,0.804,24,0.013,25,0.173,26,0.525,150,0.474,189,0.476,197,0.011,198,0.011,200,1.524,203,0.452,206,1.704,207,2.381,213,1.957,214,0.652,215,0.997,219,1.374,227,2.195,228,2.285,233,1.754,235,2.953,236,4.235,252,2.111,315,2.722,472,1.754,498,1.818,554,2.381,574,3.835,592,3.862,802,3.849,843,2.485,852,2.72,854,3.366,1107,2.855,1154,4.051,1162,4.842,1166,3.591,1168,3.591,1169,4.745,1170,3.366,1172,4.79,1173,5.443,1174,4.842,1175,5.443,1176,4.654,1177,3.366,1178,4.201,1180,4.201,1571,4.538,1748,4.454,1752,5.772,1754,4.654,1847,5.343,1848,5.343,1849,5.343]],["title/interfaces/TechnologyDossier.html",[461,0.433,853,2.699]],["body/interfaces/TechnologyDossier.html",[3,0.139,4,0.108,9,0.108,22,0.123,24,0.014,25,0.21,35,2.564,36,2.892,37,1.572,42,1.632,55,3.225,73,3.867,134,1.783,150,0.307,189,0.723,197,0.009,198,0.009,203,0.363,204,1.043,214,0.638,215,0.866,257,2.532,317,2.886,320,3.103,335,1.836,400,1.433,405,3.37,407,0.897,444,3.863,446,2.276,461,0.78,463,1.183,465,2.12,468,2.294,472,1.409,474,2.848,481,2.856,482,2.467,483,1.917,485,3.074,486,2.739,488,2.087,491,1.836,495,3.304,499,2.294,530,2.929,536,2.294,541,2.856,543,2.739,554,1.913,568,3.705,575,3.236,606,3.417,637,3.074,639,2.294,797,3.103,851,4.523,853,4.86,957,3.375,968,3.375,1154,2.414,1231,3.375,1680,3.375,1759,3.103,1760,3.739,1761,3.375,1762,3.739,1763,3.739,1764,5.012,1765,3.739,1766,3.739,1767,3.739,1768,3.739,1769,3.739,1770,3.739,1771,3.739,1772,3.739,1773,3.375,1774,3.739,1775,3.739,1776,5.012,1777,3.375,1778,5.102,1779,3.739,1850,4.292]],["title/interfaces/TechnologyDossierResponse.html",[461,0.433,567,2.145]],["body/interfaces/TechnologyDossierResponse.html",[3,0.162,4,0.126,9,0.126,22,0.183,24,0.014,25,0.251,42,2.663,51,3.257,67,1.592,134,1.801,150,0.527,189,0.448,197,0.01,198,0.01,203,0.425,204,1.156,214,0.689,215,0.96,222,1.338,400,1.516,405,3.581,406,1.292,433,1.911,446,1.95,461,0.87,463,1.385,465,2.142,472,2.418,473,3.026,483,2.068,489,2.239,490,2.727,518,2.149,519,2.239,526,2.239,527,2.239,541,2.767,543,2.91,555,2.685,556,2.985,557,3.166,558,4.16,559,4.413,560,2.685,561,3.166,562,2.685,563,3.166,564,2.685,565,3.166,566,3.166,567,3.407,568,3.936,569,4.143,570,2.337]],["title/interfaces/TechnologyFilterConfiguration.html",[461,0.433,625,1.867]],["body/interfaces/TechnologyFilterConfiguration.html",[3,0.111,4,0.086,9,0.086,20,0.833,22,0.098,24,0.014,25,0.224,38,2.629,61,3.237,62,3.419,67,1.824,112,1.615,125,1.831,134,0.881,150,0.532,164,1.028,189,0.593,197,0.008,198,0.008,203,0.29,204,0.892,214,0.732,222,0.912,233,1.125,234,1.354,257,1.166,370,3.538,380,2.038,400,1.424,407,1.528,461,0.825,462,1.354,463,0.944,465,2.185,474,1.408,475,2.584,481,2.485,482,2.189,483,2.231,486,2.74,491,1.465,495,1.465,497,3.184,511,2.677,512,2.565,514,3.557,517,2.677,538,1.594,547,2.187,554,2.193,570,1.594,601,1.594,602,2.035,603,3.886,604,2.767,605,2.303,606,2.035,609,2.93,611,4.229,612,3.391,613,2.303,614,2.303,615,4.69,616,3.845,617,1.927,618,2.159,619,2.159,620,2.303,621,4.487,622,3.869,623,3.307,624,3.869,625,2.288,626,4.229,627,2.303,628,2.922,629,2.922,630,2.035,631,2.159,632,3.058,633,3.1,634,2.303,635,2.303,636,2.303,637,2.629,638,2.159,639,1.831,640,4.802,641,2.922,642,3.1,643,2.303,644,3.307,645,3.307,646,3.1,647,2.303,648,3.1,649,3.627,650,3.963,651,3.963,652,2.922,653,2.303,654,2.922,655,3.1,656,3.1,657,2.303,658,2.303,659,2.303,660,2.303,661,2.303,662,2.159]],["title/components/TechnologyListComponent.html",[0,0.494,191,1.145]],["body/components/TechnologyListComponent.html",[0,0.684,1,0.919,2,1.491,3,0.104,4,0.081,5,1.057,6,1.096,7,1.057,8,1.057,9,0.081,11,0.951,12,2.572,13,2.39,14,1.491,15,1.545,17,1.545,19,1.245,20,0.941,22,0.16,23,0.485,24,0.014,25,0.104,26,0.317,37,2.823,43,0.673,79,1.378,80,1.436,81,2.666,82,3.147,83,2.377,84,1.721,85,2.794,86,2.283,87,2.287,88,2.511,89,2.843,90,2.415,92,3.026,94,2.477,95,1.491,96,3.31,98,3.163,99,3.401,100,2.806,101,3.502,103,2.287,104,3.163,106,2.533,107,2.806,108,2.533,111,2.165,112,2.359,114,2.097,115,2.328,117,2.165,118,2.03,119,2.386,120,2.806,121,2.806,122,2.165,123,2.806,124,2.794,127,2.514,128,2.514,129,2.794,130,2.328,131,1.64,133,2.012,134,1.21,135,2.03,136,2.287,137,1.721,138,2.585,142,2.533,144,1.057,145,1.545,146,1.491,147,1.057,148,2.007,149,1.057,150,0.501,151,1.057,152,0.919,153,1.057,154,0.919,155,1.057,156,0.919,157,1.057,158,0.919,159,1.021,160,1.057,161,0.919,162,1.057,163,0.919,164,0.673,165,1.057,166,0.888,167,1.057,168,0.919,169,1.057,170,0.888,171,1.057,172,0.919,173,1.057,174,0.919,175,1.057,176,0.888,177,0.888,178,1.057,179,0.919,180,1.057,181,0.888,182,0.985,183,1.057,184,0.888,185,1.057,186,0.888,187,1.057,188,0.888,189,0.663,190,1.057,191,1.743,192,1.057,193,0.888,194,0.985,195,1.057,196,1.057,197,0.008,198,0.008,200,1.342,201,2.283,203,0.272,204,0.853,206,1.21,209,2.511,213,0.951,214,0.546,215,0.485,219,1.21,220,2.035,335,1.378,340,2.794,349,3.401,352,1.913,360,2.395,368,1.378,374,2.806,379,2.806,380,1.869,395,2.646,400,1.008,406,0.828,407,0.673,408,2.514,421,1.64,425,2.646,451,1.913,456,2.165,457,2.165,547,1.545,603,2.287,697,2.806,701,2.03,705,3.163,706,2.03,773,2.533,1098,3.126,1158,2.806,1159,2.806,1160,2.806,1204,2.533,1212,2.806,1296,2.806,1433,3.301,1450,2.97,1463,2.328,1571,4.278,1581,2.328,1720,2.806,1731,3.699,1732,2.806,1741,5.338,1851,2.806,1852,5.558,1853,4.705,1854,5.558,1855,4.705,1856,4.705,1857,3.221,1858,3.221,1859,4.705,1860,3.221,1861,4.705,1862,3.221,1863,3.221,1864,3.221,1865,3.221,1866,3.221,1867,4.705,1868,4.705,1869,4.705,1870,4.705,1871,4.705,1872,6.112,1873,3.221,1874,3.221,1875,3.221,1876,3.221]],["title/components/TechnologyTableComponent.html",[0,0.494,193,1.106]],["body/components/TechnologyTableComponent.html",[0,0.587,1,0.714,2,1.232,3,0.081,4,0.063,5,0.822,6,0.852,7,0.822,8,0.822,9,0.063,11,0.739,12,2.494,13,2.314,14,1.232,15,1.277,17,1.277,19,1.069,20,1.072,22,0.185,23,0.377,24,0.014,25,0.126,26,0.382,43,1.124,79,1.071,80,1.116,81,1.814,82,2.543,83,2.04,84,1.338,85,2.311,86,1.96,87,1.217,88,2.21,89,1.164,90,1.885,92,3.046,94,1.116,95,1.512,96,1.98,101,3.671,103,1.217,104,3.917,111,1.683,112,1.277,114,1.734,119,2.326,124,2.834,126,3.733,127,1.338,128,1.338,129,1.487,130,4.458,131,1.98,133,2.301,135,1.577,136,1.217,137,1.338,138,2.71,144,0.822,145,1.277,146,1.232,147,0.822,148,1.766,149,0.822,150,0.524,151,0.822,152,0.714,153,0.822,154,0.714,155,0.822,156,0.714,157,0.822,158,0.714,159,0.793,160,0.822,161,0.714,162,0.822,163,0.714,164,0.813,165,0.822,166,0.69,167,0.822,168,0.714,169,0.822,170,0.69,171,0.822,172,0.714,173,0.822,174,0.714,175,0.822,176,0.69,177,0.69,178,0.822,179,0.714,180,0.822,181,0.69,182,0.766,183,0.822,184,0.69,185,0.822,186,0.69,187,0.822,188,0.69,189,0.622,190,0.822,191,0.714,192,0.822,193,1.483,194,1.782,195,0.822,196,0.822,197,0.006,198,0.006,200,1.11,201,1.96,203,0.455,204,0.705,206,1.001,207,2.126,209,2.21,213,0.739,214,0.687,215,0.377,219,1.384,220,2.134,315,1.96,340,3.196,352,2.834,360,1.274,368,2.301,380,0.766,395,2.188,400,1.29,406,1.384,407,1.345,408,3.113,414,1.487,420,3.449,421,1.98,422,3.449,429,1.891,440,2.21,454,3.026,456,2.615,457,2.615,472,1.566,498,1.624,546,2.079,547,0.822,625,2.219,629,1.487,630,2.834,690,3.058,701,1.577,705,2.615,706,1.577,730,1.577,852,1.274,899,1.968,920,1.968,1098,2.188,1137,1.968,1142,1.968,1157,4.23,1183,3.751,1191,3.389,1282,1.81,1376,1.81,1433,2.834,1450,2.549,1568,2.812,1570,5.143,1571,4.714,1572,5.408,1573,1.968,1574,3.389,1579,4.156,1580,1.81,1581,1.81,1582,3.751,1583,3.389,1584,4.156,1585,3.751,1586,3.751,1587,3.389,1588,4.156,1589,4.156,1590,5.954,1591,4.156,1592,3.389,1593,4.156,1594,3.389,1595,2.181,1596,2.181,1597,2.181,1598,2.181,1599,2.181,1600,2.181,1601,2.181,1602,2.181,1603,3.389,1604,2.181,1605,3.389,1606,3.389,1607,4.687,1608,4.687,1609,2.181,1610,2.181,1611,2.181,1612,2.181,1613,3.058,1614,2.181,1615,2.181,1616,1.968,1617,1.968,1618,2.181,1619,4.687,1620,3.389,1621,4.687,1657,1.968,1719,3.389,1731,1.968,1877,3.89,1878,3.89,1879,2.503,1880,2.503,1881,2.503,1882,2.503,1883,2.503,1884,2.503,1885,2.503,1886,2.503,1887,2.503,1888,2.503,1889,2.503,1890,2.503,1891,3.89,1892,5.38,1893,3.89,1894,6.168,1895,3.89,1896,2.503,1897,2.503,1898,2.503,1899,5.38,1900,6.835,1901,5.38,1902,4.771,1903,2.503,1904,3.89,1905,2.503,1906,2.503,1907,2.503]],["title/pipes/TruncatePipe.html",[891,2.258,1413,2.699]],["body/pipes/TruncatePipe.html",[3,0.181,4,0.141,9,0.141,11,1.651,20,0.81,22,0.161,23,0.842,24,0.014,25,0.181,26,0.55,150,0.526,197,0.011,198,0.011,200,1.595,206,1.438,213,1.651,214,0.55,215,0.842,219,1.438,234,2.692,252,2.209,400,1.446,406,1.438,407,1.536,547,2.237,891,3.832,1192,5.936,1400,4.042,1404,4.396,1405,5.357,1407,5.357,1413,4.58,1908,4.871,1909,6.814,1910,7.977,1911,7.65,1912,7.65,1913,5.591,1914,6.814,1915,5.591,1916,5.591]],["title/pipes/YesNoPipe.html",[891,2.258,1414,2.699]],["body/pipes/YesNoPipe.html",[3,0.192,4,0.149,9,0.149,11,1.752,20,0.859,22,0.17,23,0.893,24,0.014,25,0.192,26,0.583,150,0.539,197,0.011,198,0.011,200,1.692,206,1.525,213,1.752,214,0.583,215,0.893,219,1.525,222,1.579,252,2.789,407,1.631,690,5.551,760,3.987,891,3.971,1376,4.287,1400,4.287,1404,4.663,1405,5.551,1407,5.551,1414,4.746,1917,6.151,1918,5.167,1919,5.931]],["title/coverage.html",[1920,4.79]],["body/coverage.html",[0,0.994,1,0.931,9,0.082,10,2.844,24,0.014,26,0.605,50,1.662,119,2.88,152,0.931,154,0.931,156,0.931,158,0.931,161,0.931,163,0.931,166,0.9,168,0.931,170,0.9,172,0.931,174,0.931,176,0.9,177,0.9,179,0.931,181,0.9,184,0.9,186,0.9,188,0.9,189,0.291,191,0.931,193,0.9,194,0.999,197,0.008,198,0.008,199,2.844,214,0.321,235,2.742,236,1.836,238,2.844,239,2.844,259,1.519,295,2.567,297,2.844,313,2.36,329,2.844,387,2.844,388,2.36,389,2.844,417,2.844,426,2.844,427,2.567,428,2.844,440,1.341,446,0.999,454,4.413,461,0.88,462,1.29,464,3.959,482,1.241,487,1.519,498,1.111,510,1.662,539,1.662,555,1.745,556,4.052,560,1.745,562,1.745,564,1.745,567,1.745,569,1.836,574,1.587,575,1.836,576,2.195,582,2.36,584,2.567,601,1.519,602,3.882,609,1.662,616,1.662,617,1.836,625,1.519,664,2.844,707,2.844,708,2.567,709,2.844,732,1.662,775,5.875,853,2.195,856,1.939,858,2.567,860,2.567,862,2.567,864,2.567,867,2.567,869,2.567,871,2.567,873,2.567,875,2.567,891,3.15,1051,2.844,1052,2.844,1059,2.844,1066,2.844,1101,2.844,1112,2.844,1113,2.567,1114,2.844,1154,1.836,1164,4.135,1165,2.195,1167,2.844,1168,4.135,1182,2.844,1213,2.844,1219,2.36,1220,3.736,1225,2.844,1247,2.195,1257,2.567,1258,2.567,1329,2.844,1356,2.844,1357,2.844,1364,3.736,1365,3.736,1378,2.36,1379,2.844,1395,2.844,1399,2.195,1401,2.844,1402,2.844,1413,2.195,1414,2.195,1431,2.195,1432,4.049,1444,2.195,1450,1.745,1570,2.36,1571,4.118,1572,3.434,1573,3.736,1622,2.844,1741,2.567,1743,2.36,1746,2.195,1748,2.195,1749,2.567,1759,3.434,1815,2.844,1851,2.844,1908,2.844,1917,2.844,1918,2.844,1920,2.844,1921,3.265,1922,7.727,1923,4.751,1924,6.151,1925,6.536,1926,3.265,1927,7.791,1928,7.98,1929,6.151,1930,4.751,1931,3.265,1932,3.265,1933,3.265,1934,6.151,1935,5.601,1936,6.536,1937,3.265,1938,3.265,1939,3.265,1940,3.265,1941,4.751,1942,4.751,1943,3.265,1944,3.265,1945,3.265,1946,3.265,1947,3.265,1948,2.844,1949,4.139,1950,2.844,1951,4.139,1952,2.844,1953,2.844,1954,3.265]],["title/dependencies.html",[262,2.719,1955,3.344]],["body/dependencies.html",[23,0.894,24,0.014,197,0.011,198,0.011,227,2.441,262,3.342,278,6.157,279,4.752,282,5.177,283,5.177,409,3.53,731,4.295,843,2.764,1378,4.295,1956,5.942,1957,8.365,1958,5.942,1959,5.942,1960,5.942,1961,5.942,1962,5.942,1963,5.942,1964,5.942,1965,5.942,1966,5.942,1967,5.942,1968,5.942,1969,5.942,1970,5.942]],["title/miscellaneous/enumerations.html",[1971,2.417,1972,4.211]],["body/miscellaneous/enumerations.html",[24,0.013,38,2.993,55,3.173,62,3.327,189,0.499,197,0.011,198,0.011,203,0.474,214,0.551,407,1.748,465,2.086,483,2.015,488,2.723,497,2.497,602,3.327,603,2.723,616,2.852,628,3.327,629,3.327,632,3.316,637,3.645,638,3.529,639,2.993,642,4.298,646,4.298,648,4.298,652,4.052,654,4.052,655,4.298,656,4.298,1257,4.404,1258,5.363,1268,5.942,1269,5.942,1270,5.942,1271,5.942,1272,5.363,1759,4.049,1777,4.404,1778,5.363,1971,4.049,1972,4.88,1973,5.601,1974,5.601,1975,5.601]],["title/index.html",[203,0.283,1976,2.913,1977,2.913]],["body/index.html",[0,0.872,4,0.163,13,1.521,24,0.01,27,5.569,28,4.485,32,3.722,34,4.485,35,2.295,36,2.295,37,1.886,38,2.751,39,4.485,41,4.048,42,1.958,43,1.076,53,2.503,55,3.012,61,3.983,150,0.368,197,0.011,198,0.01,257,1.752,272,2.751,303,4.485,335,2.202,337,2.621,346,4.485,347,4.048,349,3.722,461,0.556,525,3.785,535,2.896,558,3.846,593,4.485,619,3.244,628,3.058,649,3.244,694,5.843,732,2.621,885,4.048,1717,4.485,1978,5.149,1979,5.149,1980,5.149,1981,5.149,1982,7.817,1983,7.432,1984,4.485,1985,5.149,1986,5.149,1987,5.149,1988,5.149,1989,5.149,1990,4.485,1991,5.149,1992,5.149,1993,5.149,1994,7.658,1995,7.934,1996,5.149,1997,5.149,1998,5.149,1999,5.149,2000,5.149,2001,5.149,2002,5.149,2003,4.485,2004,5.149,2005,7.083,2006,5.149,2007,5.149,2008,5.149,2009,5.149,2010,5.149,2011,5.149,2012,5.149,2013,5.149,2014,4.485,2015,6.475,2016,6.475,2017,7.432,2018,5.149,2019,6.475,2020,6.475,2021,5.149,2022,5.149,2023,5.149,2024,7.083,2025,6.475,2026,5.149,2027,5.149,2028,5.149]],["title/license.html",[1976,2.913,1977,2.913,2029,2.913]],["body/license.html",[4,0.178,9,0.162,20,0.33,22,0.066,24,0.007,26,0.224,31,1.794,32,1.65,36,1.017,38,1.219,40,4.383,45,1.988,49,7.015,50,2.288,51,1.061,53,1.109,54,1.438,58,2.979,61,1.283,64,1.988,81,1.375,90,0.902,91,1.65,109,3.151,112,0.749,113,1.534,132,1.219,134,0.587,136,1.109,150,0.321,182,0.698,197,0.006,198,0.006,272,1.219,334,1.988,337,1.162,370,2.876,412,1.65,451,2.669,463,0.629,467,1.933,474,0.938,486,0.902,488,1.109,506,1.219,512,2.279,525,3.634,530,1.162,540,1.162,541,0.902,552,1.283,553,1.283,621,1.355,631,1.438,639,1.933,650,1.438,662,1.438,694,1.794,885,3.533,900,1.794,907,1.534,1005,1.534,1065,6.615,1073,1.988,1077,3.915,1078,3.151,1174,1.534,1334,1.988,1335,1.988,1348,4.664,1372,1.988,1644,1.65,1713,3.151,1714,1.988,1761,5.634,1773,1.794,1984,3.151,1990,1.988,2003,3.915,2029,7.015,2030,5.114,2031,4.494,2032,4.494,2033,2.282,2034,2.282,2035,2.282,2036,6.639,2037,7.166,2038,5.114,2039,5.575,2040,2.282,2041,7.34,2042,6.802,2043,2.282,2044,1.988,2045,2.282,2046,6.802,2047,7.166,2048,5.931,2049,6.802,2050,3.617,2051,2.282,2052,5.575,2053,2.282,2054,2.282,2055,2.282,2056,5.114,2057,2.282,2058,6.639,2059,2.282,2060,5.114,2061,3.617,2062,3.617,2063,2.282,2064,4.494,2065,3.617,2066,3.617,2067,2.282,2068,7.539,2069,3.617,2070,5.931,2071,2.282,2072,3.617,2073,2.282,2074,2.282,2075,2.282,2076,2.282,2077,2.282,2078,2.282,2079,4.494,2080,2.282,2081,4.494,2082,3.617,2083,2.282,2084,2.282,2085,5.931,2086,6.639,2087,5.114,2088,2.282,2089,2.282,2090,2.282,2091,2.282,2092,2.282,2093,2.282,2094,4.494,2095,3.617,2096,2.282,2097,6.639,2098,3.617,2099,2.282,2100,3.617,2101,7.539,2102,2.282,2103,2.282,2104,2.282,2105,2.282,2106,2.282,2107,3.617,2108,3.617,2109,2.282,2110,2.282,2111,2.282,2112,2.282,2113,5.114,2114,5.575,2115,2.282,2116,3.617,2117,5.114,2118,3.617,2119,2.282,2120,5.575,2121,3.617,2122,2.282,2123,2.282,2124,4.494,2125,2.282,2126,2.282,2127,2.282,2128,3.617,2129,2.282,2130,2.282,2131,2.282,2132,4.494,2133,2.282,2134,2.282,2135,4.494,2136,2.282,2137,2.282,2138,2.282,2139,5.114,2140,6.802,2141,2.282,2142,2.282,2143,3.617,2144,6.447,2145,4.494,2146,5.114,2147,3.617,2148,3.617,2149,3.617,2150,3.617,2151,4.494,2152,3.617,2153,4.494,2154,3.617,2155,3.617,2156,3.617,2157,3.617,2158,2.282,2159,3.617,2160,2.282,2161,5.575,2162,6.215,2163,4.494,2164,3.617,2165,2.282,2166,3.617,2167,3.617,2168,2.282,2169,2.282,2170,4.494,2171,3.617,2172,2.282,2173,2.282,2174,2.282,2175,4.494,2176,2.282,2177,2.282,2178,3.617,2179,3.617,2180,2.282,2181,2.282,2182,2.282,2183,2.282,2184,2.282,2185,2.282,2186,2.282,2187,3.617,2188,2.282,2189,2.282,2190,2.282,2191,2.282,2192,2.282,2193,2.282,2194,5.575,2195,2.282,2196,4.494,2197,2.282,2198,2.282,2199,4.494,2200,2.282,2201,2.282,2202,2.282,2203,6.447,2204,2.282,2205,2.282,2206,2.282,2207,2.282,2208,5.114,2209,3.617,2210,5.114,2211,2.282,2212,2.282,2213,2.282,2214,4.494,2215,2.282,2216,2.282,2217,3.617,2218,3.617,2219,2.282,2220,2.282,2221,2.282,2222,2.282,2223,3.617,2224,3.617,2225,2.282,2226,2.282,2227,2.282,2228,2.282,2229,2.282,2230,2.282,2231,2.282,2232,4.494,2233,5.114,2234,2.282,2235,2.282,2236,2.282,2237,2.282,2238,2.282,2239,2.282,2240,2.282,2241,2.282,2242,2.282,2243,2.282,2244,3.617,2245,2.282,2246,2.282,2247,3.617,2248,2.282,2249,5.114,2250,2.282,2251,2.282,2252,2.282,2253,2.282,2254,2.282,2255,5.114,2256,4.494,2257,4.494,2258,4.494,2259,3.617,2260,3.617,2261,3.617,2262,2.282,2263,2.282,2264,2.282,2265,2.282,2266,2.282,2267,2.282,2268,3.617,2269,2.282,2270,2.282,2271,2.282,2272,2.282,2273,5.575,2274,2.282,2275,2.282,2276,2.282,2277,2.282,2278,2.282,2279,2.282,2280,2.282,2281,2.282,2282,5.575,2283,2.282,2284,2.282,2285,2.282,2286,2.282,2287,2.282,2288,2.282,2289,2.282,2290,2.282,2291,2.282,2292,2.282,2293,2.282,2294,2.282,2295,2.282,2296,2.282,2297,2.282,2298,2.282,2299,4.494,2300,2.282,2301,2.282,2302,2.282,2303,3.617,2304,2.282,2305,2.282,2306,2.282,2307,2.282,2308,2.282,2309,2.282,2310,2.282,2311,2.282,2312,2.282,2313,2.282,2314,2.282,2315,2.282,2316,2.282,2317,2.282,2318,3.617,2319,2.282,2320,2.282,2321,2.282,2322,3.617,2323,3.617,2324,2.282,2325,2.282,2326,2.282,2327,2.282,2328,2.282,2329,2.282,2330,2.282,2331,2.282,2332,2.282,2333,2.282,2334,2.282,2335,2.282,2336,2.282,2337,2.282,2338,2.282,2339,2.282,2340,2.282,2341,2.282,2342,2.282]],["title/modules.html",[261,2.557]],["body/modules.html",[24,0.011,32,5.8,51,3.659,197,0.011,198,0.011,260,4.088,261,2.829,267,4.088,268,4.088,269,3.612,279,5.394,351,6.014,1238,4.396,1242,4.088,1272,6.309,1273,4.088,1734,4.396,1738,4.088,2343,7.867]],["title/overview.html",[1330,4.323]],["body/overview.html",[1,1.77,2,1.247,24,0.014,119,1.339,152,2.12,154,1.77,156,2.12,158,2.12,161,1.77,163,1.77,166,1.71,168,2.12,170,1.71,172,2.12,174,2.12,176,1.71,177,1.71,179,1.77,181,2.047,184,1.71,186,1.71,188,1.71,191,1.77,193,1.71,197,0.009,198,0.009,236,3.49,237,2.646,260,5.51,261,1.83,262,3.05,263,3.428,264,3.428,265,3.428,266,3.428,267,4.172,268,5.279,269,5.015,270,3.417,271,2.48,272,2.103,296,2.646,423,3.094,463,1.084,572,3.428,573,3.428,574,3.017,575,3.49,576,4.172,1166,2.646,1238,5.8,1239,3.428,1240,3.428,1241,3.428,1242,4.172,1273,4.995,1330,3.094,1399,4.995,1400,2.845,1409,3.428,1410,3.428,1411,3.428,1412,3.428,1413,4.995,1414,4.995,1734,5.859,1735,3.428,1736,3.428,1737,3.428,1738,4.172,2044,3.428,2344,3.935,2345,6.206,2346,3.935]],["title/routes.html",[311,3.696]],["body/routes.html",[24,0.012,197,0.012,198,0.012,311,4.443]],["title/miscellaneous/variables.html",[1971,2.417,2347,4.211]],["body/miscellaneous/variables.html",[24,0.014,197,0.01,198,0.01,203,0.426,214,0.815,233,2.097,234,1.992,400,1.463,406,2.114,407,1.718,775,3.963,858,5.023,859,4.391,860,5.023,861,4.391,862,5.023,863,4.391,864,5.023,865,4.391,866,4.391,867,5.023,868,4.391,869,5.023,870,4.391,871,5.023,872,4.391,873,5.023,874,4.391,875,5.023,876,4.391,1348,5.023,1364,3.963,1365,5.023,1378,4.618,1809,4.391,1948,4.391,1949,6.424,1950,4.391,1951,4.391,1952,5.565,1953,5.565,1971,3.644,2014,5.565,2347,4.391,2348,6.389,2349,8.066,2350,5.041,2351,5.041,2352,5.041,2353,5.041,2354,5.041]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.11.4",{"_index":1970,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["0.22",{"_index":372,"title":{},"body":{"components/BannerComponent.html":{}}}],["0.2rem",{"_index":1873,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["0.6.2",{"_index":1965,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1928,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1931,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1933,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1947,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1945,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1924,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1926,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1932,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1922,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1925,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1923,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1929,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1930,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1946,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["1.1rem",{"_index":140,"title":{},"body":{"components/AboutComponent.html":{},"components/ChildGroupingComponent.html":{}}}],["1.2rem",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{}}}],["1.3rem",{"_index":384,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionComponent.html":{}}}],["1.5rem",{"_index":364,"title":{},"body":{"components/BannerComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["1.7rem",{"_index":369,"title":{},"body":{"components/BannerComponent.html":{}}}],["1.8rem",{"_index":383,"title":{},"body":{"components/BannerComponent.html":{}}}],["1/1",{"_index":1937,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1943,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1942,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":340,"title":{},"body":{"components/BannerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["100",{"_index":454,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":1235,"title":{},"body":{"components/InformationComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["10px",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["10rem",{"_index":1845,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["11",{"_index":1190,"title":{},"body":{"components/HeaderComponent.html":{}}}],["1100px",{"_index":385,"title":{},"body":{"components/BannerComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{}}}],["12.0.0",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["12.2.8",{"_index":1957,"title":{},"body":{"dependencies.html":{}}}],["1200px",{"_index":1100,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{}}}],["1400px",{"_index":1907,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["150",{"_index":546,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["16",{"_index":1941,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["18",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{}}}],["18px",{"_index":382,"title":{},"body":{"components/BannerComponent.html":{}}}],["1em",{"_index":1092,"title":{},"body":{"components/FooterComponent.html":{}}}],["1fr",{"_index":1342,"title":{},"body":{"components/OverviewComponent.html":{}}}],["1px",{"_index":422,"title":{},"body":{"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["1rem",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["2",{"_index":706,"title":{},"body":{"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["2.0",{"_index":2032,"title":{},"body":{"license.html":{}}}],["2.2rem",{"_index":771,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["2.3.1",{"_index":1968,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":386,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologiesComponent.html":{}}}],["20",{"_index":417,"title":{},"body":{"components/BottomNavComponent.html":{},"coverage.html":{}}}],["200",{"_index":1839,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["2004",{"_index":2034,"title":{},"body":{"license.html":{}}}],["2021",{"_index":1072,"title":{},"body":{"components/FooterComponent.html":{}}}],["21",{"_index":2344,"title":{},"body":{"overview.html":{}}}],["212121",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{}}}],["24",{"_index":2346,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1192,"title":{},"body":{"components/HeaderComponent.html":{},"pipes/TruncatePipe.html":{}}}],["2em",{"_index":1202,"title":{},"body":{"components/HeaderComponent.html":{}}}],["2px",{"_index":1191,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["2rem",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["3",{"_index":423,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{},"overview.html":{}}}],["3.5rem",{"_index":1902,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["3/3",{"_index":1938,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1725,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["30em",{"_index":1721,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["35",{"_index":1355,"title":{},"body":{"components/OverviewComponent.html":{}}}],["3rem",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["3s",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["4",{"_index":2345,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1936,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":374,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologyListComponent.html":{}}}],["40px",{"_index":381,"title":{},"body":{"components/BannerComponent.html":{}}}],["4em",{"_index":1094,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["4px",{"_index":371,"title":{},"body":{"components/BannerComponent.html":{}}}],["4rem",{"_index":1095,"title":{},"body":{"components/FooterComponent.html":{}}}],["5",{"_index":1861,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["5.5rem",{"_index":1198,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5/5",{"_index":1934,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1940,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":412,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"license.html":{}}}],["500",{"_index":1090,"title":{},"body":{"components/FooterComponent.html":{}}}],["510px",{"_index":424,"title":{},"body":{"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{}}}],["550px",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{}}}],["55em",{"_index":1210,"title":{},"body":{"components/HeaderComponent.html":{}}}],["57rem",{"_index":1099,"title":{},"body":{"components/FooterComponent.html":{}}}],["5rem",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["5s",{"_index":1353,"title":{},"body":{"components/OverviewComponent.html":{}}}],["6.6.7",{"_index":1966,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1935,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":457,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["620px",{"_index":1211,"title":{},"body":{"components/HeaderComponent.html":{}}}],["6em",{"_index":1207,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7",{"_index":1352,"title":{},"body":{"components/OverviewComponent.html":{}}}],["70",{"_index":1347,"title":{},"body":{"components/OverviewComponent.html":{}}}],["790px",{"_index":142,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/TechnologyListComponent.html":{}}}],["7rem",{"_index":772,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["80",{"_index":1720,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["83",{"_index":1939,"title":{},"body":{"coverage.html":{}}}],["850px",{"_index":1668,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["8rem",{"_index":135,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["9",{"_index":2044,"title":{},"body":{"license.html":{},"overview.html":{}}}],["9/9",{"_index":1944,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":700,"title":{},"body":{"components/CriterionComponent.html":{},"components/TechnologiesComponent.html":{}}}],["900",{"_index":366,"title":{},"body":{"components/BannerComponent.html":{},"components/FooterComponent.html":{}}}],["900px",{"_index":1731,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["910px",{"_index":1732,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["93vw",{"_index":1896,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["95",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{}}}],["95rem",{"_index":1212,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{}}}],["9rem",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{}}}],["_scss/global/variables",{"_index":414,"title":{},"body":{"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["_scss/shared",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["a[sort.property",{"_index":1527,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["about'},{'name",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["about.component.html",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["above",{"_index":2236,"title":{},"body":{"license.html":{}}}],["academic",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{}}}],["acceptance",{"_index":2301,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":2299,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":242,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["act",{"_index":2307,"title":{},"body":{"license.html":{}}}],["acting",{"_index":2054,"title":{},"body":{"license.html":{}}}],["activatedroute",{"_index":1105,"title":{},"body":{"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":1173,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["active",{"_index":1206,"title":{},"body":{"components/HeaderComponent.html":{}}}],["acts",{"_index":2280,"title":{},"body":{"license.html":{}}}],["actual",{"_index":659,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["actual_component",{"_index":196,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["add",{"_index":2224,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":2226,"title":{},"body":{"license.html":{}}}],["additional",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"license.html":{}}}],["additions",{"_index":2115,"title":{},"body":{"license.html":{}}}],["advised",{"_index":2297,"title":{},"body":{"license.html":{}}}],["against",{"_index":2179,"title":{},"body":{"license.html":{}}}],["agree",{"_index":2310,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":2258,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":2241,"title":{},"body":{"license.html":{}}}],["aims",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{}}}],["align",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["alleging",{"_index":2184,"title":{},"body":{"license.html":{}}}],["allvalues.includes(v",{"_index":1560,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["allvalues.push(v.value",{"_index":1556,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["alone",{"_index":2176,"title":{},"body":{"license.html":{}}}],["along",{"_index":2215,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":2225,"title":{},"body":{"license.html":{}}}],["alpha",{"_index":1373,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["already",{"_index":1058,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["and/or",{"_index":2304,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1983,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1956,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":1438,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["angular/cdk/layout",{"_index":1665,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["angular/cli",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":409,"title":{},"body":{"components/BottomNavComponent.html":{},"modules/CoreModule.html":{},"components/FrameworkRendererComponent.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":251,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"injectables/DataService.html":{}}}],["angular/compiler",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"modules/CoreModule.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":731,"title":{},"body":{"components/CriterionFilterComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1300,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/bottom",{"_index":1323,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":1276,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":1289,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":1316,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":1304,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":1293,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":1295,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":1291,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1278,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":1298,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":1287,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":1310,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":1312,"title":{},"body":{"modules/MaterialModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["angular/material/progress",{"_index":1284,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":1328,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1302,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1282,"title":{},"body":{"modules/MaterialModule.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["angular/material/slide",{"_index":1318,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slider",{"_index":1326,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":1306,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tabs",{"_index":1314,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1280,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":1308,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tree",{"_index":1320,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"dependencies.html":{}}}],["annotations",{"_index":2104,"title":{},"body":{"license.html":{}}}],["answers",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{}}}],["apache",{"_index":2030,"title":{},"body":{"license.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"index.html":{}}}],["app.component",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["app_initializer",{"_index":579,"title":{},"body":{"modules/CoreModule.html":{}}}],["appcomponent",{"_index":152,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":240,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["appconfigservice",{"_index":236,"title":{"injectables/AppConfigService.html":{}},"body":{"injectables/AppConfigService.html":{},"modules/CoreModule.html":{},"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{},"overview.html":{}}}],["appconfigservice.loadappconfig",{"_index":596,"title":{},"body":{"modules/CoreModule.html":{}}}],["appear",{"_index":2220,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":2100,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":2256,"title":{},"body":{"license.html":{}}}],["applies",{"_index":2169,"title":{},"body":{"license.html":{}}}],["apply",{"_index":2318,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":260,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":295,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appropriate",{"_index":2327,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":2267,"title":{},"body":{"license.html":{}}}],["approutes",{"_index":316,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":267,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arbitrary",{"_index":653,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["archives",{"_index":2334,"title":{},"body":{"license.html":{}}}],["arguments",{"_index":1823,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["arising",{"_index":2287,"title":{},"body":{"license.html":{}}}],["around",{"_index":1195,"title":{},"body":{"components/HeaderComponent.html":{}}}],["array.from(criteriavalues.get(f.criterionid)).sort(((a",{"_index":1004,"title":{},"body":{"injectables/DataService.html":{}}}],["array.from(criteriavalues.get(f.criterionid).values",{"_index":1010,"title":{},"body":{"injectables/DataService.html":{}}}],["array.from(filtervalue.value",{"_index":1558,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["array.from(placement.values",{"_index":1696,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["array.from(reviewedcriterion.values).length",{"_index":1563,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["array.from(this.criterioninstance.values",{"_index":683,"title":{},"body":{"components/CriterionComponent.html":{}}}],["array.from(value",{"_index":1408,"title":{},"body":{"pipes/SetToArrayPipe.html":{}}}],["array.from(view.groupings).foreach((grouping",{"_index":1598,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["array.isarray(value",{"_index":758,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["array.pipe",{"_index":1422,"title":{},"body":{"modules/SharedModule.html":{}}}],["array.pipe.ts",{"_index":1402,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"coverage.html":{}}}],["array.pipe.ts:7",{"_index":1406,"title":{},"body":{"pipes/SetToArrayPipe.html":{}}}],["arrow_back_ios",{"_index":1893,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["arrow_forward",{"_index":1869,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["arrow_forward_ios",{"_index":1895,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["arrow_upward",{"_index":413,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["artifacts",{"_index":2008,"title":{},"body":{"index.html":{}}}],["asc",{"_index":1448,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{}}}],["aspect",{"_index":531,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["asserted",{"_index":2316,"title":{},"body":{"license.html":{}}}],["assets/data/framework/criteria.json",{"_index":859,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/filters.json",{"_index":874,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/frameworks.json",{"_index":868,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/groupings.json",{"_index":861,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/view",{"_index":865,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/views.json",{"_index":863,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/info/resources.json",{"_index":876,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/platforms",{"_index":872,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/platforms/platforms.json",{"_index":870,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/images/vendor/logo",{"_index":1264,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["associated",{"_index":2271,"title":{},"body":{"license.html":{}}}],["assume",{"_index":2269,"title":{},"body":{"license.html":{}}}],["attach",{"_index":2319,"title":{},"body":{"license.html":{}}}],["attached",{"_index":2099,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":1991,"title":{},"body":{"index.html":{}}}],["attribution",{"_index":2208,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":2050,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":2094,"title":{},"body":{"license.html":{}}}],["auto",{"_index":360,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["automatically",{"_index":2000,"title":{},"body":{"index.html":{}}}],["available",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyDossierResponse.html":{},"license.html":{},"modules.html":{}}}],["aws",{"_index":536,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["aws.s3",{"_index":1770,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["azure",{"_index":1768,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["azure.functions",{"_index":1767,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["b",{"_index":1005,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"license.html":{}}}],["b5ca8f",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{}}}],["b[sort.property",{"_index":1528,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["baas",{"_index":1778,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{}}}],["backend",{"_index":883,"title":{},"body":{"injectables/DataService.html":{}}}],["background",{"_index":352,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["banner",{"_index":330,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner'},{'name",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["banner.component.html",{"_index":332,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner.component.scss",{"_index":331,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__description",{"_index":373,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__heading",{"_index":363,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__quick",{"_index":377,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__summary",{"_index":375,"title":{},"body":{"components/BannerComponent.html":{}}}],["bannercomponent",{"_index":154,"title":{"components/BannerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["based",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["basis",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["behalf",{"_index":2120,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":629,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["behaviorsubject",{"_index":1439,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject(0",{"_index":1452,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject(initialquery",{"_index":1468,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject(undefined",{"_index":1470,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject>(initialsort",{"_index":1466,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behind",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["belongs",{"_index":1763,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["below",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["beneficial",{"_index":2078,"title":{},"body":{"license.html":{}}}],["beta.35",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":494,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["bg",{"_index":452,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{}}}],["bind",{"_index":2112,"title":{},"body":{"license.html":{}}}],["block",{"_index":612,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"components/HeaderComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["block__filter",{"_index":768,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["blockchain",{"_index":1779,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["blockicon",{"_index":620,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["blockname",{"_index":618,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["body",{"_index":770,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["boilerplate",{"_index":2320,"title":{},"body":{"license.html":{}}}],["bool",{"_index":642,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"pipes/YesNoPipe.html":{}}}],["bootstrap",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["bottom",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["bottomnav",{"_index":1818,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["bottomnavcomponent",{"_index":156,"title":{"components/BottomNavComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["box",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["brackets",{"_index":2323,"title":{},"body":{"license.html":{}}}],["breadcrumbs",{"_index":521,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["break",{"_index":1137,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["browse",{"_index":351,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"modules.html":{}}}],["browser",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"components/TechnologiesComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":304,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["browsing",{"_index":1981,"title":{},"body":{"index.html":{}}}],["browsingmode",{"_index":1627,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["build",{"_index":1982,"title":{},"body":{"index.html":{}}}],["buildgroupings",{"_index":776,"title":{},"body":{"injectables/DataService.html":{}}}],["buildgroupings(data",{"_index":799,"title":{},"body":{"injectables/DataService.html":{}}}],["button",{"_index":773,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["buttons",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{}}}],["c",{"_index":900,"title":{},"body":{"injectables/DataService.html":{},"components/TechnologiesComponent.html":{},"license.html":{}}}],["c.colspan",{"_index":1605,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["c.criterionid",{"_index":1692,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["c.default",{"_index":922,"title":{},"body":{"injectables/DataService.html":{}}}],["c.description",{"_index":921,"title":{},"body":{"injectables/DataService.html":{}}}],["c.displayname",{"_index":1892,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["c.id",{"_index":899,"title":{},"body":{"injectables/DataService.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["c.name",{"_index":920,"title":{},"body":{"injectables/DataService.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["c.technologycategory.tolocalelowercase",{"_index":986,"title":{},"body":{"injectables/DataService.html":{}}}],["c.viewids.foreach(id",{"_index":923,"title":{},"body":{"injectables/DataService.html":{}}}],["canfilter",{"_index":1780,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["canfilter(filtervalue",{"_index":1529,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["card",{"_index":1156,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["carry",{"_index":2201,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":844,"title":{},"body":{"injectables/DataService.html":{}}}],["catcherror(dataservice.handleerror",{"_index":892,"title":{},"body":{"injectables/DataService.html":{}}}],["categories",{"_index":1777,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{}}}],["category",{"_index":554,"title":{},"body":{"interfaces/ClassificationFramework.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["category.tolocalelowercase",{"_index":953,"title":{},"body":{"injectables/DataService.html":{}}}],["category]{@link",{"_index":499,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["cause",{"_index":2066,"title":{},"body":{"license.html":{}}}],["ccc",{"_index":1599,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["cell",{"_index":1900,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["center",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["change",{"_index":2002,"title":{},"body":{"index.html":{}}}],["changed",{"_index":2205,"title":{},"body":{"license.html":{}}}],["changedetection",{"_index":1623,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectionstrategy",{"_index":1662,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1624,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectorref",{"_index":1635,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectorref.detectchanges",{"_index":1670,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["character",{"_index":2286,"title":{},"body":{"license.html":{}}}],["charge",{"_index":2153,"title":{},"body":{"license.html":{}}}],["check",{"_index":2027,"title":{},"body":{"index.html":{}}}],["check_circle",{"_index":339,"title":{},"body":{"components/BannerComponent.html":{}}}],["checkboxes",{"_index":651,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["checkrouterevent",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["checkrouterevent(e",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["child",{"_index":159,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["child(even",{"_index":1906,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["childgroupingcomponent",{"_index":158,"title":{"components/ChildGroupingComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["children",{"_index":1254,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["choose",{"_index":334,"title":{},"body":{"components/BannerComponent.html":{},"license.html":{}}}],["choosing",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{}}}],["chosenvalue",{"_index":1562,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["chosenvalues",{"_index":1565,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["chosenvalues.indexof(value",{"_index":1569,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["chosenvalues.length",{"_index":1566,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["claim",{"_index":2181,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2171,"title":{},"body":{"license.html":{}}}],["class",{"_index":26,"title":{"classes/AppPage.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"classes/TableColumn.html":{},"classes/TechnologyDataSource.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"modules/CoreModule.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"license.html":{}}}],["class=\"criterion__value",{"_index":691,"title":{},"body":{"components/CriterionComponent.html":{}}}],["class=\"sidenav__filter",{"_index":1710,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["classes",{"_index":296,"title":{},"body":{"classes/AppPage.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"classes/TableColumn.html":{},"classes/TechnologyDataSource.html":{},"overview.html":{}}}],["classification",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"index.html":{}}}],["classificationcriterion",{"_index":462,"title":{"interfaces/ClassificationCriterion.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["classificationframework",{"_index":498,"title":{"interfaces/ClassificationFramework.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["classificationframeworkresponse",{"_index":555,"title":{"interfaces/ClassificationFrameworkResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["classifications",{"_index":507,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["classificationview",{"_index":510,"title":{"interfaces/ClassificationView.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"coverage.html":{}}}],["classificationviewcombination",{"_index":487,"title":{"interfaces/ClassificationViewCombination.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["classificationviewcombinationresponse",{"_index":560,"title":{"interfaces/ClassificationViewCombinationResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["classificationviewresponse",{"_index":562,"title":{"interfaces/ClassificationViewResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["classificationviews",{"_index":571,"title":{},"body":{"interfaces/ClassificationViewCombination.html":{}}}],["classificationviews]{@link",{"_index":509,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["classified",{"_index":466,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["clear",{"_index":767,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["clearfilter",{"_index":714,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["cli",{"_index":2025,"title":{},"body":{"index.html":{}}}],["click",{"_index":1716,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["close",{"_index":1709,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["cloud",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{}}}],["cloud_done",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["cluster_appmodule",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":572,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":573,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_informationmodule",{"_index":1239,"title":{},"body":{"modules/InformationModule.html":{},"overview.html":{}}}],["cluster_informationmodule_declarations",{"_index":1241,"title":{},"body":{"modules/InformationModule.html":{},"overview.html":{}}}],["cluster_informationmodule_imports",{"_index":1240,"title":{},"body":{"modules/InformationModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1409,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1411,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1410,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":1412,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_technologiesmodule",{"_index":1735,"title":{},"body":{"modules/TechnologiesModule.html":{},"overview.html":{}}}],["cluster_technologiesmodule_declarations",{"_index":1737,"title":{},"body":{"modules/TechnologiesModule.html":{},"overview.html":{}}}],["cluster_technologiesmodule_imports",{"_index":1736,"title":{},"body":{"modules/TechnologiesModule.html":{},"overview.html":{}}}],["code",{"_index":885,"title":{},"body":{"injectables/DataService.html":{},"index.html":{},"license.html":{}}}],["collected",{"_index":535,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"index.html":{}}}],["color",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["color.service",{"_index":590,"title":{},"body":{"modules/CoreModule.html":{}}}],["color.service.ts",{"_index":1365,"title":{},"body":{"injectables/RandomColorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["color.service.ts:11",{"_index":1374,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["color.service.ts:6",{"_index":1367,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["colspan",{"_index":1574,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["column",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["columns",{"_index":1340,"title":{},"body":{"components/OverviewComponent.html":{}}}],["columnstodisplay",{"_index":1593,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["combination",{"_index":506,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"license.html":{}}}],["combination.views.add(view",{"_index":925,"title":{},"body":{"injectables/DataService.html":{}}}],["combinations",{"_index":489,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["combinations.json",{"_index":866,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["combinelatest",{"_index":841,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["combinelatest([this.criteriabasedquery",{"_index":1472,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["combinelatest([this.filtereddata",{"_index":1482,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["combining",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologiesComponent.html":{}}}],["combs.find(c",{"_index":1030,"title":{},"body":{"injectables/DataService.html":{}}}],["combs.find(v",{"_index":938,"title":{},"body":{"injectables/DataService.html":{}}}],["comment",{"_index":553,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"license.html":{}}}],["commercial",{"_index":1335,"title":{},"body":{"components/OverviewComponent.html":{},"license.html":{}}}],["common",{"_index":2059,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":581,"title":{},"body":{"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{}}}],["communication",{"_index":2124,"title":{},"body":{"license.html":{}}}],["community.github",{"_index":527,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["comparison",{"_index":1760,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["compiled",{"_index":2091,"title":{},"body":{"license.html":{}}}],["completewords",{"_index":1911,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["compliance",{"_index":2337,"title":{},"body":{"license.html":{}}}],["complies",{"_index":2230,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"overview.html":{}}}],["comprise",{"_index":613,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["comprises",{"_index":485,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["comprising",{"_index":504,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["computer",{"_index":2292,"title":{},"body":{"license.html":{}}}],["concat(extension.png",{"_index":1267,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["concat(grouping.name",{"_index":1703,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["concat(logolocator",{"_index":1266,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["concerning",{"_index":1079,"title":{},"body":{"components/FooterComponent.html":{}}}],["conditions",{"_index":2037,"title":{},"body":{"license.html":{}}}],["conducted",{"_index":542,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["conf.find(c",{"_index":985,"title":{},"body":{"injectables/DataService.html":{}}}],["config",{"_index":1162,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["config.service",{"_index":592,"title":{},"body":{"modules/CoreModule.html":{},"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["config.service.ts",{"_index":239,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["config.service.ts:11",{"_index":248,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:19",{"_index":250,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:6",{"_index":246,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configuration",{"_index":621,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["confirming",{"_index":550,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["connect",{"_index":1434,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["consequential",{"_index":2285,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":2306,"title":{},"body":{"license.html":{}}}],["console.error(err",{"_index":888,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log('found",{"_index":1524,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["console.log('new",{"_index":1500,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["console.log(nextquery",{"_index":1502,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["conspicuously",{"_index":2136,"title":{},"body":{"license.html":{}}}],["const",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{}}}],["constitutes",{"_index":2185,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["constructor(@optional",{"_index":598,"title":{},"body":{"modules/CoreModule.html":{}}}],["constructor(data",{"_index":1460,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["constructor(dataservice",{"_index":1170,"title":{},"body":{"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["constructor(fb",{"_index":717,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["constructor(http",{"_index":244,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{}}}],["constructor(private",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["constructor(route",{"_index":1104,"title":{},"body":{"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["constructor(router",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(targetmodule",{"_index":1053,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["constructor(viewportscroller",{"_index":397,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["construed",{"_index":2227,"title":{},"body":{"license.html":{}}}],["contact",{"_index":1188,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contain",{"_index":468,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["contained",{"_index":650,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["container",{"_index":1719,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["containing",{"_index":534,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["containsall",{"_index":655,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["containsany",{"_index":654,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["containsany(filtervalue",{"_index":1561,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["containsone",{"_index":652,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["containsone(filtervalue",{"_index":1564,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["content",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["contents",{"_index":2221,"title":{},"body":{"license.html":{}}}],["context",{"_index":1952,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":2069,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":2114,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":2175,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":2232,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2140,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":2186,"title":{},"body":{"license.html":{}}}],["control",{"_index":2056,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":2057,"title":{},"body":{"license.html":{}}}],["controls",{"_index":739,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["controls.push(this.fb.control(false",{"_index":742,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["conversions",{"_index":2092,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2192,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2199,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2047,"title":{},"body":{"license.html":{}}}],["core/core.module",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/app",{"_index":1178,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["core/services/data.service",{"_index":1177,"title":{},"body":{"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["coremodule",{"_index":268,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["corresponding",{"_index":1717,"title":{},"body":{"components/TechnologiesComponent.html":{},"index.html":{}}}],["count",{"_index":1370,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["counter",{"_index":1608,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["counterclaim",{"_index":2182,"title":{},"body":{"license.html":{}}}],["cover",{"_index":357,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{}}}],["coverage",{"_index":1920,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["criteria",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["criteria.has(id",{"_index":1044,"title":{},"body":{"injectables/DataService.html":{}}}],["criteriabasedquery",{"_index":601,"title":{"interfaces/CriteriaBasedQuery.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["criteriacolumns",{"_index":1589,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["criteriafilterlookup",{"_index":1690,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["criteriagrouping",{"_index":440,"title":{"interfaces/CriteriaGrouping.html":{}},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["criteriagroupingresponse",{"_index":564,"title":{"interfaces/CriteriaGroupingResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["criteriagroupingspath",{"_index":860,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["criteriaids",{"_index":566,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["criterialookup",{"_index":897,"title":{},"body":{"injectables/DataService.html":{}}}],["criteriapath",{"_index":858,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["criteriaquery",{"_index":1477,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criteriareview",{"_index":569,"title":{"interfaces/CriteriaReview.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["criteriavalues",{"_index":990,"title":{},"body":{"injectables/DataService.html":{}}}],["criteriavalues.get(key",{"_index":995,"title":{},"body":{"injectables/DataService.html":{}}}],["criteriavalues.set(key",{"_index":998,"title":{},"body":{"injectables/DataService.html":{}}}],["criterion",{"_index":164,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["criterion'},{'name",{"_index":162,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["criterion.component.html",{"_index":666,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion.component.scss",{"_index":665,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion.description",{"_index":684,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion.examplevalues",{"_index":686,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion/criterion.component",{"_index":1423,"title":{},"body":{"modules/SharedModule.html":{}}}],["criterion__heading",{"_index":695,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__icon",{"_index":702,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__reference",{"_index":703,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__title",{"_index":696,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__value",{"_index":698,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterioncomponent",{"_index":161,"title":{"components/CriterionComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["criterionfiltercomponent",{"_index":163,"title":{"components/CriterionFilterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["criterionfilterconfiguration",{"_index":616,"title":{"interfaces/CriterionFilterConfiguration.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["criterionfiltertype",{"_index":632,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["criterionfiltertype.bool",{"_index":1009,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.containsall",{"_index":1532,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.containsany",{"_index":1536,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.containsone",{"_index":1533,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.excludesall",{"_index":1534,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.lte",{"_index":1002,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltervalue",{"_index":609,"title":{"interfaces/CriterionFilterValue.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["criterionfiltervalues",{"_index":607,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{}}}],["criterionfiltervalues]{@link",{"_index":657,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["criterionid",{"_index":538,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["criterioninstance",{"_index":446,"title":{"interfaces/CriterionInstance.html":{}},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["criterioninstance.values.foreach(v",{"_index":996,"title":{},"body":{"injectables/DataService.html":{}}}],["criterioninstances",{"_index":1850,"title":{},"body":{"interfaces/TechnologyDossier.html":{}}}],["criterioninstances]{@link",{"_index":1775,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["criterionvalue",{"_index":539,"title":{"interfaces/CriterionValue.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"coverage.html":{}}}],["cross",{"_index":2180,"title":{},"body":{"license.html":{}}}],["current",{"_index":1697,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["current.filters.push(config",{"_index":1706,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["currentindex",{"_index":1456,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["cursor",{"_index":1158,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyListComponent.html":{}}}],["custom",{"_index":520,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["customary",{"_index":2251,"title":{},"body":{"license.html":{}}}],["d",{"_index":2211,"title":{},"body":{"license.html":{}}}],["d.reviewedcriteria.foreach((criterioninstance",{"_index":992,"title":{},"body":{"injectables/DataService.html":{}}}],["damages",{"_index":2282,"title":{},"body":{"license.html":{}}}],["data",{"_index":257,"title":{},"body":{"injectables/AppConfigService.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"index.html":{}}}],["data.filter(platform",{"_index":1514,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["data.foreach(g",{"_index":1040,"title":{},"body":{"injectables/DataService.html":{}}}],["data.length",{"_index":1488,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["data.resolveddata",{"_index":1111,"title":{},"body":{"components/FrameworkComponent.html":{},"components/ResourcesComponent.html":{}}}],["data.resolveddata[0",{"_index":1677,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["data.resolveddata[1",{"_index":1681,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["data.resolveddata[2",{"_index":1683,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["data.slice(startindex",{"_index":1489,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["dataservice",{"_index":574,"title":{"injectables/DataService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{},"overview.html":{}}}],["datasource",{"_index":1433,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["date",{"_index":541,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"license.html":{}}}],["declarations",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{}}}],["declare",{"_index":1377,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["decoration",{"_index":704,"title":{},"body":{"components/CriterionComponent.html":{}}}],["decorators",{"_index":1657,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["dedicated",{"_index":623,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["default",{"_index":406,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["defaultcategory",{"_index":1179,"title":{},"body":{"guards/FrameworkResolver.html":{}}}],["defaulttechcategory",{"_index":243,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["defend",{"_index":2312,"title":{},"body":{"license.html":{}}}],["defined",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"license.html":{}}}],["defines",{"_index":622,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["definition",{"_index":2061,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":2040,"title":{},"body":{"license.html":{}}}],["delete",{"_index":1548,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["deliberate",{"_index":2277,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":262,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depends",{"_index":660,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["deps",{"_index":594,"title":{},"body":{"modules/CoreModule.html":{}}}],["derivative",{"_index":2101,"title":{},"body":{"license.html":{}}}],["derived",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["desc",{"_index":1449,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["describe",{"_index":529,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["describing",{"_index":552,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"license.html":{}}}],["description",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"license.html":{}}}],["designated",{"_index":2138,"title":{},"body":{"license.html":{}}}],["desired",{"_index":627,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["detailed",{"_index":1715,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["details",{"_index":1154,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{}}}],["details'},{'name",{"_index":190,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["details.component",{"_index":1744,"title":{},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["details.component.html",{"_index":1817,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.scss",{"_index":1816,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts",{"_index":1815,"title":{},"body":{"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1830,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:15",{"_index":1832,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:16",{"_index":1831,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":1822,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":1826,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:32",{"_index":1825,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details/technology",{"_index":1743,"title":{},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["determining",{"_index":2266,"title":{},"body":{"license.html":{}}}],["dev",{"_index":1997,"title":{},"body":{"index.html":{}}}],["development",{"_index":1993,"title":{},"body":{"index.html":{}}}],["different",{"_index":488,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["direct",{"_index":2064,"title":{},"body":{"license.html":{}}}],["direction",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/FooterComponent.html":{},"components/OverviewComponent.html":{},"license.html":{}}}],["directive",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["directives",{"_index":195,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2006,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2011,"title":{},"body":{"index.html":{}}}],["disclaimer",{"_index":2254,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":1435,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["discussing",{"_index":2133,"title":{},"body":{"license.html":{}}}],["display",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["display:table",{"_index":1901,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["displayname",{"_index":630,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TableColumn.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyTableComponent.html":{}}}],["dist",{"_index":2010,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":634,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["distinctvalues",{"_index":993,"title":{},"body":{"injectables/DataService.html":{}}}],["distinctvalues.add(v.value",{"_index":997,"title":{},"body":{"injectables/DataService.html":{}}}],["distribute",{"_index":2161,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2214,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":2039,"title":{},"body":{"license.html":{}}}],["divider",{"_index":699,"title":{},"body":{"components/CriterionComponent.html":{}}}],["docs",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{}}}],["document",{"_index":2045,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["don't",{"_index":2326,"title":{},"body":{"license.html":{}}}],["dossier",{"_index":968,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["dossierpath",{"_index":972,"title":{},"body":{"injectables/DataService.html":{}}}],["dossiers",{"_index":989,"title":{},"body":{"injectables/DataService.html":{}}}],["dossiers.foreach(d",{"_index":991,"title":{},"body":{"injectables/DataService.html":{}}}],["dossierspath",{"_index":871,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dossierspath.concat(technologyid",{"_index":973,"title":{},"body":{"injectables/DataService.html":{}}}],["dynamic",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["e.g",{"_index":519,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["e2e",{"_index":2022,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":297,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":302,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":300,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":2146,"title":{},"body":{"license.html":{}}}],["ease",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{}}}],["easier",{"_index":2332,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":2102,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":2105,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":2121,"title":{},"body":{"license.html":{}}}],["element",{"_index":146,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["element(by.css('app",{"_index":305,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":1579,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["elements",{"_index":624,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["ellipsis",{"_index":1912,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["enclosed",{"_index":2322,"title":{},"body":{"license.html":{}}}],["encompassing",{"_index":1776,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["end",{"_index":694,"title":{},"body":{"components/CriterionComponent.html":{},"index.html":{},"license.html":{}}}],["endindex",{"_index":1487,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["ensure",{"_index":583,"title":{},"body":{"modules/CoreModule.html":{}}}],["ensuremoduleloadedonceguard",{"_index":582,"title":{"classes/EnsureModuleLoadedOnceGuard.html":{}},"body":{"modules/CoreModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["entities",{"_index":2055,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2049,"title":{},"body":{"license.html":{}}}],["entry",{"_index":1567,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["entry.value",{"_index":1568,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyTableComponent.html":{}}}],["enum",{"_index":637,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1972,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":644,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["err",{"_index":840,"title":{},"body":{"injectables/DataService.html":{}}}],["err.body?.error",{"_index":887,"title":{},"body":{"injectables/DataService.html":{}}}],["err.error",{"_index":878,"title":{},"body":{"injectables/DataService.html":{}}}],["err.error.message",{"_index":882,"title":{},"body":{"injectables/DataService.html":{}}}],["err.status",{"_index":886,"title":{},"body":{"injectables/DataService.html":{}}}],["error",{"_index":880,"title":{},"body":{"injectables/DataService.html":{}}}],["error(`${targetmodule.constructor.name",{"_index":1057,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["errorevent",{"_index":879,"title":{},"body":{"injectables/DataService.html":{}}}],["errormessage",{"_index":877,"title":{},"body":{"injectables/DataService.html":{}}}],["errors",{"_index":1086,"title":{},"body":{"components/FooterComponent.html":{}}}],["even",{"_index":2296,"title":{},"body":{"license.html":{}}}],["evenly",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["event",{"_index":1644,"title":{},"body":{"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"license.html":{}}}],["event.pageindex",{"_index":1510,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["event.pagesize",{"_index":1507,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["eventemitter",{"_index":722,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["example",{"_index":474,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["examples",{"_index":685,"title":{},"body":{"components/CriterionComponent.html":{}}}],["examplevalues",{"_index":471,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["except",{"_index":2163,"title":{},"body":{"license.html":{}}}],["excludesall",{"_index":656,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["excluding",{"_index":2135,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2152,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2019,"title":{},"body":{"index.html":{}}}],["executed",{"_index":2242,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":2272,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":2080,"title":{},"body":{"license.html":{}}}],["existing",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{}}}],["explicitly",{"_index":2234,"title":{},"body":{"license.html":{}}}],["explore",{"_index":336,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{}}}],["export",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["exports",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["express",{"_index":2259,"title":{},"body":{"license.html":{}}}],["extends",{"_index":597,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["extensible",{"_index":348,"title":{},"body":{"components/BannerComponent.html":{}}}],["extension",{"_index":1268,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["extracriteriontitle",{"_index":432,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["extractgroupings",{"_index":1631,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["extratitletext",{"_index":667,"title":{},"body":{"components/CriterionComponent.html":{}}}],["f.description",{"_index":935,"title":{},"body":{"injectables/DataService.html":{}}}],["f.filtertype",{"_index":1001,"title":{},"body":{"injectables/DataService.html":{}}}],["f.filtervalues",{"_index":1006,"title":{},"body":{"injectables/DataService.html":{}}}],["f.find(item",{"_index":951,"title":{},"body":{"injectables/DataService.html":{}}}],["f.id",{"_index":932,"title":{},"body":{"injectables/DataService.html":{}}}],["f.name",{"_index":934,"title":{},"body":{"injectables/DataService.html":{}}}],["f.technologycategory",{"_index":933,"title":{},"body":{"injectables/DataService.html":{}}}],["f.viewcombinationids.foreach(id",{"_index":936,"title":{},"body":{"injectables/DataService.html":{}}}],["faas",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["faastener",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["failure",{"_index":2293,"title":{},"body":{"license.html":{}}}],["false",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["faq",{"_index":1060,"title":{},"body":{"components/FaqComponent.html":{},"modules/InformationRoutingModule.html":{}}}],["faq'},{'name",{"_index":167,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["faq.component.html",{"_index":1062,"title":{},"body":{"components/FaqComponent.html":{}}}],["faq.component.scss",{"_index":1061,"title":{},"body":{"components/FaqComponent.html":{}}}],["faq/faq.component",{"_index":1245,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["faqcomponent",{"_index":166,"title":{"components/FaqComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["faults",{"_index":1074,"title":{},"body":{"components/FooterComponent.html":{}}}],["fb",{"_index":720,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{}}}],["features",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{}}}],["fee",{"_index":2300,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1781,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["fetch(event",{"_index":1506,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["fff",{"_index":1189,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ffffff",{"_index":361,"title":{},"body":{"components/BannerComponent.html":{},"components/FooterComponent.html":{}}}],["field",{"_index":1296,"title":{},"body":{"modules/MaterialModule.html":{},"components/TechnologyListComponent.html":{}}}],["fields",{"_index":2321,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":2073,"title":{},"body":{"license.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":2190,"title":{},"body":{"license.html":{}}}],["files",{"_index":2003,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":603,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filter'},{'name",{"_index":165,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["filter.component",{"_index":1747,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["filter.component.html",{"_index":711,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.scss",{"_index":710,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts",{"_index":709,"title":{},"body":{"components/CriterionFilterComponent.html":{},"coverage.html":{}}}],["filter.component.ts:11",{"_index":721,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:12",{"_index":723,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:14",{"_index":728,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:15",{"_index":719,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:20",{"_index":725,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:67",{"_index":724,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.displayname",{"_index":766,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.filters.foreach((f",{"_index":1000,"title":{},"body":{"injectables/DataService.html":{}}}],["filter/criterion",{"_index":708,"title":{},"body":{"components/CriterionFilterComponent.html":{},"modules/TechnologiesModule.html":{},"coverage.html":{}}}],["filter_alt",{"_index":1718,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterblock.blockicon",{"_index":1711,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterblock.blockname",{"_index":1712,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterconfiguration",{"_index":1585,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["filterconfigurationspath",{"_index":873,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filtereddata",{"_index":1458,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filterelement",{"_index":712,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filterid",{"_index":626,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["filtering",{"_index":628,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["filteringresult",{"_index":1520,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filterlookup",{"_index":1646,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterlookup.get(c.id",{"_index":1705,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filters",{"_index":615,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["filtertype",{"_index":633,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["filtervalue",{"_index":1801,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["filtervalue.filtertype",{"_index":1530,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filtervalue.value",{"_index":1531,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filtervalues",{"_index":636,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["find",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{}}}],["first",{"_index":1163,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["fit",{"_index":1349,"title":{},"body":{"components/OverviewComponent.html":{}}}],["fitness",{"_index":2263,"title":{},"body":{"license.html":{}}}],["flag",{"_index":2013,"title":{},"body":{"index.html":{}}}],["flat",{"_index":1149,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["flex",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["flexibly",{"_index":492,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["flexlayoutmodule",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["flow",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["following",{"_index":2196,"title":{},"body":{"license.html":{}}}],["font",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["footer",{"_index":1067,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":169,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["footer.component.html",{"_index":1069,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1068,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":1425,"title":{},"body":{"modules/SharedModule.html":{}}}],["footer__heading",{"_index":1093,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer__section",{"_index":1091,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":168,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forkjoin",{"_index":1752,"title":{},"body":{"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["forkjoin([technologies",{"_index":1756,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["form",{"_index":1761,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"license.html":{}}}],["format",{"_index":1372,"title":{},"body":{"injectables/RandomColorService.html":{},"license.html":{}}}],["formbuilder",{"_index":718,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{}}}],["formcontrol",{"_index":726,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["formgroup",{"_index":727,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["forming",{"_index":469,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["formsmodule",{"_index":1418,"title":{},"body":{"modules/SharedModule.html":{}}}],["found",{"_index":1358,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":183,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["found.component",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["found.component.css",{"_index":1359,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":1360,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1357,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":1362,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":1361,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["framework",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"index.html":{}}}],["framework'},{'name",{"_index":171,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["framework.component.html",{"_index":1103,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["framework.component.scss",{"_index":1102,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["framework.description",{"_index":1147,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework.name",{"_index":1146,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework.viewcombinationids",{"_index":1023,"title":{},"body":{"injectables/DataService.html":{}}}],["framework.viewcombinations.add(viewcombination",{"_index":939,"title":{},"body":{"injectables/DataService.html":{}}}],["framework/framework.component",{"_index":1250,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["framework__grouping",{"_index":1153,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework__info",{"_index":1151,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework__root",{"_index":1152,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework__view",{"_index":1161,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["frameworkcomponent",{"_index":170,"title":{"components/FrameworkComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["frameworkid",{"_index":805,"title":{},"body":{"injectables/DataService.html":{}}}],["frameworkrenderercomponent",{"_index":172,"title":{"components/FrameworkRendererComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["frameworkresolver",{"_index":1165,"title":{"guards/FrameworkResolver.html":{}},"body":{"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["frameworks",{"_index":930,"title":{},"body":{"injectables/DataService.html":{}}}],["frameworks.find(f",{"_index":942,"title":{},"body":{"injectables/DataService.html":{}}}],["frameworks.foreach(f",{"_index":931,"title":{},"body":{"injectables/DataService.html":{}}}],["frameworkspath",{"_index":867,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frameworkviewcombinationspath",{"_index":864,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frameworkviewspath",{"_index":862,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":2155,"title":{},"body":{"license.html":{}}}],["full",{"_index":320,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["function",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"index.html":{}}}],["functions",{"_index":1769,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["further",{"_index":2023,"title":{},"body":{"index.html":{}}}],["future",{"_index":524,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["fw",{"_index":941,"title":{},"body":{"injectables/DataService.html":{}}}],["fw.description",{"_index":946,"title":{},"body":{"injectables/DataService.html":{}}}],["fw.id",{"_index":943,"title":{},"body":{"injectables/DataService.html":{}}}],["fw.name",{"_index":945,"title":{},"body":{"injectables/DataService.html":{}}}],["fw.technologycategory",{"_index":944,"title":{},"body":{"injectables/DataService.html":{}}}],["fw.viewcombinationids.foreach(id",{"_index":947,"title":{},"body":{"injectables/DataService.html":{}}}],["fws",{"_index":1017,"title":{},"body":{"injectables/DataService.html":{}}}],["fws.find(f",{"_index":1022,"title":{},"body":{"injectables/DataService.html":{}}}],["g",{"_index":1035,"title":{},"body":{"injectables/DataService.html":{}}}],["g.criteriaids",{"_index":1042,"title":{},"body":{"injectables/DataService.html":{}}}],["g.criteriaids.foreach(id",{"_index":1043,"title":{},"body":{"injectables/DataService.html":{}}}],["g.id",{"_index":1034,"title":{},"body":{"injectables/DataService.html":{}}}],["g.locator",{"_index":1047,"title":{},"body":{"injectables/DataService.html":{}}}],["g.name",{"_index":448,"title":{},"body":{"components/ChildGroupingComponent.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{}}}],["g.parentid",{"_index":1048,"title":{},"body":{"injectables/DataService.html":{}}}],["gap",{"_index":1343,"title":{},"body":{"components/OverviewComponent.html":{}}}],["generate",{"_index":2005,"title":{},"body":{"index.html":{}}}],["generated",{"_index":639,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["generatefilterstructure",{"_index":1632,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["generategroupingcolumns",{"_index":1877,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["generategroupingcolumns(grouping",{"_index":1606,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["generation",{"_index":522,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["generic",{"_index":484,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["getcriteria",{"_index":777,"title":{},"body":{"injectables/DataService.html":{}}}],["getdefaulttechcategory",{"_index":249,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getdefaultviewcombinationdata",{"_index":778,"title":{},"body":{"injectables/DataService.html":{}}}],["getdefaultviewcombinationdata(frameworkid",{"_index":803,"title":{},"body":{"injectables/DataService.html":{}}}],["getdossier",{"_index":779,"title":{},"body":{"injectables/DataService.html":{}}}],["getdossier(technologyid",{"_index":806,"title":{},"body":{"injectables/DataService.html":{}}}],["getdossiersofcategory",{"_index":780,"title":{},"body":{"injectables/DataService.html":{}}}],["getdossiersofcategory(category",{"_index":809,"title":{},"body":{"injectables/DataService.html":{}}}],["getfilteringresult",{"_index":1782,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["getfilteringresult(filtervalue",{"_index":1550,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["getframeworkforcategory",{"_index":781,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkforcategory(techcategory",{"_index":811,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkfortechnologytype",{"_index":782,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkfortechnologytype(category",{"_index":814,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkgroupingsdata",{"_index":783,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkgroupingsdata(frameworkid",{"_index":816,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworks",{"_index":784,"title":{},"body":{"injectables/DataService.html":{}}}],["getgroupings",{"_index":785,"title":{},"body":{"injectables/DataService.html":{}}}],["getinforesources",{"_index":786,"title":{},"body":{"injectables/DataService.html":{}}}],["getlogopath",{"_index":1260,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["getlogopath(logolocator",{"_index":1262,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["getrandomcolor",{"_index":1366,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["getrandomcolor(hue",{"_index":1368,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["gettechnologies",{"_index":787,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologies(withdossier",{"_index":821,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologiesofcategory",{"_index":788,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologiesofcategory(category",{"_index":824,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnology",{"_index":789,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnology(id",{"_index":826,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologyfilter",{"_index":790,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologyfilter(category",{"_index":828,"title":{},"body":{"injectables/DataService.html":{}}}],["getting",{"_index":1976,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettitletext",{"_index":298,"title":{},"body":{"classes/AppPage.html":{}}}],["getviewcombinations",{"_index":791,"title":{},"body":{"injectables/DataService.html":{}}}],["getviewgroupingsdata",{"_index":792,"title":{},"body":{"injectables/DataService.html":{}}}],["getviewgroupingsdata(viewid",{"_index":831,"title":{},"body":{"injectables/DataService.html":{}}}],["getviews",{"_index":793,"title":{},"body":{"injectables/DataService.html":{}}}],["getviewsdata",{"_index":794,"title":{},"body":{"injectables/DataService.html":{}}}],["getviewsdata(viewcombinationid",{"_index":835,"title":{},"body":{"injectables/DataService.html":{}}}],["give",{"_index":2197,"title":{},"body":{"license.html":{}}}],["given",{"_index":497,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["go",{"_index":2026,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":2290,"title":{},"body":{"license.html":{}}}],["governing",{"_index":2341,"title":{},"body":{"license.html":{}}}],["grant",{"_index":2145,"title":{},"body":{"license.html":{}}}],["granted",{"_index":2082,"title":{},"body":{"license.html":{}}}],["granting",{"_index":2051,"title":{},"body":{"license.html":{}}}],["grants",{"_index":2148,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2343,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":1985,"title":{},"body":{"index.html":{}}}],["gray",{"_index":1157,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["greater",{"_index":647,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["grey",{"_index":453,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{}}}],["grid",{"_index":1339,"title":{},"body":{"components/OverviewComponent.html":{}}}],["grid__footer",{"_index":1089,"title":{},"body":{"components/FooterComponent.html":{}}}],["grossly",{"_index":2278,"title":{},"body":{"license.html":{}}}],["group",{"_index":517,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["grouping",{"_index":429,"title":{},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping'},{'name",{"_index":160,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.component",{"_index":1420,"title":{},"body":{"modules/SharedModule.html":{}}}],["grouping.component.html",{"_index":431,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.scss",{"_index":430,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts",{"_index":428,"title":{},"body":{"components/ChildGroupingComponent.html":{},"coverage.html":{}}}],["grouping.component.ts:10",{"_index":441,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:11",{"_index":445,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:12",{"_index":442,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:13",{"_index":439,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:14",{"_index":443,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:15",{"_index":438,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.criteria",{"_index":1699,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["grouping.criteria.foreach((c",{"_index":1609,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.criteria.foreach(c",{"_index":1704,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["grouping.criteria.size",{"_index":1700,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["grouping.groupings",{"_index":1616,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.groupings.foreach(g",{"_index":1617,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.id",{"_index":1142,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.name",{"_index":1613,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping/child",{"_index":427,"title":{},"body":{"components/ChildGroupingComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["grouping__criterion",{"_index":459,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{}}}],["grouping__path",{"_index":458,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping__title",{"_index":455,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["groupingcolumnids",{"_index":1591,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns",{"_index":1590,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns.foreach(c",{"_index":1604,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns.length",{"_index":1601,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns.push",{"_index":1614,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingids",{"_index":563,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["groupings",{"_index":433,"title":{},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["groupings]{@link",{"_index":528,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["groupingslookup",{"_index":905,"title":{},"body":{"injectables/DataService.html":{}}}],["groupingslookup.has(id",{"_index":913,"title":{},"body":{"injectables/DataService.html":{}}}],["grow",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["gte",{"_index":648,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["guard",{"_index":1164,"title":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1166,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"overview.html":{}}}],["h.png",{"_index":1200,"title":{},"body":{"components/HeaderComponent.html":{}}}],["handleerror",{"_index":796,"title":{},"body":{"injectables/DataService.html":{}}}],["handleerror(err",{"_index":838,"title":{},"body":{"injectables/DataService.html":{}}}],["harmful",{"_index":1087,"title":{},"body":{"components/FooterComponent.html":{}}}],["harmless",{"_index":2314,"title":{},"body":{"license.html":{}}}],["header",{"_index":1183,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["header'},{'name",{"_index":175,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["header.component.html",{"_index":1185,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1184,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1424,"title":{},"body":{"modules/SharedModule.html":{}}}],["header__logo",{"_index":1197,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__menu",{"_index":1194,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__spacer",{"_index":1196,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__toolbar",{"_index":1193,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":174,"title":{"components/HeaderComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":368,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["help",{"_index":2024,"title":{},"body":{"index.html":{}}}],["helps",{"_index":501,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["hereby",{"_index":2147,"title":{},"body":{"license.html":{}}}],["herein",{"_index":2238,"title":{},"body":{"license.html":{}}}],["hierarchy",{"_index":470,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["high",{"_index":343,"title":{},"body":{"components/BannerComponent.html":{}}}],["hold",{"_index":2313,"title":{},"body":{"license.html":{}}}],["home",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["home.component.html",{"_index":1215,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1214,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/about/about.component",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["home/banner/banner.component",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["home/home.component",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home/overview/overview.component",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["homecomponent",{"_index":176,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["hostlistener",{"_index":1833,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["hostlistener('window:scroll",{"_index":1828,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["hostlisteners",{"_index":1820,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["hover",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{}}}],["html",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["http",{"_index":247,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{}}}],["http://localhost:4200",{"_index":1999,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses",{"_index":2035,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":2339,"title":{},"body":{"license.html":{}}}],["httpclient",{"_index":245,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{}}}],["httpclientmodule",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["hue",{"_index":1375,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["icon",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["id",{"_index":472,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"classes/TableColumn.html":{},"interfaces/Technology.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyTableComponent.html":{}}}],["identification",{"_index":2333,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":482,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["identifying",{"_index":2325,"title":{},"body":{"license.html":{}}}],["ids",{"_index":606,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["ii",{"_index":2071,"title":{},"body":{"license.html":{}}}],["iii",{"_index":2077,"title":{},"body":{"license.html":{}}}],["img",{"_index":1903,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["implements",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["implied",{"_index":2260,"title":{},"body":{"license.html":{}}}],["import",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"license.html":{}}}],["import(`src/app/information/information.module`).then(m",{"_index":322,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import(`src/app/technologies/technologies.module`).then(m",{"_index":324,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["imports",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["improving",{"_index":2134,"title":{},"body":{"license.html":{}}}],["inability",{"_index":2288,"title":{},"body":{"license.html":{}}}],["inaccuracies",{"_index":1084,"title":{},"body":{"components/FooterComponent.html":{}}}],["incidental",{"_index":2284,"title":{},"body":{"license.html":{}}}],["include",{"_index":451,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"license.html":{}}}],["included",{"_index":2098,"title":{},"body":{"license.html":{}}}],["includeframeworkinfo",{"_index":1121,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["includes",{"_index":1334,"title":{},"body":{"components/OverviewComponent.html":{},"license.html":{}}}],["including",{"_index":2086,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":2118,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":2143,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":2315,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":2311,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":2302,"title":{},"body":{"license.html":{}}}],["index",{"_index":203,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":608,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaReview.html":{}}}],["indicated",{"_index":2096,"title":{},"body":{"license.html":{}}}],["indicates",{"_index":511,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["indirect",{"_index":2065,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2079,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["inforesource",{"_index":1219,"title":{"interfaces/InfoResource.html":{}},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"coverage.html":{}}}],["inforesources",{"_index":1224,"title":{},"body":{"interfaces/InfoResourceSection.html":{}}}],["inforesources]{@link",{"_index":1223,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{}}}],["inforesourcesection",{"_index":856,"title":{"interfaces/InfoResourceSection.html":{}},"body":{"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"coverage.html":{}}}],["inforesourcespath",{"_index":875,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"license.html":{}}}],["information'},{'name",{"_index":178,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["information.component",{"_index":1246,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["information.component.html",{"_index":1227,"title":{},"body":{"components/InformationComponent.html":{}}}],["information.component.scss",{"_index":1226,"title":{},"body":{"components/InformationComponent.html":{}}}],["information/resolvers/framework",{"_index":1426,"title":{},"body":{"modules/SharedModule.html":{}}}],["informational",{"_index":2222,"title":{},"body":{"license.html":{}}}],["informationcomponent",{"_index":177,"title":{"components/InformationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["informationmodule",{"_index":1238,"title":{"modules/InformationModule.html":{}},"body":{"modules/InformationModule.html":{},"modules.html":{},"overview.html":{}}}],["informationroutingmodule",{"_index":1242,"title":{"modules/InformationRoutingModule.html":{}},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["inforoutes",{"_index":1253,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["infringed",{"_index":2174,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2187,"title":{},"body":{"license.html":{}}}],["initialize",{"_index":1138,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["initialquery",{"_index":1462,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["initialsort",{"_index":1461,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["initialvalues",{"_index":748,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["initialvalues.filter((x",{"_index":751,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["injectable",{"_index":235,"title":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["injectables",{"_index":237,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"overview.html":{}}}],["inline",{"_index":1733,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["input",{"_index":408,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["inputs",{"_index":395,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["instance",{"_index":476,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["instanceof",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{}}}],["institute",{"_index":2177,"title":{},"body":{"license.html":{}}}],["intended",{"_index":1979,"title":{},"body":{"index.html":{}}}],["intentionally",{"_index":2116,"title":{},"body":{"license.html":{}}}],["interacting",{"_index":1986,"title":{},"body":{"index.html":{}}}],["interface",{"_index":461,"title":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":463,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{},"overview.html":{}}}],["interfaces/classification",{"_index":447,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["interfaces/filtering",{"_index":1443,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["interfaces/technology",{"_index":1441,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["introduced",{"_index":1988,"title":{},"body":{"index.html":{}}}],["irrevocable",{"_index":2156,"title":{},"body":{"license.html":{}}}],["isarrayofstrings(value",{"_index":757,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["ispaginated",{"_index":1454,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["issue",{"_index":2129,"title":{},"body":{"license.html":{}}}],["item",{"_index":376,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/HeaderComponent.html":{}}}],["item.id",{"_index":970,"title":{},"body":{"injectables/DataService.html":{}}}],["item.technologycategory.tolocalelowercase",{"_index":952,"title":{},"body":{"injectables/DataService.html":{}}}],["items",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["items.find(item",{"_index":969,"title":{},"body":{"injectables/DataService.html":{}}}],["items.map",{"_index":956,"title":{},"body":{"injectables/DataService.html":{}}}],["january",{"_index":2033,"title":{},"body":{"license.html":{}}}],["java",{"_index":545,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["jpeg",{"_index":1271,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["jpg",{"_index":1270,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["json",{"_index":687,"title":{},"body":{"components/CriterionComponent.html":{},"injectables/DataService.html":{}}}],["justify",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["karma",{"_index":2021,"title":{},"body":{"index.html":{}}}],["key",{"_index":570,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["keyof",{"_index":1446,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["keystodelete",{"_index":1539,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["keystodelete.foreach(key",{"_index":1547,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["keystodelete.push(key",{"_index":1543,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["kind",{"_index":1078,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["label",{"_index":1232,"title":{},"body":{"components/InformationComponent.html":{}}}],["lack",{"_index":1082,"title":{},"body":{"components/FooterComponent.html":{}}}],["lambda",{"_index":537,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["language",{"_index":2340,"title":{},"body":{"license.html":{}}}],["lastquery",{"_index":1497,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["lastsort",{"_index":1492,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["law",{"_index":2257,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":2183,"title":{},"body":{"license.html":{}}}],["layout",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["learn",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{}}}],["left",{"_index":705,"title":{},"body":{"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["legal",{"_index":2052,"title":{},"body":{"license.html":{}}}],["legend",{"_index":144,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["length",{"_index":1864,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["less",{"_index":643,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["level",{"_index":345,"title":{},"body":{"components/BannerComponent.html":{}}}],["liability",{"_index":2273,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2281,"title":{},"body":{"license.html":{}}}],["library_books",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/InformationComponent.html":{}}}],["licensable",{"_index":2172,"title":{},"body":{"license.html":{}}}],["license",{"_index":2029,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":2336,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":2188,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":526,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["licensor",{"_index":2046,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1910,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["limit).lastindexof",{"_index":1915,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["limitation",{"_index":2261,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":2342,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2087,"title":{},"body":{"license.html":{}}}],["line",{"_index":367,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionComponent.html":{}}}],["link",{"_index":486,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/InformationComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["link.label",{"_index":1234,"title":{},"body":{"components/InformationComponent.html":{}}}],["links",{"_index":378,"title":{},"body":{"components/BannerComponent.html":{}}}],["list",{"_index":380,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/HeaderComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["list'},{'name",{"_index":192,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["list.component",{"_index":1742,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["list.component.html",{"_index":1853,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.scss",{"_index":1852,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts",{"_index":1851,"title":{},"body":{"components/TechnologyListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":1857,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts:11",{"_index":1856,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts:16",{"_index":1860,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts:21",{"_index":1858,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list/technology",{"_index":1741,"title":{},"body":{"modules/TechnologiesModule.html":{},"components/TechnologyListComponent.html":{},"coverage.html":{}}}],["list__card",{"_index":1872,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__cards",{"_index":1871,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__explore",{"_index":1875,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__logo",{"_index":1874,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__paginator",{"_index":1876,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__search",{"_index":1870,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["lists",{"_index":1773,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"license.html":{}}}],["literal",{"_index":1809,"title":{},"body":{"classes/TechnologyDataSource.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":2178,"title":{},"body":{"license.html":{}}}],["loadappconfig",{"_index":241,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["loadchildren",{"_index":321,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":584,"title":{},"body":{"modules/CoreModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["loading",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["locate",{"_index":1766,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["location",{"_index":1231,"title":{},"body":{"components/InformationComponent.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["locator",{"_index":518,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["locator.service",{"_index":588,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DataService.html":{}}}],["locator.service.ts",{"_index":1258,"title":{},"body":{"injectables/LogoLocatorService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["locator.service.ts:10",{"_index":1263,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["locator.service.ts:5",{"_index":1261,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["logo",{"_index":851,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["logolocation",{"_index":957,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["logolocator",{"_index":797,"title":{},"body":{"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["logolocatorservice",{"_index":575,"title":{"injectables/LogoLocatorService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{},"overview.html":{}}}],["logolocatorservice.platformlogodir",{"_index":1265,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["lookup",{"_index":1039,"title":{},"body":{"injectables/DataService.html":{}}}],["lookup.get(g.parentid).groupings.add(lookup.get(g.id",{"_index":1049,"title":{},"body":{"injectables/DataService.html":{}}}],["lookup.set(g.id",{"_index":1046,"title":{},"body":{"injectables/DataService.html":{}}}],["loss",{"_index":2289,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2295,"title":{},"body":{"license.html":{}}}],["low",{"_index":344,"title":{},"body":{"components/BannerComponent.html":{}}}],["lte",{"_index":646,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["luminosity",{"_index":1369,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["m.informationmodule",{"_index":323,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.technologiesmodule",{"_index":325,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["made",{"_index":2095,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":2127,"title":{},"body":{"license.html":{}}}],["main",{"_index":1088,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologiesComponent.html":{}}}],["make",{"_index":2165,"title":{},"body":{"license.html":{}}}],["makes",{"_index":1076,"title":{},"body":{"components/FooterComponent.html":{}}}],["making",{"_index":2084,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":2294,"title":{},"body":{"license.html":{}}}],["managed",{"_index":2131,"title":{},"body":{"license.html":{}}}],["management",{"_index":2067,"title":{},"body":{"license.html":{}}}],["map",{"_index":444,"title":{},"body":{"components/ChildGroupingComponent.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{}}}],["map(([combs",{"_index":929,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([criteria",{"_index":896,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([data",{"_index":1484,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["map(([filter",{"_index":988,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([groupings",{"_index":904,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([items",{"_index":967,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([vcs",{"_index":1016,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([views",{"_index":918,"title":{},"body":{"injectables/DataService.html":{}}}],["map((conf",{"_index":984,"title":{},"body":{"injectables/DataService.html":{}}}],["map((f",{"_index":950,"title":{},"body":{"injectables/DataService.html":{}}}],["map((items",{"_index":955,"title":{},"body":{"injectables/DataService.html":{}}}],["map((techs",{"_index":963,"title":{},"body":{"injectables/DataService.html":{}}}],["map(criteria.map(c",{"_index":898,"title":{},"body":{"injectables/DataService.html":{}}}],["map(groupings.map(c",{"_index":906,"title":{},"body":{"injectables/DataService.html":{}}}],["map(groupings.map(g",{"_index":1033,"title":{},"body":{"injectables/DataService.html":{}}}],["map(object.entries(res.reviewedcriteria",{"_index":977,"title":{},"body":{"injectables/DataService.html":{}}}],["map(this.filterconfiguration.filters.map(c",{"_index":1691,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["map(vcs.map(vc",{"_index":1019,"title":{},"body":{"injectables/DataService.html":{}}}],["map(views.map(v",{"_index":1028,"title":{},"body":{"injectables/DataService.html":{}}}],["mapping",{"_index":605,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["margin",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["marked",{"_index":2137,"title":{},"body":{"license.html":{}}}],["marks",{"_index":2248,"title":{},"body":{"license.html":{}}}],["matautocompletemodule",{"_index":1299,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbottomsheetmodule",{"_index":1322,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":1275,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":1321,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":1288,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcheckboxmodule",{"_index":1315,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":198,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1303,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":619,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"index.html":{}}}],["material.module",{"_index":1416,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodule",{"_index":1273,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1292,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matformfieldmodule",{"_index":1294,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":1290,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":1277,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":1297,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":1286,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":1309,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":1311,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":1283,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":1327,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":1301,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":1582,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["matsidenavmodule",{"_index":1281,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":1325,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":1317,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":1305,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":1313,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":1279,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":1307,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattreemodule",{"_index":1319,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":1098,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["mean",{"_index":2042,"title":{},"body":{"license.html":{}}}],["means",{"_index":2062,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":2088,"title":{},"body":{"license.html":{}}}],["media",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["media.matchmedia('(max",{"_index":1667,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["mediamatcher",{"_index":1636,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["mediaquerylist",{"_index":1655,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["medium",{"_index":2193,"title":{},"body":{"license.html":{}}}],["meet",{"_index":2195,"title":{},"body":{"license.html":{}}}],["menu",{"_index":1187,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu__icon",{"_index":1208,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu__link",{"_index":1201,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu__text",{"_index":1203,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu_book",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"components/InformationComponent.html":{}}}],["merchantability",{"_index":2262,"title":{},"body":{"license.html":{}}}],["merely",{"_index":2111,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":845,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap",{"_index":846,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap((t",{"_index":981,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap((techs",{"_index":979,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap((vc",{"_index":1012,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap(v",{"_index":1014,"title":{},"body":{"injectables/DataService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"pipes/SetToArrayPipe.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["methods",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["min",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["miscellaneous",{"_index":1971,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mobilequery",{"_index":1628,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["mode",{"_index":1673,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["model",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["modifications",{"_index":2085,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2200,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2223,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":2228,"title":{},"body":{"license.html":{}}}],["module",{"_index":259,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}},"body":{"modules/CoreModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["modules",{"_index":261,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"index.html":{},"license.html":{}}}],["moz",{"_index":358,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{}}}],["multi",{"_index":593,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["multiple",{"_index":614,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["n/a",{"_index":688,"title":{},"body":{"components/CriterionComponent.html":{}}}],["name",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"index.html":{},"license.html":{}}}],["namebasedquery",{"_index":1453,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["namequery",{"_index":1475,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["names",{"_index":2247,"title":{},"body":{"license.html":{}}}],["nav",{"_index":390,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav'},{'name",{"_index":157,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["nav.component",{"_index":1428,"title":{},"body":{"modules/SharedModule.html":{},"components/TechnologyDetailsComponent.html":{}}}],["nav.component.html",{"_index":392,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.scss",{"_index":391,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts",{"_index":389,"title":{},"body":{"components/BottomNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:10",{"_index":401,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts:11",{"_index":399,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts:16",{"_index":402,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts:19",{"_index":404,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav/bottom",{"_index":388,"title":{},"body":{"components/BottomNavComponent.html":{},"modules/SharedModule.html":{},"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["nav_item",{"_index":1204,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["navbar",{"_index":418,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["navigate",{"_index":1998,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":299,"title":{},"body":{"classes/AppPage.html":{}}}],["navigating",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{}}}],["navigationcancel",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationend",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationerror",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["navlinks",{"_index":1229,"title":{},"body":{"components/InformationComponent.html":{}}}],["necessarily",{"_index":2173,"title":{},"body":{"license.html":{}}}],["needs",{"_index":513,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["negligence",{"_index":2276,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":2279,"title":{},"body":{"license.html":{}}}],["nested",{"_index":460,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["new",{"_index":732,"title":{},"body":{"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":960,"title":{},"body":{"injectables/DataService.html":{}}}],["nextquery",{"_index":1499,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextquery[key",{"_index":1549,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextquery[key].filtertype",{"_index":1541,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextquery[key].value",{"_index":1544,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextsort",{"_index":1494,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["ng",{"_index":1995,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["ngondestroy",{"_index":1384,"title":{},"body":{"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{}}}],["ngoninit",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["no.pipe",{"_index":1430,"title":{},"body":{"modules/SharedModule.html":{}}}],["no.pipe.ts",{"_index":1918,"title":{},"body":{"pipes/YesNoPipe.html":{},"coverage.html":{}}}],["no.pipe.ts:7",{"_index":1919,"title":{},"body":{"pipes/YesNoPipe.html":{}}}],["non",{"_index":2151,"title":{},"body":{"license.html":{}}}],["none",{"_index":425,"title":{},"body":{"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{}}}],["normally",{"_index":2219,"title":{},"body":{"license.html":{}}}],["note",{"_index":551,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["nothing",{"_index":2237,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2097,"title":{},"body":{"license.html":{}}}],["notices",{"_index":2203,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2235,"title":{},"body":{"license.html":{}}}],["nowrap",{"_index":421,"title":{},"body":{"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["null",{"_index":1542,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["number",{"_index":547,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{}}}],["numeric",{"_index":479,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["o",{"_index":359,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{}}}],["obj",{"_index":746,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["obj[this.filter.criterionid",{"_index":747,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["object",{"_index":1348,"title":{},"body":{"components/OverviewComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.keys(criteriaquery).foreach(key",{"_index":1517,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["object.keys(criteriaquery).length",{"_index":1516,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["object.keys(nextquery).foreach(key",{"_index":1540,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["obligations",{"_index":2303,"title":{},"body":{"license.html":{}}}],["observable",{"_index":802,"title":{},"body":{"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"components/OverviewComponent.html":{},"guards/ResourcesResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["obtain",{"_index":2338,"title":{},"body":{"license.html":{}}}],["obtained",{"_index":635,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["occurred",{"_index":881,"title":{},"body":{"injectables/DataService.html":{}}}],["of(result",{"_index":1480,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["offer",{"_index":2166,"title":{},"body":{"license.html":{}}}],["official",{"_index":549,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["once.guard",{"_index":585,"title":{},"body":{"modules/CoreModule.html":{}}}],["once.guard.ts",{"_index":1052,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["once.guard.ts:3",{"_index":1054,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["onchanges",{"_index":1663,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["ondestroy",{"_index":1380,"title":{},"body":{"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{}}}],["one",{"_index":337,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"index.html":{},"license.html":{}}}],["ongroupingselected",{"_index":1120,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["ongroupingselected(viewid",{"_index":1131,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["oninit",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["onnamechange",{"_index":1855,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["onnamechange(name",{"_index":1859,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["onqueryupdate",{"_index":1633,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["onqueryupdate($event",{"_index":1642,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["onscrolltotop",{"_index":394,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["onscrolltotop(platformid",{"_index":403,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["onwindowscroll",{"_index":1819,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["onwindowscroll(e",{"_index":1827,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["opacity",{"_index":1351,"title":{},"body":{"components/OverviewComponent.html":{}}}],["open",{"_index":347,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{},"index.html":{}}}],["option.name",{"_index":1842,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["optional",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["order",{"_index":1155,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{}}}],["organize",{"_index":502,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["origin",{"_index":2252,"title":{},"body":{"license.html":{}}}],["original",{"_index":2108,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":2070,"title":{},"body":{"license.html":{}}}],["out",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1205,"title":{},"body":{"components/HeaderComponent.html":{}}}],["output",{"_index":729,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["outputs",{"_index":715,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["outstanding",{"_index":2075,"title":{},"body":{"license.html":{}}}],["overflow",{"_index":1897,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["overview",{"_index":1330,"title":{"overview.html":{}},"body":{"components/OverviewComponent.html":{},"overview.html":{}}}],["overview'},{'name",{"_index":180,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["overview.component.html",{"_index":1332,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.scss",{"_index":1331,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overviewcomponent",{"_index":179,"title":{"components/OverviewComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["owner",{"_index":2048,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2072,"title":{},"body":{"license.html":{}}}],["p",{"_index":1538,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["p.platformname",{"_index":1867,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["p.shortdescription",{"_index":1868,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["package",{"_index":1955,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["page",{"_index":182,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["pageevent",{"_index":1442,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["pagenotfoundcomponent",{"_index":181,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagenumber",{"_index":1451,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["pagesize",{"_index":1463,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{}}}],["pagesizeoptions",{"_index":1854,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["paginateddata",{"_index":1459,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["panel",{"_index":1708,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parameters",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["params.browsingmode",{"_index":1674,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parent",{"_index":434,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["parentgroup",{"_index":1648,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parentgroup.concat",{"_index":1702,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parentgroupingname",{"_index":1607,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["parentgroupingname.concat('.').concat(grouping.name",{"_index":1612,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["parentid",{"_index":565,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["parentmodule",{"_index":599,"title":{},"body":{"modules/CoreModule.html":{}}}],["part",{"_index":2210,"title":{},"body":{"license.html":{}}}],["partial",{"_index":1491,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["particular",{"_index":530,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"license.html":{}}}],["party",{"_index":2218,"title":{},"body":{"license.html":{}}}],["patent",{"_index":2162,"title":{},"body":{"license.html":{}}}],["path",{"_index":317,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["pathmatch",{"_index":319,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{}}}],["pattern.png",{"_index":354,"title":{},"body":{"components/BannerComponent.html":{}}}],["percent",{"_index":2074,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1990,"title":{},"body":{"index.html":{},"license.html":{}}}],["permission",{"_index":2245,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":2081,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":2149,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":2209,"title":{},"body":{"license.html":{}}}],["pink",{"_index":1096,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["pipe",{"_index":891,"title":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}},"body":{"injectables/DataService.html":{},"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{}}}],["pipes",{"_index":1400,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"overview.html":{}}}],["pipes/set",{"_index":1421,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/truncate.pipe",{"_index":1417,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/yes",{"_index":1429,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":1407,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["placement",{"_index":1647,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["placement.get(grouping.name",{"_index":1698,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["placement.set(grouping.name",{"_index":1701,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["places",{"_index":2213,"title":{},"body":{"license.html":{}}}],["platform",{"_index":335,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyDossier.html":{},"components/TechnologyListComponent.html":{},"index.html":{}}}],["platform.description",{"_index":1841,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["platform.platformname",{"_index":1840,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["platform.platformname.tolocalelowercase().includes(namequery",{"_index":1515,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["platformid",{"_index":405,"title":{},"body":{"components/BottomNavComponent.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["platformlogodir",{"_index":1259,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["platformname",{"_index":1680,"title":{},"body":{"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["platformroutes",{"_index":1757,"title":{},"body":{"modules/TechnologiesRoutingModule.html":{}}}],["platforms",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyDossier.html":{},"components/TechnologyListComponent.html":{},"index.html":{}}}],["platforms__button",{"_index":1345,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__container",{"_index":1337,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__controls",{"_index":1726,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__description",{"_index":1727,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__filter",{"_index":1728,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__header",{"_index":1729,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__item",{"_index":1344,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__logo",{"_index":1346,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__logos",{"_index":1338,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__settings",{"_index":1730,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platform’s",{"_index":1987,"title":{},"body":{"index.html":{}}}],["png",{"_index":1269,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["pointer",{"_index":1159,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyListComponent.html":{}}}],["populaterenderblocks",{"_index":1634,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["populaterenderblocks(grouping",{"_index":1645,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["position",{"_index":415,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["possibility",{"_index":2298,"title":{},"body":{"license.html":{}}}],["possible",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{}}}],["power",{"_index":2063,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":2083,"title":{},"body":{"license.html":{}}}],["preloadallmodules",{"_index":309,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prepare",{"_index":2158,"title":{},"body":{"license.html":{}}}],["previous",{"_index":994,"title":{},"body":{"injectables/DataService.html":{}}}],["primitive",{"_index":544,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["printed",{"_index":2331,"title":{},"body":{"license.html":{}}}],["private",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{}}}],["processdata",{"_index":1783,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["processdata(data",{"_index":1513,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["prod",{"_index":2012,"title":{},"body":{"index.html":{}}}],["product",{"_index":1073,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["production",{"_index":2014,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":1336,"title":{},"body":{"components/OverviewComponent.html":{}}}],["project",{"_index":2007,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":2202,"title":{},"body":{"license.html":{}}}],["promise",{"_index":301,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["property",{"_index":1445,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{}}}],["prototype",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{}}}],["protractor",{"_index":303,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"modules/CoreModule.html":{},"license.html":{}}}],["provided",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["provider",{"_index":1075,"title":{},"body":{"components/FooterComponent.html":{}}}],["providers",{"_index":578,"title":{},"body":{"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{}}}],["provides",{"_index":1984,"title":{},"body":{"index.html":{},"license.html":{}}}],["prunequery",{"_index":1784,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["prunequery(nextquery",{"_index":1537,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["public",{"_index":713,"title":{},"body":{"components/CriterionFilterComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["publication",{"_index":1989,"title":{},"body":{"index.html":{}}}],["publicly",{"_index":2159,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2132,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2060,"title":{},"body":{"license.html":{}}}],["q&a",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{}}}],["query",{"_index":604,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["querybycriteria",{"_index":1785,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["querybycriteria(query",{"_index":1496,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["querybyname",{"_index":1786,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["querybyname(query",{"_index":1504,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["question_answer",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{}}}],["questions",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{}}}],["radius",{"_index":1724,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["randomcolor",{"_index":1378,"title":{},"body":{"injectables/RandomColorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["randomcolorservice",{"_index":576,"title":{"injectables/RandomColorService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/RandomColorService.html":{},"coverage.html":{},"overview.html":{}}}],["range",{"_index":1003,"title":{},"body":{"injectables/DataService.html":{}}}],["range[0",{"_index":1007,"title":{},"body":{"injectables/DataService.html":{}}}],["range[range.length",{"_index":1008,"title":{},"body":{"injectables/DataService.html":{}}}],["reactiveformsmodule",{"_index":1419,"title":{},"body":{"modules/SharedModule.html":{}}}],["read",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{}}}],["readable",{"_index":2212,"title":{},"body":{"license.html":{}}}],["readme",{"_index":2028,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":1228,"title":{},"body":{"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reason",{"_index":2317,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":2250,"title":{},"body":{"license.html":{}}}],["received",{"_index":2141,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2198,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":2329,"title":{},"body":{"license.html":{}}}],["redirectto",{"_index":318,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{}}}],["redistributing",{"_index":2268,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":2191,"title":{},"body":{"license.html":{}}}],["reference",{"_index":1222,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/ResourcesComponent.html":{}}}],["references",{"_index":548,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["regarding",{"_index":2243,"title":{},"body":{"license.html":{}}}],["related",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["relatedcriteria",{"_index":1041,"title":{},"body":{"injectables/DataService.html":{}}}],["relatedcriteria.add(criteria.get(id",{"_index":1045,"title":{},"body":{"injectables/DataService.html":{}}}],["reload",{"_index":2001,"title":{},"body":{"index.html":{}}}],["remain",{"_index":2109,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":611,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["renderedfilter",{"_index":1629,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["renderedfilterblock",{"_index":617,"title":{"interfaces/RenderedFilterBlock.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["renderer",{"_index":1115,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer'},{'name",{"_index":173,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["renderer.component",{"_index":1427,"title":{},"body":{"modules/SharedModule.html":{}}}],["renderer.component.html",{"_index":1117,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.scss",{"_index":1116,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts",{"_index":1114,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"coverage.html":{}}}],["renderer.component.ts:12",{"_index":1125,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:13",{"_index":1126,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:14",{"_index":1129,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:15",{"_index":1124,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:16",{"_index":1127,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:17",{"_index":1128,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:19",{"_index":1133,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:20",{"_index":1123,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:25",{"_index":1130,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:38",{"_index":1132,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer/framework",{"_index":1113,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["rendering",{"_index":515,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["renderreviewdata",{"_index":435,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["renderreviewdata]=\"renderreviewdata",{"_index":449,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["repeat",{"_index":355,"title":{},"body":{"components/BannerComponent.html":{}}}],["repeat(4",{"_index":1341,"title":{},"body":{"components/OverviewComponent.html":{}}}],["repeat(5",{"_index":1354,"title":{},"body":{"components/OverviewComponent.html":{}}}],["replaced",{"_index":2324,"title":{},"body":{"license.html":{}}}],["represent",{"_index":2106,"title":{},"body":{"license.html":{}}}],["representation",{"_index":503,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["representations",{"_index":496,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FooterComponent.html":{}}}],["representatives",{"_index":2126,"title":{},"body":{"license.html":{}}}],["representing",{"_index":465,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["reproduce",{"_index":2157,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":2253,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":2038,"title":{},"body":{"license.html":{}}}],["require",{"_index":1953,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":2249,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"index.html":{}}}],["res",{"_index":975,"title":{},"body":{"injectables/DataService.html":{}}}],["res.resource",{"_index":1394,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["res.reviewdate",{"_index":976,"title":{},"body":{"injectables/DataService.html":{}}}],["research",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["reserved",{"_index":523,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["reset",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}],["resolve",{"_index":1169,"title":{},"body":{"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["resolve(route",{"_index":1172,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["resolveddata",{"_index":1255,"title":{},"body":{"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["resolver.service",{"_index":1249,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["resolver.service.ts",{"_index":1168,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:10",{"_index":1847,"title":{},"body":{"guards/TechnologyDetailsResolverService.html":{}}}],["resolver.service.ts:11",{"_index":1750,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["resolver.service.ts:13",{"_index":1397,"title":{},"body":{"guards/ResourcesResolver.html":{}}}],["resolver.service.ts:14",{"_index":1176,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["resolver.service.ts:15",{"_index":1751,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["resolver.service.ts:8",{"_index":1396,"title":{},"body":{"guards/ResourcesResolver.html":{}}}],["resolver.service.ts:9",{"_index":1171,"title":{},"body":{"guards/FrameworkResolver.html":{}}}],["resolvers/framework",{"_index":1252,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["resolvers/resources",{"_index":1248,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["resource",{"_index":1221,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{}}}],["resources",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationRoutingModule.html":{},"components/ResourcesComponent.html":{}}}],["resources'},{'name",{"_index":185,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["resources.component.html",{"_index":1382,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources.component.scss",{"_index":1381,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources/resources.component",{"_index":1244,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["resourcescomponent",{"_index":184,"title":{"components/ResourcesComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcesresolver",{"_index":1247,"title":{"guards/ResourcesResolver.html":{}},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"guards/ResourcesResolver.html":{},"coverage.html":{}}}],["respective",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["response",{"_index":559,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["responsibility",{"_index":2309,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":2265,"title":{},"body":{"license.html":{}}}],["result",{"_index":907,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"license.html":{}}}],["result.dossier",{"_index":961,"title":{},"body":{"injectables/DataService.html":{}}}],["result.filter(t",{"_index":1519,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["result.length",{"_index":1479,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["result.push(combination",{"_index":926,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(framework",{"_index":940,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(groupingslookup.get(id",{"_index":1037,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(lookup.get(g.id",{"_index":1050,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(view",{"_index":915,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(viewslookup.get(id",{"_index":1032,"title":{},"body":{"injectables/DataService.html":{}}}],["result.sort((a",{"_index":1526,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["result.viewcombinations.add(viewcombination",{"_index":948,"title":{},"body":{"injectables/DataService.html":{}}}],["resulting",{"_index":662,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["results",{"_index":197,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":2206,"title":{},"body":{"license.html":{}}}],["return",{"_index":252,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["returned",{"_index":884,"title":{},"body":{"injectables/DataService.html":{}}}],["returns",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["review",{"_index":495,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["reviewdata",{"_index":436,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["reviewdata]=\"reviewdata",{"_index":450,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["reviewdate",{"_index":543,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["reviewed",{"_index":341,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/OverviewComponent.html":{}}}],["reviewedcriteria",{"_index":568,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["reviewedcriterion",{"_index":1551,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reviewedcriterion.values",{"_index":1554,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reviewedcriterion.values[0].value",{"_index":1555,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reviewmode",{"_index":668,"title":{},"body":{"components/CriterionComponent.html":{}}}],["reviewvalue",{"_index":1553,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["revisions",{"_index":2103,"title":{},"body":{"license.html":{}}}],["rgba(0",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{}}}],["right",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["rights",{"_index":2305,"title":{},"body":{"license.html":{}}}],["risks",{"_index":2270,"title":{},"body":{"license.html":{}}}],["root",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["root'},{'name",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["route",{"_index":1107,"title":{},"body":{"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["route.params.platformid",{"_index":1848,"title":{},"body":{"guards/TechnologyDetailsResolverService.html":{}}}],["router",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["router.events.subscribe((e",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["routermodule.forchild(inforoutes",{"_index":1256,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["routermodule.forchild(platformroutes",{"_index":1758,"title":{},"body":{"modules/TechnologiesRoutingModule.html":{}}}],["routermodule.forroot",{"_index":326,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1175,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["routes",{"_index":311,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/InformationModule.html":{},"modules/TechnologiesModule.html":{}}}],["routing.module.ts",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["row",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["row:nth",{"_index":1905,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["royalty",{"_index":2154,"title":{},"body":{"license.html":{}}}],["run",{"_index":1994,"title":{},"body":{"index.html":{}}}],["running",{"_index":2015,"title":{},"body":{"index.html":{}}}],["runtimes",{"_index":532,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["rxjs",{"_index":843,"title":{},"body":{"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"components/OverviewComponent.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":850,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["s.unsubscribe",{"_index":1687,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["s3",{"_index":1771,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["safety",{"_index":1080,"title":{},"body":{"components/FooterComponent.html":{}}}],["salad",{"_index":1160,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyListComponent.html":{}}}],["same",{"_index":2330,"title":{},"body":{"license.html":{}}}],["scaffolding",{"_index":2004,"title":{},"body":{"index.html":{}}}],["screen",{"_index":137,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["scroll",{"_index":1894,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["scrollleft",{"_index":1619,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["scrollright",{"_index":1621,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["scrolltoanchor",{"_index":396,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["search",{"_index":349,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"index.html":{}}}],["section",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["section.description",{"_index":1393,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["section.title",{"_index":1392,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["section__card",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["section__cards",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{}}}],["section_disclaimer",{"_index":1097,"title":{},"body":{"components/FooterComponent.html":{}}}],["sections",{"_index":2043,"title":{},"body":{"license.html":{}}}],["see",{"_index":631,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["seed",{"_index":1371,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["selected",{"_index":661,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["selectedgrouping",{"_index":1118,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["selectedstrings",{"_index":750,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["selectedstrings.length",{"_index":754,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["selectedviewcombination",{"_index":1122,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["selection",{"_index":346,"title":{},"body":{"components/BannerComponent.html":{},"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["self",{"_index":701,"title":{},"body":{"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sell",{"_index":2167,"title":{},"body":{"license.html":{}}}],["sent",{"_index":2125,"title":{},"body":{"license.html":{}}}],["separable",{"_index":2110,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2240,"title":{},"body":{"license.html":{}}}],["serve",{"_index":1996,"title":{},"body":{"index.html":{}}}],["server",{"_index":558,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{},"index.html":{}}}],["service",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"index.html":{},"license.html":{}}}],["services/app",{"_index":591,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/data.service",{"_index":586,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/logo",{"_index":587,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/random",{"_index":589,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":473,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["set([...previous",{"_index":999,"title":{},"body":{"injectables/DataService.html":{}}}],["settimeout",{"_index":410,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["settings",{"_index":638,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["settoarray",{"_index":1403,"title":{},"body":{"pipes/SetToArrayPipe.html":{}}}],["settoarraypipe",{"_index":1399,"title":{"pipes/SetToArrayPipe.html":{}},"body":{"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["shadow",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["shall",{"_index":2041,"title":{},"body":{"license.html":{}}}],["shared/bottom",{"_index":1834,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["shared/datasource",{"_index":1581,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["shared/interfaces/classification",{"_index":852,"title":{},"body":{"injectables/DataService.html":{},"components/FrameworkComponent.html":{},"guards/FrameworkResolver.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{}}}],["shared/interfaces/filtering",{"_index":730,"title":{},"body":{"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyTableComponent.html":{}}}],["shared/interfaces/info",{"_index":857,"title":{},"body":{"injectables/DataService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{}}}],["shared/interfaces/responses",{"_index":855,"title":{},"body":{"injectables/DataService.html":{}}}],["shared/interfaces/technology",{"_index":854,"title":{},"body":{"injectables/DataService.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["shared/page",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/shared.module",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/InformationModule.html":{},"modules/TechnologiesModule.html":{}}}],["sharedmodule",{"_index":269,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules.html":{},"overview.html":{}}}],["sharereplay",{"_index":847,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["sharereplay(1",{"_index":893,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["shares",{"_index":2076,"title":{},"body":{"license.html":{}}}],["sheet",{"_index":1324,"title":{},"body":{"modules/MaterialModule.html":{}}}],["short",{"_index":1772,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["shortdescription",{"_index":1762,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["shown",{"_index":1764,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["shrink",{"_index":419,"title":{},"body":{"components/BottomNavComponent.html":{},"components/TechnologiesComponent.html":{}}}],["sidenav",{"_index":1586,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sidenav__accordion",{"_index":1723,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["sidenav__filter",{"_index":1722,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["simplechanges",{"_index":1664,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["simpledatasource",{"_index":1431,"title":{"interfaces/SimpleDataSource.html":{}},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{}}}],["simplify",{"_index":1980,"title":{},"body":{"index.html":{}}}],["size",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["skipself",{"_index":580,"title":{},"body":{"modules/CoreModule.html":{}}}],["slider",{"_index":645,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["smooth",{"_index":1898,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["software",{"_index":467,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["sole",{"_index":2308,"title":{},"body":{"license.html":{}}}],["solely",{"_index":2264,"title":{},"body":{"license.html":{}}}],["solid",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sort",{"_index":1444,"title":{"interfaces/Sort.html":{}},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{}}}],["sort.order",{"_index":1525,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["sortby",{"_index":1787,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["sortby(sort",{"_index":1490,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["spacer",{"_index":379,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologyListComponent.html":{}}}],["span')).gettext",{"_index":306,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":2354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":2283,"title":{},"body":{"license.html":{}}}],["specific",{"_index":540,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["specified",{"_index":649,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"index.html":{}}}],["spinner",{"_index":1285,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../data.service.ts",{"_index":2349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filtering.ts",{"_index":1973,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logo",{"_index":1974,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../random",{"_index":2352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../technology.ts",{"_index":1975,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":2348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core.module.ts",{"_index":577,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/ensure",{"_index":1051,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["src/app/core/services/app",{"_index":238,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["src/app/core/services/data.service.ts",{"_index":775,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/data.service.ts:105",{"_index":830,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:138",{"_index":818,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:170",{"_index":812,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:200",{"_index":815,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:208",{"_index":822,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:233",{"_index":825,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:243",{"_index":827,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:266",{"_index":807,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:280",{"_index":810,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:290",{"_index":829,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:330",{"_index":817,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:34",{"_index":798,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:342",{"_index":804,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:364",{"_index":836,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:383",{"_index":832,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:39",{"_index":839,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:402",{"_index":820,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:410",{"_index":800,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:50",{"_index":801,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:58",{"_index":819,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:72",{"_index":834,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/logo",{"_index":1257,"title":{},"body":{"injectables/LogoLocatorService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/services/random",{"_index":1364,"title":{},"body":{"injectables/RandomColorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/home/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/home/about/about.component.ts:8",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/home/banner/banner.component.ts",{"_index":329,"title":{},"body":{"components/BannerComponent.html":{},"coverage.html":{}}}],["src/app/home/banner/banner.component.ts:8",{"_index":333,"title":{},"body":{"components/BannerComponent.html":{}}}],["src/app/home/home.component.ts",{"_index":1213,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:9",{"_index":1217,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/overview/overview.component.ts",{"_index":1329,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/home/overview/overview.component.ts:11",{"_index":1333,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/information/faq/faq.component.ts",{"_index":1059,"title":{},"body":{"components/FaqComponent.html":{},"coverage.html":{}}}],["src/app/information/faq/faq.component.ts:12",{"_index":1064,"title":{},"body":{"components/FaqComponent.html":{}}}],["src/app/information/faq/faq.component.ts:8",{"_index":1063,"title":{},"body":{"components/FaqComponent.html":{}}}],["src/app/information/framework/framework.component.ts",{"_index":1101,"title":{},"body":{"components/FrameworkComponent.html":{},"coverage.html":{}}}],["src/app/information/framework/framework.component.ts:11",{"_index":1106,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["src/app/information/framework/framework.component.ts:16",{"_index":1108,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["src/app/information/information",{"_index":1251,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["src/app/information/information.component.ts",{"_index":1225,"title":{},"body":{"components/InformationComponent.html":{},"coverage.html":{}}}],["src/app/information/information.component.ts:10",{"_index":1233,"title":{},"body":{"components/InformationComponent.html":{}}}],["src/app/information/information.component.ts:14",{"_index":1230,"title":{},"body":{"components/InformationComponent.html":{}}}],["src/app/information/information.module.ts",{"_index":1243,"title":{},"body":{"modules/InformationModule.html":{}}}],["src/app/information/resolvers/framework",{"_index":1167,"title":{},"body":{"guards/FrameworkResolver.html":{},"coverage.html":{}}}],["src/app/information/resolvers/resources",{"_index":1395,"title":{},"body":{"guards/ResourcesResolver.html":{},"coverage.html":{}}}],["src/app/information/resources/resources.component.ts",{"_index":1379,"title":{},"body":{"components/ResourcesComponent.html":{},"coverage.html":{}}}],["src/app/information/resources/resources.component.ts:12",{"_index":1388,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/information/resources/resources.component.ts:13",{"_index":1385,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/information/resources/resources.component.ts:18",{"_index":1387,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/information/resources/resources.component.ts:24",{"_index":1386,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/shared/bottom",{"_index":387,"title":{},"body":{"components/BottomNavComponent.html":{},"coverage.html":{}}}],["src/app/shared/child",{"_index":426,"title":{},"body":{"components/ChildGroupingComponent.html":{},"coverage.html":{}}}],["src/app/shared/criterion/criterion.component.ts",{"_index":664,"title":{},"body":{"components/CriterionComponent.html":{},"coverage.html":{}}}],["src/app/shared/criterion/criterion.component.ts:10",{"_index":670,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:11",{"_index":672,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:12",{"_index":671,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:13",{"_index":675,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:14",{"_index":674,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:15",{"_index":677,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:16",{"_index":669,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:21",{"_index":676,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/datasource.ts",{"_index":1432,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{}}}],["src/app/shared/datasource.ts:10",{"_index":1436,"title":{},"body":{"interfaces/SimpleDataSource.html":{}}}],["src/app/shared/datasource.ts:101",{"_index":1808,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:12",{"_index":1437,"title":{},"body":{"interfaces/SimpleDataSource.html":{}}}],["src/app/shared/datasource.ts:131",{"_index":1800,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:146",{"_index":1810,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:170",{"_index":1807,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:198",{"_index":1803,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:207",{"_index":1804,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:21",{"_index":1791,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:22",{"_index":1795,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:23",{"_index":1798,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:24",{"_index":1789,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:25",{"_index":1794,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:27",{"_index":1793,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:28",{"_index":1799,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:29",{"_index":1790,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:30",{"_index":1796,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:31",{"_index":1792,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:32",{"_index":1788,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:34",{"_index":1797,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:62",{"_index":1813,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:68",{"_index":1811,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:77",{"_index":1812,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:81",{"_index":1806,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:87",{"_index":1814,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:91",{"_index":1802,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:98",{"_index":1805,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":1066,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:12",{"_index":1071,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:8",{"_index":1070,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/framework",{"_index":1112,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":1182,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:8",{"_index":1186,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/interfaces/classification.ts",{"_index":464,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/filtering.ts",{"_index":602,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/interfaces/filtering.ts:119",{"_index":610,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{}}}],["src/app/shared/interfaces/info.ts",{"_index":1220,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/responses.ts",{"_index":556,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/responses.ts:53",{"_index":663,"title":{},"body":{"interfaces/CriteriaReview.html":{}}}],["src/app/shared/interfaces/technology.ts",{"_index":1759,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/material.module.ts",{"_index":1274,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/shared/page",{"_index":1356,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/pipes/set",{"_index":1401,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/truncate.pipe.ts",{"_index":1908,"title":{},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/truncate.pipe.ts:7",{"_index":1913,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["src/app/shared/pipes/yes",{"_index":1917,"title":{},"body":{"pipes/YesNoPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1415,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/technologies/criterion",{"_index":707,"title":{},"body":{"components/CriterionFilterComponent.html":{},"coverage.html":{}}}],["src/app/technologies/technologies",{"_index":1749,"title":{},"body":{"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"coverage.html":{}}}],["src/app/technologies/technologies.component.ts",{"_index":1622,"title":{},"body":{"components/TechnologiesComponent.html":{},"coverage.html":{}}}],["src/app/technologies/technologies.component.ts:114",{"_index":1643,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:25",{"_index":1660,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:26",{"_index":1661,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:27",{"_index":1653,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:28",{"_index":1652,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:29",{"_index":1654,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:31",{"_index":1651,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:32",{"_index":1650,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:34",{"_index":1656,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:36",{"_index":1659,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:37",{"_index":1637,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:51",{"_index":1641,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:74",{"_index":1640,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:78",{"_index":1638,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:87",{"_index":1639,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:94",{"_index":1649,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.module.ts",{"_index":1739,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["src/app/technologies/technology",{"_index":1571,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1948,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1950,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1951,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":697,"title":{},"body":{"components/CriterionComponent.html":{},"components/TechnologyListComponent.html":{}}}],["started",{"_index":1977,"title":{"index.html":{},"license.html":{}},"body":{}}],["startindex",{"_index":1485,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["state",{"_index":1174,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"license.html":{}}}],["stated",{"_index":2164,"title":{},"body":{"license.html":{}}}],["statement",{"_index":2229,"title":{},"body":{"license.html":{}}}],["statements",{"_index":1921,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":795,"title":{},"body":{"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["stating",{"_index":2204,"title":{},"body":{"license.html":{}}}],["sticky",{"_index":416,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["stoppage",{"_index":2291,"title":{},"body":{"license.html":{}}}],["store",{"_index":477,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["stored",{"_index":2009,"title":{},"body":{"index.html":{}}}],["storing",{"_index":1765,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["stretch",{"_index":774,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["string",{"_index":400,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":480,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["style",{"_index":769,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sub",{"_index":516,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["subgroups",{"_index":437,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["subject",{"_index":1713,"title":{},"body":{"components/TechnologiesComponent.html":{},"license.html":{}}}],["sublicense",{"_index":2160,"title":{},"body":{"license.html":{}}}],["submission",{"_index":2231,"title":{},"body":{"license.html":{}}}],["submit",{"_index":2119,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":2117,"title":{},"body":{"license.html":{}}}],["subscription",{"_index":1383,"title":{},"body":{"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{}}}],["subscriptions",{"_index":1630,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["subsequently",{"_index":2142,"title":{},"body":{"license.html":{}}}],["such",{"_index":2068,"title":{},"body":{"license.html":{}}}],["suitability",{"_index":1081,"title":{},"body":{"components/FooterComponent.html":{}}}],["suitable",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["suiting",{"_index":338,"title":{},"body":{"components/BannerComponent.html":{}}}],["super(parentmodule",{"_index":600,"title":{},"body":{"modules/CoreModule.html":{}}}],["supersede",{"_index":2239,"title":{},"body":{"license.html":{}}}],["support",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{},"license.html":{},"modules.html":{}}}],["supported",{"_index":533,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["supportedplatforms",{"_index":1216,"title":{},"body":{"components/HomeComponent.html":{},"components/OverviewComponent.html":{}}}],["supportedplatformspath",{"_index":869,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":1272,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["switch",{"_index":493,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["switchmap",{"_index":1440,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["switchmap(([criteriaquery",{"_index":1474,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["syntax",{"_index":2328,"title":{},"body":{"license.html":{}}}],["system",{"_index":1978,"title":{},"body":{"index.html":{}}}],["systems",{"_index":2128,"title":{},"body":{"license.html":{}}}],["t",{"_index":1447,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["t.category.tolocalelowercase",{"_index":965,"title":{},"body":{"injectables/DataService.html":{}}}],["t.dossier.reviewedcriteria.get(key",{"_index":1523,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["t.dossier.reviewedcriteria.has(key",{"_index":1521,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["table",{"_index":194,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["table.component",{"_index":1745,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["table.component.html",{"_index":1583,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["table.component.scss",{"_index":1584,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["table.component.ts",{"_index":1573,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:10",{"_index":1576,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:11",{"_index":1575,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:20",{"_index":1879,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:21",{"_index":1881,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:22",{"_index":1880,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:23",{"_index":1882,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:25",{"_index":1890,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:27",{"_index":1887,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:28",{"_index":1889,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:29",{"_index":1888,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:31",{"_index":1878,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:37",{"_index":1884,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:61",{"_index":1883,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:8",{"_index":1578,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:87",{"_index":1885,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:9",{"_index":1577,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:91",{"_index":1886,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table/technology",{"_index":1572,"title":{},"body":{"classes/TableColumn.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["tablecolumn",{"_index":1570,"title":{"classes/TableColumn.html":{}},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["tablecontainer",{"_index":1588,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1954,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1236,"title":{},"body":{"components/InformationComponent.html":{}}}],["tabs__links",{"_index":1237,"title":{},"body":{"components/InformationComponent.html":{}}}],["take",{"_index":848,"title":{},"body":{"injectables/DataService.html":{}}}],["target",{"_index":1557,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["target.every(v",{"_index":1559,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["targetmodule",{"_index":1055,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["tech",{"_index":1899,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["tech.platformname",{"_index":1891,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["techcategory",{"_index":813,"title":{},"body":{"injectables/DataService.html":{}}}],["techname",{"_index":1594,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["technameheader",{"_index":1592,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["technologies",{"_index":500,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["technologies'},{'name",{"_index":187,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["technologies.component",{"_index":1740,"title":{},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["technologies.component.html",{"_index":1626,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["technologies.component.scss",{"_index":1625,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["technologiescomponent",{"_index":186,"title":{"components/TechnologiesComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["technologiesmodule",{"_index":1734,"title":{"modules/TechnologiesModule.html":{}},"body":{"modules/TechnologiesModule.html":{},"modules.html":{},"overview.html":{}}}],["technologiesresolver",{"_index":1746,"title":{"guards/TechnologiesResolver.html":{}},"body":{"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"coverage.html":{}}}],["technologiesroutingmodule",{"_index":1738,"title":{"modules/TechnologiesRoutingModule.html":{}},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["technology",{"_index":189,"title":{"interfaces/Technology.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["technology__header",{"_index":1843,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["technology__logo",{"_index":1844,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["technology__view",{"_index":1846,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["technologycategory",{"_index":483,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["technologydatasource",{"_index":1450,"title":{"classes/TechnologyDataSource.html":{}},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["technologydatasource(this.technologies",{"_index":1679,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["technologydatasource.canfilter(criteriaquery[key",{"_index":1518,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["technologydatasource.containsany(filtervalue",{"_index":1552,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["technologydetailscomponent",{"_index":188,"title":{"components/TechnologyDetailsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["technologydetailsresolverservice",{"_index":1748,"title":{"guards/TechnologyDetailsResolverService.html":{}},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["technologydossier",{"_index":853,"title":{"interfaces/TechnologyDossier.html":{}},"body":{"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{}}}],["technologydossier]{@link",{"_index":1774,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["technologydossierresponse",{"_index":567,"title":{"interfaces/TechnologyDossierResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["technologyfilterconfiguration",{"_index":625,"title":{"interfaces/TechnologyFilterConfiguration.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["technologyid",{"_index":808,"title":{},"body":{"injectables/DataService.html":{}}}],["technologylistcomponent",{"_index":191,"title":{"components/TechnologyListComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["technologytablecomponent",{"_index":193,"title":{"components/TechnologyTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["techs",{"_index":980,"title":{},"body":{"injectables/DataService.html":{}}}],["techs.filter(t",{"_index":964,"title":{},"body":{"injectables/DataService.html":{}}}],["temp",{"_index":1024,"title":{},"body":{"injectables/DataService.html":{}}}],["temp.default",{"_index":1026,"title":{},"body":{"injectables/DataService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["terminate",{"_index":2189,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2036,"title":{},"body":{"license.html":{}}}],["test",{"_index":2018,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2017,"title":{},"body":{"index.html":{}}}],["text",{"_index":370,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["text_snippet",{"_index":673,"title":{},"body":{"components/CriterionComponent.html":{}}}],["then(data",{"_index":255,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["theory",{"_index":2274,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":2113,"title":{},"body":{"license.html":{}}}],["third",{"_index":2217,"title":{},"body":{"license.html":{}}}],["this.appconfig",{"_index":256,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.appconfig?.defaulttechcategory",{"_index":258,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.bottomnav.totop",{"_index":1837,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["this.browsingmode",{"_index":1675,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.buildgroupings(groupings",{"_index":901,"title":{},"body":{"injectables/DataService.html":{}}}],["this.checkrouterevent(e",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["this.columnstodisplay.push(c.id",{"_index":1611,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.config.defaulttechcategory",{"_index":1180,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["this.criteriabasedquery",{"_index":1467,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.criteriabasedquery.getvalue",{"_index":1498,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.criteriabasedquery.next(nextquery",{"_index":1503,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.criteriacolumns.push",{"_index":1610,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.criterion.name",{"_index":680,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.criterioninstance",{"_index":681,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.currentindex",{"_index":1509,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.data",{"_index":1464,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.dataservice.getframeworkforcategory(defaultcategory",{"_index":1181,"title":{},"body":{"guards/FrameworkResolver.html":{}}}],["this.dataservice.getframeworkfortechnologytype(category",{"_index":1754,"title":{},"body":{"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["this.dataservice.getinforesources",{"_index":1398,"title":{},"body":{"guards/ResourcesResolver.html":{}}}],["this.dataservice.gettechnologies",{"_index":1218,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.dataservice.gettechnologiesofcategory(category",{"_index":1753,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["this.dataservice.gettechnology(id",{"_index":1849,"title":{},"body":{"guards/TechnologyDetailsResolverService.html":{}}}],["this.dataservice.gettechnologyfilter(category",{"_index":1755,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["this.datasource",{"_index":1678,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.datasource.fetch({pageindex",{"_index":1863,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.datasource.pagesize",{"_index":1866,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.datasource.querybycriteria($event",{"_index":1707,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.datasource.querybyname(name",{"_index":1862,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.datasource.totalinputsize",{"_index":1865,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.extractgroupings",{"_index":1684,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.extratitletext",{"_index":678,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.fb.array",{"_index":740,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.fb.control(null",{"_index":738,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.fb.control(this.filter.filtertype",{"_index":744,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.fb.group",{"_index":743,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filter.filtertype",{"_index":733,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filter.filtervalues",{"_index":749,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filter.filtervalues.foreach(v",{"_index":741,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterconfiguration",{"_index":1682,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.filtereddata",{"_index":1471,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.filterelement",{"_index":737,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.get('filtertype').setvalue(this.filtertype.containsone",{"_index":765,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.markaspristine",{"_index":755,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.reset",{"_index":761,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.value.checkboxes[i",{"_index":752,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.value.filtertype",{"_index":753,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.valuechanges.subscribe(value",{"_index":745,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.bool",{"_index":734,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.containsall",{"_index":762,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.containsany",{"_index":735,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.containsone",{"_index":763,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.excludesall",{"_index":764,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.lte",{"_index":736,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.framework",{"_index":1110,"title":{},"body":{"components/FrameworkComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["this.framework.viewcombinations",{"_index":1135,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{}}}],["this.framework.viewcombinations.foreach(vc",{"_index":1836,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["this.framework.viewcombinations.foreach(viewcomb",{"_index":1595,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.generatefilterstructure",{"_index":1685,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.generategroupingcolumns(g",{"_index":1618,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.generategroupingcolumns(grouping",{"_index":1600,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.getcriteria",{"_index":894,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdefaultviewcombinationdata(frameworkid).pipe",{"_index":1011,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdossier(id",{"_index":966,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdossier(item.id).pipe(take(1)).subscribe",{"_index":959,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdossier(t.id",{"_index":982,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdossiersofcategory(category",{"_index":987,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getfilteringresult(criteriaquery[key",{"_index":1522,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.getframeworks().pipe",{"_index":949,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getgroupings",{"_index":902,"title":{},"body":{"injectables/DataService.html":{}}}],["this.gettechnologies(withdossier).pipe",{"_index":962,"title":{},"body":{"injectables/DataService.html":{}}}],["this.gettechnologiesofcategory(category).pipe",{"_index":978,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getviewcombinations",{"_index":927,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getviewgroupingsdata(v.id",{"_index":1015,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getviews",{"_index":916,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getviewsdata(vc.id",{"_index":1013,"title":{},"body":{"injectables/DataService.html":{}}}],["this.groupingcolumnids.push(grouping.id",{"_index":1615,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.groupingcolumns.push(...groupingcolumns",{"_index":1602,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.groupings.foreach(g",{"_index":1693,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.groupings.push(...array.from(v.groupings",{"_index":1689,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.http.get('/assets/config.json",{"_index":253,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.http.get(criteriagroupingspath",{"_index":895,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(criteriapath",{"_index":890,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(dossierpath",{"_index":974,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(filterconfigurationspath).pipe",{"_index":983,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(frameworkspath",{"_index":928,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(frameworkviewcombinationspath",{"_index":917,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(frameworkviewspath",{"_index":903,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(inforesourcespath",{"_index":1038,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(supportedplatformspath",{"_index":954,"title":{},"body":{"injectables/DataService.html":{}}}],["this.ispaginated",{"_index":1512,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.loading",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["this.logolocator.getlogopath(item.logolocator",{"_index":958,"title":{},"body":{"injectables/DataService.html":{}}}],["this.logolocator.getlogopath(technology.logolocator",{"_index":971,"title":{},"body":{"injectables/DataService.html":{}}}],["this.mobilequery",{"_index":1666,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.mobilequery.addeventlistener('change",{"_index":1669,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.namebasedquery",{"_index":1469,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.namebasedquery.next(query",{"_index":1505,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagenumber$]).pipe",{"_index":1483,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagenumber.asobservable",{"_index":1457,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagenumber.next(event.pageindex",{"_index":1508,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagesize",{"_index":1486,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.paginateddata",{"_index":1481,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.platform",{"_index":1835,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["this.populaterenderblocks(g",{"_index":1694,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.processdata(this.data",{"_index":1476,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.prunequery(nextquery",{"_index":1501,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.renderedfilter",{"_index":1695,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.resources",{"_index":1390,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.route.data.subscribe(data",{"_index":1109,"title":{},"body":{"components/FrameworkComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":1672,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.selectedgrouping.get(viewid)?.id",{"_index":1141,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.selectedgrouping.set(viewid",{"_index":1143,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.selectedviewcombination",{"_index":1134,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["this.selectedviewcombination.views.foreach(v",{"_index":1139,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.sort",{"_index":1465,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.sort.getvalue",{"_index":1493,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.sort.next(nextsort",{"_index":1495,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.sort]).pipe",{"_index":1473,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.subscription",{"_index":1389,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":1391,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.subscriptions.foreach(s",{"_index":1686,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.subscriptions.push",{"_index":1671,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.tablecontainer.nativeelement.scrollleft",{"_index":1620,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.technologies",{"_index":1676,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.title",{"_index":679,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.totalinputsize",{"_index":1478,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.updatequery.emit(obj",{"_index":756,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.values",{"_index":682,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.viewportscroller.scrolltoanchor(grouping.id",{"_index":1145,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.viewportscroller.scrolltoanchor(platformid",{"_index":411,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["this.viewtoggles.set(v.id",{"_index":1140,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["those",{"_index":2170,"title":{},"body":{"license.html":{}}}],["through",{"_index":1714,"title":{},"body":{"components/TechnologiesComponent.html":{},"license.html":{}}}],["throw",{"_index":1056,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["throwerror",{"_index":842,"title":{},"body":{"injectables/DataService.html":{}}}],["throwerror(errormessage",{"_index":889,"title":{},"body":{"injectables/DataService.html":{}}}],["title",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/PageNotFoundComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"license.html":{}}}],["titlepage",{"_index":1363,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["toarray",{"_index":849,"title":{},"body":{"injectables/DataService.html":{}}}],["toggle",{"_index":641,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"components/FrameworkRendererComponent.html":{},"modules/MaterialModule.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["togglepagination",{"_index":1511,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["top",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["topromise",{"_index":254,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["tort",{"_index":2275,"title":{},"body":{"license.html":{}}}],["totalinputsize",{"_index":1455,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["totop",{"_index":393,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["tracking",{"_index":2130,"title":{},"body":{"license.html":{}}}],["trade",{"_index":2246,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":2207,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2244,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":2168,"title":{},"body":{"license.html":{}}}],["transform",{"_index":1404,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["transform(value",{"_index":1405,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["transformation",{"_index":2089,"title":{},"body":{"license.html":{}}}],["transition",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{}}}],["translates",{"_index":640,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["translation",{"_index":2090,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["true",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":478,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["truncate",{"_index":1909,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["truncatepipe",{"_index":1413,"title":{"pipes/TruncatePipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["tslib",{"_index":1967,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":760,"title":{},"body":{"components/CriterionFilterComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"pipes/YesNoPipe.html":{}}}],["types",{"_index":2093,"title":{},"body":{"license.html":{}}}],["typographical",{"_index":1085,"title":{},"body":{"components/FooterComponent.html":{}}}],["ui",{"_index":514,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["undefined",{"_index":1144,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{}}}],["under",{"_index":2058,"title":{},"body":{"license.html":{}}}],["union",{"_index":2053,"title":{},"body":{"license.html":{}}}],["unique",{"_index":481,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["unit",{"_index":2016,"title":{},"body":{"index.html":{}}}],["unless",{"_index":2233,"title":{},"body":{"license.html":{}}}],["updatequery",{"_index":716,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["url(\"../../../assets/images/logo",{"_index":1199,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url(../../../assets/images/bg",{"_index":353,"title":{},"body":{"components/BannerComponent.html":{}}}],["use",{"_index":525,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":491,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["usefactory",{"_index":595,"title":{},"body":{"modules/CoreModule.html":{}}}],["user",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["user's",{"_index":658,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["using",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"index.html":{},"license.html":{}}}],["v",{"_index":1029,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["v.description",{"_index":911,"title":{},"body":{"injectables/DataService.html":{}}}],["v.groupingids.foreach(id",{"_index":912,"title":{},"body":{"injectables/DataService.html":{}}}],["v.id",{"_index":909,"title":{},"body":{"injectables/DataService.html":{}}}],["v.length",{"_index":1535,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["v.name",{"_index":910,"title":{},"body":{"injectables/DataService.html":{}}}],["v.png",{"_index":1209,"title":{},"body":{"components/HeaderComponent.html":{}}}],["v.value",{"_index":693,"title":{},"body":{"components/CriterionComponent.html":{}}}],["value",{"_index":407,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.every(item",{"_index":759,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["value.length",{"_index":1916,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value.substr(0",{"_index":1914,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["valueindex",{"_index":692,"title":{},"body":{"components/CriterionComponent.html":{}}}],["values",{"_index":475,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["values[0].value",{"_index":689,"title":{},"body":{"components/CriterionComponent.html":{}}}],["valuetocheck",{"_index":1545,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["valuetocheck.length",{"_index":1546,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["var",{"_index":148,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["variable",{"_index":1927,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2347,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vc",{"_index":1021,"title":{},"body":{"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["vc.default",{"_index":1136,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["vc.id",{"_index":1020,"title":{},"body":{"injectables/DataService.html":{}}}],["vc.viewids.foreach(id",{"_index":1031,"title":{},"body":{"injectables/DataService.html":{}}}],["vc.views.foreach(v",{"_index":1688,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["vclookup",{"_index":1018,"title":{},"body":{"injectables/DataService.html":{}}}],["vclookup.get(id",{"_index":1025,"title":{},"body":{"injectables/DataService.html":{}}}],["verbal",{"_index":2122,"title":{},"body":{"license.html":{}}}],["version",{"_index":2031,"title":{},"body":{"license.html":{}}}],["vertical",{"_index":1350,"title":{},"body":{"components/OverviewComponent.html":{}}}],["via",{"_index":2020,"title":{},"body":{"index.html":{}}}],["view",{"_index":508,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["view.description",{"_index":1150,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["view.groupingids.foreach(id",{"_index":1036,"title":{},"body":{"injectables/DataService.html":{}}}],["view.groupings.add(groupingslookup.get(id",{"_index":914,"title":{},"body":{"injectables/DataService.html":{}}}],["view.name",{"_index":1148,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["view_list",{"_index":350,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["viewchild",{"_index":1580,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["viewchild('bottomnavcomponent",{"_index":1829,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["viewchild('content",{"_index":1587,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewchild('sidenav",{"_index":1658,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["viewcolspan",{"_index":1603,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewcomb.default",{"_index":1596,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewcomb.views.foreach(view",{"_index":1597,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewcombination",{"_index":937,"title":{},"body":{"injectables/DataService.html":{}}}],["viewcombinationid",{"_index":837,"title":{},"body":{"injectables/DataService.html":{}}}],["viewcombinationids",{"_index":557,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["viewcombinations",{"_index":505,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{}}}],["viewcombinations.foreach(c",{"_index":919,"title":{},"body":{"injectables/DataService.html":{}}}],["viewid",{"_index":833,"title":{},"body":{"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{}}}],["viewids",{"_index":561,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["viewportscroller",{"_index":398,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["views",{"_index":490,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["views.find(v",{"_index":924,"title":{},"body":{"injectables/DataService.html":{}}}],["views.foreach(v",{"_index":908,"title":{},"body":{"injectables/DataService.html":{}}}],["viewslookup",{"_index":1027,"title":{},"body":{"injectables/DataService.html":{}}}],["viewtoggles",{"_index":1119,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["violet",{"_index":456,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FooterComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["viruses",{"_index":1083,"title":{},"body":{"components/FooterComponent.html":{}}}],["visualize",{"_index":1992,"title":{},"body":{"index.html":{}}}],["void",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["warranties",{"_index":1077,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["warranty",{"_index":2255,"title":{},"body":{"license.html":{}}}],["way",{"_index":342,"title":{},"body":{"components/BannerComponent.html":{}}}],["webkit",{"_index":356,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/OverviewComponent.html":{}}}],["weight",{"_index":365,"title":{},"body":{"components/BannerComponent.html":{}}}],["wherever",{"_index":2216,"title":{},"body":{"license.html":{}}}],["whether",{"_index":512,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["white",{"_index":420,"title":{},"body":{"components/BottomNavComponent.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["whole",{"_index":2107,"title":{},"body":{"license.html":{}}}],["width",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["window.pageyoffset",{"_index":1838,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["window:scroll",{"_index":1821,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["window:scroll(e",{"_index":1824,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["withdossier",{"_index":823,"title":{},"body":{"injectables/DataService.html":{}}}],["within",{"_index":2144,"title":{},"body":{"license.html":{}}}],["without",{"_index":2194,"title":{},"body":{"license.html":{}}}],["word",{"_index":1904,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["work",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["works",{"_index":1065,"title":{},"body":{"components/FaqComponent.html":{},"license.html":{}}}],["worldwide",{"_index":2150,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["writing",{"_index":2139,"title":{},"body":{"license.html":{}}}],["written",{"_index":2123,"title":{},"body":{"license.html":{}}}],["yes",{"_index":1376,"title":{},"body":{"injectables/RandomColorService.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/YesNoPipe.html":{}}}],["yesno",{"_index":690,"title":{},"body":{"components/CriterionComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/YesNoPipe.html":{}}}],["yesnopipe",{"_index":1414,"title":{"pipes/YesNoPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"overview.html":{}}}],["yyyy",{"_index":2335,"title":{},"body":{"license.html":{}}}],["z",{"_index":362,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{}}}],["zone.js",{"_index":1969,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/about/about.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/about/about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-home-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent {\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  About\n  \n    FaaStener is a research prototype which aims to provide support in choosing suitable Function-as-a-Service\n    platforms based on the user-provided requirements.\n    The classification framework behind FaaStener is derived by combining existing academic work and documentation\n    of available Function-as-a-Service platforms.\n    You can find more information about the classification framework, FaaStener, and FaaS cloud service model with\n    additional resources by navigating using the respective buttons below.\n  \n\n\n  \n    \n      menu_book\n       Framework\n       Learn about the classification framework and available\n        criteria.\n      READ MORE\n    \n\n    \n      cloud_done\n      Docs\n       Information on how to work with FaaStener and its features. \n      READ MORE\n    \n\n    \n      library_books\n      Resources\n       Additional resources related to Function-as-a-Service platforms. \n      READ MORE\n    \n\n    \n      question_answer\n      Q&A\n      Answers to some possible questions.\n      READ MORE\n    -->\n  \n\n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n}\n\n.about-section {\n  width: 95%;\n  margin-bottom: .5rem;\n}\n\n.about-section__cards {\n  display: flex;\n  flex-flow: wrap;\n  justify-content: space-evenly;\n}\n\n.about-section__card {\n  margin: .5rem;\n  border-top: .2rem solid #212121;\n  transition: all .3s ease;\n  flex-basis: 18%;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n\n  &:hover {\n    border-top: .2rem solid #b5ca8f;\n    box-shadow: 0 10px 16px rgba(0, 0, 0, 0.2) !important;\n\n    .about-section__card-icon {\n      color: #b5ca8f;\n    }\n  }\n}\n\n.about-section__card-icon {\n  font-size: 3rem !important;\n  transition: all .3s ease;\n  margin-right: 1rem;\n}\n\n.about-section__card-title {\n  padding-top: 1rem;\n  font-size: 1rem;\n}\n\n.about-section__card-description {\n  flex: 1;\n  font-size: .8rem;\n}\n\n@media screen and (min-width: 550px) {\n  .about-section__card-title {\n    font-size: 1.1rem;\n  }\n\n  .about-section__card-description {\n    flex: 1;\n    font-size: .9rem;\n  }\n}\n\n\n@media (min-width: 790px) {\n  .about-section__card-title {\n    font-size: 1.2rem;\n  }\n\n  .about-section__card-description {\n    flex: 1;\n    font-size: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  About      FaaStener is a research prototype which aims to provide support in choosing suitable Function-as-a-Service    platforms based on the user-provided requirements.    The classification framework behind FaaStener is derived by combining existing academic work and documentation    of available Function-as-a-Service platforms.    You can find more information about the classification framework, FaaStener, and FaaS cloud service model with    additional resources by navigating using the respective buttons below.              menu_book       Framework       Learn about the classification framework and available        criteria.      READ MORE              cloud_done      Docs       Information on how to work with FaaStener and its features.       READ MORE              library_books      Resources       Additional resources related to Function-as-a-Service platforms.       READ MORE              question_answer      Q&A      Answers to some possible questions.      READ MORE    -->  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                template\n                \n  \n    \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkRouterEvent\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkRouterEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRouterEvent(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    \n      \n        \n      \n      \n    \n  `\n})\nexport class AppComponent implements OnInit {\n  loading: boolean;\n\n  constructor(private router: Router) {\n    router.events.subscribe((e) => this.checkRouterEvent(e));\n  }\n\n  ngOnInit(): void {\n  }\n\n  private checkRouterEvent(e): void {\n    if (e instanceof NavigationStart) {\n      this.loading = true;\n    }\n\n    if (e instanceof NavigationCancel || e instanceof NavigationEnd || e instanceof NavigationError) {\n      this.loading = false;\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/app-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                appConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadAppConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    defaultTechCategory\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/app-config.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadAppConfig\n                        \n                    \n                \n            \n            \n                \nloadAppConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/app-config.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/app-config.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        defaultTechCategory\n                    \n                \n\n                \n                    \n                        getdefaultTechCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/app-config.service.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class AppConfigService {\n  private appConfig: any;\n\n  constructor(private http: HttpClient) {\n  }\n\n  loadAppConfig() {\n    return this.http.get('/assets/config.json')\n      .toPromise()\n      .then(data => {\n        this.appConfig = data;\n      });\n  }\n\n  get defaultTechCategory() {\n    return this.appConfig?.defaultTechCategory;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBannerComponent\n\nBannerComponent\n\nAppModule -->\n\nBannerComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nAppModule -->\n\nOverviewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            BannerComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            OverviewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {AppRoutingModule} from './app-routing.module';\nimport {CoreModule} from './core/core.module';\nimport {SharedModule} from './shared/shared.module';\nimport {HomeComponent} from './home/home.component';\nimport {AboutComponent} from './home/about/about.component';\nimport {BannerComponent} from './home/banner/banner.component';\nimport {OverviewComponent} from './home/overview/overview.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    CoreModule,\n    SharedModule,\n    AppRoutingModule\n  ],\n  declarations: [AppComponent, HomeComponent, AboutComponent, BannerComponent, OverviewComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTitleText\n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise<>\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\nimport {PageNotFoundComponent} from './shared/page-not-found/page-not-found.component';\nimport {HomeComponent} from './home/home.component';\n\nconst appRoutes: Routes = [\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\n  {path: 'home', component: HomeComponent},\n  {path: 'info', loadChildren: () => \"import(`src/app/information/information.module`).then(m => m.InformationModule)\"},\n  {path: 'platforms', loadChildren: () => \"import(`src/app/technologies/technologies.module`).then(m => m.TechnologiesModule)\"},\n  {path: '**', component: PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      {\n        preloadingStrategy: PreloadAllModules\n      }\n    )\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BannerComponent.html":{"url":"components/BannerComponent.html","title":"component - BannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/banner/banner.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-banner\n            \n\n            \n                styleUrls\n                ./banner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./banner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/banner/banner.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-home-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent {\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n  \n    Choose your Function-as-a-Service Platform\n  \n  \n    Explore available Function-as-a-Service platforms and find one suiting your requirements.\n  \n\n\n  \n    \n      check_circle\n       10 reviewed platforms, more on the way \n    \n    \n      check_circle\n       High- and low-level platform selection criteria\n    \n    \n      check_circle\n       Open source and extensible \n    \n  \n\n  \n    \n      search\n      Find a Platform\n    \n    \n    \n      view_list\n      Browse Platforms\n    \n  \n\n\n    \n\n    \n                \n                    ./banner.component.scss\n                \n                @import \"../../_scss/shared\";\n\n.banner {\n  background: url(../../../assets/images/bg-pattern.png) repeat;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: auto;\n  color: #ffffff;\n  z-index: -10;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n}\n\n.banner__heading {\n  margin: 1rem auto 0;\n  padding: 0 1rem;\n  font-size: 1.5rem !important;\n  font-weight: 900;\n  line-height: 1.7rem;\n  text-shadow: 0 4px 4px rgba(0, 0, 0, 0.22);\n}\n\n.banner__description {\n  margin: .8rem auto 0;\n  padding: 0 1rem;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5rem;\n}\n\n.banner__summary {\n  margin: 2rem 0;\n  display: flex;\n  flex-flow: column wrap;\n  align-content: center;\n}\n\n.banner__summary-item {\n  margin-bottom: .5rem;\n  display: flex;\n  align-content: center;\n}\n\n.banner__summary-item-text {\n  padding: .2rem 0 0 .5rem;\n  font-size: .9rem;\n}\n\n.banner__quick-links {\n  margin: 1rem 0;\n  display: flex;\n  justify-content: center;\n}\n\n.banner__quick-links-spacer {\n  margin: 0 .5rem;\n}\n\n.banner-description-list {\n  margin: 0 auto 40px;\n  font-size: 18px;\n}\n\n\n@media (min-width: 790px) {\n  .banner__heading {\n    font-size: 1.8rem !important;\n  }\n\n  .banner__description {\n    font-size: 1.3rem;\n  }\n\n  .banner__summary-item-text {\n    font-size: 1rem;\n  }\n\n}\n\n@media (min-width: 1100px) {\n  .banner__heading {\n    font-size: 2rem !important;\n    margin-top: 3rem;\n  }\n\n  .banner__quick-links {\n    margin: 1rem 0 3rem 0;\n  }\n\n  .banner__summary {\n    margin: 2.5rem 0;\n  }\n\n  .banner__summary-item {\n    margin: 0 2rem .5rem 0;\n    display: flex;\n    align-content: center;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Choose your Function-as-a-Service Platform        Explore available Function-as-a-Service platforms and find one suiting your requirements.              check_circle       10 reviewed platforms, more on the way               check_circle       High- and low-level platform selection criteria              check_circle       Open source and extensible                   search      Find a Platform                  view_list      Browse Platforms      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BottomNavComponent.html":{"url":"components/BottomNavComponent.html","title":"component - BottomNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BottomNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/bottom-nav/bottom-nav.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-bottom-nav\n            \n\n            \n                styleUrls\n                ./bottom-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./bottom-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toTop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onScrollToTop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scrollToAnchor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewportScroller: ViewportScroller)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewportScroller\n                                                  \n                                                        \n                                                                        ViewportScroller\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scrollToAnchor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onScrollToTop\n                        \n                    \n                \n            \n            \n                \nonScrollToTop(platformId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    platformId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        toTop\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ViewportScroller} from '@angular/common';\n\n@Component({\n  selector: 'app-bottom-nav',\n  templateUrl: './bottom-nav.component.html',\n  styleUrls: ['./bottom-nav.component.scss']\n})\nexport class BottomNavComponent implements OnInit {\n  @Input() scrollToAnchor: string;\n  toTop = false;\n\n  constructor(private viewportScroller: ViewportScroller) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onScrollToTop(platformId: string) {\n    setTimeout(() => {\n      this.viewportScroller.scrollToAnchor(platformId);\n    }, 50);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    arrow_upward\n    To Top\n  \n\n\n    \n\n    \n                \n                    ./bottom-nav.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  position: sticky;\n  position: -webkit-sticky;\n  bottom: 0;\n  z-index: 20;\n}\n\n.bottom-navbar {\n  flex-shrink: 0;\n  padding: 0;\n  height: 3rem !important;\n  background: white;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-evenly;\n  box-shadow: 0 0 1px rgba(0, 0, 0, .3);\n}\n\n@media screen and (min-width: 510px) {\n  .bottom-navbar {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        arrow_upward    To Top  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BottomNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChildGroupingComponent.html":{"url":"components/ChildGroupingComponent.html","title":"component - ChildGroupingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChildGroupingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/child-grouping/child-grouping.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-child-grouping\n            \n\n            \n                styleUrls\n                ./child-grouping.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./child-grouping.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraCriterionTitle\n                            \n                            \n                                groupings\n                            \n                            \n                                parent\n                            \n                            \n                                renderReviewData\n                            \n                            \n                                reviewData\n                            \n                            \n                                subGroups\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/child-grouping/child-grouping.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraCriterionTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupings\n                    \n                \n                \n                    \n                        Type :         CriteriaGrouping[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parent\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        renderReviewData\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewData\n                    \n                \n                \n                    \n                        Type :         Map\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subGroups\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {CriteriaGrouping, CriterionInstance} from '../interfaces/classification';\n\n@Component({\n  selector: 'app-child-grouping',\n  templateUrl: './child-grouping.component.html',\n  styleUrls: ['./child-grouping.component.scss']\n})\nexport class ChildGroupingComponent {\n  @Input() groupings: CriteriaGrouping[];\n  @Input() subGroups = false;\n  @Input() parent = '';\n  @Input() extraCriterionTitle: string;\n  @Input() renderReviewData = false;\n  @Input() reviewData: Map;\n\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Grouping: {{g.name}}\n      {{parent + ' > ' + g.name}}\n    \n\n\n    \n      \n        \n        \n      \n\n      \n        \n        \n      \n    \n\n\n     ' + g.name\"\n                        [renderReviewData]=\"renderReviewData\"\n                        [reviewData]=\"reviewData\">\n    \n  \n\n\n\n    \n\n    \n                \n                    ./child-grouping.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  @include bg-grey;\n  margin: 0 .2rem;\n}\n\n.child-grouping {\n  margin: 0;\n  height: 100%;\n}\n\n.child-grouping__title {\n  padding: 1rem 1rem .5rem 1rem;\n  font-size: 1.1rem;\n  color: $violet-600;\n}\n\n.child-grouping__path {\n  padding: 0 1rem 1rem 1rem;\n}\n\n.child-grouping__criterion {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-items: center;\n  margin: .5rem;\n}\n\n.child-grouping__criterion--nested {\n  @include bg-grey;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Grouping: {{g.name}}      {{parent + \\' > \\' + g.name}}                                                                         \\' + g.name\"                        [renderReviewData]=\"renderReviewData\"                        [reviewData]=\"reviewData\">      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChildGroupingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationCriterion.html":{"url":"interfaces/ClassificationCriterion.html","title":"interface - ClassificationCriterion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationCriterion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a classification criterion for a to-be-classified software.\nGroupings can also contain other groupings, forming a hierarchy for criteria.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            exampleValues\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Criterion description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exampleValues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exampleValues:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Example values which an instance of this criterion CriterionInstance can store.\na true/false value, numeric values, a list of strings\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique criterion identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Criterion name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationFramework.html":{"url":"interfaces/ClassificationFramework.html","title":"interface - ClassificationFramework","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationFramework\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a generic classification framework, which comprises one or more ClassificationViewCombination.\nDifferent combinations of classification views can be used to flexibly switch between different review representations for a given TechnologyCategory.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            technologyCategory\n                                        \n                                \n                                \n                                        \n                                            viewCombinations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Framework description (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique framework identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Framework name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category of technologies this framework helps to review.\nFunction-as-a-Service platforms\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewCombinations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewCombinations:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of ClassificationViewCombination which organize the representation of views comprising different criteria groupings.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationFrameworkResponse.html":{"url":"interfaces/ClassificationFrameworkResponse.html","title":"interface - ClassificationFrameworkResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationFrameworkResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            technologyCategory\n                                        \n                                \n                                \n                                        \n                                            viewCombinationIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewCombinationIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewCombinationIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationView.html":{"url":"interfaces/ClassificationView.html","title":"interface - ClassificationView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a classification view which comprises one or more CriteriaGrouping.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            groupings\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupings:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of CriteriaGrouping which organize the representation of criteria and optional sub-groupings.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique view identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationViewCombination.html":{"url":"interfaces/ClassificationViewCombination.html","title":"interface - ClassificationViewCombination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationViewCombination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a combination of classifications view which comprises one or more ClassificationViews.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            views\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates whether this combination needs to be used for default UI rendering (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View combination description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique view combination identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View combination name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        views:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of ClassificationView which organize the representation of criteria groupings.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationViewCombinationResponse.html":{"url":"interfaces/ClassificationViewCombinationResponse.html","title":"interface - ClassificationViewCombinationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationViewCombinationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a server response with available combinations of classification views.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            viewIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationViewResponse.html":{"url":"interfaces/ClassificationViewResponse.html","title":"interface - ClassificationViewResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationViewResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a server response with available classification views.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            groupingIds\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupingIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupingIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAppConfigService\n\nAppConfigService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAppConfigService->CoreModule\n\n\n\n\n\nDataService\n\nDataService\n\nCoreModule -->\n\nDataService->CoreModule\n\n\n\n\n\nLogoLocatorService\n\nLogoLocatorService\n\nCoreModule -->\n\nLogoLocatorService->CoreModule\n\n\n\n\n\nRandomColorService\n\nRandomColorService\n\nCoreModule -->\n\nRandomColorService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            DataService\n                        \n                        \n                            LogoLocatorService\n                        \n                        \n                            RandomColorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {APP_INITIALIZER, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {EnsureModuleLoadedOnceGuard} from './ensure-module-loaded-once.guard';\nimport {DataService} from './services/data.service';\nimport {LogoLocatorService} from './services/logo-locator.service';\nimport {RandomColorService} from './services/random-color.service';\nimport {AppConfigService} from './services/app-config.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  providers: [\n    AppConfigService,\n    DataService,\n    LogoLocatorService,\n    RandomColorService,\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [AppConfigService],\n      useFactory: (appConfigService: AppConfigService) => (() => appConfigService.loadAppConfig())\n    }\n  ]\n})\nexport class CoreModule extends EnsureModuleLoadedOnceGuard {\n\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    super(parentModule);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaBasedQuery.html":{"url":"interfaces/CriteriaBasedQuery.html","title":"interface - CriteriaBasedQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CriteriaBasedQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a filter-based query mapping unique criteria IDs to respective CriterionFilterValues.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        CriterionFilterValue\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interfaces/filtering.ts:119\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a rendered filter block in the UI which may comprise multiple filters with {@link CriterionFilterConfiguration}.\n */\nexport interface RenderedFilterBlock {\n  /**\n   * Name of the filter block\n   */\n  blockName: string;\n\n  /**\n   * Material Icon name\n   */\n  blockIcon?: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  /**\n   * Unique filter configuration identifier\n   */\n  filterId: string;\n\n  /**\n   * Technology category\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * Configuration name\n   */\n  name: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  /**\n   * Unique criterion identifier\n   */\n  criterionId: string;\n\n  /**\n   * Filter name\n   */\n  displayName: string;\n\n  /**\n   * Filter type {@see CriterionFilterType}\n   */\n  filterType: CriterionFilterType;\n\n  /**\n   * Distinct filter values obtained from the review data\n   */\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n */\nexport enum CriterionFilterType {\n  /**\n   * Indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n   */\n  bool = 'bool',\n\n  /**\n   * Indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n   */\n  lte = 'lte',\n\n  /**\n   * Indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n   */\n  gte = 'gte',\n\n  /**\n   * At least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n   */\n  containsOne = 'containsOne',\n\n  /**\n   * At least 1 arbitrary text value must be contained, translates to a toggle in the UI\n   */\n  containsAny = 'containsAny',\n\n  /**\n   * All specified text values must be contained, translates to a group of checkboxes in the UI\n   */\n  containsAll = 'containsAll',\n\n  /**\n   * All specified text values must not be contained, translates to a group of checkboxes in the UI\n   */\n  excludesAll = 'excludesAll'\n}\n\n/**\n * An interface representing a filter-based query mapping unique criteria IDs to respective [CriterionFilterValues]{@link CriterionFilterValue}.\n */\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\n/**\n * An interface representing a filter value used in a user's query.\n */\nexport interface CriterionFilterValue {\n  /**\n   * Filter type\n   */\n  filterType?: CriterionFilterType;\n\n  /**\n   * Actual value, type depends on the filter type and respective UI elements.\n   *\n   * @example\n   * a list of selected checkboxes resulting in a list of string values   *\n   */\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaGrouping.html":{"url":"interfaces/CriteriaGrouping.html","title":"interface - CriteriaGrouping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CriteriaGrouping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a group of ClassificationCriterion.\nGroupings can also contain other groupings, forming a hierarchy for criteria.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            criteria\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupings\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            locator\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criteria:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A set of ClassificationCriterion which describe a particular aspect of the reviewed technology.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupings:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A set of Sub-groupings which organize the representation of criteria and optional sub-groupings.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique grouping identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        locator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Grouping locator which can be used, e.g., for custom breadcrumbs generation.\nReserved for future use.\n\"licensing\", \"community.github\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Grouping name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaGroupingResponse.html":{"url":"interfaces/CriteriaGroupingResponse.html","title":"interface - CriteriaGroupingResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CriteriaGroupingResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a server response with available criteria groupings.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            criteriaIds\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            locator\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteriaIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criteriaIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        locator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaReview.html":{"url":"interfaces/CriteriaReview.html","title":"interface - CriteriaReview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CriteriaReview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        CriterionInstance\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interfaces/responses.ts:53\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CriterionComponent.html":{"url":"components/CriterionComponent.html","title":"component - CriterionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CriterionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/criterion/criterion.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-criterion\n            \n\n            \n                styleUrls\n                ./criterion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./criterion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                criterion\n                            \n                            \n                                criterionInstance\n                            \n                            \n                                extraTitleText\n                            \n                            \n                                icon\n                            \n                            \n                                reviewMode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/criterion/criterion.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        criterion\n                    \n                \n                \n                    \n                        Type :         ClassificationCriterion\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        criterionInstance\n                    \n                \n                \n                    \n                        Type :         CriterionInstance\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        extraTitleText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text_snippet'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/criterion/criterion.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/criterion/criterion.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        values\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CriterionValue[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/criterion/criterion.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ClassificationCriterion, CriterionInstance, CriterionValue} from '../interfaces/classification';\n\n@Component({\n  selector: 'app-criterion',\n  templateUrl: './criterion.component.html',\n  styleUrls: ['./criterion.component.scss']\n})\nexport class CriterionComponent implements OnInit {\n  @Input() criterion: ClassificationCriterion;\n  @Input() extraTitleText: string;\n  @Input() criterionInstance: CriterionInstance;\n  @Input() reviewMode: boolean;\n  @Input() icon = 'text_snippet';\n  title: string;\n  values: CriterionValue[];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    if (this.extraTitleText) {\n      this.title = this.extraTitleText + this.criterion.name;\n    } else {\n      this.title = this.criterion.name;\n    }\n\n    if (this.criterionInstance) {\n      this.values = Array.from(this.criterionInstance.values);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{icon}}\n      {{title}}\n    \n  \n   {{criterion.description }}\n  \n     Examples: {{criterion.exampleValues | json }} \n  \n\n\n\n  \n    \n      {{icon}}\n      {{title}}: \n    \n\n\n    \n      \n        N/A\n        block\n      \n    \n\n    \n      \n        {{values[0].value | yesNo }}\n        info\n        \n         [{{i + 1}}] \n      \n    \n  \n\n   1\" class=\"criterion__value-list-block\">\n    \n      \n        {{valueIndex + 1 + \". \" + v.value}}\n        info\n        \n        \n          [{{i + 1}}]\n        \n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./criterion.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  width: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: flex-end;\n}\n\n.criterion__heading-line {\n  width: 100%;\n  margin: .5rem 0;\n  display: flex;\n  flex-flow: row nowrap;\n}\n\n.criterion__title-block {\n  display: flex;\n  flex-flow: row nowrap;\n  align-content: center;\n  justify-content: flex-start;\n  flex: 1 1 min-content;\n}\n\n.criterion__value-block {\n  display: flex;\n  flex-flow: row nowrap;\n  align-content: center;\n  justify-content: flex-end;\n  flex: 1 1 min-content;\n}\n\n.criterion__value-list-item {\n  font-size: 1rem;\n  line-height: 1rem;\n  margin: .5rem 0;\n}\n\n.criterion__value-list-item-divider {\n  margin: .5rem 0;\n}\n\n.criterion__value-list-block {\n  margin-top: .5rem;\n  display: flex;\n  flex-flow: column nowrap;\n  width: 90%;\n  align-self: center;\n}\n\n.criterion__heading-line-block-item {\n  align-self: center;\n  font-size: 1rem;\n  line-height: 1rem;\n}\n\n.criterion__icon {\n  font-size: 1.3rem;\n}\n\n.criterion__reference {\n  font-size: 1rem;\n  text-decoration: none;\n  padding-left: .2rem;\n}\n\n.criterion__title {\n  flex: 1;\n}\n\n.child-grouping__criterion-description {\n  flex: 2 0 100%;\n}\n\n.child-grouping__criterion-examples {\n  flex: 2 0 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{icon}}      {{title}}         {{criterion.description }}       Examples: {{criterion.exampleValues | json }}               {{icon}}      {{title}}:                       N/A        block                            {{values[0].value | yesNo }}        info                 [{{i + 1}}]                1\" class=\"criterion__value-list-block\">                  {{valueIndex + 1 + \". \" + v.value}}        info                          [{{i + 1}}]                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CriterionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CriterionFilterComponent.html":{"url":"components/CriterionFilterComponent.html","title":"component - CriterionFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CriterionFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/criterion-filter/criterion-filter.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-criterion-filter\n            \n\n            \n                styleUrls\n                ./criterion-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./criterion-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterElement\n                            \n                            \n                                    Public\n                                FilterType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearFilter\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateQuery\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         CriterionFilterConfiguration\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateQuery\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearFilter\n                        \n                    \n                \n            \n            \n                \nclearFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filterElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl | FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        FilterType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CriterionFilterType\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {CriteriaBasedQuery, CriterionFilterConfiguration, CriterionFilterType} from '../../shared/interfaces/filtering';\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-criterion-filter',\n  templateUrl: './criterion-filter.component.html',\n  styleUrls: ['./criterion-filter.component.scss']\n})\nexport class CriterionFilterComponent implements OnInit {\n  @Input() filter: CriterionFilterConfiguration;\n  @Output() updateQuery = new EventEmitter();\n\n  filterElement: FormControl | FormGroup;\n  public FilterType = CriterionFilterType;\n\n  constructor(private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    if (this.filter.filterType === this.FilterType.bool || this.filter.filterType === this.FilterType.containsAny || this.filter.filterType === this.FilterType.lte) {\n      this.filterElement = this.fb.control(null);\n    } else {\n      const controls = this.fb.array([]);\n      this.filter.filterValues.forEach(v => controls.push(this.fb.control(false)));\n      this.filterElement = this.fb.group({\n        checkboxes: controls,\n        filterType: this.fb.control(this.filter.filterType)\n      });\n    }\n\n    this.filterElement.valueChanges.subscribe(value => {\n      const obj = {};\n      if (this.filter.filterType === this.FilterType.bool || this.filter.filterType === this.FilterType.containsAny) {\n        obj[this.filter.criterionId] = {\n          filterType: this.filter.filterType,\n          value: value as boolean\n        };\n      } else if (this.filter.filterType === this.FilterType.lte) {\n        obj[this.filter.criterionId] = {\n          filterType: this.filter.filterType,\n          value: value as number\n        };\n      } else {\n        const initialValues = this.filter.filterValues as string[];\n        const selectedStrings = initialValues.filter((x, i) => !!this.filterElement.value.checkboxes[i]);\n\n        obj[this.filter.criterionId] = {\n          filterType: this.filterElement.value.filterType,\n          value: selectedStrings\n        };\n        if (selectedStrings.length === 0) {\n          this.filterElement.markAsPristine();\n        }\n      }\n\n      this.updateQuery.emit(obj);\n    });\n\n\n    function isArrayOfStrings(value: any): boolean {\n      return Array.isArray(value) && value.every(item => typeof item === 'string');\n    }\n\n  }\n\n  clearFilter() {\n    this.filterElement.reset();\n    if (\n      this.filter.filterType === this.FilterType.containsAll ||\n      this.filter.filterType === this.FilterType.containsOne ||\n      this.filter.filterType === this.FilterType.excludesAll\n    ) {\n      this.filterElement.get('filterType').setValue(this.FilterType.containsOne);\n    }\n    this.filterElement.markAsPristine();\n  }\n}\n\n    \n\n    \n        \n  \n    {{filter.displayName}}\n  \n  \n    \n      \n        \n          Available\n        \n      \n      \n        \n          Not Available\n        \n      \n    \n  \n\n\n\n  \n    {{filter.displayName}}\n  \n  \n    \n    \n  \n\n\n\n  \n    {{filter.displayName}}\n  \n  \n    \n      \n        \n          {{value}}\n        \n      \n\n      \n        OR\n        AND\n        NOT\n      \n    \n  \n\n\n\n\n  Clear Filter\n\n\n\n    \n\n    \n                \n                    ./criterion-filter.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.filter-block__filter-values {\n  @include list-style-none;\n  padding-left: .2rem;\n}\n\n.criterion-block {\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.criterion-block__filter-name {\n  margin-bottom: 0;\n}\n\n.criterion-block__filter-body {\n  margin-top: .3rem;\n}\n\n.filter-block__filter-type {\n  height: 2.2rem;\n  margin: 0 auto .7rem;\n  align-items: center;\n}\n\n.clear-filter-button {\n  align-self: stretch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{filter.displayName}}                                Available                                      Not Available                          {{filter.displayName}}                    {{filter.displayName}}                                {{value}}                            OR        AND        NOT              Clear Filter'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CriterionFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionFilterConfiguration.html":{"url":"interfaces/CriterionFilterConfiguration.html","title":"interface - CriterionFilterConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CriterionFilterConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a filter configuration for a given ClassificationCriterion.\nThis configuration defines the desired filtering behavior.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            criterionId\n                                        \n                                \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            filterType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filterValues\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criterionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criterionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique criterion identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Filter name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterType:         CriterionFilterType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Filter type {@see CriterionFilterType}\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterValues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterValues:      | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Distinct filter values obtained from the review data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a rendered filter block in the UI which may comprise multiple filters with {@link CriterionFilterConfiguration}.\n */\nexport interface RenderedFilterBlock {\n  /**\n   * Name of the filter block\n   */\n  blockName: string;\n\n  /**\n   * Material Icon name\n   */\n  blockIcon?: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  /**\n   * Unique filter configuration identifier\n   */\n  filterId: string;\n\n  /**\n   * Technology category\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * Configuration name\n   */\n  name: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  /**\n   * Unique criterion identifier\n   */\n  criterionId: string;\n\n  /**\n   * Filter name\n   */\n  displayName: string;\n\n  /**\n   * Filter type {@see CriterionFilterType}\n   */\n  filterType: CriterionFilterType;\n\n  /**\n   * Distinct filter values obtained from the review data\n   */\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n */\nexport enum CriterionFilterType {\n  /**\n   * Indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n   */\n  bool = 'bool',\n\n  /**\n   * Indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n   */\n  lte = 'lte',\n\n  /**\n   * Indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n   */\n  gte = 'gte',\n\n  /**\n   * At least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n   */\n  containsOne = 'containsOne',\n\n  /**\n   * At least 1 arbitrary text value must be contained, translates to a toggle in the UI\n   */\n  containsAny = 'containsAny',\n\n  /**\n   * All specified text values must be contained, translates to a group of checkboxes in the UI\n   */\n  containsAll = 'containsAll',\n\n  /**\n   * All specified text values must not be contained, translates to a group of checkboxes in the UI\n   */\n  excludesAll = 'excludesAll'\n}\n\n/**\n * An interface representing a filter-based query mapping unique criteria IDs to respective [CriterionFilterValues]{@link CriterionFilterValue}.\n */\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\n/**\n * An interface representing a filter value used in a user's query.\n */\nexport interface CriterionFilterValue {\n  /**\n   * Filter type\n   */\n  filterType?: CriterionFilterType;\n\n  /**\n   * Actual value, type depends on the filter type and respective UI elements.\n   *\n   * @example\n   * a list of selected checkboxes resulting in a list of string values   *\n   */\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionFilterValue.html":{"url":"interfaces/CriterionFilterValue.html","title":"interface - CriterionFilterValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CriterionFilterValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a filter value used in a user's query.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            filterType\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterType:         CriterionFilterType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Filter type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     boolean | number | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | number | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Actual value, type depends on the filter type and respective UI elements.\na list of selected checkboxes resulting in a list of string values   *\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a rendered filter block in the UI which may comprise multiple filters with {@link CriterionFilterConfiguration}.\n */\nexport interface RenderedFilterBlock {\n  /**\n   * Name of the filter block\n   */\n  blockName: string;\n\n  /**\n   * Material Icon name\n   */\n  blockIcon?: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  /**\n   * Unique filter configuration identifier\n   */\n  filterId: string;\n\n  /**\n   * Technology category\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * Configuration name\n   */\n  name: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  /**\n   * Unique criterion identifier\n   */\n  criterionId: string;\n\n  /**\n   * Filter name\n   */\n  displayName: string;\n\n  /**\n   * Filter type {@see CriterionFilterType}\n   */\n  filterType: CriterionFilterType;\n\n  /**\n   * Distinct filter values obtained from the review data\n   */\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n */\nexport enum CriterionFilterType {\n  /**\n   * Indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n   */\n  bool = 'bool',\n\n  /**\n   * Indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n   */\n  lte = 'lte',\n\n  /**\n   * Indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n   */\n  gte = 'gte',\n\n  /**\n   * At least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n   */\n  containsOne = 'containsOne',\n\n  /**\n   * At least 1 arbitrary text value must be contained, translates to a toggle in the UI\n   */\n  containsAny = 'containsAny',\n\n  /**\n   * All specified text values must be contained, translates to a group of checkboxes in the UI\n   */\n  containsAll = 'containsAll',\n\n  /**\n   * All specified text values must not be contained, translates to a group of checkboxes in the UI\n   */\n  excludesAll = 'excludesAll'\n}\n\n/**\n * An interface representing a filter-based query mapping unique criteria IDs to respective [CriterionFilterValues]{@link CriterionFilterValue}.\n */\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\n/**\n * An interface representing a filter value used in a user's query.\n */\nexport interface CriterionFilterValue {\n  /**\n   * Filter type\n   */\n  filterType?: CriterionFilterType;\n\n  /**\n   * Actual value, type depends on the filter type and respective UI elements.\n   *\n   * @example\n   * a list of selected checkboxes resulting in a list of string values   *\n   */\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionInstance.html":{"url":"interfaces/CriterionInstance.html","title":"interface - CriterionInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CriterionInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            criterionId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reviewDate\n                                        \n                                \n                                \n                                        \n                                            values\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criterionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criterionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique ClassificationCriterion identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reviewDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A date review was conducted (optional).\nReserved for future use.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of CriterionValue which store the criterion-specific review data for the reviewed technology.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionValue.html":{"url":"interfaces/CriterionValue.html","title":"interface - CriterionValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CriterionValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a generic data value for the given CriterionInstance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            references\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An additional note describing the review value (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A list of references, e.g., to official documentation, confirming the review value (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     string | number | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number | boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A value of primitive type representing criterion-specific review data.\n\"Java\", \"not supported\", 150, true\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildGroupings\n                            \n                            \n                                getCriteria\n                            \n                            \n                                getDefaultViewCombinationData\n                            \n                            \n                                getDossier\n                            \n                            \n                                getDossiersOfCategory\n                            \n                            \n                                getFrameworkForCategory\n                            \n                            \n                                getFrameworkForTechnologyType\n                            \n                            \n                                getFrameworkGroupingsData\n                            \n                            \n                                getFrameworks\n                            \n                            \n                                getGroupings\n                            \n                            \n                                getInfoResources\n                            \n                            \n                                getTechnologies\n                            \n                            \n                                getTechnologiesOfCategory\n                            \n                            \n                                getTechnology\n                            \n                            \n                                getTechnologyFilter\n                            \n                            \n                                getViewCombinations\n                            \n                            \n                                getViewGroupingsData\n                            \n                            \n                                getViews\n                            \n                            \n                                getViewsData\n                            \n                            \n                                    Private\n                                    Static\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logoLocator: LogoLocatorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/data.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logoLocator\n                                                  \n                                                        \n                                                                        LogoLocatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        buildGroupings\n                        \n                    \n                \n            \n            \n                \n                    \n                    buildGroupings(data: CriteriaGroupingResponse[], criteria: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:410\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            CriteriaGroupingResponse[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    criteria\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CriteriaGrouping[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCriteria\n                        \n                    \n                \n            \n            \n                \ngetCriteria()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultViewCombinationData\n                        \n                    \n                \n            \n            \n                \ngetDefaultViewCombinationData(frameworkId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:342\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    frameworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDossier\n                        \n                    \n                \n            \n            \n                \ngetDossier(technologyId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    technologyId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDossiersOfCategory\n                        \n                    \n                \n            \n            \n                \ngetDossiersOfCategory(category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrameworkForCategory\n                        \n                    \n                \n            \n            \n                \ngetFrameworkForCategory(techCategory: TechnologyCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    techCategory\n                                    \n                                                TechnologyCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrameworkForTechnologyType\n                        \n                    \n                \n            \n            \n                \ngetFrameworkForTechnologyType(category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrameworkGroupingsData\n                        \n                    \n                \n            \n            \n                \ngetFrameworkGroupingsData(frameworkId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:330\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    frameworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrameworks\n                        \n                    \n                \n            \n            \n                \ngetFrameworks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupings\n                        \n                    \n                \n            \n            \n                \ngetGroupings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInfoResources\n                        \n                    \n                \n            \n            \n                \ngetInfoResources()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:402\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTechnologies\n                        \n                    \n                \n            \n            \n                \ngetTechnologies(withDossier)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    withDossier\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTechnologiesOfCategory\n                        \n                    \n                \n            \n            \n                \ngetTechnologiesOfCategory(category: string, withDossier)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:233\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    withDossier\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTechnology\n                        \n                    \n                \n            \n            \n                \ngetTechnology(id: string, withDossier)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    withDossier\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTechnologyFilter\n                        \n                    \n                \n            \n            \n                \ngetTechnologyFilter(category: TechnologyCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:290\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                TechnologyCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getViewCombinations\n                        \n                    \n                \n            \n            \n                \ngetViewCombinations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getViewGroupingsData\n                        \n                    \n                \n            \n            \n                \ngetViewGroupingsData(viewId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:383\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getViews\n                        \n                    \n                \n            \n            \n                \ngetViews()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getViewsData\n                        \n                    \n                \n            \n            \n                \ngetViewsData(viewCombinationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:364\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewCombinationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(err: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {combineLatest, Observable, throwError} from 'rxjs';\nimport {catchError, map, mergeAll, mergeMap, shareReplay, take, toArray} from 'rxjs/operators';\nimport {LogoLocatorService} from './logo-locator.service';\nimport {\n  ClassificationCriterion,\n  ClassificationFramework,\n  ClassificationView,\n  ClassificationViewCombination,\n  CriteriaGrouping\n} from '../../shared/interfaces/classification';\nimport {Technology, TechnologyCategory, TechnologyDossier} from '../../shared/interfaces/technology';\nimport {\n  ClassificationFrameworkResponse,\n  ClassificationViewCombinationResponse,\n  ClassificationViewResponse,\n  CriteriaGroupingResponse, TechnologyDossierResponse\n} from '../../shared/interfaces/responses';\nimport {CriterionFilterType, TechnologyFilterConfiguration} from '../../shared/interfaces/filtering';\nimport {InfoResourceSection} from '../../shared/interfaces/info';\n\nconst criteriaPath = '/assets/data/framework/criteria.json';\nconst criteriaGroupingsPath = '/assets/data/framework/groupings.json';\nconst frameworkViewsPath = '/assets/data/framework/views.json';\nconst frameworkViewCombinationsPath = '/assets/data/framework/view-combinations.json';\nconst frameworksPath = '/assets/data/framework/frameworks.json';\nconst supportedPlatformsPath = '/assets/data/platforms/platforms.json';\nconst dossiersPath = '/assets/data/platforms/';\nconst filterConfigurationsPath = '/assets/data/framework/filters.json';\nconst infoResourcesPath = '/assets/data/info/resources.json';\n\n@Injectable()\nexport class DataService {\n\n  constructor(private http: HttpClient, private logoLocator: LogoLocatorService) {\n  }\n\n  private static handleError(err: any): Observable {\n    let errorMessage: string;\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      errorMessage = `Backend returned code ${err.status}: ${err.body?.error}`;\n    }\n    console.error(err);\n    return throwError(errorMessage);\n  }\n\n  getCriteria(): Observable {\n    return this.http.get(criteriaPath)\n      .pipe(\n        catchError(DataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  getGroupings(): Observable {\n    return combineLatest([\n      this.getCriteria(),\n      this.http.get(criteriaGroupingsPath)\n    ]).pipe(\n      map(([criteria, groupings]) => {\n        const criteriaLookup = new Map(criteria.map(c => [c.id, c] as [string, ClassificationCriterion]));\n        return this.buildGroupings(groupings, criteriaLookup);\n      }),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViews(): Observable {\n    return combineLatest([\n      this.getGroupings(),\n      this.http.get(frameworkViewsPath)\n    ]).pipe(\n      map(([groupings, views]) => {\n          const groupingsLookup = new Map(groupings.map(c => [c.id, c] as [string, CriteriaGrouping]));\n          const result: ClassificationView[] = [];\n\n          views.forEach(v => {\n            const view: ClassificationView = {\n              id: v.id,\n              name: v.name,\n              description: v.description,\n              groupings: new Set()\n            };\n\n            v.groupingIds.forEach(id => {\n              if (groupingsLookup.has(id)) {\n                view.groupings.add(groupingsLookup.get(id));\n              }\n            });\n            result.push(view);\n          });\n\n          return result;\n        }\n      ),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViewCombinations(): Observable {\n    return combineLatest([\n      this.getViews(),\n      this.http.get(frameworkViewCombinationsPath)\n    ]).pipe(\n      map(([views, viewCombinations]) => {\n          const result: ClassificationViewCombination[] = [];\n          viewCombinations.forEach(c => {\n            const combination: ClassificationViewCombination = {\n              id: c.id,\n              name: c.name,\n              description: c.description,\n              default: c.default,\n              views: new Set()\n            };\n\n            c.viewIds.forEach(id => {\n              const view = views.find(v => id === v.id);\n              if (view) {\n                combination.views.add(view);\n              }\n            });\n            result.push(combination);\n          });\n\n          return result;\n        }\n      ),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getFrameworks(): Observable {\n    return combineLatest([\n      this.getViewCombinations(),\n      this.http.get(frameworksPath)\n    ]).pipe(\n      map(([combs, frameworks]) => {\n        const result: ClassificationFramework[] = [];\n        frameworks.forEach(f => {\n          const framework: ClassificationFramework = {\n            id: f.id,\n            technologyCategory: f.technologyCategory,\n            name: f.name,\n            description: f.description,\n            viewCombinations: new Set()\n          };\n\n          f.viewCombinationIds.forEach(id => {\n            const viewCombination = combs.find(v => id === v.id);\n            if (viewCombination) {\n              framework.viewCombinations.add(viewCombination);\n            }\n          });\n          result.push(framework);\n        });\n\n        return result;\n      }),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getFrameworkForCategory(techCategory: TechnologyCategory): Observable {\n    return combineLatest([\n      this.getViewCombinations(),\n      this.http.get(frameworksPath)\n    ]).pipe(\n      map(([combs, frameworks]) => {\n        const fw = frameworks.find(f => f.technologyCategory === techCategory);\n\n        const result: ClassificationFramework = {\n          id: fw.id,\n          technologyCategory: fw.technologyCategory,\n          name: fw.name,\n          description: fw.description,\n          viewCombinations: new Set()\n        };\n\n        fw.viewCombinationIds.forEach(id => {\n          const viewCombination = combs.find(v => id === v.id);\n          if (viewCombination) {\n            result.viewCombinations.add(viewCombination);\n          }\n        });\n\n        return result;\n      }),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getFrameworkForTechnologyType(category: string): Observable {\n    return this.getFrameworks().pipe(\n      map((f) => f.find(item => item.technologyCategory.toLocaleLowerCase() === category.toLocaleLowerCase())),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getTechnologies(withDossier = false): Observable {\n    return this.http.get(supportedPlatformsPath)\n      .pipe(\n        map((items) =>\n          items.map(\n            item => {\n              const result: Technology = {\n                ...item,\n                logoLocation: this.logoLocator.getLogoPath(item.logoLocator)\n              };\n              if (withDossier) {\n                this.getDossier(item.id).pipe(take(1)).subscribe({\n                  next: value => value ? result.dossier = value : false,\n                  error: catchError\n                });\n              }\n              return result;\n            }\n          )\n        ),\n        shareReplay(1),\n        catchError(DataService.handleError)\n      );\n  }\n\n  getTechnologiesOfCategory(category: string, withDossier = false): Observable {\n    return this.getTechnologies(withDossier).pipe(\n      map((techs) =>\n        techs.filter(t => t.category.toLocaleLowerCase() === category.toLocaleLowerCase())\n      ),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getTechnology(id: string, withDossier = false): Observable {\n    return combineLatest([\n      this.http.get(supportedPlatformsPath),\n      this.getDossier(id)\n    ]).pipe(\n      map(([items, dossier]) => {\n          const technology: Technology = items.find(item => item.id === id);\n          const result: Technology = {\n            ...technology,\n            logoLocation: this.logoLocator.getLogoPath(technology.logoLocator)\n          };\n          if (withDossier) {\n            result.dossier = dossier;\n          }\n          return result;\n        }\n      ),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n\n  }\n\n  getDossier(technologyId: string): Observable {\n    const dossierPath = dossiersPath.concat(technologyId, '.json');\n    return this.http.get(dossierPath)\n      .pipe(\n        map( (res) => ({\n            platformId: technologyId,\n            reviewDate: res.reviewDate,\n            reviewedCriteria: new Map(Object.entries(res.reviewedCriteria))\n          } as TechnologyDossier)),\n        catchError(DataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  getDossiersOfCategory(category: string): Observable {\n    return this.getTechnologiesOfCategory(category).pipe(\n      mergeMap((techs) => techs),\n      mergeMap((t) => this.getDossier(t.id)),\n      toArray(),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getTechnologyFilter(category: TechnologyCategory): Observable {\n    return combineLatest([\n      this.http.get(filterConfigurationsPath).pipe(\n        map((conf) => conf.find(c => c.technologyCategory.toLocaleLowerCase() === category.toLocaleLowerCase())),\n      ),\n      this.getDossiersOfCategory(category)\n    ]).pipe(\n      map(([filter, dossiers]) => {\n          const criteriaValues = new Map>();\n          dossiers.forEach(d => {\n\n            d.reviewedCriteria.forEach((criterionInstance, key) => {\n              const distinctValues = new Set();\n              const previous: Set = criteriaValues.get(key);\n\n              criterionInstance.values.forEach(v => distinctValues.add(v.value));\n              if (previous) {\n                criteriaValues.set(key, new Set([...previous, ...distinctValues]));\n              } else {\n                criteriaValues.set(key, distinctValues);\n              }\n            });\n          });\n\n          filter.filters.forEach((f) => {\n            if (f.filterType === CriterionFilterType.lte) {\n              const range: number[] = Array.from(criteriaValues.get(f.criterionId)).sort(((a, b) => a > b ? 1 : -1));\n              f.filterValues = [range[0], range[range.length - 1]];\n            } else if (f.filterType !== CriterionFilterType.bool) {\n              f.filterValues = Array.from(criteriaValues.get(f.criterionId).values());\n            }\n          });\n          return filter;\n        }\n      ),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getFrameworkGroupingsData(frameworkId: string): Observable {\n    return this.getDefaultViewCombinationData(frameworkId).pipe(\n      mergeMap((vc) => this.getViewsData(vc.id)),\n      mergeAll(),\n      mergeMap(v => this.getViewGroupingsData(v.id)),\n      mergeAll(),\n      toArray(),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getDefaultViewCombinationData(frameworkId: string): Observable {\n    return combineLatest([\n      this.http.get(frameworkViewCombinationsPath),\n      this.http.get(frameworksPath),\n    ]).pipe(\n      map(([vcs, fws]) => {\n        const vcLookup = new Map(vcs.map(vc => [vc.id, vc] as [string, ClassificationViewCombinationResponse]));\n        const framework = fws.find(f => f.id === frameworkId);\n        if (framework) {\n          for (const id of framework.viewCombinationIds) {\n            const temp = vcLookup.get(id);\n            if (temp && temp.default) {\n              return temp;\n            }\n          }\n        }\n      }),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViewsData(viewCombinationId: string): Observable {\n    return combineLatest([\n      this.http.get(frameworkViewCombinationsPath),\n      this.http.get(frameworkViewsPath)\n    ]).pipe(\n      map(([combs, views]) => {\n        const viewsLookup = new Map(views.map(v => [v.id, v] as [string, ClassificationViewResponse]));\n        const result = [];\n        const vc = combs.find(c => c.id === viewCombinationId);\n        if (vc) {\n          vc.viewIds.forEach(id => result.push(viewsLookup.get(id)));\n        }\n        return result;\n      }),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViewGroupingsData(viewId: string): Observable {\n    return combineLatest([\n      this.http.get(frameworkViewsPath),\n      this.http.get(criteriaGroupingsPath)])\n      .pipe(\n        map(([views, groupings]) => {\n          const groupingsLookup = new Map(groupings.map(g => [g.id, g] as [string, CriteriaGroupingResponse]));\n          const result = [];\n          const view = views.find(v => v.id === viewId);\n          if (view) {\n            view.groupingIds.forEach(id => result.push(groupingsLookup.get(id)));\n          }\n          return result;\n        }),\n        catchError(DataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  getInfoResources(): Observable {\n    return this.http.get(infoResourcesPath)\n      .pipe(\n        catchError(DataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  private buildGroupings(data: CriteriaGroupingResponse[], criteria: Map): CriteriaGrouping[] {\n    const result: CriteriaGrouping[] = [];\n    const lookup: Map = new Map();\n\n    data.forEach(g => {\n        const relatedCriteria: Set = new Set();\n        if (g.criteriaIds) {\n          g.criteriaIds.forEach(id => criteria.has(id) ? relatedCriteria.add(criteria.get(id)) : false);\n        }\n        lookup.set(g.id, ({\n          id: g.id,\n          name: g.name,\n          locator: g.locator,\n          groupings: new Set(),\n          criteria: relatedCriteria\n        } as CriteriaGrouping));\n      }\n    );\n\n    data.forEach(g => {\n      if (g.parentId) {\n        lookup.get(g.parentId).groupings.add(lookup.get(g.id));\n      } else {\n        result.push(lookup.get(g.id));\n      }\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnsureModuleLoadedOnceGuard.html":{"url":"classes/EnsureModuleLoadedOnceGuard.html","title":"class - EnsureModuleLoadedOnceGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnsureModuleLoadedOnceGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ensure-module-loaded-once.guard.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(targetModule: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/ensure-module-loaded-once.guard.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        targetModule\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EnsureModuleLoadedOnceGuard {\n  constructor(targetModule: any) {\n    if (targetModule) {\n      throw new Error(`${targetModule.constructor.name} has already been loaded. Import this module in the AppModule only.`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FaqComponent.html":{"url":"components/FaqComponent.html","title":"component - FaqComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FaqComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/faq/faq.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-faq\n            \n\n            \n                styleUrls\n                ./faq.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./faq.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/information/faq/faq.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/faq/faq.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.scss']\n})\nexport class FaqComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        faq works!\n\n    \n\n    \n                \n                    ./faq.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'faq works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FaqComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    © 2021 FaaStener\n    \n      This SOFTWARE PRODUCT is provided \"as is\" and \"with all faults.\"\n      THE PROVIDER makes no representations or warranties of any kind concerning the safety, suitability, lack\n      of viruses, inaccuracies, typographical errors, or other harmful components of this SOFTWARE PRODUCT.\n    \n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                @import \"../../_scss/global/variables\";\n\n.main-grid__footer {\n  height: 100%;\n  background-color: $violet-500;\n  color: #ffffff;\n  display: flex;\n  justify-content: center;\n}\n\n.footer__section {\n  margin: 0;\n  padding: 1em;\n  display: flex;\n  flex-direction: column;\n  justify-items: center;\n  align-items: center;\n}\n\n.footer__heading {\n  padding: 0 .4em .5rem .4rem;\n  border-bottom: .2rem solid $pink-900;\n}\n\n.section_disclaimer {\n  max-width: 57rem;\n}\n\n@media screen and (min-width: 1100px) {\n  .footer__section {\n    max-width: 1200px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      © 2021 FaaStener          This SOFTWARE PRODUCT is provided \"as is\" and \"with all faults.\"      THE PROVIDER makes no representations or warranties of any kind concerning the safety, suitability, lack      of viruses, inaccuracies, typographical errors, or other harmful components of this SOFTWARE PRODUCT.      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameworkComponent.html":{"url":"components/FrameworkComponent.html","title":"component - FrameworkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FrameworkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/framework/framework.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-framework\n            \n\n            \n                styleUrls\n                ./framework.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./framework.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                framework\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/framework/framework.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/framework/framework.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        framework\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                    \n                        \n                                Defined in src/app/information/framework/framework.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ClassificationFramework} from '../../shared/interfaces/classification';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-framework',\n  templateUrl: './framework.component.html',\n  styleUrls: ['./framework.component.scss']\n})\nexport class FrameworkComponent implements OnInit {\n  framework: ClassificationFramework;\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.framework = data.resolvedData;\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./framework.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FrameworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameworkRendererComponent.html":{"url":"components/FrameworkRendererComponent.html","title":"component - FrameworkRendererComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FrameworkRendererComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/framework-renderer/framework-renderer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-framework-renderer\n            \n\n            \n                styleUrls\n                ./framework-renderer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./framework-renderer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedGrouping\n                            \n                            \n                                viewToggles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onGroupingSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraCriterionTitle\n                            \n                            \n                                framework\n                            \n                            \n                                includeFrameworkInfo\n                            \n                            \n                                renderReviewData\n                            \n                            \n                                reviewData\n                            \n                            \n                                selectedViewCombination\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, viewportScroller: ViewportScroller)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewportScroller\n                                                  \n                                                        \n                                                                        ViewportScroller\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraCriterionTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        framework\n                    \n                \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        includeFrameworkInfo\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        renderReviewData\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewData\n                    \n                \n                \n                    \n                        Type :         Map\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedViewCombination\n                    \n                \n                \n                    \n                        Type :         ClassificationViewCombination\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGroupingSelected\n                        \n                    \n                \n            \n            \n                \nonGroupingSelected(viewId: string, grouping: CriteriaGrouping)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    grouping\n                                    \n                                                CriteriaGrouping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        selectedGrouping\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewToggles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ClassificationFramework, ClassificationViewCombination, CriteriaGrouping, CriterionInstance} from '../interfaces/classification';\nimport {ViewportScroller} from '@angular/common';\n\n@Component({\n  selector: 'app-framework-renderer',\n  templateUrl: './framework-renderer.component.html',\n  styleUrls: ['./framework-renderer.component.scss']\n})\nexport class FrameworkRendererComponent implements OnInit {\n  @Input() framework: ClassificationFramework;\n  @Input() includeFrameworkInfo = true;\n  @Input() selectedViewCombination: ClassificationViewCombination;\n  @Input() extraCriterionTitle: string;\n  @Input() renderReviewData = false;\n  @Input() reviewData: Map;\n\n  viewToggles: Map = new Map();\n  selectedGrouping: Map = new Map();\n\n  constructor(private route: ActivatedRoute, private viewportScroller: ViewportScroller) {\n  }\n\n  ngOnInit(): void {\n    if (!this.selectedViewCombination) {\n      for (const vc of this.framework.viewCombinations) {\n        if (vc.default) {\n          this.selectedViewCombination = vc;\n          break;\n        }\n      }\n    }\n    // Initialize default view configuration\n    this.selectedViewCombination.views.forEach(v => this.viewToggles.set(v.id, false));\n  }\n\n  onGroupingSelected(viewId: string, grouping: CriteriaGrouping) {\n    if (this.selectedGrouping.get(viewId)?.id === grouping.id) {\n      this.selectedGrouping.set(viewId, undefined);\n    } else {\n      this.selectedGrouping.set(viewId, grouping);\n      setTimeout(() => {\n        this.viewportScroller.scrollToAnchor(grouping.id);\n      }, 50);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{framework.name}}\n    {{framework.description}}\n  \n\n  \n    \n      \n        {{view.name}}\n        \n        Flat View\n        \n      \n      {{view.description}}\n\n      \n        \n          \n          \n          \n            \n              {{g.name}}\n            \n          \n        \n      \n\n      \n        \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./framework-renderer.component.scss\n                \n                @import \"../../_scss/shared\";\n\n.framework {\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 0 1rem;\n  align-items: center;\n  height: 100%;\n}\n\n.framework__info {\n}\n\n.framework__root-groupings {\n  display: flex;\n  flex-flow: row wrap;\n}\n\n.framework__grouping-details {\n  order: 2;\n  flex: 100% 0;\n  padding-bottom: 1rem;\n}\n\n.framework__root-grouping-card {\n  margin: .2rem;\n  background: $gray-card;\n  cursor: pointer;\n  flex: 1 1 min-content;\n  order: 3;\n\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: $salad-600;\n  }\n}\n\n\n.framework__view {\n  margin: 1.5rem 0;\n  display: flex;\n  flex-flow: column nowrap;\n  width: 100%;\n}\n\n.framework__view-config-row {\n  display: flex;\n  align-items: center;\n}\n\n.framework__view-title {\n  flex: 1 1 auto;\n}\n\n.framework__view-toggle {\n  flex: 0 0 auto;\n  font-size: .8rem;\n}\n\n.framework__root-grouping-card--first {\n  order: 1;\n  background: $salad-600;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{framework.name}}    {{framework.description}}                      {{view.name}}                Flat View                    {{view.description}}                                                                      {{g.name}}                                                                      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FrameworkRendererComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/FrameworkResolver.html":{"url":"guards/FrameworkResolver.html","title":"guard - FrameworkResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    FrameworkResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/information/resolvers/framework-resolver.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, config: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/resolvers/framework-resolver.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resolvers/framework-resolver.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {ClassificationFramework} from '../../shared/interfaces/classification';\nimport {Observable} from 'rxjs';\nimport {DataService} from '../../core/services/data.service';\nimport {AppConfigService} from '../../core/services/app-config.service';\n\n@Injectable()\nexport class FrameworkResolver implements Resolve {\n\n  constructor(private dataService: DataService, private config: AppConfigService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    const defaultCategory = this.config.defaultTechCategory;\n    return this.dataService.getFrameworkForCategory(defaultCategory);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/header/header.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n  \n    \n      menu\n      \n       Home \n       About \n       Platforms \n       Contact Us \n      \n      \n    \n\n    \n      \n         Home \n         About \n         Platforms \n         Contact Us \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  z-index: 10;\n  background: #fff;\n  box-shadow: 0 0 1px rgba(0, 0, 0, .11), 0 1px 2px rgba(0, 0, 0, .25);\n}\n\n.header__toolbar {\n  margin: 0;\n  height: 4em;\n  display: flex;\n  justify-content: center;\n}\n\n.header__menu {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  margin: 0;\n  padding: 0 !important;\n  justify-content: space-around;\n  align-items: center;\n  @include list-style-none;\n}\n\n.header__spacer {\n  display: none;\n  flex-grow: 2;\n}\n\n.header__logo {\n  width: 100%;\n  height: auto;\n  max-width: 5.5rem;\n  padding-top: .5rem;\n  content: url(\"../../../assets/images/logo-h.png\");\n}\n\n.menu__link {\n  display: block !important;\n  height: 100% !important;\n  width: 100% !important;\n  padding-top: 2em !important;\n}\n\n.menu__text {\n  display: none;\n}\n\n.menu__link, .menu__link-icon {\n  @include nav_item;\n  outline: 0;\n}\n\n.menu__link--active {\n  color: $pink-main !important;\n}\n\n@media screen and (min-width: 510px) {\n  .header__toolbar {\n    height: 6em;\n  }\n\n  .menu__icon {\n    display: none;\n  }\n\n  .header__logo {\n    content: url(\"../../../assets/images/logo-v.png\");\n    max-width: 3rem;\n  }\n\n  .menu__text {\n    display: flex;\n    height: 100%;\n    align-items: center;\n  }\n\n  .menu__link-icon {\n    margin-top: .55em !important;\n  }\n}\n\n@media screen and (min-width: 620px) {\n  .menu__link {\n    font-size: .95rem;\n  }\n\n  .header__spacer {\n    display: list-item;\n  }\n\n  .header__logo {\n    margin: 0 1rem 0 2rem;\n  }\n\n  .menu__link-icon {\n    margin-right: 2rem !important;\n  }\n}\n\n@media screen and (min-width: 1100px) {\n  .header__menu {\n    max-width: 1200px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu             Home        About        Platforms        Contact Us                                    Home          About          Platforms          Contact Us             '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                supportedPlatforms$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        supportedPlatforms$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dataService.getTechnologies()\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {DataService} from '../core/services/data.service';\n\n@Component({\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n  supportedPlatforms$ = this.dataService.getTechnologies();\n\n  constructor(private dataService: DataService) {\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                :host {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoResource.html":{"url":"interfaces/InfoResource.html","title":"interface - InfoResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InfoResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/info.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing an information resource related to a specific technology category.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            reference\n                                        \n                                \n                                \n                                        \n                                            resource\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Unique resource identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Resource reference.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resource:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Resource name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\nexport interface InfoResourceSection {\n  /**\n   * Unique info section identifier.\n   */\n  id: string;\n\n  /**\n   * Section title.\n   */\n  title: string;\n\n  /**\n   * Section description.\n   */\n  description: string;\n\n  /**\n   * Technology category.\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * A list of [InfoResources]{@link InfoResource} related to this section.\n   */\n  resources: InfoResource[];\n}\n\n/**\n * An interface representing an information resource related to a specific technology category.\n */\nexport interface InfoResource {\n  /**\n   * Unique resource identifier.\n   */\n  id?: string;\n\n  /**\n   * Resource name.\n   */\n  resource: string;\n\n  /**\n   * Resource reference.\n   */\n  reference: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoResourceSection.html":{"url":"interfaces/InfoResourceSection.html","title":"interface - InfoResourceSection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InfoResourceSection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            resources\n                                        \n                                \n                                \n                                        \n                                            technologyCategory\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Section description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique info section identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resources:         InfoResource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InfoResource[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A list of InfoResources related to this section.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Technology category.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Section title.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\nexport interface InfoResourceSection {\n  /**\n   * Unique info section identifier.\n   */\n  id: string;\n\n  /**\n   * Section title.\n   */\n  title: string;\n\n  /**\n   * Section description.\n   */\n  description: string;\n\n  /**\n   * Technology category.\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * A list of [InfoResources]{@link InfoResource} related to this section.\n   */\n  resources: InfoResource[];\n}\n\n/**\n * An interface representing an information resource related to a specific technology category.\n */\nexport interface InfoResource {\n  /**\n   * Unique resource identifier.\n   */\n  id?: string;\n\n  /**\n   * Resource name.\n   */\n  resource: string;\n\n  /**\n   * Resource reference.\n   */\n  reference: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationComponent.html":{"url":"components/InformationComponent.html","title":"component - InformationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InformationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/information.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-information\n            \n\n            \n                styleUrls\n                ./information.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                framework\n                            \n                            \n                                    Readonly\n                                navLinks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/information/information.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        framework\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                    \n                        \n                                Defined in src/app/information/information.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        navLinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {location: 'framework', label: 'Framework', icon: 'menu_book'},\n    {location: 'resources', label: 'Resources', icon: 'library_books'}\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/information/information.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ClassificationFramework} from '../shared/interfaces/classification';\n\n@Component({\n  selector: 'app-information',\n  templateUrl: './information.component.html',\n  styleUrls: ['./information.component.scss']\n})\nexport class InformationComponent {\n  readonly navLinks = [\n    {location: 'framework', label: 'Framework', icon: 'menu_book'},\n    {location: 'resources', label: 'Resources', icon: 'library_books'}\n  ];\n  framework: ClassificationFramework;\n\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      {{ link.label }}\n    \n  \n\n\n\n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./information.component.scss\n                \n                @import \"../_scss/shared\";\n\n:host {\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.info-tabs {\n  width: 100%;\n  color: white;\n  display: flex;\n}\n\n.info-tabs__links {\n  width: 100%;\n  display: flex;\n  margin: 0 auto;\n}\n\n.info-tabs--link {\n  flex: 1 1 auto;\n  font-size: .8rem;\n}\n\n.info-main {\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  width: 100%;\n}\n\n@media screen and (min-width: 1100px) {\n  .info-tabs__links {\n    max-width: 1200px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ link.label }}              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InformationModule.html":{"url":"modules/InformationModule.html","title":"module - InformationModule","body":"\n                   \n\n\n\n\n    Modules\n    InformationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InformationModule\n\n\n\ncluster_InformationModule_imports\n\n\n\ncluster_InformationModule_declarations\n\n\n\n\nFaqComponent\n\nFaqComponent\n\n\n\nInformationModule\n\nInformationModule\n\nInformationModule -->\n\nFaqComponent->InformationModule\n\n\n\n\n\nFrameworkComponent\n\nFrameworkComponent\n\nInformationModule -->\n\nFrameworkComponent->InformationModule\n\n\n\n\n\nInformationComponent\n\nInformationComponent\n\nInformationModule -->\n\nInformationComponent->InformationModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nInformationModule -->\n\nResourcesComponent->InformationModule\n\n\n\n\n\nInformationRoutingModule\n\nInformationRoutingModule\n\nInformationModule -->\n\nInformationRoutingModule->InformationModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nInformationModule -->\n\nSharedModule->InformationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/information/information.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FaqComponent\n                        \n                        \n                            FrameworkComponent\n                        \n                        \n                            InformationComponent\n                        \n                        \n                            ResourcesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InformationRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ResourcesComponent} from './resources/resources.component';\nimport {FaqComponent} from './faq/faq.component';\nimport {InformationComponent} from './information.component';\nimport {InformationRoutingModule} from './information-routing.module';\nimport {SharedModule} from '../shared/shared.module';\nimport {ResourcesResolver} from './resolvers/resources-resolver.service';\nimport {FrameworkComponent} from './framework/framework.component';\n\n@NgModule({\n  declarations: [ResourcesComponent, FaqComponent, InformationComponent, FrameworkComponent],\n  imports: [CommonModule, SharedModule, InformationRoutingModule],\n  providers: [ResourcesResolver]\n})\nexport class InformationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InformationRoutingModule.html":{"url":"modules/InformationRoutingModule.html","title":"module - InformationRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    InformationRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/information/information-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ResourcesComponent} from './resources/resources.component';\nimport {FaqComponent} from './faq/faq.component';\nimport {InformationComponent} from './information.component';\nimport {FrameworkResolver} from './resolvers/framework-resolver.service';\nimport {ResourcesResolver} from './resolvers/resources-resolver.service';\nimport {FrameworkComponent} from './framework/framework.component';\n\nconst infoRoutes: Routes = [\n  {\n    path: '',\n    component: InformationComponent,\n    children: [\n      {path: '', pathMatch: 'full', redirectTo: 'framework'},\n      {path: 'framework', component: FrameworkComponent, resolve: {resolvedData: FrameworkResolver}},\n      {path: 'resources', component: ResourcesComponent, resolve: {resolvedData: ResourcesResolver}},\n      {path: 'faq', component: FaqComponent}\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(infoRoutes)],\n  exports: [RouterModule]\n})\nexport class InformationRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoLocatorService.html":{"url":"injectables/LogoLocatorService.html","title":"injectable - LogoLocatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogoLocatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/logo-locator.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                platformLogoDir\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLogoPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/logo-locator.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLogoPath\n                        \n                    \n                \n            \n            \n                \ngetLogoPath(logoLocator: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/logo-locator.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logoLocator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        platformLogoDir\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/images/vendor/logo/'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/logo-locator.service.ts:5\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class LogoLocatorService {\n  static readonly platformLogoDir = '/assets/images/vendor/logo/';\n\n  constructor() {\n  }\n\n  getLogoPath(logoLocator: string) {\n    return LogoLocatorService.platformLogoDir\n      .concat(logoLocator)\n      .concat(Extension.png);\n  }\n}\n\nenum Extension {\n  png = '.png',\n  jpg = '.jpg',\n  jpeg = '.jpeg',\n  svg = '.svg'\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatListModule} from '@angular/material/list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatRadioModule} from '@angular/material/radio';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatProgressSpinnerModule,\n    MatListModule,\n    MatCardModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatTreeModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatSliderModule,\n    MatRadioModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatProgressSpinnerModule,\n    MatListModule,\n    MatCardModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatTreeModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatSliderModule,\n    MatRadioModule\n  ]\n})\nexport class MaterialModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/overview/overview.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                ./overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                supportedPlatforms$\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/overview/overview.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        supportedPlatforms$\n                    \n                \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/overview/overview.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Technology} from '../../shared/interfaces/technology';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent {\n  @Input() supportedPlatforms$: Observable;\n\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  Reviewed Platforms\n  \n    Explore the list of reviewed platforms which includes commercial and open source products.\n  \n\n  \n    \n      \n        \n          \n            \n          \n        \n      \n    \n\n    \n      Browse Platforms\n    \n  \n\n\n\n    \n\n    \n                \n                    ./overview.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n  @include bg-grey;\n}\n\n.platforms {\n  width: 95%;\n  margin-bottom: 1.5rem;\n}\n\n.platforms__container {\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n}\n\n\n.platforms__logos {\n  flex: 1 1 auto;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  justify-items: center;\n  grid-gap: .5rem;\n  list-style: none;\n  padding: .5rem;\n}\n\n.platforms__item {\n  margin: .5rem;\n\n  align-self: center;\n}\n\n.platforms__button {\n  width: 50%;\n}\n\n.platforms__logo {\n  max-width: 70%;\n  height: auto;\n  object-fit: cover;\n  vertical-align: bottom;\n  justify-self: center;\n  opacity: .7;\n  transition: opacity .5s ease-out;\n  -moz-transition: opacity .5s ease-out;\n  -webkit-transition: opacity .5s ease-out;\n  -o-transition: opacity .5s ease-out;\n\n  &:hover {\n    opacity: 1;\n  }\n}\n\n@media screen and (min-width: 550px) {\n  .platforms__logos {\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n  }\n\n  .platforms__button {\n    width: 35%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Reviewed Platforms      Explore the list of reviewed platforms which includes commercial and open source products.                                                                                  Browse Platforms      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/page-not-found/page-not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/page-not-found/page-not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/page-not-found/page-not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  Title\n\n\nPage not found\n\n\n\n    \n\n    \n                \n                    ./page-not-found.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    TitlePage not found'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RandomColorService.html":{"url":"injectables/RandomColorService.html","title":"injectable - RandomColorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RandomColorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/random-color.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRandomColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/random-color.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomColor\n                        \n                    \n                \n            \n            \n                \ngetRandomColor(hue?, luminosity?, count?, seed?, format?, alpha?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/random-color.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hue\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    luminosity\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    count\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    seed\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    format\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    alpha\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\ndeclare let randomColor: any;\n\n@Injectable()\nexport class RandomColorService {\n\n  constructor() {\n  }\n\n  getRandomColor(hue?, luminosity?, count?, seed?, format?, alpha?) {\n    return randomColor({\n      hue, luminosity, count, seed, format, alpha\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RenderedFilterBlock.html":{"url":"interfaces/RenderedFilterBlock.html","title":"interface - RenderedFilterBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RenderedFilterBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a rendered filter block in the UI which may comprise multiple filters with CriterionFilterConfiguration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            blockIcon\n                                        \n                                \n                                \n                                        \n                                            blockName\n                                        \n                                \n                                \n                                        \n                                            filters\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockIcon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Material Icon name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the filter block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filters:         CriterionFilterConfiguration[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterConfiguration[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of filters to be rendered in this block defined using CriterionFilterConfiguration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a rendered filter block in the UI which may comprise multiple filters with {@link CriterionFilterConfiguration}.\n */\nexport interface RenderedFilterBlock {\n  /**\n   * Name of the filter block\n   */\n  blockName: string;\n\n  /**\n   * Material Icon name\n   */\n  blockIcon?: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  /**\n   * Unique filter configuration identifier\n   */\n  filterId: string;\n\n  /**\n   * Technology category\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * Configuration name\n   */\n  name: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  /**\n   * Unique criterion identifier\n   */\n  criterionId: string;\n\n  /**\n   * Filter name\n   */\n  displayName: string;\n\n  /**\n   * Filter type {@see CriterionFilterType}\n   */\n  filterType: CriterionFilterType;\n\n  /**\n   * Distinct filter values obtained from the review data\n   */\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n */\nexport enum CriterionFilterType {\n  /**\n   * Indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n   */\n  bool = 'bool',\n\n  /**\n   * Indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n   */\n  lte = 'lte',\n\n  /**\n   * Indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n   */\n  gte = 'gte',\n\n  /**\n   * At least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n   */\n  containsOne = 'containsOne',\n\n  /**\n   * At least 1 arbitrary text value must be contained, translates to a toggle in the UI\n   */\n  containsAny = 'containsAny',\n\n  /**\n   * All specified text values must be contained, translates to a group of checkboxes in the UI\n   */\n  containsAll = 'containsAll',\n\n  /**\n   * All specified text values must not be contained, translates to a group of checkboxes in the UI\n   */\n  excludesAll = 'excludesAll'\n}\n\n/**\n * An interface representing a filter-based query mapping unique criteria IDs to respective [CriterionFilterValues]{@link CriterionFilterValue}.\n */\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\n/**\n * An interface representing a filter value used in a user's query.\n */\nexport interface CriterionFilterValue {\n  /**\n   * Filter type\n   */\n  filterType?: CriterionFilterType;\n\n  /**\n   * Actual value, type depends on the filter type and respective UI elements.\n   *\n   * @example\n   * a list of selected checkboxes resulting in a list of string values   *\n   */\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourcesComponent.html":{"url":"components/ResourcesComponent.html","title":"component - ResourcesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResourcesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/resources/resources.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-resources\n            \n\n            \n                styleUrls\n                ./resources.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./resources.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resources\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/resources/resources.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resources/resources.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resources/resources.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        resources\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InfoResourceSection[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/information/resources/resources.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/information/resources/resources.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {InfoResourceSection} from '../../shared/interfaces/info';\n\n@Component({\n  selector: 'app-resources',\n  templateUrl: './resources.component.html',\n  styleUrls: ['./resources.component.scss']\n})\nexport class ResourcesComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n  resources: InfoResourceSection[];\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.route.data.subscribe(data => {\n      this.resources = data.resolvedData;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    {{section.title}}\n  \n  \n    {{section.description}}\n  \n\n  \n    [{{i + 1}}]\n    \n      {{res.resource}}\n      (reference)\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./resources.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{section.title}}        {{section.description}}        [{{i + 1}}]          {{res.resource}}      (reference)      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResourcesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ResourcesResolver.html":{"url":"guards/ResourcesResolver.html","title":"guard - ResourcesResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ResourcesResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/information/resolvers/resources-resolver.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/resolvers/resources-resolver.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resolvers/resources-resolver.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {DataService} from '../../core/services/data.service';\nimport {InfoResourceSection} from '../../shared/interfaces/info';\n\n@Injectable()\nexport class ResourcesResolver implements Resolve {\n\n  constructor(private dataService: DataService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    return this.dataService.getInfoResources();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SetToArrayPipe.html":{"url":"pipes/SetToArrayPipe.html","title":"pipe - SetToArrayPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SetToArrayPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/set-to-array.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        setToArray\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: Set)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/set-to-array.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'setToArray'\n})\nexport class SetToArrayPipe implements PipeTransform {\n  transform(value: Set) {\n    return Array.from(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\n\nBottomNavComponent\n\nBottomNavComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nBottomNavComponent->SharedModule\n\n\n\n\n\nChildGroupingComponent\n\nChildGroupingComponent\n\nSharedModule -->\n\nChildGroupingComponent->SharedModule\n\n\n\n\n\nCriterionComponent\n\nCriterionComponent\n\nSharedModule -->\n\nCriterionComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nFrameworkRendererComponent\n\nFrameworkRendererComponent\n\nSharedModule -->\n\nFrameworkRendererComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nSharedModule -->\n\nPageNotFoundComponent->SharedModule\n\n\n\n\n\nSetToArrayPipe\n\nSetToArrayPipe\n\nSharedModule -->\n\nSetToArrayPipe->SharedModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nSharedModule -->\n\nTruncatePipe->SharedModule\n\n\n\n\n\nYesNoPipe\n\nYesNoPipe\n\nSharedModule -->\n\nYesNoPipe->SharedModule\n\n\n\n\n\nBottomNavComponent \n\nBottomNavComponent \n\nBottomNavComponent  -->\n\nSharedModule->BottomNavComponent \n\n\n\n\n\nChildGroupingComponent \n\nChildGroupingComponent \n\nChildGroupingComponent  -->\n\nSharedModule->ChildGroupingComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nFrameworkRendererComponent \n\nFrameworkRendererComponent \n\nFrameworkRendererComponent  -->\n\nSharedModule->FrameworkRendererComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nPageNotFoundComponent \n\nPageNotFoundComponent \n\nPageNotFoundComponent  -->\n\nSharedModule->PageNotFoundComponent \n\n\n\n\n\nSetToArrayPipe \n\nSetToArrayPipe \n\nSetToArrayPipe  -->\n\nSharedModule->SetToArrayPipe \n\n\n\n\n\nTruncatePipe \n\nTruncatePipe \n\nTruncatePipe  -->\n\nSharedModule->TruncatePipe \n\n\n\n\n\nYesNoPipe \n\nYesNoPipe \n\nYesNoPipe  -->\n\nSharedModule->YesNoPipe \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BottomNavComponent\n                        \n                        \n                            ChildGroupingComponent\n                        \n                        \n                            CriterionComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            FrameworkRendererComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            SetToArrayPipe\n                        \n                        \n                            TruncatePipe\n                        \n                        \n                            YesNoPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BottomNavComponent\n                        \n                        \n                            ChildGroupingComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            FrameworkRendererComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            SetToArrayPipe\n                        \n                        \n                            TruncatePipe\n                        \n                        \n                            YesNoPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MaterialModule} from './material.module';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\nimport {RouterModule} from '@angular/router';\nimport {TruncatePipe} from './pipes/truncate.pipe';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ChildGroupingComponent} from './child-grouping/child-grouping.component';\nimport {SetToArrayPipe} from './pipes/set-to-array.pipe';\nimport {CriterionComponent} from './criterion/criterion.component';\nimport {HeaderComponent} from './header/header.component';\nimport {FooterComponent} from './footer/footer.component';\nimport {FrameworkResolver} from '../information/resolvers/framework-resolver.service';\nimport {FrameworkRendererComponent} from './framework-renderer/framework-renderer.component';\nimport {BottomNavComponent} from './bottom-nav/bottom-nav.component';\nimport {YesNoPipe} from './pipes/yes-no.pipe';\n\n@NgModule({\n  declarations: [\n    PageNotFoundComponent,\n    TruncatePipe,\n    SetToArrayPipe,\n    YesNoPipe,\n    ChildGroupingComponent,\n    CriterionComponent,\n    HeaderComponent,\n    FooterComponent,\n    FrameworkRendererComponent,\n    BottomNavComponent\n  ],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MaterialModule, RouterModule],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    PageNotFoundComponent,\n    TruncatePipe,\n    SetToArrayPipe,\n    YesNoPipe,\n    ChildGroupingComponent,\n    HeaderComponent,\n    FooterComponent,\n    FrameworkRendererComponent,\n    BottomNavComponent\n  ],\n  providers: [FrameworkResolver]\n})\nexport class SharedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDataSource.html":{"url":"interfaces/SimpleDataSource.html","title":"interface - SimpleDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SimpleDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datasource.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    DataSource\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        connect\n                                    \n                                \n                                \n                                    \n                                        disconnect\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, combineLatest, Observable, of} from 'rxjs';\nimport {map, shareReplay, switchMap} from 'rxjs/operators';\nimport {Technology} from './interfaces/technology';\nimport {PageEvent} from '@angular/material/paginator';\nimport {CriteriaBasedQuery, CriterionFilterType, CriterionFilterValue} from './interfaces/filtering';\nimport {CriterionInstance} from './interfaces/classification';\n\nexport interface SimpleDataSource extends DataSource {\n  connect(): Observable;\n\n  disconnect(): void;\n}\n\nexport interface Sort {\n  property: keyof T;\n  order: 'asc' | 'desc';\n}\n\nexport class TechnologyDataSource implements SimpleDataSource {\n  private readonly data: Technology[];\n  private readonly pageNumber = new BehaviorSubject(0);\n  private readonly sort: BehaviorSubject>;\n  private readonly criteriaBasedQuery: BehaviorSubject;\n  private readonly nameBasedQuery: BehaviorSubject;\n\n  public isPaginated = true;\n  public totalInputSize: number;\n  public currentIndex = 0;\n  public pageNumber$ = this.pageNumber.asObservable();\n  public filteredData$: Observable;\n  public paginatedData$: Observable;\n\n  constructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, public pageSize = 10) {\n    this.data = data;\n    this.sort = new BehaviorSubject>(initialSort);\n    this.criteriaBasedQuery = new BehaviorSubject(initialQuery);\n    this.nameBasedQuery = new BehaviorSubject(undefined);\n\n    this.filteredData$ = combineLatest([this.criteriaBasedQuery, this.nameBasedQuery, this.sort]).pipe(\n      switchMap(([criteriaQuery, nameQuery, sort]) => {\n          const result = this.processData(this.data, criteriaQuery, nameQuery, sort);\n          this.totalInputSize = result.length;\n          return of(result);\n        }\n      ),\n      shareReplay(1)\n    );\n\n    this.paginatedData$ = combineLatest([this.filteredData$, this.pageNumber$]).pipe(\n      map(([data, pageNumber]) => {\n        const startIndex = pageNumber * this.pageSize;\n        let endIndex = startIndex + this.pageSize;\n        if (endIndex > data.length) {\n          endIndex = data.length;\n        }\n        return data.slice(startIndex, endIndex);\n      })\n    );\n  }\n\n  sortBy(sort: Partial>): void {\n    const lastSort = this.sort.getValue();\n    const nextSort = {...lastSort, ...sort};\n    this.sort.next(nextSort);\n  }\n\n  queryByCriteria(query: CriteriaBasedQuery): void {\n    const lastQuery = this.criteriaBasedQuery.getValue();\n    const nextQuery = {...lastQuery, ...query};\n    console.log('new query:');\n    this.pruneQuery(nextQuery);\n    console.log(nextQuery);\n    this.criteriaBasedQuery.next(nextQuery);\n  }\n\n  queryByName(query: string): void {\n    this.nameBasedQuery.next(query);\n  }\n\n  fetch(event: PageEvent): void {\n    this.pageSize = event.pageSize;\n    this.pageNumber.next(event.pageIndex);\n    this.currentIndex = event.pageIndex;\n  }\n\n  togglePagination(): void {\n    this.isPaginated = !this.isPaginated;\n  }\n\n  connect(): Observable {\n    if (this.isPaginated) {\n      return this.paginatedData$;\n    }\n    return this.filteredData$;\n  }\n\n  disconnect(): void {\n  }\n\n  private processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort): Technology[] {\n    let result: Technology[] = data;\n    if (nameQuery) {\n      result = data.filter(platform => nameQuery ? platform.platformName.toLocaleLowerCase().includes(nameQuery) : true);\n    }\n\n    if (criteriaQuery && Object.keys(criteriaQuery).length !== 0) {\n      Object.keys(criteriaQuery).forEach(key => {\n        if (TechnologyDataSource.canFilter(criteriaQuery[key])) {\n          result = result.filter(t => {\n            let filteringResult = false;\n            if (t.dossier.reviewedCriteria.has(key)) {\n              filteringResult = this.getFilteringResult(criteriaQuery[key], t.dossier.reviewedCriteria.get(key));\n            }\n            return filteringResult;\n          });\n        }\n      });\n      console.log('found: ' + result.length);\n    }\n\n    if (sort && sort.order === 'asc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? 1 : -1);\n    } else if (sort && sort.order === 'desc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? -1 : 1);\n    }\n\n    return result;\n  }\n\n  private static canFilter(filterValue: CriterionFilterValue): boolean {\n    if (filterValue.filterType && filterValue.filterType === CriterionFilterType.lte) {\n      return typeof filterValue.value === 'number';\n    } else if (filterValue.filterType && filterValue.filterType === CriterionFilterType.containsAll ||\n      filterValue.filterType === CriterionFilterType.containsOne ||\n      filterValue.filterType === CriterionFilterType.excludesAll) {\n      const v = filterValue.value as string[];\n      return v && v.length > 0;\n    } else if (filterValue.filterType === CriterionFilterType.bool || filterValue.filterType === CriterionFilterType.containsAny) {\n      return typeof filterValue.value === 'boolean';\n    }\n\n    return false;\n  }\n\n  private pruneQuery(nextQuery: { [p: string]: CriterionFilterValue }) {\n    const keysToDelete = [];\n    Object.keys(nextQuery).forEach(key => {\n        if (nextQuery[key].filterType === null) {\n          keysToDelete.push(key);\n        } else if (nextQuery[key].filterType === CriterionFilterType.bool ||\n          nextQuery[key].filterType === CriterionFilterType.containsAny ||\n          nextQuery[key].filterType === CriterionFilterType.lte) {\n          if (nextQuery[key].value === null) {\n            keysToDelete.push(key);\n          }\n        } else if (nextQuery[key].filterType === CriterionFilterType.containsOne ||\n          nextQuery[key].filterType === CriterionFilterType.containsAll ||\n          nextQuery[key].filterType === CriterionFilterType.excludesAll) {\n          const valueToCheck = nextQuery[key].value as string[];\n          if (valueToCheck.length === 0) {\n            keysToDelete.push(key);\n          }\n        }\n      }\n    );\n    keysToDelete.forEach(key => delete nextQuery[key]);\n  }\n\n  private getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    if (filterValue.filterType === CriterionFilterType.containsAny) {\n      return TechnologyDataSource.containsAny(filterValue, reviewedCriterion);\n    }\n\n    for (const reviewValue of reviewedCriterion.values) {\n      if (filterValue.filterType === CriterionFilterType.lte) {\n        return reviewedCriterion.values[0].value  allValues.push(v.value));\n        const target = Array.from(filterValue.value as string[]);\n\n        if (filterValue.filterType === CriterionFilterType.containsAll) {\n          return target.every(v => allValues.includes(v));\n        } else if (filterValue.filterType === CriterionFilterType.excludesAll) {\n          return target.every(v => !allValues.includes(v));\n        }\n      }\n    }\n  }\n\n  private static containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    const chosenValue = filterValue.value as boolean;\n    if (chosenValue) {\n      return Array.from(reviewedCriterion.values).length > 0;\n    } else {\n      return Array.from(reviewedCriterion.values).length === 0;\n    }\n  }\n\n  private static containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    const chosenValues = filterValue.value as string[];\n    if (chosenValues && chosenValues.length > 0) {\n      for (const entry of reviewedCriterion.values) {\n        const value = entry.value as string;\n        if (chosenValues.indexOf(value) !== -1) {\n          return true;\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sort.html":{"url":"interfaces/Sort.html","title":"interface - Sort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Sort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datasource.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            order\n                                        \n                                \n                                \n                                        \n                                            property\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:     \"asc\" | \"desc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"asc\" | \"desc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, combineLatest, Observable, of} from 'rxjs';\nimport {map, shareReplay, switchMap} from 'rxjs/operators';\nimport {Technology} from './interfaces/technology';\nimport {PageEvent} from '@angular/material/paginator';\nimport {CriteriaBasedQuery, CriterionFilterType, CriterionFilterValue} from './interfaces/filtering';\nimport {CriterionInstance} from './interfaces/classification';\n\nexport interface SimpleDataSource extends DataSource {\n  connect(): Observable;\n\n  disconnect(): void;\n}\n\nexport interface Sort {\n  property: keyof T;\n  order: 'asc' | 'desc';\n}\n\nexport class TechnologyDataSource implements SimpleDataSource {\n  private readonly data: Technology[];\n  private readonly pageNumber = new BehaviorSubject(0);\n  private readonly sort: BehaviorSubject>;\n  private readonly criteriaBasedQuery: BehaviorSubject;\n  private readonly nameBasedQuery: BehaviorSubject;\n\n  public isPaginated = true;\n  public totalInputSize: number;\n  public currentIndex = 0;\n  public pageNumber$ = this.pageNumber.asObservable();\n  public filteredData$: Observable;\n  public paginatedData$: Observable;\n\n  constructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, public pageSize = 10) {\n    this.data = data;\n    this.sort = new BehaviorSubject>(initialSort);\n    this.criteriaBasedQuery = new BehaviorSubject(initialQuery);\n    this.nameBasedQuery = new BehaviorSubject(undefined);\n\n    this.filteredData$ = combineLatest([this.criteriaBasedQuery, this.nameBasedQuery, this.sort]).pipe(\n      switchMap(([criteriaQuery, nameQuery, sort]) => {\n          const result = this.processData(this.data, criteriaQuery, nameQuery, sort);\n          this.totalInputSize = result.length;\n          return of(result);\n        }\n      ),\n      shareReplay(1)\n    );\n\n    this.paginatedData$ = combineLatest([this.filteredData$, this.pageNumber$]).pipe(\n      map(([data, pageNumber]) => {\n        const startIndex = pageNumber * this.pageSize;\n        let endIndex = startIndex + this.pageSize;\n        if (endIndex > data.length) {\n          endIndex = data.length;\n        }\n        return data.slice(startIndex, endIndex);\n      })\n    );\n  }\n\n  sortBy(sort: Partial>): void {\n    const lastSort = this.sort.getValue();\n    const nextSort = {...lastSort, ...sort};\n    this.sort.next(nextSort);\n  }\n\n  queryByCriteria(query: CriteriaBasedQuery): void {\n    const lastQuery = this.criteriaBasedQuery.getValue();\n    const nextQuery = {...lastQuery, ...query};\n    console.log('new query:');\n    this.pruneQuery(nextQuery);\n    console.log(nextQuery);\n    this.criteriaBasedQuery.next(nextQuery);\n  }\n\n  queryByName(query: string): void {\n    this.nameBasedQuery.next(query);\n  }\n\n  fetch(event: PageEvent): void {\n    this.pageSize = event.pageSize;\n    this.pageNumber.next(event.pageIndex);\n    this.currentIndex = event.pageIndex;\n  }\n\n  togglePagination(): void {\n    this.isPaginated = !this.isPaginated;\n  }\n\n  connect(): Observable {\n    if (this.isPaginated) {\n      return this.paginatedData$;\n    }\n    return this.filteredData$;\n  }\n\n  disconnect(): void {\n  }\n\n  private processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort): Technology[] {\n    let result: Technology[] = data;\n    if (nameQuery) {\n      result = data.filter(platform => nameQuery ? platform.platformName.toLocaleLowerCase().includes(nameQuery) : true);\n    }\n\n    if (criteriaQuery && Object.keys(criteriaQuery).length !== 0) {\n      Object.keys(criteriaQuery).forEach(key => {\n        if (TechnologyDataSource.canFilter(criteriaQuery[key])) {\n          result = result.filter(t => {\n            let filteringResult = false;\n            if (t.dossier.reviewedCriteria.has(key)) {\n              filteringResult = this.getFilteringResult(criteriaQuery[key], t.dossier.reviewedCriteria.get(key));\n            }\n            return filteringResult;\n          });\n        }\n      });\n      console.log('found: ' + result.length);\n    }\n\n    if (sort && sort.order === 'asc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? 1 : -1);\n    } else if (sort && sort.order === 'desc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? -1 : 1);\n    }\n\n    return result;\n  }\n\n  private static canFilter(filterValue: CriterionFilterValue): boolean {\n    if (filterValue.filterType && filterValue.filterType === CriterionFilterType.lte) {\n      return typeof filterValue.value === 'number';\n    } else if (filterValue.filterType && filterValue.filterType === CriterionFilterType.containsAll ||\n      filterValue.filterType === CriterionFilterType.containsOne ||\n      filterValue.filterType === CriterionFilterType.excludesAll) {\n      const v = filterValue.value as string[];\n      return v && v.length > 0;\n    } else if (filterValue.filterType === CriterionFilterType.bool || filterValue.filterType === CriterionFilterType.containsAny) {\n      return typeof filterValue.value === 'boolean';\n    }\n\n    return false;\n  }\n\n  private pruneQuery(nextQuery: { [p: string]: CriterionFilterValue }) {\n    const keysToDelete = [];\n    Object.keys(nextQuery).forEach(key => {\n        if (nextQuery[key].filterType === null) {\n          keysToDelete.push(key);\n        } else if (nextQuery[key].filterType === CriterionFilterType.bool ||\n          nextQuery[key].filterType === CriterionFilterType.containsAny ||\n          nextQuery[key].filterType === CriterionFilterType.lte) {\n          if (nextQuery[key].value === null) {\n            keysToDelete.push(key);\n          }\n        } else if (nextQuery[key].filterType === CriterionFilterType.containsOne ||\n          nextQuery[key].filterType === CriterionFilterType.containsAll ||\n          nextQuery[key].filterType === CriterionFilterType.excludesAll) {\n          const valueToCheck = nextQuery[key].value as string[];\n          if (valueToCheck.length === 0) {\n            keysToDelete.push(key);\n          }\n        }\n      }\n    );\n    keysToDelete.forEach(key => delete nextQuery[key]);\n  }\n\n  private getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    if (filterValue.filterType === CriterionFilterType.containsAny) {\n      return TechnologyDataSource.containsAny(filterValue, reviewedCriterion);\n    }\n\n    for (const reviewValue of reviewedCriterion.values) {\n      if (filterValue.filterType === CriterionFilterType.lte) {\n        return reviewedCriterion.values[0].value  allValues.push(v.value));\n        const target = Array.from(filterValue.value as string[]);\n\n        if (filterValue.filterType === CriterionFilterType.containsAll) {\n          return target.every(v => allValues.includes(v));\n        } else if (filterValue.filterType === CriterionFilterType.excludesAll) {\n          return target.every(v => !allValues.includes(v));\n        }\n      }\n    }\n  }\n\n  private static containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    const chosenValue = filterValue.value as boolean;\n    if (chosenValue) {\n      return Array.from(reviewedCriterion.values).length > 0;\n    } else {\n      return Array.from(reviewedCriterion.values).length === 0;\n    }\n  }\n\n  private static containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    const chosenValues = filterValue.value as string[];\n    if (chosenValues && chosenValues.length > 0) {\n      for (const entry of reviewedCriterion.values) {\n        const value = entry.value as string;\n        if (chosenValues.indexOf(value) !== -1) {\n          return true;\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableColumn.html":{"url":"classes/TableColumn.html","title":"class - TableColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/technologies/technology-table/technology-table.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                colSpan\n                            \n                            \n                                displayName\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        colSpan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {TechnologyDataSource} from '../../shared/datasource';\nimport {ClassificationFramework, CriteriaGrouping} from '../../shared/interfaces/classification';\nimport {TechnologyFilterConfiguration} from '../../shared/interfaces/filtering';\nimport {MatSidenav} from '@angular/material/sidenav';\n\nexport class TableColumn {\n  id: string;\n  displayName: string;\n  colSpan?: number;\n  color?: string;\n}\n\n@Component({\n  selector: 'app-technology-table',\n  templateUrl: './technology-table.component.html',\n  styleUrls: ['./technology-table.component.scss']\n})\nexport class TechnologyTableComponent implements OnInit {\n  @Input() dataSource: TechnologyDataSource;\n  @Input() framework: ClassificationFramework;\n  @Input() filterConfiguration: TechnologyFilterConfiguration;\n  @Input() sidenav: MatSidenav;\n\n  @ViewChild('content') tableContainer: ElementRef;\n\n  criteriaColumns: TableColumn[] = [];\n  groupingColumns: TableColumn[] = [];\n  groupingColumnIds: string[] = ['techNameHeader'];\n\n  columnsToDisplay = ['techName'];\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n    this.framework.viewCombinations.forEach(viewComb => {\n      if (viewComb.default) {\n        viewComb.views.forEach(view => {\n          const groupingColumns: TableColumn[] = [];\n          Array.from(view.groupings).forEach((grouping, index) => {\n            const color = index % 2 === 0 ? '#ccc' : 'white';\n            this.generateGroupingColumns(grouping, groupingColumns, color);\n          });\n          if (groupingColumns.length > 0) {\n            this.groupingColumns.push(...groupingColumns);\n            let viewColspan = 0;\n            groupingColumns.forEach(c => {\n              if (c.colSpan) {\n                viewColspan += c.colSpan;\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  private generateGroupingColumns(grouping: CriteriaGrouping, groupingColumns: TableColumn[], color: string, parentGroupingName?: string) {\n    let counter = 0;\n    grouping.criteria.forEach((c, index) => {\n      this.criteriaColumns.push({\n        id: c.id,\n        displayName: c.name,\n        color\n      } as TableColumn);\n      this.columnsToDisplay.push(c.id);\n      counter += 1;\n    });\n    if (counter > 0) {\n      const name = parentGroupingName ? parentGroupingName.concat('.').concat(grouping.name) : grouping.name;\n      groupingColumns.push({\n        id: grouping.id,\n        displayName: name,\n        color,\n        colSpan: counter\n      } as TableColumn);\n      this.groupingColumnIds.push(grouping.id);\n    }\n    if (grouping.groupings) {\n      grouping.groupings.forEach(g => this.generateGroupingColumns(g, groupingColumns, color, grouping.name));\n    }\n  }\n\n  scrollLeft() {\n    this.tableContainer.nativeElement.scrollLeft -= 150;\n  }\n\n  scrollRight() {\n    this.tableContainer.nativeElement.scrollLeft += 150;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologiesComponent.html":{"url":"components/TechnologiesComponent.html","title":"component - TechnologiesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TechnologiesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technologies.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technologies\n            \n\n            \n                styleUrls\n                ./technologies.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technologies.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                browsingMode\n                            \n                            \n                                dataSource\n                            \n                            \n                                filterConfiguration\n                            \n                            \n                                framework\n                            \n                            \n                                groupings\n                            \n                            \n                                mobileQuery\n                            \n                            \n                                renderedFilter\n                            \n                            \n                                sidenav\n                            \n                            \n                                subscriptions\n                            \n                            \n                                technologies\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractGroupings\n                            \n                            \n                                    Private\n                                generateFilterStructure\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onQueryUpdate\n                            \n                            \n                                    Private\n                                populateRenderBlocks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, route: ActivatedRoute, fb: FormBuilder, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technologies.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                    MediaMatcher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        extractGroupings\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractGroupings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateFilterStructure\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateFilterStructure()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onQueryUpdate\n                        \n                    \n                \n            \n            \n                \nonQueryUpdate($event: CriteriaBasedQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                CriteriaBasedQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        populateRenderBlocks\n                        \n                    \n                \n            \n            \n                \n                    \n                    populateRenderBlocks(grouping: CriteriaGrouping, filterLookup: Map, placement: Map, parentGroup?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grouping\n                                    \n                                                CriteriaGrouping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filterLookup\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    placement\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        browsingMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'explore'\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TechnologyDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterConfiguration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TechnologyFilterConfiguration\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        framework\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CriteriaGrouping[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mobileQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaQueryList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderedFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RenderedFilterBlock[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('sidenav')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        technologies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Technology[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {DataService} from '../core/services/data.service';\nimport {Subscription} from 'rxjs';\nimport {Technology} from '../shared/interfaces/technology';\nimport {ActivatedRoute} from '@angular/router';\nimport {TechnologyDataSource} from '../shared/datasource';\nimport {ClassificationFramework, CriteriaGrouping} from '../shared/interfaces/classification';\nimport {\n  CriteriaBasedQuery,\n  CriterionFilterConfiguration,\n  RenderedFilterBlock,\n  TechnologyFilterConfiguration\n} from '../shared/interfaces/filtering';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {MediaMatcher} from '@angular/cdk/layout';\nimport {FormBuilder} from '@angular/forms';\n\n@Component({\n  selector: 'app-technologies',\n  templateUrl: './technologies.component.html',\n  styleUrls: ['./technologies.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TechnologiesComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  technologies: Technology[];\n  framework: ClassificationFramework;\n  filterConfiguration: TechnologyFilterConfiguration;\n  groupings: CriteriaGrouping[] = [];\n\n  dataSource: TechnologyDataSource;\n  browsingMode = 'explore';\n\n  renderedFilter: RenderedFilterBlock[] = [];\n\n  @ViewChild('sidenav') sidenav: MatSidenav;\n  mobileQuery: MediaQueryList;\n\n  constructor(\n    private dataService: DataService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private changeDetectorRef: ChangeDetectorRef,\n    private media: MediaMatcher\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 850px)');\n    this.mobileQuery.addEventListener('change', () => changeDetectorRef.detectChanges());\n  }\n\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.route.queryParams.subscribe(params => {\n        const mode = params.browsingMode;\n        if (mode) {\n          this.browsingMode = mode;\n        }\n      })\n    );\n\n    this.subscriptions.push(\n      this.route.data.subscribe(data => {\n        this.technologies = data.resolvedData[0];\n        this.dataSource = new TechnologyDataSource(this.technologies, {property: 'platformName', order: 'asc'}, {});\n        this.framework = data.resolvedData[1];\n        this.filterConfiguration = data.resolvedData[2];\n\n        this.extractGroupings();\n        this.generateFilterStructure();\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private extractGroupings() {\n    for (const vc of this.framework.viewCombinations) {\n      if (vc.default) {\n        vc.views.forEach(v => this.groupings.push(...Array.from(v.groupings)));\n        break;\n      }\n    }\n  }\n\n  private generateFilterStructure() {\n    const criteriaFilterLookup = new Map(this.filterConfiguration.filters.map(c => [c.criterionId, c] as [string, CriterionFilterConfiguration]));\n    const placement: Map = new Map();\n    this.groupings.forEach(g => this.populateRenderBlocks(g, criteriaFilterLookup, placement));\n    this.renderedFilter = Array.from(placement.values());\n  }\n\n  private populateRenderBlocks(grouping: CriteriaGrouping, filterLookup: Map, placement: Map, parentGroup?: string) {\n    let current = placement.get(grouping.name);\n\n    if (current === undefined && grouping.criteria && grouping.criteria.size > 0) {\n      placement.set(grouping.name, {blockName: parentGroup ? parentGroup.concat(' : ').concat(grouping.name) : grouping.name, filters: []});\n      current = placement.get(grouping.name);\n    }\n\n    grouping.criteria.forEach(c => {\n      const config = filterLookup.get(c.id);\n      if (config) {\n        current.filters.push(config);\n      }\n    });\n\n    if (grouping.groupings) {\n      grouping.groupings.forEach(g => this.populateRenderBlocks(g, filterLookup, placement, grouping.name));\n    }\n  }\n\n  onQueryUpdate($event: CriteriaBasedQuery) {\n    this.dataSource.queryByCriteria($event);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Filter Panel\n        \n        \n          close\n        \n      \n      \n        Filter platforms by combining criteria values.\n      \n\n    \n\n    \n      \n         0\"\n                             class=\"sidenav__filter-block\">\n          \n            \n              {{filterBlock.blockIcon}}\n              {{filterBlock.blockName}}\n            \n          \n          \n\n          \n          \n\n        \n\n      \n\n    \n  \n\n  \n    \n    \n      \n        Platform Browser\n        \n        \n          \n            subject\n          \n          \n            search\n          \n        \n      \n\n      \n        \n          Browse through the list of available platforms, for a detailed view click on the corresponding platform.\n        \n        \n          filter_alt\n          Filters\n        \n      \n\n      \n      \n\n      \n      \n    \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./technologies.component.scss\n                \n                @import \"../_scss/shared\";\n@import \"../_scss/global/variables\";\n\n:host {\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.sidenav-container {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n  flex: 1;\n}\n\n.sidenav {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n  flex: 1;\n  width: 80%;\n  max-width: 30em;\n}\n\n.sidenav__filter-header {\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 1rem;\n}\n\n.sidenav__filter-title {\n  display: flex;\n  flex-flow: row nowrap;\n}\n\n.sidenav__accordion {\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.sidenav__filter-block {\n  flex-grow: 1;\n  flex-shrink: 0;\n  box-shadow: none !important;\n  border-radius: 0 !important;\n  border-bottom: 1px solid $gray-30;\n}\n\n.content-container {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n  flex: 1;\n}\n\n.platforms-main {\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  @include bg-grey;\n  padding-top: 1.5rem;\n}\n\n.platforms__controls {\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: space-evenly;\n  width: 90%;\n}\n\n.platforms__description-block {\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  width: 90%;\n}\n\n.platforms__description {\n  flex: 1 1 max-content;\n}\n\n.platforms__filter-button {\n  height: 2.5rem;\n  @include nav_item;\n}\n\n.platforms__filter-button-title {\n  display: none;\n}\n\n.platforms__header {\n  flex: 1 1 auto;\n}\n\n.platforms__settings {\n  @include nav_item;\n}\n\n@media screen and (min-width: 900px) {\n  .platforms__controls, .platforms__description-block  {\n    max-width: 910px;\n  }\n\n  .platforms__filter-button-title {\n    display: inline;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Filter Panel                          close                            Filter platforms by combining criteria values.                             0\"                             class=\"sidenav__filter-block\">                                    {{filterBlock.blockIcon}}              {{filterBlock.blockName}}                                                                                                Platform Browser                                      subject                                search                                                Browse through the list of available platforms, for a detailed view click on the corresponding platform.                          filter_alt          Filters                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologiesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TechnologiesModule.html":{"url":"modules/TechnologiesModule.html","title":"module - TechnologiesModule","body":"\n                   \n\n\n\n\n    Modules\n    TechnologiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TechnologiesModule\n\n\n\ncluster_TechnologiesModule_imports\n\n\n\ncluster_TechnologiesModule_declarations\n\n\n\n\nCriterionFilterComponent\n\nCriterionFilterComponent\n\n\n\nTechnologiesModule\n\nTechnologiesModule\n\nTechnologiesModule -->\n\nCriterionFilterComponent->TechnologiesModule\n\n\n\n\n\nTechnologiesComponent\n\nTechnologiesComponent\n\nTechnologiesModule -->\n\nTechnologiesComponent->TechnologiesModule\n\n\n\n\n\nTechnologyDetailsComponent\n\nTechnologyDetailsComponent\n\nTechnologiesModule -->\n\nTechnologyDetailsComponent->TechnologiesModule\n\n\n\n\n\nTechnologyListComponent\n\nTechnologyListComponent\n\nTechnologiesModule -->\n\nTechnologyListComponent->TechnologiesModule\n\n\n\n\n\nTechnologyTableComponent\n\nTechnologyTableComponent\n\nTechnologiesModule -->\n\nTechnologyTableComponent->TechnologiesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTechnologiesModule -->\n\nSharedModule->TechnologiesModule\n\n\n\n\n\nTechnologiesRoutingModule\n\nTechnologiesRoutingModule\n\nTechnologiesModule -->\n\nTechnologiesRoutingModule->TechnologiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/technologies/technologies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CriterionFilterComponent\n                        \n                        \n                            TechnologiesComponent\n                        \n                        \n                            TechnologyDetailsComponent\n                        \n                        \n                            TechnologyListComponent\n                        \n                        \n                            TechnologyTableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TechnologiesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TechnologiesComponent} from './technologies.component';\nimport {TechnologiesRoutingModule} from './technologies-routing.module';\nimport {SharedModule} from '../shared/shared.module';\nimport {TechnologyListComponent} from './technology-list/technology-list.component';\nimport {TechnologyDetailsComponent} from './technology-details/technology-details.component';\nimport {TechnologyTableComponent} from './technology-table/technology-table.component';\nimport {TechnologiesResolver} from './technologies-resolver.service';\nimport {CriterionFilterComponent} from './criterion-filter/criterion-filter.component';\nimport {TechnologyDetailsResolverService} from './technology-details-resolver.service';\n\n@NgModule({\n  declarations: [TechnologiesComponent, TechnologyListComponent, TechnologyDetailsComponent, TechnologyTableComponent, CriterionFilterComponent],\n  imports: [CommonModule, SharedModule, TechnologiesRoutingModule],\n  providers: [TechnologiesResolver, TechnologyDetailsResolverService]\n\n})\nexport class TechnologiesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TechnologiesResolver.html":{"url":"guards/TechnologiesResolver.html","title":"guard - TechnologiesResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TechnologiesResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/technologies/technologies-resolver.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, config: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technologies-resolver.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies-resolver.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {ClassificationFramework} from '../shared/interfaces/classification';\nimport {forkJoin, Observable} from 'rxjs';\nimport {DataService} from '../core/services/data.service';\nimport {Technology} from '../shared/interfaces/technology';\nimport {TechnologyFilterConfiguration} from '../shared/interfaces/filtering';\nimport {AppConfigService} from '../core/services/app-config.service';\n\n@Injectable()\nexport class TechnologiesResolver implements Resolve {\n  constructor(private dataService: DataService, private config: AppConfigService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    const category = this.config.defaultTechCategory;\n\n    const technologies = this.dataService.getTechnologiesOfCategory(category, true);\n    const framework = this.dataService.getFrameworkForTechnologyType(category);\n    const filter = this.dataService.getTechnologyFilter(category);\n\n    return forkJoin([technologies, framework, filter]);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TechnologiesRoutingModule.html":{"url":"modules/TechnologiesRoutingModule.html","title":"module - TechnologiesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TechnologiesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/technologies/technologies-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {TechnologiesComponent} from './technologies.component';\nimport {TechnologyDetailsComponent} from './technology-details/technology-details.component';\nimport {TechnologiesResolver} from './technologies-resolver.service';\nimport {TechnologyDetailsResolverService} from './technology-details-resolver.service';\n\nconst platformRoutes: Routes = [\n  {path: '', component: TechnologiesComponent, resolve: {resolvedData: TechnologiesResolver}},\n  {path: ':platformId', component: TechnologyDetailsComponent, resolve: {resolvedData: TechnologyDetailsResolverService}}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(platformRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class TechnologiesRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Technology.html":{"url":"interfaces/Technology.html","title":"interface - Technology","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Technology\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/technology.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a technology for comparison,\nwhich might contain the review data in a form of a TechnologyDossier.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dossier\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logoLocation\n                                        \n                                \n                                \n                                        \n                                            logoLocator\n                                        \n                                \n                                \n                                        \n                                            platformName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            shortDescription\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category this technology belongs to.\nFunction-as-a-Service platforms\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Full description shown in technology details.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dossier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dossier:         TechnologyDossier\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyDossier\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A TechnologyDossier storing the review data.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique technology identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoLocation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoLocation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Technology logo location path generated by the LogoLocatorService.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoLocator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoLocator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A string value that can be used by the LogoLocatorService to locate the technology logo.\nazure.functions for Azure Functions,\naws.s3 for AWS S3\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Technology name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shortDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Short description shown in technology lists.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {CriterionInstance} from './classification';\n\n/**\n * An interface representing a technology for comparison,\n * which might contain the review data in a form of a {@link TechnologyDossier}.\n *\n * @example a FaaS platform\n */\nexport interface Technology {\n  /**\n   * Unique technology identifier.\n   */\n  id: string;\n\n  /**\n   * Technology name.\n   */\n  platformName: string;\n\n  /**\n   * [Category]{@link TechnologyCategory} this technology belongs to.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  category: TechnologyCategory;\n\n  /**\n   * A string value that can be used by the {@link LogoLocatorService} to locate the technology logo.\n   *\n   * @example\n   * azure.functions for Azure Functions,\n   * aws.s3 for AWS S3\n   */\n  logoLocator: string;\n\n  /**\n   * Technology logo location path generated by the {@link LogoLocatorService}.\n   */\n  logoLocation?: string;\n\n  /**\n   * Short description shown in technology lists.\n   */\n  shortDescription?: string;\n\n  /**\n   * Full description shown in technology details.\n   */\n  description?: string;\n\n  /**\n   * A [TechnologyDossier]{@link TechnologyDossier} storing the review data.\n   */\n  dossier?: TechnologyDossier;\n}\n\n/**\n * An interface representing the review data which comprises [CriterionInstances]{@link CriterionInstance} related to a particular technology.\n */\nexport interface TechnologyDossier {\n  /**\n   * Unique technology identifier.\n   */\n  platformId: string;\n\n  /**\n   * Date of review.\n   */\n  reviewDate?: Date;\n\n  /**\n   * A map of CriterionInstance unique IDs and {@link CriterionInstance} encompassing the review data.\n   */\n  reviewedCriteria: Map;\n}\n\n/**\n * An enum representing different technology categories.\n *\n * @example\n * faas for Function-as-a-Service\n * baas for Blockchain-as-a-Service\n */\nexport enum TechnologyCategory {\n  faas = 'faas', baas = 'baas'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TechnologyDataSource.html":{"url":"classes/TechnologyDataSource.html","title":"class - TechnologyDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TechnologyDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datasource.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            SimpleDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                criteriaBasedQuery\n                            \n                            \n                                    Public\n                                currentIndex\n                            \n                            \n                                    Private\n                                    Readonly\n                                data\n                            \n                            \n                                    Public\n                                filteredData$\n                            \n                            \n                                    Public\n                                isPaginated\n                            \n                            \n                                    Private\n                                    Readonly\n                                nameBasedQuery\n                            \n                            \n                                    Private\n                                    Readonly\n                                pageNumber\n                            \n                            \n                                    Public\n                                pageNumber$\n                            \n                            \n                                    Public\n                                pageSize\n                            \n                            \n                                    Public\n                                paginatedData$\n                            \n                            \n                                    Private\n                                    Readonly\n                                sort\n                            \n                            \n                                    Public\n                                totalInputSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                canFilter\n                            \n                            \n                                connect\n                            \n                            \n                                    Private\n                                    Static\n                                containsAny\n                            \n                            \n                                    Private\n                                    Static\n                                containsOne\n                            \n                            \n                                disconnect\n                            \n                            \n                                fetch\n                            \n                            \n                                    Private\n                                getFilteringResult\n                            \n                            \n                                    Private\n                                processData\n                            \n                            \n                                    Private\n                                pruneQuery\n                            \n                            \n                                queryByCriteria\n                            \n                            \n                                queryByName\n                            \n                            \n                                sortBy\n                            \n                            \n                                togglePagination\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, pageSize: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/datasource.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Technology[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialSort\n                                                  \n                                                        \n                                                                    Sort\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialQuery\n                                                  \n                                                        \n                                                                        CriteriaBasedQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pageSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        criteriaBasedQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Technology[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filteredData$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isPaginated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        nameBasedQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pageNumber$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.pageNumber.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        paginatedData$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        totalInputSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:28\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        canFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    canFilter(filterValue: CriterionFilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        containsAny\n                        \n                    \n                \n            \n            \n                \n                    \n                    containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewedCriterion\n                                    \n                                                CriterionInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        containsOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewedCriterion\n                                    \n                                                CriterionInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetch\n                        \n                    \n                \n            \n            \n                \nfetch(event: PageEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            PageEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFilteringResult\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewedCriterion\n                                    \n                                                CriterionInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        processData\n                        \n                    \n                \n            \n            \n                \n                    \n                    processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Technology[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    criteriaQuery\n                                    \n                                                CriteriaBasedQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameQuery\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sort\n                                    \n                                            Sort\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Technology[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        pruneQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    pruneQuery(nextQuery: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nextQuery\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryByCriteria\n                        \n                    \n                \n            \n            \n                \nqueryByCriteria(query: CriteriaBasedQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                CriteriaBasedQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryByName\n                        \n                    \n                \n            \n            \n                \nqueryByName(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortBy\n                        \n                    \n                \n            \n            \n                \nsortBy(sort: Partial>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sort\n                                    \n                                            Partial>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePagination\n                        \n                    \n                \n            \n            \n                \ntogglePagination()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, combineLatest, Observable, of} from 'rxjs';\nimport {map, shareReplay, switchMap} from 'rxjs/operators';\nimport {Technology} from './interfaces/technology';\nimport {PageEvent} from '@angular/material/paginator';\nimport {CriteriaBasedQuery, CriterionFilterType, CriterionFilterValue} from './interfaces/filtering';\nimport {CriterionInstance} from './interfaces/classification';\n\nexport interface SimpleDataSource extends DataSource {\n  connect(): Observable;\n\n  disconnect(): void;\n}\n\nexport interface Sort {\n  property: keyof T;\n  order: 'asc' | 'desc';\n}\n\nexport class TechnologyDataSource implements SimpleDataSource {\n  private readonly data: Technology[];\n  private readonly pageNumber = new BehaviorSubject(0);\n  private readonly sort: BehaviorSubject>;\n  private readonly criteriaBasedQuery: BehaviorSubject;\n  private readonly nameBasedQuery: BehaviorSubject;\n\n  public isPaginated = true;\n  public totalInputSize: number;\n  public currentIndex = 0;\n  public pageNumber$ = this.pageNumber.asObservable();\n  public filteredData$: Observable;\n  public paginatedData$: Observable;\n\n  constructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, public pageSize = 10) {\n    this.data = data;\n    this.sort = new BehaviorSubject>(initialSort);\n    this.criteriaBasedQuery = new BehaviorSubject(initialQuery);\n    this.nameBasedQuery = new BehaviorSubject(undefined);\n\n    this.filteredData$ = combineLatest([this.criteriaBasedQuery, this.nameBasedQuery, this.sort]).pipe(\n      switchMap(([criteriaQuery, nameQuery, sort]) => {\n          const result = this.processData(this.data, criteriaQuery, nameQuery, sort);\n          this.totalInputSize = result.length;\n          return of(result);\n        }\n      ),\n      shareReplay(1)\n    );\n\n    this.paginatedData$ = combineLatest([this.filteredData$, this.pageNumber$]).pipe(\n      map(([data, pageNumber]) => {\n        const startIndex = pageNumber * this.pageSize;\n        let endIndex = startIndex + this.pageSize;\n        if (endIndex > data.length) {\n          endIndex = data.length;\n        }\n        return data.slice(startIndex, endIndex);\n      })\n    );\n  }\n\n  sortBy(sort: Partial>): void {\n    const lastSort = this.sort.getValue();\n    const nextSort = {...lastSort, ...sort};\n    this.sort.next(nextSort);\n  }\n\n  queryByCriteria(query: CriteriaBasedQuery): void {\n    const lastQuery = this.criteriaBasedQuery.getValue();\n    const nextQuery = {...lastQuery, ...query};\n    console.log('new query:');\n    this.pruneQuery(nextQuery);\n    console.log(nextQuery);\n    this.criteriaBasedQuery.next(nextQuery);\n  }\n\n  queryByName(query: string): void {\n    this.nameBasedQuery.next(query);\n  }\n\n  fetch(event: PageEvent): void {\n    this.pageSize = event.pageSize;\n    this.pageNumber.next(event.pageIndex);\n    this.currentIndex = event.pageIndex;\n  }\n\n  togglePagination(): void {\n    this.isPaginated = !this.isPaginated;\n  }\n\n  connect(): Observable {\n    if (this.isPaginated) {\n      return this.paginatedData$;\n    }\n    return this.filteredData$;\n  }\n\n  disconnect(): void {\n  }\n\n  private processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort): Technology[] {\n    let result: Technology[] = data;\n    if (nameQuery) {\n      result = data.filter(platform => nameQuery ? platform.platformName.toLocaleLowerCase().includes(nameQuery) : true);\n    }\n\n    if (criteriaQuery && Object.keys(criteriaQuery).length !== 0) {\n      Object.keys(criteriaQuery).forEach(key => {\n        if (TechnologyDataSource.canFilter(criteriaQuery[key])) {\n          result = result.filter(t => {\n            let filteringResult = false;\n            if (t.dossier.reviewedCriteria.has(key)) {\n              filteringResult = this.getFilteringResult(criteriaQuery[key], t.dossier.reviewedCriteria.get(key));\n            }\n            return filteringResult;\n          });\n        }\n      });\n      console.log('found: ' + result.length);\n    }\n\n    if (sort && sort.order === 'asc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? 1 : -1);\n    } else if (sort && sort.order === 'desc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? -1 : 1);\n    }\n\n    return result;\n  }\n\n  private static canFilter(filterValue: CriterionFilterValue): boolean {\n    if (filterValue.filterType && filterValue.filterType === CriterionFilterType.lte) {\n      return typeof filterValue.value === 'number';\n    } else if (filterValue.filterType && filterValue.filterType === CriterionFilterType.containsAll ||\n      filterValue.filterType === CriterionFilterType.containsOne ||\n      filterValue.filterType === CriterionFilterType.excludesAll) {\n      const v = filterValue.value as string[];\n      return v && v.length > 0;\n    } else if (filterValue.filterType === CriterionFilterType.bool || filterValue.filterType === CriterionFilterType.containsAny) {\n      return typeof filterValue.value === 'boolean';\n    }\n\n    return false;\n  }\n\n  private pruneQuery(nextQuery: { [p: string]: CriterionFilterValue }) {\n    const keysToDelete = [];\n    Object.keys(nextQuery).forEach(key => {\n        if (nextQuery[key].filterType === null) {\n          keysToDelete.push(key);\n        } else if (nextQuery[key].filterType === CriterionFilterType.bool ||\n          nextQuery[key].filterType === CriterionFilterType.containsAny ||\n          nextQuery[key].filterType === CriterionFilterType.lte) {\n          if (nextQuery[key].value === null) {\n            keysToDelete.push(key);\n          }\n        } else if (nextQuery[key].filterType === CriterionFilterType.containsOne ||\n          nextQuery[key].filterType === CriterionFilterType.containsAll ||\n          nextQuery[key].filterType === CriterionFilterType.excludesAll) {\n          const valueToCheck = nextQuery[key].value as string[];\n          if (valueToCheck.length === 0) {\n            keysToDelete.push(key);\n          }\n        }\n      }\n    );\n    keysToDelete.forEach(key => delete nextQuery[key]);\n  }\n\n  private getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    if (filterValue.filterType === CriterionFilterType.containsAny) {\n      return TechnologyDataSource.containsAny(filterValue, reviewedCriterion);\n    }\n\n    for (const reviewValue of reviewedCriterion.values) {\n      if (filterValue.filterType === CriterionFilterType.lte) {\n        return reviewedCriterion.values[0].value  allValues.push(v.value));\n        const target = Array.from(filterValue.value as string[]);\n\n        if (filterValue.filterType === CriterionFilterType.containsAll) {\n          return target.every(v => allValues.includes(v));\n        } else if (filterValue.filterType === CriterionFilterType.excludesAll) {\n          return target.every(v => !allValues.includes(v));\n        }\n      }\n    }\n  }\n\n  private static containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    const chosenValue = filterValue.value as boolean;\n    if (chosenValue) {\n      return Array.from(reviewedCriterion.values).length > 0;\n    } else {\n      return Array.from(reviewedCriterion.values).length === 0;\n    }\n  }\n\n  private static containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    const chosenValues = filterValue.value as string[];\n    if (chosenValues && chosenValues.length > 0) {\n      for (const entry of reviewedCriterion.values) {\n        const value = entry.value as string;\n        if (chosenValues.indexOf(value) !== -1) {\n          return true;\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologyDetailsComponent.html":{"url":"components/TechnologyDetailsComponent.html","title":"component - TechnologyDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TechnologyDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technology-details/technology-details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technology-details\n            \n\n            \n                styleUrls\n                ./technology-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technology-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bottomNav\n                            \n                            \n                                framework\n                            \n                            \n                                platform\n                            \n                            \n                                selectedViewCombination\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onWindowScroll\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-details/technology-details.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:scroll\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:scroll(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-details/technology-details.component.ts:32\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-details/technology-details.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onWindowScroll\n                        \n                    \n                \n            \n            \n                \nonWindowScroll(e)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:scroll', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/technologies/technology-details/technology-details.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bottomNav\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BottomNavComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('bottomNavComponent')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-details/technology-details.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        framework\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-details/technology-details.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Technology\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-details/technology-details.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedViewCombination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClassificationViewCombination\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-details/technology-details.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, HostListener, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Technology} from '../../shared/interfaces/technology';\nimport {ClassificationFramework, ClassificationViewCombination} from '../../shared/interfaces/classification';\nimport {BottomNavComponent} from '../../shared/bottom-nav/bottom-nav.component';\n\n@Component({\n  selector: 'app-technology-details',\n  templateUrl: './technology-details.component.html',\n  styleUrls: ['./technology-details.component.scss']\n})\nexport class TechnologyDetailsComponent implements OnInit {\n  @ViewChild('bottomNavComponent') bottomNav: BottomNavComponent;\n\n  platform: Technology;\n  framework: ClassificationFramework;\n  selectedViewCombination: ClassificationViewCombination;\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.platform = data.resolvedData[0];\n      this.framework = data.resolvedData[1];\n\n      this.framework.viewCombinations.forEach(vc => vc.default ? this.selectedViewCombination = vc : false);\n    });\n  }\n\n  @HostListener('window:scroll', ['$event'])\n  onWindowScroll(e) {\n    this.bottomNav.toTop = window.pageYOffset > 200;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    {{platform.platformName}}\n    {{platform.description}}\n\n    \n      Technology View Mode\n      \n        {{ option.name }}\n      \n    \n  \n  \n  \n\n\n\n  \n    home Home\n  \n  \n    view_list Platforms\n  \n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./technology-details.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.technology {\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  margin: 0 auto;\n}\n\n.technology__header-block {\n  padding: 0 1rem;\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.technology__logo {\n  max-height: 5rem;\n  max-width: 10rem;\n  margin: 1.5rem .5rem 0;\n  border: none;\n  align-self: center;\n}\n\n.technology__header {\n  margin-top: 2rem;\n  align-self: center;\n  //color: $violet-600;\n}\n\n.technology__view-title {\n  margin-left: .5rem;\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{platform.platformName}}    {{platform.description}}          Technology View Mode              {{ option.name }}                      home Home        view_list Platforms  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologyDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TechnologyDetailsResolverService.html":{"url":"guards/TechnologyDetailsResolverService.html","title":"guard - TechnologyDetailsResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TechnologyDetailsResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/technologies/technology-details-resolver.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, config: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-details-resolver.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-details-resolver.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {ClassificationFramework} from '../shared/interfaces/classification';\nimport {forkJoin, Observable} from 'rxjs';\nimport {DataService} from '../core/services/data.service';\nimport {Technology} from '../shared/interfaces/technology';\nimport {AppConfigService} from '../core/services/app-config.service';\n\n@Injectable()\nexport class TechnologyDetailsResolverService implements Resolve {\n  constructor(private dataService: DataService, private config: AppConfigService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    const id = route.params.platformId;\n    const category = this.config.defaultTechCategory;\n\n    return forkJoin([\n      this.dataService.getTechnology(id, true),\n      this.dataService.getFrameworkForTechnologyType(category)\n    ]);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TechnologyDossier.html":{"url":"interfaces/TechnologyDossier.html","title":"interface - TechnologyDossier","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TechnologyDossier\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/technology.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing the review data which comprises CriterionInstances related to a particular technology.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            platformId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reviewDate\n                                        \n                                \n                                \n                                        \n                                            reviewedCriteria\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique technology identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reviewDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Date of review.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewedCriteria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reviewedCriteria:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A map of CriterionInstance unique IDs and CriterionInstance encompassing the review data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {CriterionInstance} from './classification';\n\n/**\n * An interface representing a technology for comparison,\n * which might contain the review data in a form of a {@link TechnologyDossier}.\n *\n * @example a FaaS platform\n */\nexport interface Technology {\n  /**\n   * Unique technology identifier.\n   */\n  id: string;\n\n  /**\n   * Technology name.\n   */\n  platformName: string;\n\n  /**\n   * [Category]{@link TechnologyCategory} this technology belongs to.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  category: TechnologyCategory;\n\n  /**\n   * A string value that can be used by the {@link LogoLocatorService} to locate the technology logo.\n   *\n   * @example\n   * azure.functions for Azure Functions,\n   * aws.s3 for AWS S3\n   */\n  logoLocator: string;\n\n  /**\n   * Technology logo location path generated by the {@link LogoLocatorService}.\n   */\n  logoLocation?: string;\n\n  /**\n   * Short description shown in technology lists.\n   */\n  shortDescription?: string;\n\n  /**\n   * Full description shown in technology details.\n   */\n  description?: string;\n\n  /**\n   * A [TechnologyDossier]{@link TechnologyDossier} storing the review data.\n   */\n  dossier?: TechnologyDossier;\n}\n\n/**\n * An interface representing the review data which comprises [CriterionInstances]{@link CriterionInstance} related to a particular technology.\n */\nexport interface TechnologyDossier {\n  /**\n   * Unique technology identifier.\n   */\n  platformId: string;\n\n  /**\n   * Date of review.\n   */\n  reviewDate?: Date;\n\n  /**\n   * A map of CriterionInstance unique IDs and {@link CriterionInstance} encompassing the review data.\n   */\n  reviewedCriteria: Map;\n}\n\n/**\n * An enum representing different technology categories.\n *\n * @example\n * faas for Function-as-a-Service\n * baas for Blockchain-as-a-Service\n */\nexport enum TechnologyCategory {\n  faas = 'faas', baas = 'baas'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TechnologyDossierResponse.html":{"url":"interfaces/TechnologyDossierResponse.html","title":"interface - TechnologyDossierResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TechnologyDossierResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            platformId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reviewDate\n                                        \n                                \n                                \n                                        \n                                            reviewedCriteria\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reviewDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewedCriteria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reviewedCriteria:         CriteriaReview\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriteriaReview\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TechnologyFilterConfiguration.html":{"url":"interfaces/TechnologyFilterConfiguration.html","title":"interface - TechnologyFilterConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TechnologyFilterConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a filter configuration for a given technology TechnologyCategory.\nThis configuration defines which criteria have dedicated filter elements in the UI.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filterId\n                                        \n                                \n                                \n                                        \n                                            filters\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            technologyCategory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique filter configuration identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filters:         CriterionFilterConfiguration[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterConfiguration[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of filters to be rendered in this block defined using CriterionFilterConfiguration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Technology category\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a rendered filter block in the UI which may comprise multiple filters with {@link CriterionFilterConfiguration}.\n */\nexport interface RenderedFilterBlock {\n  /**\n   * Name of the filter block\n   */\n  blockName: string;\n\n  /**\n   * Material Icon name\n   */\n  blockIcon?: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  /**\n   * Unique filter configuration identifier\n   */\n  filterId: string;\n\n  /**\n   * Technology category\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * Configuration name\n   */\n  name: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  /**\n   * Unique criterion identifier\n   */\n  criterionId: string;\n\n  /**\n   * Filter name\n   */\n  displayName: string;\n\n  /**\n   * Filter type {@see CriterionFilterType}\n   */\n  filterType: CriterionFilterType;\n\n  /**\n   * Distinct filter values obtained from the review data\n   */\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n */\nexport enum CriterionFilterType {\n  /**\n   * Indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n   */\n  bool = 'bool',\n\n  /**\n   * Indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n   */\n  lte = 'lte',\n\n  /**\n   * Indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n   */\n  gte = 'gte',\n\n  /**\n   * At least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n   */\n  containsOne = 'containsOne',\n\n  /**\n   * At least 1 arbitrary text value must be contained, translates to a toggle in the UI\n   */\n  containsAny = 'containsAny',\n\n  /**\n   * All specified text values must be contained, translates to a group of checkboxes in the UI\n   */\n  containsAll = 'containsAll',\n\n  /**\n   * All specified text values must not be contained, translates to a group of checkboxes in the UI\n   */\n  excludesAll = 'excludesAll'\n}\n\n/**\n * An interface representing a filter-based query mapping unique criteria IDs to respective [CriterionFilterValues]{@link CriterionFilterValue}.\n */\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\n/**\n * An interface representing a filter value used in a user's query.\n */\nexport interface CriterionFilterValue {\n  /**\n   * Filter type\n   */\n  filterType?: CriterionFilterType;\n\n  /**\n   * Actual value, type depends on the filter type and respective UI elements.\n   *\n   * @example\n   * a list of selected checkboxes resulting in a list of string values   *\n   */\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologyListComponent.html":{"url":"components/TechnologyListComponent.html","title":"component - TechnologyListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TechnologyListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technology-list/technology-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technology-list\n            \n\n            \n                styleUrls\n                ./technology-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technology-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageSizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNameChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-list/technology-list.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :         TechnologyDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-list/technology-list.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-list/technology-list.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNameChange\n                        \n                    \n                \n            \n            \n                \nonNameChange(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-list/technology-list.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [5, 10]\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-list/technology-list.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {TechnologyDataSource} from '../../shared/datasource';\n\n@Component({\n  selector: 'app-technology-list',\n  templateUrl: './technology-list.component.html',\n  styleUrls: ['./technology-list.component.scss']\n})\nexport class TechnologyListComponent implements OnInit {\n  @Input() dataSource: TechnologyDataSource;\n  pageSizeOptions: number[] = [5, 10];\n\n  constructor() {\n  }\n\n  onNameChange(name: string) {\n    this.dataSource.queryByName(name);\n    this.dataSource.fetch({pageIndex: 0, length: this.dataSource.totalInputSize, pageSize: this.dataSource.pageSize});\n  }\n\n  ngOnInit(): void {\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n      Filter by name\n      \n      search\n    \n  \n\n  \n    \n      \n        \n         {{p.platformName}} -->\n\n        \n          \n            {{p.shortDescription}}\n          \n\n        \n\n        \n          arrow_forward\n        \n\n      \n    \n  \n\n  \n  \n\n\n\n\n    \n\n    \n                \n                    ./technology-list.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  flex: 1;\n}\n\n.platforms-list {\n  margin-bottom: 1rem;\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.platforms-list__search {\n  display: flex;\n  justify-content: center;\n}\n\n.platforms-list__search-field {\n  width: 80%;\n}\n\n.platforms-list__cards {\n  flex: 1;\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: flex-start;\n}\n\n.platforms-list__card {\n  margin: 0.2rem .5rem 0 .5rem;\n  padding: 0 .5rem !important;\n  border-left: .2rem solid $violet-400;\n  transition: all .3s ease;\n  flex: 1 1 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n\n  &:hover {\n    border-left: .2rem solid $salad-600;\n    box-shadow: 0 10px 16px rgba(0, 0, 0, 0.2) !important;\n    cursor: pointer;\n  }\n}\n\n.platforms-list__logo {\n  max-height: 3rem;\n  max-width: 3rem;\n  margin: 0 .5rem;\n  border: none;\n  align-self: center;\n}\n\n.platforms-list__card-spacer {\n  flex-grow: 2;\n}\n\n.platforms-list__card-description {\n  flex: 1;\n  font-size: .8rem;\n  padding-right: .5rem;\n}\n\n.platforms-list__explore-button {\n  @include nav_item;\n}\n\n.platforms-list__paginator {\n  background: none;\n}\n\n@media (min-width: 790px) {\n  .platform-section__card-description {\n    display: flex;\n    flex: 1;\n    font-size: .95rem;\n  }\n\n  .platforms-list__cards {\n    display: flex;\n    flex-flow: row wrap;\n  }\n\n  .platforms-list__card {\n    flex: 1 1 auto;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n  }\n\n}\n\n@media screen and (min-width: 900px) {\n  .platforms-list {\n    max-width: 910px;\n    min-width: 900px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Filter by name            search                                   {{p.platformName}} -->                              {{p.shortDescription}}                                    arrow_forward                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologyListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologyTableComponent.html":{"url":"components/TechnologyTableComponent.html","title":"component - TechnologyTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TechnologyTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technology-table/technology-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technology-table\n            \n\n            \n                styleUrls\n                ./technology-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technology-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnsToDisplay\n                            \n                            \n                                criteriaColumns\n                            \n                            \n                                groupingColumnIds\n                            \n                            \n                                groupingColumns\n                            \n                            \n                                tableContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateGroupingColumns\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                scrollLeft\n                            \n                            \n                                scrollRight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                filterConfiguration\n                            \n                            \n                                framework\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :         TechnologyDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filterConfiguration\n                    \n                \n                \n                    \n                        Type :         TechnologyFilterConfiguration\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        framework\n                    \n                \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sidenav\n                    \n                \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateGroupingColumns\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateGroupingColumns(grouping: CriteriaGrouping, groupingColumns: TableColumn[], color: string, parentGroupingName?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grouping\n                                    \n                                                CriteriaGrouping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupingColumns\n                                    \n                                                TableColumn[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentGroupingName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollLeft\n                        \n                    \n                \n            \n            \n                \nscrollLeft()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollRight\n                        \n                    \n                \n            \n            \n                \nscrollRight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columnsToDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['techName']\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        criteriaColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableColumn[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupingColumnIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['techNameHeader']\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupingColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableColumn[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('content')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {TechnologyDataSource} from '../../shared/datasource';\nimport {ClassificationFramework, CriteriaGrouping} from '../../shared/interfaces/classification';\nimport {TechnologyFilterConfiguration} from '../../shared/interfaces/filtering';\nimport {MatSidenav} from '@angular/material/sidenav';\n\nexport class TableColumn {\n  id: string;\n  displayName: string;\n  colSpan?: number;\n  color?: string;\n}\n\n@Component({\n  selector: 'app-technology-table',\n  templateUrl: './technology-table.component.html',\n  styleUrls: ['./technology-table.component.scss']\n})\nexport class TechnologyTableComponent implements OnInit {\n  @Input() dataSource: TechnologyDataSource;\n  @Input() framework: ClassificationFramework;\n  @Input() filterConfiguration: TechnologyFilterConfiguration;\n  @Input() sidenav: MatSidenav;\n\n  @ViewChild('content') tableContainer: ElementRef;\n\n  criteriaColumns: TableColumn[] = [];\n  groupingColumns: TableColumn[] = [];\n  groupingColumnIds: string[] = ['techNameHeader'];\n\n  columnsToDisplay = ['techName'];\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n    this.framework.viewCombinations.forEach(viewComb => {\n      if (viewComb.default) {\n        viewComb.views.forEach(view => {\n          const groupingColumns: TableColumn[] = [];\n          Array.from(view.groupings).forEach((grouping, index) => {\n            const color = index % 2 === 0 ? '#ccc' : 'white';\n            this.generateGroupingColumns(grouping, groupingColumns, color);\n          });\n          if (groupingColumns.length > 0) {\n            this.groupingColumns.push(...groupingColumns);\n            let viewColspan = 0;\n            groupingColumns.forEach(c => {\n              if (c.colSpan) {\n                viewColspan += c.colSpan;\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  private generateGroupingColumns(grouping: CriteriaGrouping, groupingColumns: TableColumn[], color: string, parentGroupingName?: string) {\n    let counter = 0;\n    grouping.criteria.forEach((c, index) => {\n      this.criteriaColumns.push({\n        id: c.id,\n        displayName: c.name,\n        color\n      } as TableColumn);\n      this.columnsToDisplay.push(c.id);\n      counter += 1;\n    });\n    if (counter > 0) {\n      const name = parentGroupingName ? parentGroupingName.concat('.').concat(grouping.name) : grouping.name;\n      groupingColumns.push({\n        id: grouping.id,\n        displayName: name,\n        color,\n        colSpan: counter\n      } as TableColumn);\n      this.groupingColumnIds.push(grouping.id);\n    }\n    if (grouping.groupings) {\n      grouping.groupings.forEach(g => this.generateGroupingColumns(g, groupingColumns, color, grouping.name));\n    }\n  }\n\n  scrollLeft() {\n    this.tableContainer.nativeElement.scrollLeft -= 150;\n  }\n\n  scrollRight() {\n    this.tableContainer.nativeElement.scrollLeft += 150;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Name\n    \n\n    \n      Name\n      \n        \n          \n           {{tech.platformName}}\n        \n      \n    \n\n    \n      \n         {{c.displayName}}\n      \n    \n\n    \n      \n         {{c.displayName}}\n        \n          \n            \n              {{entry.value | yesNo }}\n            \n          \n        \n      \n    \n\n    \n    \n    \n  \n\n\n  \n    arrow_back_ios Scroll Left\n  \n  \n    arrow_forward_ios Scroll Right\n  \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./technology-table.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.table-container {\n  align-self: center;\n  flex-grow: 1;\n  height: auto;\n  width: 93vw;\n  margin-bottom: 3rem;\n  overflow: scroll;\n  scroll-behavior: smooth;\n}\n\n.tech-name-header-cell {\n  display:table-cell;\n  background: white;\n  min-width: 3.5rem;\n  border-right: 2px solid $violet-600;\n}\n\n.grouping-header-cell {\n  display:table-cell;\n  min-width: 3.5rem;\n  padding: 0 .5rem;\n  border-right: 1px solid $gray-10;\n}\n\n.criterion-header-cell {\n  display:table-cell;\n  min-width: 5rem;\n  padding: 0 1rem;\n  border-right: 1px solid $gray-10;\n  border-bottom: 1px solid $gray-10;\n}\n\n.tech-name-cell {\n  height: 100%;\n  padding: 0 !important;\n  display:table-cell;\n  background: white;\n  min-width: 3.5rem;\n  border-right: 2px solid $violet-600;\n\n  img {\n    max-width: 2rem;\n  }\n}\n\n.tech-name-content {\n  height: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n}\n\n.value-cell {\n  padding: 0 1rem !important;\n  word-wrap: break-word !important;\n}\n\n.value-list {\n  display: flex;\n  flex-flow: row wrap;\n}\n\n.value {\n  font-size: .8rem;\n}\n\n/*.tech-row:nth-child(even) {\n  background-color: $gray-10;\n}*/\n\n@media screen and (min-width: 900px) {\n  .table-container {\n    max-width: 1400px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Name              Name                                   {{tech.platformName}}                                     {{c.displayName}}                             {{c.displayName}}                                            {{entry.value | yesNo }}                                                            arrow_back_ios Scroll Left        arrow_forward_ios Scroll Right  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologyTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TruncatePipe.html":{"url":"pipes/TruncatePipe.html","title":"pipe - TruncatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TruncatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/truncate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        truncate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, limit: number, completeWords, ellipsis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/truncate.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        25\n                                    \n\n                                \n                                \n                                    completeWords\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    ellipsis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '...'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = '...') {\n    if (completeWords) {\n      limit = value.substr(0, limit).lastIndexOf(' ');\n    }\n    return value.length > limit ? value.substr(0, limit) + ellipsis : value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/YesNoPipe.html":{"url":"pipes/YesNoPipe.html","title":"pipe - YesNoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  YesNoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/yes-no.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        yesNo\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/yes-no.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'yesNo'\n})\nexport class YesNoPipe implements PipeTransform {\n  transform(value: any) {\n    if (typeof value === 'boolean') {\n      return value ? 'yes' : 'no';\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/ensure-module-loaded-once.guard.ts\n            \n            class\n            EnsureModuleLoadedOnceGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/app-config.service.ts\n            \n            injectable\n            AppConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            criteriaGroupingsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            criteriaPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            dossiersPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            filterConfigurationsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            frameworksPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            frameworkViewCombinationsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            frameworkViewsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            infoResourcesPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            supportedPlatformsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/logo-locator.service.ts\n            \n            injectable\n            LogoLocatorService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/random-color.service.ts\n            \n            injectable\n            RandomColorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/random-color.service.ts\n            \n            variable\n            randomColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/home/banner/banner.component.ts\n            \n            component\n            BannerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/overview/overview.component.ts\n            \n            component\n            OverviewComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/faq/faq.component.ts\n            \n            component\n            FaqComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/framework/framework.component.ts\n            \n            component\n            FrameworkComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/information/information.component.ts\n            \n            component\n            InformationComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/information/resolvers/framework-resolver.service.ts\n            \n            guard\n            FrameworkResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/resolvers/resources-resolver.service.ts\n            \n            guard\n            ResourcesResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/resources/resources.component.ts\n            \n            component\n            ResourcesComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/bottom-nav/bottom-nav.component.ts\n            \n            component\n            BottomNavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/child-grouping/child-grouping.component.ts\n            \n            component\n            ChildGroupingComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/criterion/criterion.component.ts\n            \n            component\n            CriterionComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/datasource.ts\n            \n            class\n            TechnologyDataSource\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/shared/datasource.ts\n            \n            interface\n            SimpleDataSource\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/datasource.ts\n            \n            interface\n            Sort\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/framework-renderer/framework-renderer.component.ts\n            \n            component\n            FrameworkRendererComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationCriterion\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationFramework\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationView\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationViewCombination\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            CriteriaGrouping\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            CriterionInstance\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            CriterionValue\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            CriteriaBasedQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            CriterionFilterConfiguration\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            CriterionFilterValue\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            RenderedFilterBlock\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            TechnologyFilterConfiguration\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/info.ts\n            \n            interface\n            InfoResource\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/info.ts\n            \n            interface\n            InfoResourceSection\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            ClassificationFrameworkResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            ClassificationViewCombinationResponse\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            ClassificationViewResponse\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            CriteriaGroupingResponse\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            CriteriaReview\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            TechnologyDossierResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/technology.ts\n            \n            interface\n            Technology\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/technology.ts\n            \n            interface\n            TechnologyDossier\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/set-to-array.pipe.ts\n            \n            pipe\n            SetToArrayPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/truncate.pipe.ts\n            \n            pipe\n            TruncatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/yes-no.pipe.ts\n            \n            pipe\n            YesNoPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/technologies/criterion-filter/criterion-filter.component.ts\n            \n            component\n            CriterionFilterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/technologies/technologies-resolver.service.ts\n            \n            guard\n            TechnologiesResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/technologies/technologies.component.ts\n            \n            component\n            TechnologiesComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-details-resolver.service.ts\n            \n            guard\n            TechnologyDetailsResolverService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-details/technology-details.component.ts\n            \n            component\n            TechnologyDetailsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-list/technology-list.component.ts\n            \n            component\n            TechnologyListComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-table/technology-table.component.ts\n            \n            component\n            TechnologyTableComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-table/technology-table.component.ts\n            \n            class\n            TableColumn\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^12.2.8\n        \n            @angular/cdk : ^12.2.8\n        \n            @angular/cli : ^12.2.8\n        \n            @angular/common : ^12.2.8\n        \n            @angular/compiler : ^12.2.8\n        \n            @angular/core : ^12.2.8\n        \n            @angular/flex-layout : ^12.0.0-beta.35\n        \n            @angular/forms : ^12.2.8\n        \n            @angular/material : ^12.2.8\n        \n            @angular/platform-browser : ^12.2.8\n        \n            @angular/platform-browser-dynamic : ^12.2.8\n        \n            @angular/router : ^12.2.8\n        \n            randomcolor : ^0.6.2\n        \n            rxjs : ^6.6.7\n        \n            tslib : ^2.3.1\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CriterionFilterType   (src/.../filtering.ts)\n                        \n                        \n                            Extension   (src/.../logo-locator.service.ts)\n                        \n                        \n                            TechnologyCategory   (src/.../technology.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/interfaces/filtering.ts\n    \n        \n            \n                \n                    \n                        \n                        CriterionFilterType\n                    \n                \n                    \n                        \n                            An enum representing a filter type for a given CriterionFilterConfiguration.\nBased on these settings the respective filtering behavior is generated.\n\n                        \n                    \n                        \n                            \n                                 bool\n                            \n                        \n                        \n                            \n                                Value : bool\n                            \n                        \n                        \n                            \n                                 lte\n                            \n                        \n                        \n                            \n                                Value : lte\n                            \n                        \n                        \n                            \n                                 gte\n                            \n                        \n                        \n                            \n                                Value : gte\n                            \n                        \n                        \n                            \n                                 containsOne\n                            \n                        \n                        \n                            \n                                Value : containsOne\n                            \n                        \n                        \n                            \n                                 containsAny\n                            \n                        \n                        \n                            \n                                Value : containsAny\n                            \n                        \n                        \n                            \n                                 containsAll\n                            \n                        \n                        \n                            \n                                Value : containsAll\n                            \n                        \n                        \n                            \n                                 excludesAll\n                            \n                        \n                        \n                            \n                                Value : excludesAll\n                            \n                        \n            \n        \n\n    src/app/core/services/logo-locator.service.ts\n    \n        \n            \n                \n                    \n                        \n                        Extension\n                    \n                \n                        \n                            \n                                 png\n                            \n                        \n                        \n                            \n                                Value : .png\n                            \n                        \n                        \n                            \n                                 jpg\n                            \n                        \n                        \n                            \n                                Value : .jpg\n                            \n                        \n                        \n                            \n                                 jpeg\n                            \n                        \n                        \n                            \n                                Value : .jpeg\n                            \n                        \n                        \n                            \n                                 svg\n                            \n                        \n                        \n                            \n                                Value : .svg\n                            \n                        \n            \n        \n\n    src/app/shared/interfaces/technology.ts\n    \n        \n            \n                \n                    \n                        \n                        TechnologyCategory\n                    \n                \n                    \n                        \n                            An enum representing different technology categories.\n\n                        \n                    \n                        \n                            \n                                 faas\n                            \n                        \n                        \n                            \n                                Value : faas\n                            \n                        \n                        \n                            \n                                 baas\n                            \n                        \n                        \n                            \n                                Value : baas\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFaaStener\n\n\nFaaStener is an open source selection support system intended to simplify browsing and filtering Function-as-a-Service (FaaS) platforms.\nIt is build using Angular and Angular Material and provides a graphical user interface for interacting with the platform’s data collected using the classification framework introduced in this research publication.\nUsing FaaStener, one can perform multi-attribute search for suitable FaaS platform based on the specified requirements and to visualize the corresponding results.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright [yyyy] [name of copyright owner]\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InformationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InformationRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TechnologiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TechnologiesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_InformationModule\n\n\n\ncluster_InformationModule_declarations\n\n\n\ncluster_InformationModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TechnologiesModule\n\n\n\ncluster_TechnologiesModule_declarations\n\n\n\ncluster_TechnologiesModule_imports\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBannerComponent\n\nBannerComponent\n\nAppModule -->\n\nBannerComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nAppModule -->\n\nOverviewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nInformationModule\n\nInformationModule\n\nInformationModule -->\n\nSharedModule->InformationModule\n\n\n\n\n\nBottomNavComponent \n\nBottomNavComponent \n\nBottomNavComponent  -->\n\nSharedModule->BottomNavComponent \n\n\n\n\n\nChildGroupingComponent \n\nChildGroupingComponent \n\nChildGroupingComponent  -->\n\nSharedModule->ChildGroupingComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nFrameworkRendererComponent \n\nFrameworkRendererComponent \n\nFrameworkRendererComponent  -->\n\nSharedModule->FrameworkRendererComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nPageNotFoundComponent \n\nPageNotFoundComponent \n\nPageNotFoundComponent  -->\n\nSharedModule->PageNotFoundComponent \n\n\n\n\n\nSetToArrayPipe \n\nSetToArrayPipe \n\nSetToArrayPipe  -->\n\nSharedModule->SetToArrayPipe \n\n\n\n\n\nTruncatePipe \n\nTruncatePipe \n\nTruncatePipe  -->\n\nSharedModule->TruncatePipe \n\n\n\n\n\nYesNoPipe \n\nYesNoPipe \n\nYesNoPipe  -->\n\nSharedModule->YesNoPipe \n\n\n\n\n\nTechnologiesModule\n\nTechnologiesModule\n\nTechnologiesModule -->\n\nSharedModule->TechnologiesModule\n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nCoreModule -->\n\nAppConfigService->CoreModule\n\n\n\n\n\nDataService\n\nDataService\n\nCoreModule -->\n\nDataService->CoreModule\n\n\n\n\n\nLogoLocatorService\n\nLogoLocatorService\n\nCoreModule -->\n\nLogoLocatorService->CoreModule\n\n\n\n\n\nRandomColorService\n\nRandomColorService\n\nCoreModule -->\n\nRandomColorService->CoreModule\n\n\n\n\n\nFaqComponent\n\nFaqComponent\n\nInformationModule -->\n\nFaqComponent->InformationModule\n\n\n\n\n\nFrameworkComponent\n\nFrameworkComponent\n\nInformationModule -->\n\nFrameworkComponent->InformationModule\n\n\n\n\n\nInformationComponent\n\nInformationComponent\n\nInformationModule -->\n\nInformationComponent->InformationModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nInformationModule -->\n\nResourcesComponent->InformationModule\n\n\n\n\n\nInformationRoutingModule\n\nInformationRoutingModule\n\nInformationModule -->\n\nInformationRoutingModule->InformationModule\n\n\n\n\n\nBottomNavComponent\n\nBottomNavComponent\n\nSharedModule -->\n\nBottomNavComponent->SharedModule\n\n\n\n\n\nChildGroupingComponent\n\nChildGroupingComponent\n\nSharedModule -->\n\nChildGroupingComponent->SharedModule\n\n\n\n\n\nCriterionComponent\n\nCriterionComponent\n\nSharedModule -->\n\nCriterionComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nFrameworkRendererComponent\n\nFrameworkRendererComponent\n\nSharedModule -->\n\nFrameworkRendererComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nSharedModule -->\n\nPageNotFoundComponent->SharedModule\n\n\n\n\n\nSetToArrayPipe\n\nSetToArrayPipe\n\nSharedModule -->\n\nSetToArrayPipe->SharedModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nSharedModule -->\n\nTruncatePipe->SharedModule\n\n\n\n\n\nYesNoPipe\n\nYesNoPipe\n\nSharedModule -->\n\nYesNoPipe->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nCriterionFilterComponent\n\nCriterionFilterComponent\n\nTechnologiesModule -->\n\nCriterionFilterComponent->TechnologiesModule\n\n\n\n\n\nTechnologiesComponent\n\nTechnologiesComponent\n\nTechnologiesModule -->\n\nTechnologiesComponent->TechnologiesModule\n\n\n\n\n\nTechnologyDetailsComponent\n\nTechnologyDetailsComponent\n\nTechnologiesModule -->\n\nTechnologyDetailsComponent->TechnologiesModule\n\n\n\n\n\nTechnologyListComponent\n\nTechnologyListComponent\n\nTechnologiesModule -->\n\nTechnologyListComponent->TechnologiesModule\n\n\n\n\n\nTechnologyTableComponent\n\nTechnologyTableComponent\n\nTechnologiesModule -->\n\nTechnologyTableComponent->TechnologiesModule\n\n\n\n\n\nTechnologiesRoutingModule\n\nTechnologiesRoutingModule\n\nTechnologiesModule -->\n\nTechnologiesRoutingModule->TechnologiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    21 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    24 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            criteriaGroupingsPath   (src/.../data.service.ts)\n                        \n                        \n                            criteriaPath   (src/.../data.service.ts)\n                        \n                        \n                            dossiersPath   (src/.../data.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            filterConfigurationsPath   (src/.../data.service.ts)\n                        \n                        \n                            frameworksPath   (src/.../data.service.ts)\n                        \n                        \n                            frameworkViewCombinationsPath   (src/.../data.service.ts)\n                        \n                        \n                            frameworkViewsPath   (src/.../data.service.ts)\n                        \n                        \n                            infoResourcesPath   (src/.../data.service.ts)\n                        \n                        \n                            randomColor   (src/.../random-color.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            supportedPlatformsPath   (src/.../data.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/app/core/services/data.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        criteriaGroupingsPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/framework/groupings.json'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        criteriaPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/framework/criteria.json'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dossiersPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/platforms/'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterConfigurationsPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/framework/filters.json'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frameworksPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/framework/frameworks.json'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frameworkViewCombinationsPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/framework/view-combinations.json'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frameworkViewsPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/framework/views.json'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infoResourcesPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/info/resources.json'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        supportedPlatformsPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/platforms/platforms.json'\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/services/random-color.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        randomColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
