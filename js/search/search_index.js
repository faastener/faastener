var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.507,1,1.158]],["body/components/AboutComponent.html",[0,0.706,1,1.772,2,1.518,3,0.104,4,0.081,5,1.08,6,1.119,7,1.08,8,1.08,9,0.081,10,2.848,11,0.972,12,2.601,13,2.419,14,1.966,15,1.572,16,5.611,17,1.572,18,4.758,19,1.228,20,0.464,21,3.268,22,0.134,23,0.501,24,0.013,25,0.104,26,0.3,27,5.691,28,4.147,29,4.758,30,4.758,31,3.744,32,3.444,33,4.758,34,4.147,35,3.059,36,3.236,37,2.518,38,2.129,39,4.147,40,3.744,41,3.744,42,2.613,43,1.56,44,4.758,45,4.147,46,4.147,47,4.758,48,4.758,49,5.372,50,2.43,51,2.877,52,4.147,53,3.654,54,3.891,55,2.221,56,4.758,57,4.758,58,3.303,59,4.316,60,4.758,61,2.683,62,2.832,63,4.758,64,4.147,65,4.147,66,4.758,67,1.518,68,7.232,69,4.758,70,4.758,71,4.758,72,4.147,73,3.204,74,4.758,75,4.758,76,4.758,77,4.758,78,4.758,79,1.403,80,1.462,81,2.145,82,3.014,83,2.044,84,1.751,85,2.832,86,1.964,87,2.321,88,2.316,89,2.619,90,2.228,91,2.365,92,2.511,93,2.848,94,2.511,95,1.518,96,2.43,97,3.268,98,3.204,99,3.444,100,6.427,101,3.004,102,3.164,103,2.321,104,3.204,105,3.268,106,3.744,107,4.147,108,3.744,109,2.848,110,3.268,111,2.2,112,2.037,113,2.2,114,1.462,115,2.365,116,4.758,117,2.2,118,2.063,119,1.921,120,2.848,121,2.848,122,2.2,123,2.848,124,2.832,125,2.55,126,1.751,127,3.782,128,3.782,129,1.945,130,2.365,131,3.148,132,3.007,133,1.403,134,1.456,135,2.063,136,2.321,137,1.751,138,2.221,139,2.848,140,2.848,141,2.848,142,2.572,143,3.268,144,1.08,145,1.572,146,1.518,147,1.08,148,2.037,149,1.08,150,0.394,151,1.08,152,0.94,153,1.08,154,0.94,155,1.08,156,0.94,157,1.08,158,0.94,159,1.042,160,1.08,161,0.94,162,1.08,163,0.94,164,0.691,165,1.08,166,0.908,167,1.08,168,0.94,169,1.08,170,0.908,171,1.08,172,0.94,173,1.08,174,0.94,175,1.08,176,0.908,177,0.908,178,1.08,179,0.94,180,1.08,181,0.908,182,1.007,183,1.08,184,0.908,185,1.08,186,0.908,187,1.08,188,0.908,189,0.491,190,1.08,191,0.94,192,1.08,193,0.908,194,1.007,195,1.08,196,1.08,197,0.008,198,0.008]],["title/components/AppComponent.html",[0,0.507,152,1.158]],["body/components/AppComponent.html",[0,0.825,1,1.255,2,1.858,3,0.139,4,0.108,5,1.925,7,1.443,8,1.443,9,0.108,11,1.299,12,2.674,13,2.49,14,1.858,19,0.956,20,0.992,22,0.165,23,0.669,24,0.013,25,0.139,26,0.401,43,0.923,95,1.393,144,1.443,145,1.925,146,1.858,147,1.443,148,2.311,149,1.443,150,0.512,151,1.443,152,2.011,153,1.443,154,1.255,155,1.443,156,1.255,157,1.443,158,1.255,159,1.393,160,1.443,161,1.255,162,1.443,163,1.255,164,0.923,165,1.443,166,1.213,167,1.443,168,1.255,169,1.443,170,1.213,171,1.443,172,1.255,173,1.443,174,1.255,175,1.443,176,1.213,177,1.213,178,1.443,179,1.255,180,1.443,181,1.213,182,1.345,183,1.443,184,1.213,185,1.443,186,1.213,187,1.443,188,1.213,189,0.573,190,1.443,191,1.255,192,1.443,193,1.213,194,1.345,195,1.443,196,1.443,197,0.009,198,0.009,199,3.805,200,1.675,201,2.705,202,5.077,203,0.363,204,1.071,205,6.555,206,1.461,207,2.933,208,5.825,209,2.886,210,4.366,211,7.495,212,5.825,213,1.675,214,0.562,215,0.859,216,5.825,217,4.366,218,6.35,219,1.461,220,2.575,221,4.366,222,1.512,223,5.825,224,5.825,225,5.825,226,5.825,227,1.802,228,1.875,229,4.366,230,4.366,231,6.095,232,5.825,233,1.443,234,1.733]],["title/injectables/AppConfigService.html",[235,1.802,236,2.27]],["body/injectables/AppConfigService.html",[3,0.162,4,0.126,9,0.175,19,1.114,20,1.109,22,0.209,23,0.78,24,0.013,25,0.162,26,0.468,38,2.277,150,0.357,197,0.01,198,0.01,203,0.423,204,1.183,206,1.614,207,3.318,213,1.463,214,0.621,215,0.75,219,1.614,228,2.185,235,2.879,236,3.627,237,3.425,238,6.914,239,4.434,240,7.056,241,4.454,242,7.415,243,7.415,244,6.434,245,7.056,246,7.056,247,4.434,248,6.462,249,4.751,250,3.973,251,6.434,252,5.607,253,5.088,254,5.088,255,5.088,256,5.088,257,5.088,258,5.088,259,4.004,260,3.682,261,4.004,262,3.682,263,4.434,264,3.036,265,5.088,266,5.088,267,5.088,268,5.088,269,1.742,270,5.088,271,5.088,272,6.434,273,2.482,274,5.088,275,5.088,276,5.088,277,5.088,278,4.004]],["title/modules/AppModule.html",[279,1.88,280,2.711]],["body/modules/AppModule.html",[1,2.241,3,0.16,4,0.125,9,0.125,13,1.5,22,0.234,23,0.772,24,0.013,25,0.16,26,0.463,152,2.37,154,2.241,176,2.165,179,2.241,197,0.01,198,0.01,259,3.966,280,5.691,281,2.352,282,3.605,283,4.392,284,4.392,285,4.392,286,4.392,287,5.246,288,5.246,289,4.639,290,4.037,291,3.181,292,2.7,293,5.039,294,4.037,295,3.427,296,6.395,297,6.395,298,5.573,299,3.393,300,3.427,301,6.395,302,4.392,303,4.392,304,6.395,305,5.039,306,6.395,307,5.039,308,3.966,309,5.039,310,3.966,311,4.392,312,5.039,313,5.039,314,5.039]],["title/classes/AppPage.html",[26,0.37,315,3.169]],["body/classes/AppPage.html",[3,0.19,4,0.148,9,0.148,20,1.008,22,0.169,24,0.013,25,0.19,26,0.55,90,2.374,146,1.908,197,0.011,198,0.011,202,5.212,203,0.497,206,1.782,219,1.782,264,2.82,299,4.026,315,5.591,316,3.775,317,5.212,318,7.841,319,7.841,320,5.981,321,8.122,322,5.981,323,5.212,324,5.981,325,5.981,326,5.981]],["title/modules/AppRoutingModule.html",[279,1.88,287,2.711]],["body/modules/AppRoutingModule.html",[0,0.87,3,0.22,4,0.141,9,0.141,14,2.205,22,0.218,23,0.875,24,0.013,25,0.182,26,0.525,37,2.103,176,1.92,181,1.92,197,0.011,198,0.011,227,2.357,281,2.666,287,4.653,295,3.06,300,3.703,311,4.977,327,5.711,328,4.494,329,6.911,330,5.002,331,4.653,332,5.711,333,4.133,334,4.977,335,2.357,336,6.911,337,5.324,338,4.977,339,4.977,340,4.133,341,6.911,342,5.711,343,5.711,344,5.711,345,5.711,346,5.711,347,5.711,348,3.845]],["title/components/BannerComponent.html",[0,0.507,154,1.158]],["body/components/BannerComponent.html",[0,0.719,1,0.969,2,1.552,3,0.107,4,0.141,5,1.113,6,1.153,7,1.113,8,1.113,9,0.083,11,1.002,12,2.61,13,2.427,14,1.994,15,1.607,17,1.607,19,1.25,20,0.478,22,0.137,23,0.516,24,0.013,25,0.107,26,0.31,35,2.798,36,2.798,37,2.544,41,3.828,43,0.712,51,2.271,52,5.449,53,2.373,67,1.552,79,1.447,81,2.534,82,2.828,83,1.447,85,2.005,86,2.58,88,2.737,89,1.572,90,2.632,92,2.177,94,3.418,95,1.552,96,3.193,102,1.899,103,3.05,113,2.268,114,2.177,118,2.126,119,2.751,122,2.268,124,3.398,126,1.805,127,4.042,128,4.137,129,2.895,131,3.638,133,2.452,134,0.874,135,2.126,136,2.373,138,2.271,141,2.936,142,2.651,144,1.113,145,1.607,146,1.552,147,1.113,148,2.066,149,1.113,150,0.401,151,1.113,152,0.969,153,1.113,154,1.798,155,1.113,156,0.969,157,1.113,158,0.969,159,1.075,160,1.113,161,0.969,162,1.113,163,0.969,164,0.712,165,1.113,166,0.936,167,1.113,168,0.969,169,1.113,170,0.936,171,1.113,172,0.969,173,1.113,174,0.969,175,1.113,176,0.936,177,0.936,178,1.113,179,0.969,180,1.113,181,0.936,182,1.038,183,1.113,184,0.936,185,1.113,186,0.936,187,1.113,188,0.936,189,0.499,190,1.113,191,0.969,192,1.113,193,0.936,194,1.038,195,1.113,196,1.113,197,0.008,198,0.008,203,0.28,349,2.936,350,6.252,351,5.709,352,4.864,353,3.369,354,4.239,355,2.967,356,3.828,357,2.484,358,4.864,359,6.909,360,3.398,361,2.606,362,4.864,363,4.864,364,4.864,365,4.864,366,4.239,367,3.828,368,4.864,369,3.52,370,4.239,371,3.52,372,3.947,373,3.369,374,3.369,375,3.369,376,2.651,377,4.976,378,2.936,379,2.936,380,3.193,381,2.936,382,2.651,383,5.709,384,3.275,385,4.864,386,2.936,387,4.239,388,2.089,389,3.369,390,3.219,391,4.864,392,3.369,393,4.864,394,2.936,395,6.909,396,4.209,397,5.709,398,5.709,399,2.936,400,1.038,401,3.369,402,3.369,403,3.369,404,2.936,405,2.438,406,2.936]],["title/components/BottomNavComponent.html",[0,0.507,156,1.158]],["body/components/BottomNavComponent.html",[0,0.78,1,1.127,2,1.727,3,0.125,4,0.097,5,1.295,6,1.342,7,1.295,8,1.295,9,0.097,11,1.166,12,2.649,13,2.465,14,1.727,15,1.788,17,1.788,19,0.858,20,0.996,22,0.189,23,0.6,24,0.013,25,0.125,26,0.36,43,0.829,79,1.683,80,1.753,81,2.069,82,2.462,83,1.683,84,2.099,89,1.829,90,1.555,92,1.753,95,2.509,98,2.638,99,2.836,102,3.051,117,2.638,118,2.473,119,2.547,122,2.638,124,2.332,129,2.332,133,1.683,136,1.911,137,2.099,138,1.829,144,1.295,145,1.788,146,1.727,147,1.295,148,2.21,149,1.295,150,0.493,151,1.295,152,1.127,153,1.295,154,1.127,155,1.295,156,1.923,157,1.295,158,1.127,159,1.25,160,1.295,161,1.127,162,1.295,163,1.127,164,0.829,165,1.295,166,1.089,167,1.295,168,1.127,169,1.295,170,1.089,171,1.295,172,1.127,173,1.295,174,1.127,175,1.295,176,1.089,177,1.089,178,1.295,179,1.127,180,1.295,181,1.089,182,1.207,183,1.295,184,1.089,185,1.295,186,1.089,187,1.295,188,1.089,189,0.542,190,1.295,191,1.127,192,1.295,193,1.089,194,1.207,195,1.295,196,1.295,197,0.009,198,0.009,200,1.556,201,2.559,203,0.449,204,0.995,206,1.358,209,2.76,213,1.556,214,0.598,215,0.798,219,1.358,220,2.283,228,1.683,234,2.149,372,2.332,376,3.083,382,3.083,388,1.683,407,6.325,408,5.252,409,3.415,410,5.412,411,6.2,412,5.412,413,6.2,414,5.412,415,3.051,416,6.2,417,3.918,418,6.325,419,5.412,420,1.246,421,3.918,422,3.918,423,5.412,424,3.918,425,1.911,426,1.017,427,0.829,428,2.9,429,2.332,430,3.415,431,3.918,432,2.836,433,5.412,434,2.332,435,5.412,436,5.412,437,3.415,438,5.412,439,3.415,440,2.836,441,2.001,442,2.836,443,3.083,444,3.415,445,2.209]],["title/components/ChildGroupingComponent.html",[0,0.507,158,1.158]],["body/components/ChildGroupingComponent.html",[0,0.764,1,1.084,2,1.681,3,0.12,4,0.093,5,1.245,6,1.291,7,1.245,8,1.245,9,0.093,11,1.122,12,2.639,13,2.456,14,1.681,15,1.741,17,1.741,19,1.33,20,1.044,22,0.172,23,0.577,24,0.013,25,0.12,26,0.347,43,0.797,79,1.619,80,1.686,81,1.441,82,2.092,83,1.619,84,2.02,85,2.244,86,1.556,87,2.57,88,2.174,89,1.759,94,2.718,95,1.202,96,2.69,103,1.838,119,2.08,126,2.02,127,2.02,128,2.02,131,3.661,133,2.263,140,3.285,144,1.245,145,1.741,146,1.681,147,1.245,148,2.173,149,1.245,150,0.427,151,1.245,152,1.084,153,1.245,154,1.084,155,1.245,156,1.084,157,1.245,158,1.891,159,2.533,160,1.245,161,1.084,162,1.245,163,1.084,164,0.797,165,1.245,166,1.047,167,1.245,168,1.084,169,1.245,170,1.047,171,1.245,172,1.084,173,1.245,174,1.084,175,1.245,176,1.047,177,1.047,178,1.245,179,1.084,180,1.245,181,1.047,182,1.161,183,1.245,184,1.047,185,1.245,186,1.047,187,1.245,188,1.047,189,0.531,190,1.245,191,1.084,192,1.245,193,1.047,194,1.161,195,1.245,196,1.245,197,0.008,198,0.008,203,0.313,214,0.692,222,1.367,234,2.611,388,1.619,415,2.97,420,1.078,426,1.576,427,1.285,428,3.943,446,6.544,447,5.909,448,3.285,449,3.375,450,6.074,451,5.268,452,5.294,453,2.321,454,6.92,455,5.294,456,5.294,457,6.074,458,5.268,459,3.769,460,2.411,461,3.769,462,3.769,463,3.769,464,2.823,465,3.769,466,1.161,467,2.379,468,5.642,469,5.268,470,5.268,471,3.136,472,4.146,473,4.146,474,2.125,475,3.769,476,2.538,477,2.538,478,3.769,479,4.592,480,3.769]],["title/interfaces/ClassificationCriterion.html",[481,0.446,482,1.539]],["body/interfaces/ClassificationCriterion.html",[3,0.096,4,0.075,9,0.075,22,0.085,24,0.014,25,0.219,35,1.35,36,1.35,37,1.111,42,2.63,43,1.341,50,1.54,53,2.612,55,1.408,58,1.616,67,2.255,134,1.981,150,0.541,164,1.629,189,0.519,197,0.007,198,0.007,203,0.25,204,0.825,214,0.612,215,1.065,222,1.164,233,0.997,269,2.031,355,1.295,357,2.735,361,2.403,400,1.65,420,1.443,426,1.164,427,1.455,449,2.612,453,2.886,460,2.354,466,1.827,481,0.86,482,2.423,483,0.838,484,1.7,485,2.265,486,2.67,487,2.403,488,2.87,489,3.188,490,3.188,491,3.53,492,2.255,493,3.227,494,2.917,495,2.616,496,3.188,497,3.188,498,2.67,499,2.67,500,2.67,501,2.731,502,2.63,503,1.823,504,2.67,505,2.87,506,2.998,507,2.396,508,2.612,509,1.35,510,2.3,511,2.3,512,1.795,513,1.795,514,1.795,515,2.955,516,1.7,517,2.007,518,0.997,519,1.616,520,1.471,521,1.795,522,3.53,523,3.53,524,1.795,525,1.7,526,3.396,527,1.795,528,3.448,529,1.795,530,2.612,531,1.408,532,1.35,533,1.795,534,1.408,535,1.795,536,3.188,537,1.408,538,1.927,539,2.007,540,1.795,541,1.795,542,1.795,543,2.67,544,2.67,545,2.403,546,1.35,547,1.35,548,1.795,549,1.795,550,2.291,551,1.795,552,2.67,553,3.188,554,1.795,555,1.7,556,1.616,557,1.795,558,1.408,559,2.291,560,2.291,561,1.781,562,1.795,563,1.197,564,1.795,565,1.795,566,1.616,567,0.997,568,2.67,569,1.795,570,1.795,571,1.795,572,1.7,573,1.7]],["title/interfaces/ClassificationFramework.html",[481,0.446,518,1.331]],["body/interfaces/ClassificationFramework.html",[3,0.094,4,0.073,9,0.073,22,0.083,24,0.014,25,0.217,35,1.975,36,1.975,37,1.625,42,2.685,43,1.547,50,1.507,53,2.862,55,1.378,58,1.581,67,2.241,134,1.973,150,0.539,164,1.519,189,0.513,197,0.007,198,0.007,203,0.245,204,0.812,214,0.636,215,1.079,222,1.146,233,0.975,269,2.009,355,1.268,357,2.996,361,2.365,400,1.36,420,1.44,426,1.146,427,1.394,449,2.579,453,2.837,460,2.329,466,1.629,481,0.857,482,2.242,483,0.82,484,1.664,485,2.253,486,1.757,487,1.581,488,2.365,489,2.627,490,2.627,491,1.757,492,2.241,493,3.237,494,2.819,495,2.182,496,2.627,497,2.627,498,1.757,499,1.757,500,1.757,501,2.712,502,2.611,503,2.134,504,3.147,505,3.144,506,2.985,507,2.81,508,3.215,509,1.975,510,2.698,511,2.52,512,2.627,513,2.627,514,2.627,515,3.084,516,2.488,517,2.366,518,1.458,519,1.581,520,2.153,521,2.627,522,3.739,523,3.739,524,2.627,525,3.308,526,3.366,527,1.757,528,3.426,529,1.757,530,2.579,531,1.378,532,1.321,533,1.757,534,1.378,535,1.757,536,3.147,537,1.378,538,1.896,539,1.975,540,1.757,541,1.757,542,1.757,543,2.627,544,2.627,545,2.365,546,1.321,547,1.321,548,1.757,549,1.757,550,2.254,551,1.757,552,2.627,553,3.147,554,1.757,555,1.664,556,1.581,557,1.757,558,1.378,559,2.254,560,2.254,561,1.752,562,1.757,563,1.172,564,1.757,565,1.757,566,1.581,567,0.975,568,2.627,569,1.757,570,1.757,571,1.757,572,1.664,573,1.664,574,1.268]],["title/interfaces/ClassificationFrameworkResponse.html",[481,0.446,575,2.158]],["body/interfaces/ClassificationFrameworkResponse.html",[3,0.157,4,0.122,9,0.122,22,0.178,24,0.013,25,0.247,42,2.661,51,3.25,67,1.577,134,2.013,150,0.554,189,0.432,197,0.01,198,0.01,203,0.411,204,1.162,214,0.732,215,0.932,222,1.283,420,1.498,425,2.412,426,1.283,453,1.89,466,1.946,481,0.893,483,1.374,485,2.145,492,2.514,493,3.2,503,2.295,509,2.213,510,2.714,538,2.124,539,2.213,546,2.213,547,2.213,561,1.963,563,1.963,575,3.386,576,2.944,577,4.632,578,4.145,579,4.396,580,2.525,581,3.122,582,2.525,583,3.122,584,2.525,585,3.122,586,3.122,587,2.65,588,2.65,589,3.562,590,2.308]],["title/interfaces/ClassificationView.html",[481,0.446,530,1.964]],["body/interfaces/ClassificationView.html",[3,0.097,4,0.075,9,0.075,22,0.086,24,0.014,25,0.219,35,1.362,36,1.362,37,1.121,42,2.638,43,1.346,50,1.555,53,2.906,55,1.421,58,1.632,67,2.261,134,1.985,150,0.542,164,1.532,189,0.521,197,0.007,198,0.007,203,0.253,204,0.831,214,0.614,215,1.046,222,1.173,233,1.006,269,2.04,355,1.308,357,3.043,361,2.421,400,1.392,420,1.444,426,1.173,427,1.41,449,2.627,453,2.949,460,2.647,466,1.659,481,0.861,482,2.277,483,0.846,484,1.717,485,2.27,486,1.813,487,1.632,488,2.421,489,2.689,490,2.689,491,1.813,492,2.261,493,3.252,494,2.848,495,2.223,496,2.689,497,2.689,498,1.813,499,1.813,500,1.813,501,2.74,502,2.638,503,1.83,504,2.689,505,3.193,506,3.004,507,2.41,508,2.627,509,1.362,510,2.313,511,2.313,512,1.813,513,1.813,514,1.813,515,2.964,516,1.717,517,2.021,518,1.006,519,1.632,520,1.485,521,1.813,522,3.788,523,3.788,524,1.813,525,1.717,526,3.41,527,1.813,528,3.691,529,1.813,530,2.906,531,1.421,532,1.362,533,1.813,534,1.421,535,1.813,536,3.547,537,1.421,538,1.94,539,2.021,540,1.813,541,1.813,542,1.813,543,2.689,544,2.689,545,2.421,546,1.362,547,1.362,548,1.813,549,1.813,550,2.307,551,1.813,552,2.689,553,3.206,554,1.813,555,1.717,556,1.632,557,1.813,558,1.421,559,2.307,560,2.307,561,1.793,562,1.813,563,1.209,564,1.813,565,1.813,566,1.632,567,1.006,568,2.689,569,1.813,570,1.813,571,1.813,572,1.717,573,1.717]],["title/interfaces/ClassificationViewCombination.html",[481,0.446,507,1.802]],["body/interfaces/ClassificationViewCombination.html",[3,0.095,4,0.074,9,0.074,22,0.084,24,0.014,25,0.218,35,1.337,36,1.337,37,1.1,42,2.53,43,1.335,50,1.526,53,2.879,55,1.395,58,1.601,67,2.249,134,1.977,150,0.54,164,1.524,189,0.516,197,0.007,198,0.007,203,0.248,204,0.819,214,0.639,215,1.082,222,1.532,233,0.987,269,2.021,355,1.283,357,3.014,361,2.387,400,1.372,420,1.441,426,1.718,427,1.4,449,2.598,453,2.845,460,2.343,466,1.641,481,0.859,482,2.256,483,0.83,484,1.684,485,2.259,486,1.778,487,1.601,488,2.387,489,2.651,490,2.651,491,1.778,492,2.249,493,3.243,494,2.831,495,2.198,496,2.651,497,2.651,498,1.778,499,1.778,500,1.778,501,2.723,502,2.621,503,1.815,504,2.651,505,3.163,506,2.992,507,2.641,508,2.598,509,1.337,510,2.843,511,2.535,512,1.778,513,1.778,514,1.778,515,2.946,516,1.684,517,1.993,518,0.987,519,1.601,520,1.457,521,1.778,522,3.758,523,3.758,524,1.778,525,1.684,526,3.93,527,2.651,528,3.677,529,1.778,530,2.879,531,2.079,532,1.993,533,2.651,534,2.079,535,2.651,536,3.17,537,1.395,538,1.913,539,1.993,540,1.778,541,1.778,542,1.778,543,2.651,544,2.651,545,2.387,546,1.337,547,1.337,548,1.778,549,1.778,550,2.275,551,1.778,552,2.651,553,3.17,554,1.778,555,1.684,556,1.601,557,1.778,558,1.395,559,2.275,560,2.275,561,1.768,562,1.778,563,1.186,564,1.778,565,1.778,566,1.601,567,0.987,568,2.651,569,1.778,570,1.778,571,1.778,572,1.684,573,1.684,591,2.988]],["title/interfaces/ClassificationViewCombinationResponse.html",[481,0.446,580,2.056]],["body/interfaces/ClassificationViewCombinationResponse.html",[3,0.155,4,0.121,9,0.121,22,0.177,24,0.013,25,0.246,42,2.79,51,3.407,67,1.556,134,2.039,150,0.552,189,0.426,197,0.01,198,0.01,203,0.405,204,1.152,214,0.729,215,0.924,222,1.795,420,1.496,425,2.379,426,1.895,453,1.864,466,1.929,481,0.898,483,1.355,485,2.249,492,2.506,493,3.189,503,1.989,509,2.802,510,2.971,538,2.094,539,2.182,546,2.182,547,2.182,561,1.936,563,1.936,575,2.613,576,2.903,577,3.078,578,4.345,579,4.608,580,3.198,581,4.608,582,2.49,583,3.078,584,2.49,585,3.078,586,3.078,587,2.613,588,2.613,589,3.531,590,2.276]],["title/interfaces/ClassificationViewResponse.html",[481,0.446,582,2.056]],["body/interfaces/ClassificationViewResponse.html",[3,0.157,4,0.123,9,0.123,22,0.179,24,0.013,25,0.247,42,2.806,51,3.427,67,1.58,134,2.047,150,0.554,189,0.433,197,0.01,198,0.01,203,0.411,204,1.163,214,0.709,222,1.285,420,1.498,425,2.416,426,1.285,453,1.893,466,1.948,481,0.9,483,1.376,485,2.262,492,2.515,493,3.202,503,2.004,509,2.216,510,2.993,538,2.127,539,2.216,546,2.216,547,2.216,561,1.966,563,1.966,575,2.654,576,2.948,577,3.126,578,4.37,579,4.635,580,2.529,581,3.126,582,3.23,583,4.635,584,2.529,585,3.126,586,3.126,587,2.654,588,2.654,589,3.566,590,2.312]],["title/modules/CoreModule.html",[279,1.88,288,2.711]],["body/modules/CoreModule.html",[3,0.169,4,0.131,9,0.131,22,0.226,23,0.813,24,0.013,25,0.169,26,0.488,31,5.2,197,0.01,198,0.01,215,0.783,233,1.754,236,4.68,250,4.231,261,4.178,279,2.478,281,2.478,282,3.726,288,5.562,290,4.171,291,3.352,292,2.845,294,3.352,295,2.845,300,3.541,429,3.161,592,4.627,593,4.627,594,5.316,595,5.309,596,4.783,597,6.608,598,6.608,599,4.783,600,4.783,601,5.309,602,4.178,603,5.309,604,5.309,605,5.309,606,5.309,607,5.309,608,3.843,609,3.223,610,5.309,611,4.627,612,6.608,613,6.608,614,5.309,615,5.309,616,3.575,617,5.309,618,5.309,619,5.309]],["title/interfaces/CriteriaBasedQuery.html",[481,0.446,620,1.88]],["body/interfaces/CriteriaBasedQuery.html",[3,0.115,4,0.09,9,0.09,20,0.844,22,0.102,24,0.014,25,0.225,38,2.662,61,2.891,62,3.849,67,1.898,112,1.694,125,1.943,134,0.941,150,0.479,164,1.085,189,0.52,197,0.008,198,0.008,214,0.658,222,0.941,233,1.198,234,1.44,269,1.242,390,3.645,400,1.992,420,1.376,427,1.573,481,0.859,482,1.386,483,1.008,485,2.243,494,1.497,495,2.669,501,2.567,502,1.96,503,1.859,506,2.811,511,1.558,515,1.558,517,3.169,531,2.777,532,2.662,534,3.579,537,2.777,558,1.693,567,2.254,574,1.558,590,2.394,620,2.394,621,2.159,622,3.9,623,3.354,624,3.452,625,3.052,626,3.627,627,3.161,628,3.302,629,3.627,630,4.005,631,3.302,632,2.442,633,2.442,634,4.306,635,3.717,636,2.045,637,2.289,638,2.289,639,2.442,640,4.215,641,3.452,642,2.442,643,3.452,644,1.623,645,2.442,646,2.442,647,3.052,648,3.052,649,2.159,650,2.289,651,3.154,652,3.237,653,2.442,654,2.442,655,2.442,656,2.748,657,2.289,658,1.943,659,4.901,660,3.052,661,3.237,662,2.442,663,3.452,664,3.452,665,3.237,666,2.442,667,3.237,668,3.755,669,4.082,670,4.082,671,3.052,672,2.442,673,3.052,674,3.237,675,3.237,676,2.442,677,2.442,678,2.442,679,2.442,680,2.442,681,2.289]],["title/interfaces/CriteriaGrouping.html",[460,1.599,481,0.446]],["body/interfaces/CriteriaGrouping.html",[3,0.094,4,0.073,9,0.073,22,0.084,24,0.014,25,0.217,35,1.323,36,1.323,37,1.089,42,2.521,43,1.33,50,1.51,53,2.582,55,1.38,58,1.584,67,2.399,134,1.865,150,0.539,164,1.52,189,0.55,197,0.007,198,0.007,203,0.246,204,0.813,214,0.637,215,1.109,222,1.147,233,0.977,269,2.011,355,1.27,357,2.703,361,2.836,400,1.362,420,1.44,426,1.147,427,1.395,449,3.217,453,2.998,460,2.496,466,1.631,481,0.857,482,2.521,483,0.822,484,1.667,485,2.254,486,1.76,487,1.584,488,2.836,489,3.151,490,3.151,491,1.76,492,2.242,493,3.289,494,2.821,495,2.184,496,2.631,497,2.631,498,1.76,499,1.76,500,1.76,501,2.714,502,2.613,503,1.807,504,2.631,505,2.836,506,2.986,507,2.368,508,2.582,509,1.323,510,2.273,511,2.522,512,1.76,513,1.76,514,1.76,515,2.936,516,1.667,517,1.978,518,0.977,519,1.584,520,1.442,521,1.76,522,3.742,523,3.742,524,1.76,525,1.667,526,3.368,527,1.76,528,3.428,529,1.76,530,2.582,531,1.38,532,1.323,533,1.76,534,1.38,535,1.76,536,3.742,537,2.063,538,2.833,539,2.368,540,2.631,541,2.631,542,2.631,543,3.151,544,3.151,545,2.836,546,1.978,547,1.978,548,1.76,549,2.631,550,2.703,551,2.631,552,2.631,553,3.151,554,1.76,555,1.667,556,1.584,557,1.76,558,1.38,559,2.257,560,2.257,561,1.755,562,1.76,563,1.174,564,1.76,565,1.76,566,1.584,567,0.977,568,2.631,569,1.76,570,1.76,571,1.76,572,1.667,573,1.667]],["title/interfaces/CriteriaGroupingResponse.html",[481,0.446,584,2.056]],["body/interfaces/CriteriaGroupingResponse.html",[3,0.155,4,0.121,9,0.121,22,0.177,24,0.013,25,0.246,42,2.642,51,3.406,67,1.996,134,1.894,150,0.552,189,0.426,197,0.01,198,0.01,203,0.404,204,1.151,214,0.728,215,1.076,222,1.264,420,1.501,425,2.375,426,1.264,453,2.391,466,1.927,481,0.897,483,1.353,485,2.247,492,2.506,493,3.187,503,1.988,509,2.179,510,2.687,538,3.133,539,2.179,546,2.179,547,2.179,561,1.933,563,1.933,575,2.609,576,2.898,577,3.074,578,4.343,579,4.605,580,2.486,581,3.074,582,2.486,583,3.074,584,3.195,585,4.605,586,4.605,587,2.609,588,2.609,589,3.527,590,2.273]],["title/interfaces/CriteriaReview.html",[481,0.446,589,2.27]],["body/interfaces/CriteriaReview.html",[3,0.166,4,0.129,9,0.129,20,0.741,22,0.185,24,0.013,25,0.25,42,2.729,51,3.333,67,1.666,134,1.853,150,0.526,189,0.457,197,0.01,198,0.01,222,1.355,420,1.49,425,2.547,426,1.355,453,1.996,466,2.2,481,0.901,483,1.451,485,2.2,492,2.388,493,3.089,503,2.053,509,2.337,510,2.809,538,2.243,539,2.337,546,2.337,547,2.337,561,2.073,563,2.073,575,2.798,576,3.108,577,3.296,578,4.251,579,4.508,580,2.667,581,3.296,582,2.667,583,3.296,584,2.667,585,3.296,586,3.296,587,2.798,588,2.798,589,4.026,590,3.053,627,4.551,682,5.222]],["title/components/CriterionComponent.html",[0,0.507,161,1.158]],["body/components/CriterionComponent.html",[0,0.692,1,0.906,2,1.478,3,0.205,4,0.078,5,1.041,6,1.079,7,1.041,8,1.041,9,0.078,11,0.938,12,2.591,13,2.409,14,1.478,15,1.531,17,1.531,19,1.203,20,1.037,22,0.171,23,0.483,24,0.014,25,0.1,26,0.29,43,0.666,79,1.353,80,1.41,81,2.467,82,3.161,83,2.772,84,2.944,86,2.664,88,2.5,89,2.163,90,2.77,92,2.459,94,2.711,95,1.005,96,3.094,102,1.776,103,1.537,112,2.543,114,2.073,119,2.21,125,3.739,127,3.246,128,3.246,131,3.296,132,3.739,133,1.353,134,0.818,138,2.163,144,1.041,145,1.531,146,1.478,147,1.041,148,2.002,149,1.041,150,0.386,151,1.041,152,0.906,153,1.041,154,0.906,155,1.041,156,0.906,157,1.041,158,0.906,159,1.753,160,1.041,161,1.742,162,1.041,163,0.906,164,1.428,165,1.041,166,0.875,167,1.041,168,0.906,169,1.041,170,0.875,171,1.041,172,0.906,173,1.041,174,0.906,175,1.041,176,0.875,177,0.875,178,1.041,179,0.906,180,1.041,181,0.875,182,0.971,183,1.041,184,0.875,185,1.041,186,0.875,187,1.041,188,0.875,189,0.481,190,1.041,191,0.906,192,1.041,193,0.875,194,0.971,195,1.041,196,1.041,197,0.007,198,0.007,200,1.332,201,2.268,203,0.262,204,0.852,206,1.162,209,2.5,214,0.673,219,0.79,220,1.706,222,1.203,387,5.28,388,1.99,390,1.776,396,3.699,400,1.989,404,2.746,415,2.612,420,1.146,426,0.818,427,0.666,428,3.617,434,1.876,441,3.296,445,1.776,466,2.079,467,1.989,474,3.415,479,4.038,482,2.1,495,2.268,559,2.806,631,3.656,683,2.746,684,5.495,685,4.633,686,5.495,687,5.495,688,4.633,689,3.151,690,3.151,691,3.151,692,4.633,693,3.151,694,3.151,695,3.151,696,3.151,697,4.633,698,4.633,699,4.633,700,3.151,701,3.151,702,3.151,703,4.633,704,5.495,705,4.633,706,4.038,707,4.633,708,4.633,709,3.646,710,4.633,711,4.633,712,4.633,713,3.646,714,4.633,715,4.633,716,2.746,717,6.058,718,3.151,719,2.746,720,2.925,721,3.151,722,3.151,723,3.151,724,2.121,725,2.925]],["title/components/CriterionFilterComponent.html",[0,0.507,163,1.158]],["body/components/CriterionFilterComponent.html",[0,0.698,1,0.922,2,1.497,3,0.102,4,0.079,5,1.059,6,1.097,7,1.059,8,1.059,9,0.079,11,0.954,12,2.596,13,2.414,14,1.497,15,1.55,17,1.55,19,0.702,20,0.996,22,0.173,23,0.491,24,0.014,25,0.102,26,0.295,35,1.434,43,0.678,51,2.851,79,1.377,80,1.434,81,1.793,82,2.425,83,2.015,86,1.936,87,1.563,88,1.323,94,2.483,95,1.497,102,1.807,103,1.563,114,2.099,119,1.9,129,1.908,133,1.377,144,1.059,145,1.55,146,1.497,147,1.059,148,2.018,149,1.059,150,0.457,151,1.059,152,0.922,153,1.059,154,0.922,155,1.059,156,0.922,157,1.059,158,0.922,159,1.022,160,1.059,161,0.922,162,1.059,163,1.756,164,1.599,165,1.059,166,0.891,167,1.059,168,0.922,169,1.059,170,0.891,171,1.059,172,0.922,173,1.059,174,0.922,175,1.059,176,0.891,177,0.891,178,1.059,179,0.922,180,1.059,181,0.891,182,0.987,183,1.059,184,0.891,185,1.059,186,0.891,187,1.059,188,0.891,189,0.485,190,1.059,191,0.922,192,1.059,193,0.891,194,0.987,195,1.059,196,1.059,197,0.007,198,0.007,200,1.349,201,2.29,203,0.266,204,0.863,206,1.177,209,2.521,213,0.922,214,0.627,215,0.473,219,1.177,220,2.043,222,1.218,228,1.377,241,3.503,264,1.272,273,1.563,335,2.521,380,1.637,388,1.377,396,2.158,400,0.987,415,2.645,420,0.833,426,0.832,427,1.521,428,2.514,441,2.396,445,1.807,471,1.908,495,1.323,567,1.059,620,1.496,622,3.638,631,1.637,635,2.834,651,2.707,652,4.428,670,2.023,720,2.023,724,2.158,726,6.269,727,5.661,728,2.793,729,5.549,730,4.691,731,5.549,732,6.108,733,4.691,734,5.549,735,3.205,736,5.323,737,4.691,738,4.089,739,3.205,740,5.549,741,3.205,742,3.205,743,3.205,744,5.549,745,5.549,746,3.205,747,4.691,748,1.908,749,2.32,750,7.56,751,4.691,752,4.691,753,4.691,754,4.691,755,3.205,756,4.691,757,3.205,758,3.205,759,3.205,760,3.205,761,3.205,762,3.205,763,3.205,764,5.549,765,3.205,766,3.205,767,4.691,768,3.205,769,3.205,770,3.205,771,3.205,772,4.691,773,3.205,774,3.205,775,3.205,776,3.205,777,2.158,778,3.205,779,3.205,780,3.205,781,3.205,782,3.205,783,6.791,784,5.549,785,6.108,786,2.522,787,3.205,788,3.205,789,3.205,790,2.522,791,3.205]],["title/interfaces/CriterionFilterConfiguration.html",[481,0.446,635,2.056]],["body/interfaces/CriterionFilterConfiguration.html",[3,0.11,4,0.085,9,0.085,20,0.703,22,0.098,24,0.014,25,0.221,38,2.216,61,2.792,62,3.446,67,1.58,112,1.636,125,1.85,134,0.896,150,0.49,164,1.224,189,0.506,197,0.008,198,0.008,203,0.287,204,0.911,214,0.732,215,0.73,222,0.896,233,1.141,234,1.371,269,1.695,390,3.565,400,1.948,420,1.417,427,1.553,481,0.85,482,1.892,483,0.959,485,2.211,494,1.425,495,2.763,501,2.511,502,2.213,503,1.818,506,2.766,511,1.483,515,2.127,517,3.211,531,2.702,532,2.59,534,3.541,537,2.702,558,2.952,567,2.212,574,1.483,590,1.612,620,1.612,621,2.055,622,3.932,623,2.792,624,2.325,625,2.055,628,2.956,630,3.898,631,3.229,632,2.325,633,2.325,634,4.226,635,3.749,636,1.947,637,2.18,638,2.18,639,2.325,640,4.37,641,3.898,642,2.325,643,3.334,644,1.545,645,2.325,646,3.334,647,3.446,648,3.446,649,3.764,650,3.126,651,3.5,652,4.226,653,3.334,654,3.334,655,4.258,656,2.653,657,2.18,658,1.85,659,4.831,660,2.948,661,3.126,662,2.325,663,3.334,664,3.334,665,3.126,666,2.325,667,3.126,668,3.654,669,3.992,670,3.992,671,2.948,672,2.325,673,2.948,674,3.126,675,3.126,676,2.325,677,2.325,678,2.325,679,2.325,680,2.325,681,2.18]],["title/interfaces/CriterionFilterValue.html",[481,0.446,628,2.056]],["body/interfaces/CriterionFilterValue.html",[3,0.111,4,0.086,9,0.086,20,0.707,22,0.098,24,0.014,25,0.222,38,2.23,61,2.809,62,3.779,67,1.589,112,1.646,125,1.866,134,0.904,150,0.472,164,1.054,189,0.509,197,0.008,198,0.008,203,0.289,204,0.916,214,0.734,215,0.735,222,1.51,233,1.151,234,1.383,269,1.193,390,3.58,400,2.153,420,1.391,427,1.658,481,0.852,482,1.331,483,0.968,485,2.216,494,1.438,495,2.772,501,2.309,502,1.904,503,1.826,506,2.774,511,2.14,515,1.496,517,3.127,531,2.716,532,2.603,534,3.59,537,2.716,558,1.626,567,2.377,574,1.496,590,1.626,620,1.626,621,2.073,622,3.919,623,3.28,624,2.345,625,2.073,628,3.242,630,3.917,631,3.242,632,2.345,633,2.345,634,4.241,635,3.674,636,1.964,637,2.199,638,2.199,639,2.345,640,4.16,641,3.355,642,2.345,643,3.917,644,1.559,645,2.345,646,2.345,647,2.966,648,2.966,649,2.073,650,2.199,651,3.409,652,4.241,653,2.345,654,2.345,655,2.345,656,2.67,657,2.199,658,1.866,659,4.844,660,2.966,661,3.145,662,2.345,663,3.355,664,3.355,665,3.145,666,2.345,667,3.145,668,3.672,669,4.008,670,4.241,671,2.966,672,2.345,673,2.966,674,3.145,675,3.145,676,2.345,677,3.355,678,3.355,679,3.355,680,3.355,681,3.145]],["title/interfaces/CriterionInstance.html",[466,1.241,481,0.446]],["body/interfaces/CriterionInstance.html",[3,0.097,4,0.075,9,0.075,22,0.086,24,0.014,25,0.219,35,1.361,36,1.361,37,1.12,42,2.637,43,1.346,50,1.553,53,2.626,55,1.42,58,1.63,67,2.201,134,1.879,150,0.518,164,1.581,189,0.583,197,0.007,198,0.007,203,0.253,204,0.83,214,0.575,215,1.087,222,1.172,233,1.005,269,2.282,355,1.307,357,2.749,361,2.884,400,1.391,420,1.425,426,1.172,427,1.41,449,2.626,453,2.815,460,2.364,466,1.835,481,0.861,482,2.431,483,0.845,484,1.715,485,2.269,486,1.811,487,1.63,488,2.419,489,2.687,490,2.687,491,1.811,492,2.029,493,3.252,494,2.848,495,2.751,496,3.204,497,3.204,498,1.811,499,1.811,500,1.811,501,2.739,502,2.637,503,1.829,504,2.687,505,2.884,506,3.004,507,2.409,508,2.626,509,1.361,510,2.312,511,2.312,512,1.811,513,1.811,514,1.811,515,3.109,516,1.715,517,2.02,518,1.005,519,1.63,520,1.484,521,1.811,522,3.545,523,3.545,524,1.811,525,1.715,526,3.409,527,1.811,528,3.457,529,1.811,530,2.626,531,1.42,532,1.361,533,1.811,534,1.42,535,1.811,536,3.204,537,1.42,538,1.939,539,2.02,540,1.811,541,1.811,542,1.811,543,3.204,544,3.204,545,2.884,546,1.361,547,1.361,548,1.811,549,1.811,550,2.749,551,1.811,552,2.687,553,3.204,554,2.687,555,2.545,556,1.63,557,1.811,558,2.78,559,2.749,560,2.749,561,2.526,562,2.687,563,2.364,564,1.811,565,1.811,566,1.63,567,1.005,568,2.687,569,1.811,570,1.811,571,1.811,572,1.715,573,1.715]],["title/interfaces/CriterionValue.html",[481,0.446,559,2.056]],["body/interfaces/CriterionValue.html",[3,0.095,4,0.074,9,0.074,22,0.085,24,0.014,25,0.218,35,1.342,36,1.342,37,1.104,42,2.534,43,1.337,50,2.281,53,2.603,55,1.4,58,2.393,67,2.191,134,1.872,150,0.516,164,1.553,189,0.517,197,0.007,198,0.007,203,0.249,204,0.822,214,0.61,215,1.125,222,1.535,233,1.476,269,2.27,355,1.288,357,2.726,361,2.393,400,1.644,420,1.442,426,1.159,427,1.613,449,2.603,453,2.806,460,2.348,466,1.822,481,0.859,482,2.26,483,0.833,484,1.691,485,2.295,486,1.785,487,1.607,488,2.393,489,2.659,490,2.659,491,1.785,492,2.017,493,3.176,494,2.834,495,2.203,496,2.659,497,2.659,498,1.785,499,1.785,500,1.785,501,2.632,502,2.534,503,1.818,504,3.177,505,2.86,506,2.995,507,2.388,508,2.603,509,1.342,510,2.292,511,2.292,512,1.785,513,1.785,514,1.785,515,3.153,516,1.691,517,2.388,518,0.991,519,1.607,520,1.463,521,1.785,522,3.52,523,3.52,524,1.785,525,1.691,526,3.388,527,1.785,528,3.442,529,1.785,530,2.603,531,1.4,532,1.342,533,1.785,534,1.4,535,1.785,536,3.177,537,1.4,538,1.918,539,2.388,540,1.785,541,1.785,542,1.785,543,2.659,544,2.659,545,2.393,546,1.342,547,1.342,548,1.785,549,1.785,550,2.281,551,1.785,552,2.659,553,3.52,554,1.785,555,1.691,556,1.607,557,1.785,558,1.4,559,2.726,560,2.726,561,1.773,562,1.785,563,1.191,564,2.659,565,2.659,566,2.393,567,1.764,568,3.947,569,2.659,570,2.659,571,2.659,572,2.518,573,3.334]],["title/classes/DataService.html",[26,0.37,609,1.964]],["body/classes/DataService.html",[3,0.107,4,0.083,9,0.083,19,1.249,20,1.145,22,0.195,24,0.013,25,0.107,26,0.309,150,0.542,189,0.294,197,0.008,198,0.008,203,0.279,206,1.219,213,2.219,214,0.745,215,1.139,219,2.016,222,1.928,241,5.364,316,2.124,420,1.466,460,1.336,482,1.286,492,1.073,503,2.047,507,1.506,518,1.112,530,1.641,574,2.684,580,1.718,582,1.718,584,1.718,609,2.371,644,1.506,748,2.003,792,2.933,793,8.501,794,5.446,795,4.236,796,4.236,797,4.236,798,4.236,799,4.236,800,4.236,801,5.446,802,5.446,803,5.446,804,4.236,805,4.236,806,4.236,807,4.236,808,5.446,809,4.236,810,5.446,811,4.236,812,4.86,813,3.365,814,3.365,815,4.282,816,4.236,817,3.365,818,4.236,819,4.236,820,3.365,821,2.933,822,4.236,823,3.365,824,4.236,825,3.365,826,2.933,827,4.236,828,3.365,829,4.236,830,3.365,831,3.365,832,3.365,833,3.365,834,4.236,835,3.365,836,6.206,837,3.841,838,4.236,839,3.365,840,4.236,841,3.365,842,4.236,843,3.365,844,3.365,845,4.236,846,3.365,847,2.648,848,3.365,849,4.236,850,3.365,851,2.933,852,1.506,853,1.641,854,2.124,855,2.003,856,2.933,857,1.897,858,2.435]],["title/classes/EnsureModuleLoadedOnceGuard.html",[26,0.37,600,2.915]],["body/classes/EnsureModuleLoadedOnceGuard.html",[3,0.195,4,0.151,9,0.151,19,1.339,20,0.868,22,0.173,24,0.013,25,0.195,26,0.563,150,0.43,197,0.011,198,0.011,213,1.759,214,0.591,215,0.903,273,2.985,279,3.572,280,4.12,316,3.863,600,5.212,602,6.022,859,6.276,860,5.333,861,7.201,862,6.119,863,7.201,864,6.119,865,6.119,866,6.119]],["title/components/FaqComponent.html",[0,0.507,166,1.119]],["body/components/FaqComponent.html",[0,0.863,1,1.377,2,1.974,3,0.152,4,0.119,5,1.582,6,1.639,7,1.582,8,1.582,9,0.119,11,1.425,12,2.694,13,2.509,14,1.974,15,2.045,17,2.045,19,1.501,20,0.878,22,0.135,23,0.734,24,0.013,25,0.152,26,0.44,43,1.013,95,1.527,144,1.582,145,2.045,146,1.974,147,1.582,148,2.395,149,1.582,150,0.482,151,1.582,152,1.377,153,1.582,154,1.377,155,1.582,156,1.377,157,1.582,158,1.377,159,1.527,160,1.582,161,1.377,162,1.582,163,1.377,164,1.013,165,1.582,166,2.014,167,1.582,168,1.377,169,1.582,170,1.33,171,1.582,172,1.377,173,1.582,174,1.377,175,1.582,176,1.33,177,1.33,178,1.582,179,1.377,180,1.582,181,1.33,182,1.475,183,1.582,184,1.33,185,1.582,186,1.33,187,1.582,188,1.33,189,0.6,190,1.582,191,1.377,192,1.582,193,1.33,194,1.475,195,1.582,196,1.582,197,0.01,198,0.01,200,1.779,201,2.83,203,0.398,206,1.553,209,2.992,219,1.201,220,2.279,867,4.173,868,6.318,869,6.858,870,6.189,871,4.788,872,4.788,873,5.394]],["title/injectables/FileBasedDataService.html",[235,1.802,262,2.915]],["body/injectables/FileBasedDataService.html",[3,0.056,4,0.044,9,0.044,19,0.386,20,1.044,22,0.182,23,0.27,24,0.014,25,0.056,26,0.162,38,1.967,43,0.797,67,1.402,112,1.246,134,1.141,150,0.513,189,0.461,197,0.005,198,0.005,203,0.146,206,0.736,207,2.5,213,1.99,214,0.658,215,1.021,219,1.832,228,0.757,231,1.537,234,2.323,235,1.313,237,1.187,247,1.537,248,3.83,249,2.538,250,2.355,252,2.558,259,1.387,260,1.276,261,1.387,262,2.124,263,1.537,264,3.079,269,0.604,273,3.42,335,3.306,396,1.976,420,1.386,425,0.86,426,1.141,427,1.114,453,1.68,460,2.092,464,2.993,468,1.387,482,1.122,492,2.052,493,2.507,503,1.746,507,1.687,510,1.619,518,1.452,525,2.125,526,0.945,528,2.381,530,1.839,538,0.757,563,0.7,567,0.583,574,1.888,575,0.945,580,1.499,582,1.499,584,2.492,587,0.945,588,0.945,590,0.823,609,3.59,616,1.976,622,0.86,644,0.789,651,0.86,706,1.537,748,1.049,794,3.83,795,2.558,796,2.558,797,2.558,798,2.558,799,2.558,800,2.558,801,3.83,802,3.83,803,3.83,804,2.558,805,2.558,806,2.558,807,2.558,808,3.83,809,2.558,810,3.83,811,2.558,815,4.055,816,2.558,818,3.285,819,2.558,821,2.558,822,2.558,824,2.558,826,2.558,827,2.558,829,2.558,834,2.558,836,5.294,838,2.558,840,2.558,842,2.558,845,2.558,847,2.309,849,2.558,851,2.558,852,0.789,853,0.86,854,1.852,855,1.049,856,1.537,857,0.994,858,1.276,874,3.459,875,1.387,876,2.935,877,2.538,878,2.935,879,1.763,880,2.935,881,1.763,882,7.17,883,1.763,884,1.763,885,1.763,886,1.763,887,1.763,888,1.763,889,1.763,890,1.763,891,1.763,892,1.763,893,1.763,894,1.763,895,1.763,896,1.763,897,1.763,898,1.763,899,1.763,900,1.763,901,2.935,902,1.763,903,1.763,904,4.655,905,1.763,906,2.935,907,3.77,908,1.763,909,1.276,910,1.763,911,3.77,912,1.276,913,1.387,914,1.537,915,1.387,916,1.537,917,1.387,918,1.537,919,1.387,920,1.537,921,1.537,922,1.387,923,1.537,924,1.387,925,1.537,926,1.387,927,1.537,928,1.387,929,1.537,930,1.387,931,1.537,932,1.763,933,3.77,934,1.763,935,1.763,936,2.935,937,1.763,938,1.763,939,1.763,940,1.763,941,1.387,942,1.763,943,1.763,944,1.763,945,1.763,946,1.763,947,3.844,948,7.17,949,5.189,950,1.763,951,2.935,952,1.763,953,2.935,954,1.763,955,3.459,956,2.309,957,1.763,958,1.763,959,3.77,960,1.763,961,2.935,962,1.763,963,4.827,964,1.763,965,5.269,966,1.763,967,1.763,968,1.763,969,1.763,970,1.763,971,1.763,972,1.763,973,3.77,974,2.935,975,1.763,976,1.387,977,1.763,978,1.763,979,1.763,980,2.935,981,1.763,982,1.763,983,2.935,984,3.77,985,3.77,986,2.935,987,1.763,988,2.935,989,2.935,990,1.763,991,1.763,992,1.763,993,4.395,994,2.935,995,1.763,996,1.763,997,1.763,998,1.763,999,1.763,1000,1.763,1001,1.763,1002,1.763,1003,1.763,1004,1.763,1005,1.763,1006,1.763,1007,1.763,1008,1.763,1009,3.77,1010,2.935,1011,1.763,1012,1.763,1013,2.309,1014,1.763,1015,1.763,1016,1.763,1017,2.935,1018,1.763,1019,1.763,1020,1.763,1021,1.763,1022,1.763,1023,1.763,1024,2.309,1025,1.763,1026,1.763,1027,1.763,1028,1.763,1029,1.763,1030,1.763,1031,1.763,1032,1.763,1033,1.763,1034,1.763,1035,1.763,1036,1.763,1037,1.763,1038,1.763,1039,1.763,1040,1.763,1041,1.763,1042,1.763,1043,1.763,1044,1.763,1045,1.763,1046,1.763,1047,1.763,1048,1.763,1049,3.77,1050,2.935,1051,1.763,1052,1.763,1053,1.763,1054,2.935,1055,1.763,1056,1.763,1057,2.935,1058,1.276,1059,1.763,1060,1.763,1061,1.976,1062,2.935,1063,1.763,1064,1.763,1065,1.276,1066,1.763,1067,1.763,1068,1.763,1069,1.763,1070,1.763,1071,1.763,1072,1.763,1073,1.763,1074,1.763,1075,1.763,1076,1.763,1077,2.728,1078,1.763,1079,1.763,1080,3.77,1081,1.763,1082,1.763,1083,1.763,1084,1.763,1085,1.276,1086,1.763,1087,1.763,1088,1.763,1089,1.763,1090,2.935,1091,1.763,1092,1.763,1093,1.763,1094,1.763,1095,1.763,1096,2.935,1097,2.935,1098,1.763,1099,1.763,1100,1.763,1101,1.763,1102,1.763,1103,1.763,1104,1.763,1105,1.763,1106,1.763]],["title/components/FooterComponent.html",[0,0.507,168,1.158]],["body/components/FooterComponent.html",[0,0.796,1,1.171,2,2.169,3,0.13,4,0.101,5,1.346,6,1.395,7,1.346,8,1.346,9,0.101,11,1.212,12,2.658,13,2.474,14,1.773,15,1.837,17,1.837,19,1.385,20,0.789,22,0.157,23,0.624,24,0.013,25,0.13,26,0.375,27,4.375,40,4.375,43,0.862,81,2.125,82,2.512,86,1.682,87,2.712,88,2.612,89,2.595,90,1.617,92,2.832,94,1.823,95,1.773,96,2.081,101,2.572,103,1.987,104,2.743,113,2.743,114,1.823,119,1.904,126,2.979,133,2.388,136,1.987,137,2.183,138,1.902,144,1.346,145,1.837,146,1.773,147,1.346,148,2.246,149,1.346,150,0.445,151,1.346,152,1.171,153,1.346,154,1.171,155,1.346,156,1.171,157,1.346,158,1.171,159,1.3,160,1.346,161,1.171,162,1.346,163,1.171,164,0.862,165,1.346,166,1.132,167,1.346,168,1.955,169,1.346,170,1.132,171,1.346,172,1.171,173,1.346,174,1.171,175,1.346,176,1.132,177,1.132,178,1.346,179,1.171,180,1.346,181,1.132,182,1.255,183,1.346,184,1.132,185,1.346,186,1.132,187,1.346,188,1.132,189,0.553,190,1.346,191,1.171,192,1.346,193,1.132,194,1.255,195,1.346,196,1.346,197,0.009,198,0.009,200,1.598,201,2.612,203,0.338,206,1.395,209,2.806,219,1.022,220,2.047,372,2.425,381,3.551,386,3.551,388,1.75,405,2.949,434,2.425,474,2.297,476,2.743,487,3.643,516,3.134,1107,3.551,1108,5.559,1109,6.328,1110,5.559,1111,4.074,1112,4.074,1113,5.559,1114,5.925,1115,5.559,1116,5.559,1117,5.559,1118,4.845,1119,4.845,1120,5.559,1121,5.559,1122,5.559,1123,5.559,1124,5.559,1125,5.559,1126,5.559,1127,5.559,1128,5.559,1129,2.949,1130,4.074,1131,4.074,1132,5.559,1133,4.074,1134,4.074,1135,3.551,1136,4.074,1137,3.551,1138,4.074,1139,3.134,1140,4.074,1141,3.206]],["title/components/FrameworkComponent.html",[0,0.507,170,1.119]],["body/components/FrameworkComponent.html",[0,0.845,1,1.319,2,1.92,3,0.146,4,0.114,5,1.516,6,1.571,7,1.516,8,1.516,9,0.114,11,1.365,12,2.685,13,2.5,14,1.92,15,1.989,17,1.989,19,1.004,20,0.953,22,0.19,23,0.703,24,0.013,25,0.146,26,0.422,43,1.607,95,1.463,144,1.516,145,1.989,146,1.92,147,1.516,148,2.356,149,1.516,150,0.501,151,1.516,152,1.319,153,1.516,154,1.319,155,1.516,156,1.319,157,1.516,158,1.319,159,1.463,160,1.516,161,1.319,162,1.516,163,1.319,164,0.97,165,1.516,166,1.275,167,1.516,168,1.319,169,1.516,170,1.981,171,1.516,172,1.319,173,1.516,174,1.319,175,1.516,176,1.275,177,1.275,178,1.516,179,1.319,180,1.516,181,1.275,182,1.413,183,1.516,184,1.275,185,1.516,186,1.275,187,1.516,188,1.275,189,0.587,190,1.516,191,1.319,192,1.516,193,1.275,194,1.413,195,1.516,196,1.516,197,0.009,198,0.009,200,1.73,201,2.772,203,0.381,204,1.107,206,1.51,209,2.943,213,1.319,214,0.581,215,0.677,219,1.151,220,2.216,227,1.893,228,1.97,518,2.22,853,2.238,1142,3.998,1143,6.717,1144,6.019,1145,3.32,1146,4.801,1147,6.019,1148,3.225,1149,4.587,1150,3.32,1151,3.61,1152,3.998]],["title/components/FrameworkRendererComponent.html",[0,0.507,172,1.158]],["body/components/FrameworkRendererComponent.html",[0,0.677,1,0.874,2,1.439,3,0.097,4,0.075,5,1.004,6,1.041,7,1.004,8,1.004,9,0.075,11,0.904,12,2.58,13,2.399,14,1.439,15,1.491,17,1.491,19,0.665,20,1.06,22,0.18,23,0.466,24,0.013,25,0.097,26,0.279,43,1.6,79,1.305,81,2.43,82,3.035,83,2.557,84,2.417,85,1.809,86,2.22,87,2.624,88,2.457,89,1.419,90,1.791,92,1.36,94,2.019,95,1.439,103,1.482,112,2.101,114,2.407,115,2.2,119,2.177,127,1.628,128,1.628,131,2.304,132,1.628,133,1.937,135,1.918,138,1.419,144,1.004,145,1.491,146,1.439,147,1.004,148,1.967,149,1.004,150,0.447,151,1.004,152,0.874,153,1.004,154,0.874,155,1.004,156,0.874,157,1.004,158,0.874,159,0.969,160,1.004,161,0.874,162,1.004,163,0.874,164,0.643,165,1.004,166,0.844,167,1.004,168,0.874,169,1.004,170,0.844,171,1.004,172,1.712,173,1.004,174,0.874,175,1.004,176,0.844,177,0.844,178,1.004,179,0.874,180,1.004,181,0.844,182,0.936,183,1.004,184,0.844,185,1.004,186,0.844,187,1.004,188,0.844,189,0.471,190,1.004,191,0.874,192,1.004,193,0.844,194,0.936,195,1.004,196,1.004,197,0.007,198,0.007,200,1.297,201,2.22,203,0.252,204,0.83,206,1.132,207,1.36,209,2.457,213,1.297,214,0.711,215,0.665,219,1.132,220,1.981,222,1.171,227,1.254,228,1.305,233,1.491,234,2.136,273,2.904,278,2.392,335,1.254,372,3.202,380,2.304,384,2.046,388,1.305,415,2.543,418,6.011,420,1.129,426,1.651,427,1.259,428,3.696,429,1.809,430,2.649,432,2.2,441,2.747,443,2.392,449,3.25,452,4.689,453,1.162,455,4.689,456,4.689,460,2.363,464,3.946,466,0.936,467,1.918,468,3.55,474,3.033,477,3.037,507,2.407,518,1.778,528,2.624,640,1.809,660,1.809,725,1.918,847,2.392,1077,3.265,1145,2.2,1146,4.008,1148,2.417,1153,6.593,1154,5.953,1155,2.649,1156,4.511,1157,5.38,1158,4.511,1159,5.38,1160,5.38,1161,4.511,1162,5.38,1163,4.689,1164,4.511,1165,3.039,1166,3.039,1167,3.039,1168,3.039,1169,3.039,1170,3.039,1171,3.039,1172,4.511,1173,3.039,1174,3.039,1175,3.932,1176,2.649,1177,2.392,1178,2.392,1179,3.039,1180,3.039,1181,3.039,1182,3.039,1183,2.392,1184,4.511,1185,3.039,1186,4.511,1187,4.511,1188,4.511,1189,4.511,1190,4.511,1191,3.039,1192,5.38,1193,3.039,1194,1.713,1195,3.622,1196,5.38,1197,2.392,1198,2.649,1199,2.649,1200,3.932,1201,5.953,1202,2.046,1203,3.039]],["title/guards/FrameworkResolver.html",[1204,2.711,1205,2.711]],["body/guards/FrameworkResolver.html",[3,0.175,4,0.136,9,0.136,19,1.207,20,0.96,22,0.225,23,0.845,24,0.013,25,0.175,26,0.507,150,0.475,197,0.011,198,0.011,200,1.585,203,0.458,206,1.697,207,2.467,213,1.945,214,0.653,215,0.998,219,1.383,227,2.275,228,2.368,235,3.026,236,4.301,264,2.188,335,2.275,518,1.821,608,3.99,609,3.887,815,3.736,852,2.467,853,2.689,1148,2.954,1202,4.926,1205,4.554,1206,3.711,1207,6.377,1208,3.711,1209,4.816,1210,3.48,1211,5.513,1212,4.895,1213,5.521,1214,4.926,1215,5.521,1216,4.804,1217,3.48,1218,4.338,1219,5.513,1220,4.338,1221,5.513]],["title/components/HeaderComponent.html",[0,0.507,174,1.158]],["body/components/HeaderComponent.html",[0,0.75,1,1.046,2,1.64,3,0.116,4,0.09,5,1.203,6,1.246,7,1.203,8,1.203,9,0.09,11,1.083,12,2.63,13,2.447,14,2.262,15,1.698,17,1.698,19,1.305,20,0.516,22,0.168,23,0.558,24,0.013,25,0.116,26,0.335,37,2.384,43,0.77,79,1.563,80,1.628,81,2.844,82,2.571,86,2.121,87,2.507,88,2.46,89,2.4,90,2.571,92,3.386,94,3.056,95,1.161,96,1.858,98,2.45,102,3.36,103,2.507,111,2.45,117,2.45,118,2.297,119,2.704,122,3.461,124,4.43,125,3.193,126,1.95,127,1.95,128,1.95,129,2.166,130,2.634,131,1.858,133,2.56,136,2.907,137,3.193,138,2.782,144,1.203,145,1.698,146,1.64,147,1.203,148,2.14,149,1.203,150,0.419,151,1.203,152,1.046,153,1.203,154,1.046,155,1.203,156,1.046,157,1.203,158,1.046,159,1.161,160,1.203,161,1.046,162,1.203,163,1.046,164,0.77,165,1.203,166,1.011,167,1.203,168,1.046,169,1.203,170,1.011,171,1.203,172,1.046,173,1.203,174,1.862,175,1.203,176,1.011,177,1.011,178,1.203,179,1.046,180,1.203,181,1.011,182,1.121,183,1.203,184,1.011,185,1.203,186,1.011,187,1.203,188,1.011,189,0.521,190,1.203,191,1.046,192,1.203,193,1.011,194,1.121,195,1.203,196,1.203,197,0.008,198,0.008,203,0.302,360,2.166,372,2.166,380,1.858,382,2.864,388,3.045,396,2.45,400,1.584,405,2.634,434,2.166,442,3.72,444,3.172,445,3.651,471,3.06,474,3.997,631,1.858,725,2.297,786,2.864,1129,2.634,1135,3.172,1137,3.172,1139,3.36,1141,2.864,1222,3.172,1223,4.045,1224,5.96,1225,5.14,1226,3.639,1227,5.14,1228,6.476,1229,3.639,1230,3.639,1231,3.172,1232,3.172,1233,5.14,1234,5.14,1235,3.639,1236,5.14,1237,5.96,1238,3.639,1239,5.14,1240,3.639,1241,7.287,1242,3.639,1243,5.14,1244,2.864,1245,3.639,1246,3.639,1247,3.639,1248,3.639,1249,3.639,1250,3.639,1251,3.639,1252,3.172]],["title/components/HomeComponent.html",[0,0.507,176,1.119]],["body/components/HomeComponent.html",[0,0.858,1,1.36,2,1.959,3,0.15,4,0.117,5,1.563,6,1.62,7,1.563,8,1.563,9,0.117,11,1.408,12,2.682,13,2.497,14,1.959,15,2.029,17,2.029,19,1.036,20,0.871,22,0.173,23,0.725,24,0.013,25,0.15,26,0.435,43,1.001,80,2.117,81,1.808,82,2.438,83,2.032,86,1.953,88,1.953,90,1.878,95,1.509,114,2.117,144,1.563,145,2.029,146,1.959,147,1.563,148,2.385,149,1.563,150,0.507,151,1.563,152,1.36,153,1.563,154,1.36,155,1.563,156,1.36,157,1.563,158,1.36,159,1.509,160,1.563,161,1.36,162,1.563,163,1.36,164,1.001,165,1.563,166,1.314,167,1.563,168,1.36,169,1.563,170,1.314,171,1.563,172,1.36,173,1.563,174,1.36,175,1.563,176,2.005,177,1.314,178,1.563,179,1.36,180,1.563,181,1.314,182,1.457,183,1.563,184,1.314,185,1.563,186,1.314,187,1.563,188,1.314,189,0.596,190,1.563,191,1.36,192,1.563,193,1.314,194,1.457,195,1.563,196,1.563,197,0.01,198,0.01,203,0.393,204,1.129,213,1.36,214,0.457,215,0.698,228,2.032,426,1.228,427,1.001,441,2.416,609,3.738,1210,2.986,1217,2.986,1253,4.123,1254,6.818,1255,6.141,1256,5.943,1257,6.141,1258,6.141]],["title/interfaces/InfoResource.html",[481,0.446,1259,2.915]],["body/interfaces/InfoResource.html",[3,0.207,4,0.128,9,0.128,22,0.147,24,0.014,25,0.207,54,4.111,59,3.275,73,4.793,91,5.404,132,3.49,134,1.848,150,0.458,189,0.653,197,0.01,198,0.01,203,0.431,204,1.198,214,0.687,215,0.961,400,1.598,420,1.469,481,0.827,483,1.441,485,2.006,492,2.454,501,2.826,502,2.721,503,2.047,560,3.326,574,3.058,857,2.925,1259,5.404,1260,4.082,1261,7.212,1262,6.178,1263,4.521]],["title/interfaces/InfoResourceSection.html",[481,0.446,857,2.27]],["body/interfaces/InfoResourceSection.html",[3,0.225,4,0.126,9,0.126,22,0.144,24,0.014,25,0.205,54,3.222,59,4.686,73,4.758,91,5.813,132,4.189,134,2.029,150,0.359,189,0.649,197,0.01,198,0.01,203,0.424,204,1.186,214,0.739,400,1.986,420,1.465,481,0.783,483,1.418,485,1.572,492,2.442,501,2.805,502,2.701,503,2.309,560,2.606,574,3.035,857,3.635,1259,5.54,1260,4.017,1261,6.672,1262,5.073,1263,4.449,1264,5.104]],["title/components/InformationComponent.html",[0,0.507,177,1.119]],["body/components/InformationComponent.html",[0,0.794,1,1.165,2,1.767,3,0.233,4,0.1,5,1.339,6,1.388,7,1.339,8,1.339,9,0.1,11,1.206,12,2.657,13,2.473,14,1.767,15,1.831,17,1.831,19,1.382,20,0.896,22,0.178,23,0.621,24,0.013,25,0.129,26,0.373,43,1.616,54,3.497,59,4.282,65,4.828,72,4.828,79,1.741,80,1.814,81,2.593,82,3.034,83,2.379,86,2.286,87,1.977,88,2.286,90,1.609,92,3.178,94,1.814,95,1.293,112,2.086,114,2.479,119,1.388,125,3.635,126,2.172,127,2.172,128,2.172,135,2.559,136,1.977,137,2.172,138,1.892,144,1.339,145,1.831,146,1.767,147,1.339,148,2.242,149,1.339,150,0.443,151,1.339,152,1.165,153,1.339,154,1.165,155,1.339,156,1.165,157,1.339,158,1.165,159,1.293,160,1.339,161,1.165,162,1.339,163,1.165,164,0.857,165,1.339,166,1.126,167,1.339,168,1.165,169,1.339,170,1.126,171,1.339,172,1.165,173,1.339,174,1.165,175,1.339,176,1.126,177,1.885,178,1.339,179,1.165,180,1.339,181,1.126,182,1.249,183,1.339,184,1.126,185,1.339,186,1.126,187,1.339,188,1.126,189,0.552,190,1.339,191,1.165,192,1.339,193,1.126,194,1.249,195,1.339,196,1.339,197,0.009,198,0.009,203,0.337,204,1.019,214,0.535,380,2.829,388,1.741,405,2.934,426,1.052,427,0.857,440,2.934,441,2.829,474,3.558,506,1.609,518,2.086,853,1.977,1129,2.934,1139,2.285,1141,3.19,1265,3.533,1266,6.312,1267,5.54,1268,4.249,1269,6.312,1270,5.54,1271,5.338,1272,6.784,1273,4.053,1274,5.54,1275,3.19,1276,5.54,1277,5.54]],["title/modules/InformationModule.html",[279,1.88,1278,2.915]],["body/modules/InformationModule.html",[3,0.172,4,0.134,9,0.134,22,0.231,23,0.83,24,0.013,25,0.172,26,0.498,54,3.42,166,2.205,170,2.205,177,2.205,184,2.205,197,0.011,198,0.011,281,2.529,282,3.773,289,4.724,290,4.224,291,3.42,292,2.903,294,4.224,295,3.586,300,3.586,308,4.264,310,4.264,429,3.225,596,3.921,599,4.843,1278,6.097,1279,4.722,1280,4.722,1281,4.722,1282,5.343,1283,5.418,1284,4.722,1285,4.722,1286,4.722,1287,4.505,1288,4.722,1289,3.648,1290,4.722]],["title/modules/InformationRoutingModule.html",[279,1.88,1282,2.711]],["body/modules/InformationRoutingModule.html",[0,0.967,3,0.179,4,0.139,9,0.139,22,0.231,23,0.863,24,0.013,25,0.179,26,0.518,43,1.449,59,3.554,166,1.904,170,1.904,177,1.904,184,1.904,197,0.011,198,0.011,227,2.324,281,2.628,294,3.554,295,3.017,300,3.671,328,4.43,330,4.958,331,4.613,335,2.324,337,5.303,338,4.907,339,4.907,340,4.075,348,3.79,868,4.907,1205,4.613,1209,4.325,1282,4.613,1284,4.907,1285,4.907,1286,4.907,1287,4.613,1288,4.907,1289,4.613,1290,4.907,1291,5.63,1292,5.63,1293,5.63,1294,5.63,1295,5.971,1296,5.63]],["title/injectables/LogoLocatorService.html",[235,1.802,250,2.158]],["body/injectables/LogoLocatorService.html",[3,0.178,4,0.138,9,0.138,19,1.612,20,1.045,22,0.158,23,0.857,24,0.013,25,0.178,26,0.514,150,0.393,197,0.011,198,0.011,203,0.464,204,1.255,206,1.711,213,1.607,214,0.658,215,0.825,219,1.402,235,3.052,237,3.764,249,3.764,250,3.655,264,2.219,420,1.36,426,1.451,427,1.182,656,2.995,877,4.957,1268,4.957,1297,6.032,1298,4.399,1299,7.362,1300,6.822,1301,6.822,1302,6.822,1303,5.59,1304,6.822,1305,5.59,1306,5.59,1307,5.59,1308,4.872,1309,5.945,1310,5.945,1311,5.945,1312,5.368]],["title/modules/MaterialModule.html",[279,1.88,1313,2.711]],["body/modules/MaterialModule.html",[3,0.159,4,0.124,9,0.124,22,0.24,23,0.765,24,0.013,25,0.159,26,0.459,197,0.01,198,0.01,281,2.33,295,2.675,300,3.406,348,3.361,400,1.538,660,3.784,1313,4.28,1314,4.992,1315,6.994,1316,6.356,1317,6.994,1318,4.992,1319,6.994,1320,4.992,1321,6.994,1322,3.613,1323,6.994,1324,4.992,1325,4.992,1326,6.994,1327,4.992,1328,6.994,1329,4.992,1330,6.994,1331,4.992,1332,6.994,1333,4.992,1334,6.994,1335,4.992,1336,4.35,1337,6.994,1338,4.992,1339,6.994,1340,4.992,1341,6.994,1342,4.992,1343,6.994,1344,4.992,1345,6.994,1346,4.992,1347,6.994,1348,4.992,1349,6.994,1350,4.992,1351,6.994,1352,3.613,1353,6.994,1354,4.992,1355,6.994,1356,4.992,1357,6.994,1358,4.992,1359,6.994,1360,4.992,1361,6.994,1362,6.994,1363,4.992,1364,4.992,1365,6.994,1366,4.992,1367,6.994,1368,4.992]],["title/components/OverviewComponent.html",[0,0.507,179,1.158]],["body/components/OverviewComponent.html",[0,0.768,1,1.094,2,1.692,3,0.121,4,0.151,5,2.017,6,1.303,7,1.257,8,1.257,9,0.094,11,1.132,12,2.642,13,2.458,14,1.692,15,1.752,17,1.752,19,1.336,20,0.753,22,0.187,23,0.583,24,0.013,25,0.121,26,0.35,37,2.717,43,0.805,79,1.634,80,1.703,81,2.524,82,2.757,83,1.634,84,2.039,85,2.265,86,2.866,87,2.978,88,3.045,89,2.85,90,2.106,92,3.107,93,3.316,94,2.373,95,1.947,96,3.118,106,5.197,108,5.197,112,2.017,113,2.562,114,1.703,115,2.754,133,1.634,136,1.856,137,2.039,138,1.776,139,3.316,144,1.257,145,1.752,146,1.692,147,1.257,148,2.182,149,1.257,150,0.429,151,1.257,152,1.094,153,1.257,154,1.094,155,1.257,156,1.094,157,1.257,158,1.094,159,1.214,160,1.257,161,1.094,162,1.257,163,1.094,164,0.805,165,1.257,166,1.057,167,1.257,168,1.094,169,1.257,170,1.057,171,1.257,172,1.094,173,1.257,174,1.094,175,1.257,176,1.057,177,1.057,178,1.257,179,1.899,180,1.257,181,1.057,182,1.172,183,1.257,184,1.057,185,1.257,186,1.057,187,1.257,188,1.057,189,0.578,190,1.257,191,1.094,192,1.257,193,1.057,194,1.172,195,1.257,196,1.257,197,0.008,198,0.008,203,0.316,214,0.367,292,3.538,356,4.174,361,3.538,367,4.174,371,3.838,376,2.994,377,3.316,378,3.316,379,3.316,380,2.708,384,2.562,388,1.634,400,1.881,415,2.99,428,2.842,432,2.754,445,2.145,471,2.265,472,2.994,473,2.994,720,3.348,786,2.994,815,3.118,852,1.703,855,2.265,1139,2.145,1256,5.321,1369,3.316,1370,4.174,1371,6.105,1372,5.304,1373,5.304,1374,4.622,1375,4.622,1376,5.304,1377,3.805,1378,5.304,1379,6.944,1380,5.304,1381,3.805,1382,5.304,1383,3.805,1384,3.805,1385,5.304,1386,3.805,1387,3.805,1388,2.994,1389,3.805,1390,3.805,1391,7.191,1392,3.805,1393,6.604,1394,3.805,1395,3.805]],["title/components/PageNotFoundComponent.html",[0,0.507,181,1.119]],["body/components/PageNotFoundComponent.html",[0,0.854,1,1.348,2,1.948,3,0.149,4,0.116,5,1.549,6,1.606,7,1.549,8,1.549,9,0.116,11,1.395,12,2.689,13,2.505,14,1.948,15,2.017,17,2.017,19,1.486,20,0.866,22,0.132,23,0.718,24,0.013,25,0.149,26,0.431,43,0.992,95,1.496,132,2.512,144,1.549,145,2.017,146,1.948,147,1.549,148,2.376,149,1.549,150,0.477,151,1.549,152,1.348,153,1.549,154,1.348,155,1.549,156,1.348,157,1.549,158,1.348,159,1.496,160,1.549,161,1.348,162,1.549,163,1.348,164,0.992,165,1.549,166,1.303,167,1.549,168,1.348,169,1.549,170,1.303,171,1.549,172,1.348,173,1.549,174,1.348,175,1.549,176,1.303,177,1.303,178,1.549,179,1.348,180,1.549,181,1.998,182,2.459,183,1.549,184,1.303,185,1.549,186,1.303,187,1.549,188,1.303,189,0.594,190,1.549,191,1.348,192,1.549,193,1.303,194,1.444,195,1.549,196,1.549,197,0.01,198,0.01,200,1.755,201,2.802,203,0.389,206,1.532,209,2.968,219,1.176,220,1.727,333,4.914,1396,5.917,1397,4.087,1398,7.192,1399,6.789,1400,6.106,1401,4.689,1402,4.689,1403,4.689]],["title/injectables/RandomColorService.html",[235,1.802,594,2.711]],["body/injectables/RandomColorService.html",[3,0.183,4,0.142,9,0.142,19,1.631,20,0.984,22,0.162,23,0.88,24,0.013,25,0.183,26,0.528,150,0.403,197,0.011,198,0.011,203,0.477,206,1.739,213,1.651,215,0.847,219,1.441,235,3.102,237,3.866,264,2.28,594,4.668,837,5.417,1404,5.861,1405,4.519,1406,6.933,1407,5.742,1408,6.933,1409,7.736,1410,7.736,1411,7.736,1412,6.742,1413,7.736,1414,5.742,1415,6.933,1416,5.742,1417,5.018]],["title/interfaces/RenderedFilterBlock.html",[481,0.446,636,2.27]],["body/interfaces/RenderedFilterBlock.html",[3,0.111,4,0.087,9,0.087,20,0.828,22,0.099,24,0.014,25,0.222,38,2.237,61,3.288,62,3.471,67,1.594,112,1.652,125,2.678,134,0.908,150,0.506,164,1.057,189,0.51,197,0.008,198,0.008,203,0.291,204,0.919,214,0.711,215,0.737,222,0.908,233,1.156,234,1.389,269,1.198,390,3.587,400,2.073,420,1.402,427,1.558,481,0.853,482,1.337,483,0.972,485,2.219,494,1.444,495,2.626,501,2.315,502,1.91,503,1.829,506,2.778,511,1.503,515,1.503,517,3.131,531,2.722,532,2.609,534,3.594,537,2.722,558,1.633,567,2.223,574,1.503,590,1.633,620,1.633,621,2.083,622,3.901,623,2.818,624,2.356,625,2.083,628,2.978,630,4.53,631,3.679,632,3.365,633,3.365,634,4.802,635,3.931,636,2.818,637,4.016,638,3.155,639,4.283,640,4.166,641,3.365,642,2.356,643,3.365,644,1.566,645,2.356,646,2.356,647,2.975,648,2.975,649,2.083,650,2.209,651,3.103,652,3.155,653,2.356,654,2.356,655,2.356,656,2.678,657,2.209,658,1.875,659,4.85,660,2.975,661,3.155,662,2.356,663,3.365,664,3.365,665,3.155,666,2.356,667,3.155,668,3.681,669,4.016,670,4.016,671,2.975,672,2.356,673,2.975,674,3.155,675,3.155,676,2.356,677,2.356,678,2.356,679,2.356,680,2.356,681,2.209]],["title/components/ResourcesComponent.html",[0,0.507,184,1.119]],["body/components/ResourcesComponent.html",[0,0.82,1,1.242,2,1.845,3,0.137,4,0.107,5,1.427,6,1.479,7,1.427,8,1.427,9,0.107,11,1.285,12,2.672,13,2.487,14,1.845,15,1.911,17,1.911,19,0.945,20,1.03,22,0.197,23,0.662,24,0.013,25,0.137,26,0.397,43,0.913,59,4.582,95,1.378,112,1.911,144,1.427,145,1.911,146,1.845,147,1.427,148,2.301,149,1.427,150,0.489,151,1.427,152,1.242,153,1.427,154,1.242,155,1.427,156,1.242,157,1.427,158,1.242,159,1.378,160,1.427,161,1.242,162,1.427,163,1.242,164,0.913,165,1.427,166,1.2,167,1.427,168,1.242,169,1.427,170,1.2,171,1.427,172,1.242,173,1.427,174,1.242,175,1.427,176,1.2,177,1.2,178,1.427,179,1.242,180,1.427,181,1.2,182,1.33,183,1.427,184,1.935,185,1.427,186,1.2,187,1.427,188,1.2,189,0.57,190,1.427,191,1.242,192,1.427,193,1.2,194,1.33,195,1.427,196,1.427,197,0.009,198,0.009,200,1.663,201,2.691,203,0.359,204,1.064,206,1.451,209,2.874,213,1.242,214,0.629,215,0.637,219,1.451,220,2.564,227,1.782,228,1.855,852,1.932,857,3.676,858,3.125,1145,3.125,1146,4.688,1148,3.098,1150,3.125,1152,3.764,1262,4.55,1418,3.764,1419,5.682,1420,6.519,1421,5.783,1422,6.511,1423,6.068,1424,5.783,1425,4.318,1426,4.318,1427,4.318,1428,4.318,1429,4.318,1430,4.318,1431,5.783,1432,5.783,1433,5.783]],["title/guards/ResourcesResolver.html",[1204,2.711,1287,2.711]],["body/guards/ResourcesResolver.html",[3,0.18,4,0.14,9,0.14,19,1.239,20,0.975,22,0.223,23,0.867,24,0.013,25,0.18,26,0.52,150,0.483,197,0.011,198,0.011,200,1.627,203,0.47,206,1.724,213,1.976,214,0.663,215,1.014,219,1.42,227,2.336,228,2.431,235,3.076,264,2.247,609,3.912,815,3.78,852,2.533,857,3.191,858,4.096,1148,3.033,1206,3.811,1208,3.811,1209,4.86,1210,3.573,1212,4.974,1213,5.572,1214,4.984,1215,5.572,1217,3.573,1287,4.628,1434,6.451,1435,5.66,1436,5.66,1437,5.66]],["title/pipes/SetToArrayPipe.html",[947,2.27,1438,2.711]],["body/pipes/SetToArrayPipe.html",[3,0.192,4,0.15,9,0.15,11,1.8,20,0.858,22,0.171,23,0.927,24,0.013,25,0.192,26,0.556,150,0.535,197,0.011,198,0.011,200,1.739,206,1.518,213,1.739,214,0.584,215,0.892,219,1.518,264,2.401,427,1.279,493,3.143,947,4.033,1438,4.816,1439,4.378,1440,6.234,1441,5.272,1442,7.152,1443,4.76,1444,5.628,1445,6.049,1446,5.628,1447,6.049]],["title/modules/SharedModule.html",[279,1.88,289,2.397]],["body/modules/SharedModule.html",[3,0.135,4,0.105,9,0.105,22,0.232,23,0.648,24,0.013,25,0.135,26,0.389,43,0.895,95,1.35,156,2.31,158,2.31,159,1.35,161,2.136,168,2.31,172,2.31,174,2.31,181,2.232,182,1.304,197,0.009,198,0.009,227,1.747,281,1.976,282,3.216,289,5.058,290,3.601,291,2.671,292,2.268,294,3.601,295,3.057,300,3.057,330,4.128,333,3.063,334,3.688,348,3.841,408,3.063,429,2.519,447,3.33,596,3.063,599,4.67,749,3.063,1154,3.33,1205,3.841,1289,2.849,1313,5.409,1438,5.409,1448,3.688,1449,3.688,1450,3.688,1451,3.688,1452,5.409,1453,5.409,1454,4.232,1455,4.232,1456,4.232,1457,6.453,1458,6.453,1459,4.232,1460,4.232,1461,4.232,1462,4.232,1463,4.232,1464,4.232,1465,4.232,1466,4.232,1467,3.688,1468,4.232,1469,4.232]],["title/interfaces/SimpleDataSource.html",[481,0.446,1470,2.711]],["body/interfaces/SimpleDataSource.html",[3,0.09,4,0.07,9,0.07,20,0.609,22,0.191,24,0.014,25,0.164,26,0.261,112,2.041,119,2.309,189,0.568,197,0.007,198,0.007,200,0.817,203,0.236,206,1.076,207,3.292,219,1.076,220,2.557,222,1.686,233,1.707,234,1.702,241,4.257,264,3.094,269,1.769,273,2.807,335,3.171,360,1.691,420,1.232,427,0.601,464,1.522,466,1.773,467,1.793,481,0.475,483,0.789,567,1.417,616,2.887,620,2.884,623,2.418,628,3.317,651,1.385,777,2.887,815,3.317,852,1.271,877,3.478,904,2.056,909,2.056,912,2.056,949,2.056,963,4.541,1058,3.739,1061,2.887,1065,3.104,1085,3.104,1195,1.912,1268,4.16,1352,2.056,1470,3.478,1471,2.056,1472,3.075,1473,4.862,1474,4.862,1475,2.84,1476,2.84,1477,2.235,1478,4.529,1479,2.235,1480,2.235,1481,3.375,1482,2.235,1483,4.876,1484,2.056,1485,2.235,1486,2.235,1487,3.104,1488,3.375,1489,1.522,1490,4.529,1491,2.235,1492,2.235,1493,2.235,1494,2.235,1495,2.235,1496,2.235,1497,2.235,1498,2.235,1499,2.235,1500,2.235,1501,2.235,1502,2.056,1503,2.235,1504,2.235,1505,2.235,1506,2.235,1507,2.235,1508,3.375,1509,2.235,1510,3.375,1511,2.235,1512,2.235,1513,2.235,1514,4.862,1515,2.235,1516,4.066,1517,2.235,1518,3.375,1519,2.235,1520,3.375,1521,2.235,1522,2.235,1523,2.235,1524,3.375,1525,4.066,1526,4.529,1527,3.375,1528,2.235,1529,2.235,1530,2.235,1531,3.375,1532,2.235,1533,2.235,1534,2.235,1535,2.235,1536,3.375,1537,2.235,1538,2.235,1539,2.235,1540,2.235,1541,2.235,1542,2.235,1543,2.235,1544,2.235,1545,2.235,1546,2.235,1547,2.235,1548,2.235,1549,2.235,1550,2.235,1551,4.066,1552,2.235,1553,2.235,1554,2.235,1555,2.235,1556,2.235,1557,2.235,1558,2.235,1559,4.066,1560,2.235,1561,2.235,1562,2.235,1563,2.235,1564,3.375,1565,3.375,1566,3.375,1567,3.375,1568,2.235,1569,5.867,1570,4.862,1571,4.066,1572,3.375,1573,4.066,1574,2.235,1575,4.066,1576,2.235,1577,2.235,1578,2.235,1579,2.235,1580,5.307,1581,3.375,1582,4.066,1583,3.375,1584,2.235,1585,2.235,1586,2.235,1587,2.235,1588,2.235,1589,2.235,1590,4.529,1591,2.235,1592,2.235,1593,3.375,1594,2.235,1595,2.235,1596,2.235,1597,2.235,1598,3.375,1599,3.375,1600,2.235,1601,3.375,1602,3.375,1603,2.235,1604,3.375,1605,2.235,1606,2.235,1607,2.056,1608,2.235]],["title/interfaces/Sort.html",[481,0.446,1483,2.711]],["body/interfaces/Sort.html",[3,0.091,4,0.071,9,0.071,22,0.191,24,0.014,25,0.165,26,0.262,112,2.045,119,2.312,189,0.569,197,0.007,198,0.007,200,0.82,203,0.237,204,0.791,207,3.295,214,0.275,220,2.486,222,1.688,233,1.711,234,1.707,241,4.263,264,3.096,269,1.773,273,2.813,335,3.173,360,1.697,420,1.234,427,0.603,464,1.527,466,1.776,467,1.799,481,0.476,483,0.792,567,1.421,616,1.919,620,2.889,623,2.424,628,3.322,651,1.39,777,2.895,815,3.16,852,1.276,877,3.486,904,2.063,909,2.063,912,2.063,949,2.063,963,4.546,1058,3.747,1061,2.895,1065,3.112,1085,3.112,1195,3.882,1268,4.166,1352,2.063,1470,2.895,1471,2.063,1472,2.56,1473,3.384,1474,3.384,1477,2.243,1478,4.537,1479,2.243,1480,2.243,1481,3.384,1482,2.243,1483,4.958,1484,4.173,1485,2.243,1486,2.243,1487,4.173,1488,4.537,1489,1.527,1490,4.537,1491,2.243,1492,2.243,1493,2.243,1494,2.243,1495,2.243,1496,2.243,1497,2.243,1498,2.243,1499,2.243,1500,2.243,1501,2.243,1502,2.063,1503,2.243,1504,2.243,1505,2.243,1506,2.243,1507,2.243,1508,3.384,1509,2.243,1510,3.384,1511,2.243,1512,2.243,1513,2.243,1514,4.869,1515,2.243,1516,4.074,1517,2.243,1518,3.384,1519,2.243,1520,3.384,1521,2.243,1522,2.243,1523,2.243,1524,3.384,1525,4.074,1526,4.537,1527,3.384,1528,2.243,1529,2.243,1530,2.243,1531,3.384,1532,2.243,1533,2.243,1534,2.243,1535,2.243,1536,3.384,1537,2.243,1538,2.243,1539,2.243,1540,2.243,1541,2.243,1542,2.243,1543,2.243,1544,2.243,1545,2.243,1546,2.243,1547,2.243,1548,2.243,1549,2.243,1550,2.243,1551,4.074,1552,2.243,1553,2.243,1554,2.243,1555,2.243,1556,2.243,1557,2.243,1558,2.243,1559,4.074,1560,2.243,1561,2.243,1562,2.243,1563,2.243,1564,3.384,1565,3.384,1566,3.384,1567,3.384,1568,2.243,1569,5.872,1570,4.869,1571,4.074,1572,3.384,1573,4.074,1574,2.243,1575,4.074,1576,2.243,1577,2.243,1578,2.243,1579,2.243,1580,5.314,1581,3.384,1582,4.074,1583,3.384,1584,2.243,1585,2.243,1586,2.243,1587,2.243,1588,2.243,1589,2.243,1590,4.537,1591,2.243,1592,2.243,1593,3.384,1594,2.243,1595,2.243,1596,2.243,1597,2.243,1598,3.384,1599,3.384,1600,2.243,1601,3.384,1602,3.384,1603,2.243,1604,3.384,1605,2.243,1606,2.243,1607,2.063,1608,2.243]],["title/classes/TableColumn.html",[26,0.37,1609,2.915]],["body/classes/TableColumn.html",[0,0.719,3,0.135,4,0.105,9,0.105,12,1.352,13,1.261,15,1.4,17,1.4,19,0.928,20,0.981,22,0.204,23,0.649,24,0.014,25,0.182,26,0.525,43,0.896,112,1.4,119,2.47,126,4.192,150,0.401,189,0.565,193,1.177,194,1.305,197,0.009,198,0.009,200,1.218,201,2.356,203,0.574,204,1.05,207,1.896,209,1.749,214,0.667,215,1.019,220,1.56,316,2.675,335,2.665,420,1.388,428,3.865,440,3.067,460,2.267,492,2.301,518,1.887,566,3.059,567,1.887,644,2.555,649,4.294,725,2.675,748,2.523,853,2.067,955,3.335,976,3.335,1183,3.335,1322,3.067,1472,2.523,1489,3.059,1609,5.588,1610,4.553,1611,5.22,1612,3.335,1613,6.022,1614,4.238,1615,4.238,1616,4.238,1617,4.238,1618,4.976,1619,3.067,1620,3.067,1621,4.493,1622,3.693,1623,3.693,1624,3.335,1625,3.335,1626,3.693,1627,3.693,1628,3.693,1629,6.286,1630,3.693,1631,3.693,1632,3.693,1633,3.693,1634,3.693,1635,3.693,1636,3.693,1637,3.693,1638,3.693,1639,3.693,1640,3.693,1641,3.693,1642,4.976,1643,3.693,1644,4.976,1645,3.693,1646,4.976,1647,6.022,1648,3.693,1649,3.693,1650,3.693,1651,3.693,1652,4.493,1653,3.693,1654,3.693,1655,3.335,1656,3.335,1657,3.693,1658,3.693,1659,4.976,1660,3.693]],["title/components/TechnologiesComponent.html",[0,0.507,186,1.119]],["body/components/TechnologiesComponent.html",[0,0.564,1,0.652,2,1.149,3,0.072,4,0.056,5,0.749,6,0.776,7,0.749,8,0.749,9,0.056,11,0.675,12,2.482,13,2.304,14,1.149,15,1.19,17,1.19,19,0.788,20,1.063,22,0.203,23,0.347,24,0.014,25,0.072,26,0.208,37,2.05,43,1.079,46,3.139,51,1.681,67,1.149,79,0.974,80,1.015,81,2.7,82,3.151,83,2.922,84,2.4,86,2.564,87,2.185,88,2.564,89,1.058,90,2.466,92,2.78,95,1.149,98,1.527,99,1.641,101,2.273,102,1.278,104,1.527,111,1.527,112,2.194,114,2.78,117,1.527,118,1.431,119,1.906,124,2.144,131,1.158,132,2.4,133,1.547,136,2.489,137,1.215,138,1.058,144,0.749,145,1.19,146,1.149,147,0.749,148,1.686,149,0.749,150,0.416,151,0.749,152,0.652,153,0.749,154,0.652,155,0.749,156,0.652,157,0.749,158,0.652,159,0.723,160,0.749,161,0.652,162,0.749,163,0.652,164,0.48,165,0.749,166,0.63,167,0.749,168,0.652,169,0.749,170,0.63,171,0.749,172,0.652,173,0.749,174,0.652,175,0.749,176,0.63,177,0.63,178,0.749,179,0.652,180,0.749,181,0.63,182,0.699,183,0.749,184,0.63,185,0.749,186,1.418,187,0.749,188,0.63,189,0.518,190,0.749,191,0.652,192,0.749,193,0.63,194,0.699,195,0.749,196,0.749,197,0.006,198,0.006,200,1.035,201,1.849,203,0.188,204,0.662,206,0.904,207,3.251,209,2.106,213,1.288,214,0.692,215,0.661,219,1.487,220,2.373,227,0.936,273,2.185,278,1.784,299,2.425,335,2.297,355,2.191,356,2.834,369,2.606,371,2.606,380,1.158,384,1.527,388,1.547,400,1.109,406,1.976,420,0.988,426,1.324,427,1.079,434,1.35,439,1.976,441,3.474,442,1.641,445,2.03,449,1.106,453,1.712,460,2.352,464,3.454,471,2.667,472,1.784,473,1.784,495,1.486,518,1.48,520,2.715,528,1.757,609,2.89,620,2.382,622,2.489,631,2.842,634,2.828,635,1.839,636,2.526,637,1.431,644,2.005,719,3.139,736,4.447,738,3.905,748,1.35,749,1.641,790,3.525,837,1.527,852,1.015,853,1.106,855,1.35,956,1.784,1077,1.641,1129,1.641,1139,2.526,1146,3.435,1148,2.4,1150,1.641,1151,1.784,1176,1.976,1177,1.784,1178,1.784,1195,1.527,1197,1.784,1202,2.425,1210,1.431,1217,1.431,1223,1.784,1244,2.834,1275,1.784,1322,1.641,1419,3.905,1422,3.905,1423,4.447,1472,2.667,1484,1.641,1487,1.641,1489,2.4,1619,1.641,1620,1.641,1621,3.525,1624,3.525,1625,4.38,1652,2.834,1655,1.784,1656,1.784,1661,1.976,1662,3.601,1663,3.601,1664,4.48,1665,3.601,1666,4.48,1667,4.48,1668,4.48,1669,4.48,1670,5.102,1671,5.102,1672,3.601,1673,3.601,1674,6.212,1675,5.102,1676,3.601,1677,2.267,1678,2.267,1679,2.267,1680,2.267,1681,3.601,1682,2.267,1683,1.641,1684,3.601,1685,5.102,1686,5.926,1687,5.102,1688,2.267,1689,2.267,1690,2.267,1691,2.267,1692,2.267,1693,2.267,1694,3.601,1695,2.267,1696,1.784,1697,3.601,1698,2.267,1699,2.267,1700,2.267,1701,2.267,1702,2.267,1703,2.267,1704,2.267,1705,2.267,1706,2.267,1707,2.267,1708,2.267,1709,2.267,1710,3.601,1711,2.267,1712,3.905,1713,2.267,1714,2.267,1715,2.267,1716,1.976,1717,2.267,1718,2.267,1719,1.784,1720,1.976,1721,2.267,1722,2.267,1723,2.267,1724,2.267,1725,2.267,1726,2.267,1727,2.267,1728,2.267,1729,3.601,1730,2.267,1731,2.267,1732,2.267,1733,3.601,1734,2.267,1735,2.267,1736,4.48,1737,3.601,1738,2.267,1739,2.267,1740,2.267,1741,2.267,1742,2.267,1743,2.267,1744,2.267,1745,2.267,1746,2.267,1747,3.601,1748,3.601,1749,3.601,1750,3.601,1751,3.601,1752,3.139,1753,3.139,1754,3.601,1755,3.601,1756,3.139,1757,3.601,1758,3.139,1759,1.976,1760,2.267,1761,4.48,1762,2.267,1763,2.267,1764,2.267,1765,3.601,1766,4.48,1767,4.48,1768,2.267,1769,2.267,1770,1.784,1771,1.976,1772,2.267]],["title/modules/TechnologiesModule.html",[279,1.88,1773,2.915]],["body/modules/TechnologiesModule.html",[3,0.165,4,0.129,9,0.129,22,0.233,23,0.796,24,0.013,25,0.165,26,0.478,163,2.258,164,1.099,186,2.182,188,2.182,189,0.653,191,2.258,193,2.182,197,0.01,198,0.01,281,2.426,282,3.676,289,4.675,290,4.116,291,3.28,292,2.784,294,4.116,295,3.494,300,3.494,308,4.089,310,4.089,429,3.093,520,3.18,596,3.761,599,4.719,727,4.089,1194,2.93,1289,4.39,1611,3.761,1773,6.1,1774,4.529,1775,4.529,1776,4.529,1777,5.288,1778,5.196,1779,4.529,1780,4.089,1781,5.196,1782,3.761,1783,4.529,1784,5.196,1785,4.39,1786,5.196,1787,4.39]],["title/guards/TechnologiesResolver.html",[1204,2.711,1785,2.711]],["body/guards/TechnologiesResolver.html",[3,0.169,4,0.131,9,0.131,19,1.162,20,0.938,22,0.229,23,0.813,24,0.013,25,0.169,26,0.488,43,1.398,150,0.464,189,0.464,197,0.01,198,0.01,200,1.527,203,0.441,206,1.658,207,2.376,213,1.9,214,0.638,215,0.975,219,1.332,227,2.191,228,2.28,233,1.754,235,2.957,236,4.245,264,2.108,335,3.107,518,1.754,520,2.59,574,2.28,608,3.843,609,3.852,622,3.223,644,2.376,748,3.161,815,3.674,852,2.376,853,2.59,855,3.161,1148,2.845,1202,4.844,1206,3.575,1208,3.575,1209,4.753,1210,3.352,1212,4.783,1213,5.449,1214,4.844,1215,5.449,1217,3.352,1218,4.178,1220,4.178,1785,4.449,1788,5.662,1789,5.309,1790,5.309,1791,4.627,1792,5.309,1793,4.627,1794,5.309,1795,5.309]],["title/modules/TechnologiesRoutingModule.html",[279,1.88,1777,2.711]],["body/modules/TechnologiesRoutingModule.html",[0,0.881,3,0.186,4,0.145,9,0.145,22,0.228,23,0.894,24,0.013,25,0.186,26,0.537,186,1.946,188,1.946,189,0.612,197,0.011,198,0.011,227,2.409,281,2.725,295,3.128,300,3.752,328,4.594,330,5.068,331,4.714,335,2.409,337,4.714,348,3.93,425,2.847,520,2.847,1194,3.291,1209,4.42,1289,4.714,1295,6.103,1777,4.714,1779,5.087,1782,4.225,1783,5.087,1785,4.714,1787,4.714,1788,4.594,1796,5.837,1797,5.837]],["title/interfaces/Technology.html",[189,0.352,481,0.446]],["body/interfaces/Technology.html",[3,0.125,4,0.097,9,0.097,22,0.111,24,0.014,25,0.198,35,2.782,36,2.999,37,2,42,1.505,55,3.128,73,2.651,134,1.999,150,0.382,189,0.723,197,0.009,198,0.009,203,0.327,204,0.999,214,0.733,215,1.119,249,4.512,250,3.591,260,4.85,269,2.489,337,3.656,340,3.93,355,1.691,420,1.467,425,1.921,427,1.149,464,2.91,466,2.064,481,0.779,483,1.094,485,2.064,488,2.91,492,2.138,494,2.766,501,2.66,502,2.376,503,2.021,505,2.11,506,2.66,508,1.921,511,2.332,515,3.199,519,2.11,550,2.011,556,2.91,561,2.156,563,1.563,574,3.02,588,2.11,625,2.344,656,2.91,658,2.91,854,4.791,1013,5.274,1024,5.274,1194,3.062,1271,4.274,1719,5.274,1798,2.85,1799,4.733,1800,4.274,1801,5.841,1802,4.733,1803,5.841,1804,4.733,1805,4.733,1806,4.733,1807,4.733,1808,4.733,1809,4.733,1810,4.733,1811,4.733,1812,4.274,1813,3.432,1814,3.432,1815,3.432,1816,3.099,1817,4.892,1818,3.432]],["title/classes/TechnologyDataSource.html",[26,0.37,1489,2.158]],["body/classes/TechnologyDataSource.html",[3,0.068,4,0.053,9,0.053,19,0.468,20,1.109,22,0.171,24,0.014,25,0.137,26,0.196,112,1.785,119,2.16,150,0.48,189,0.608,197,0.005,198,0.005,200,0.987,203,0.177,204,0.632,206,0.861,207,3.579,213,1.963,214,0.74,215,1.007,219,1.773,220,2.638,222,1.734,233,1.63,234,1.363,241,4.813,264,2.938,269,2.077,273,2.636,316,1.348,335,2.993,360,2.044,420,1.234,426,1.402,427,1.221,464,1.145,466,2.058,467,1.348,481,0.38,567,2.004,616,1.438,620,3.298,623,2.78,628,3.658,651,1.042,671,2.044,673,2.044,777,2.312,815,3.221,852,0.956,877,4.383,904,1.546,909,1.546,912,1.546,949,1.546,963,4.084,1058,3.116,1061,2.312,1065,2.485,1085,2.485,1195,1.438,1268,4.882,1352,1.546,1470,2.899,1471,1.546,1472,2.044,1473,4.252,1474,4.252,1477,1.681,1478,4.773,1479,1.681,1480,1.681,1481,3.881,1482,1.681,1483,5.065,1484,1.546,1485,1.681,1486,1.681,1487,2.485,1488,2.702,1489,1.84,1490,4.964,1491,2.702,1492,3.388,1493,3.388,1494,3.388,1495,3.388,1496,2.702,1497,3.388,1498,3.388,1499,2.702,1500,3.388,1501,3.388,1502,3.91,1503,1.681,1504,1.681,1505,1.681,1506,1.681,1507,1.681,1508,2.702,1509,1.681,1510,2.702,1511,1.681,1512,1.681,1513,1.681,1514,4.773,1515,1.681,1516,4.252,1517,1.681,1518,2.702,1519,1.681,1520,2.702,1521,1.681,1522,1.681,1523,1.681,1524,2.702,1525,3.388,1526,3.881,1527,2.702,1528,1.681,1529,2.702,1530,3.388,1531,2.702,1532,1.681,1533,1.681,1534,1.681,1535,2.702,1536,2.702,1537,1.681,1538,2.702,1539,1.681,1540,1.681,1541,1.681,1542,1.681,1543,2.702,1544,1.681,1545,2.702,1546,1.681,1547,1.681,1548,1.681,1549,1.681,1550,3.881,1551,3.388,1552,2.702,1553,1.681,1554,1.681,1555,1.681,1556,1.681,1557,1.681,1558,1.681,1559,3.388,1560,1.681,1561,1.681,1562,1.681,1563,1.681,1564,2.702,1565,2.702,1566,2.702,1567,2.702,1568,2.702,1569,5.473,1570,4.252,1571,3.388,1572,2.702,1573,3.388,1574,1.681,1575,3.388,1576,2.702,1577,1.681,1578,1.681,1579,1.681,1580,4.773,1581,2.702,1582,3.388,1583,2.702,1584,1.681,1585,1.681,1586,1.681,1587,1.681,1588,1.681,1589,2.702,1590,5.257,1591,1.681,1592,1.681,1593,2.702,1594,1.681,1595,1.681,1596,1.681,1597,1.681,1598,2.702,1599,2.702,1600,2.702,1601,2.702,1602,2.702,1603,2.702,1604,2.702,1605,1.681,1606,1.681,1607,1.546,1608,1.681,1683,1.546,1819,3.434,1820,3.434,1821,3.434,1822,3.434,1823,3.434,1824,3.434,1825,3.434,1826,3.434,1827,3.434,1828,2.136,1829,2.136,1830,2.136,1831,2.136,1832,2.136,1833,2.136,1834,2.136,1835,2.136,1836,2.136,1837,2.136,1838,2.136,1839,2.136,1840,4.932,1841,2.136,1842,2.136,1843,2.136,1844,2.136,1845,2.136,1846,2.136,1847,2.136,1848,2.993,1849,2.136,1850,2.136,1851,2.136,1852,2.136,1853,2.136]],["title/components/TechnologyDetailsComponent.html",[0,0.507,188,1.119]],["body/components/TechnologyDetailsComponent.html",[0,0.73,1,0.997,2,1.584,3,0.11,4,0.086,5,1.146,6,1.187,7,1.146,8,1.146,9,0.086,11,1.032,12,2.617,13,2.435,14,2.226,15,1.641,17,1.641,19,0.759,20,1.043,22,0.203,23,0.531,24,0.013,25,0.11,26,0.319,37,1.829,43,1.34,79,1.489,80,1.552,81,2.218,82,2.853,83,2.492,86,2.395,88,2.395,90,1.377,92,1.552,94,2.835,95,1.106,96,2.963,101,2.189,102,1.955,103,1.692,112,1.146,114,2.597,119,1.987,126,1.858,131,1.771,132,1.858,133,1.489,144,1.146,145,1.641,146,1.584,147,1.146,148,2.094,149,1.146,150,0.471,151,1.146,152,0.997,153,1.146,154,0.997,155,1.146,156,1.822,157,1.146,158,0.997,159,1.106,160,1.146,161,0.997,162,1.146,163,0.997,164,0.734,165,1.146,166,0.964,167,1.146,168,0.997,169,1.146,170,0.964,171,1.146,172,0.997,173,1.146,174,0.997,175,1.146,176,0.964,177,0.964,178,1.146,179,0.997,180,1.146,181,0.964,182,1.068,183,1.146,184,0.964,185,1.146,186,0.964,187,1.146,188,1.761,189,0.699,190,1.146,191,0.997,192,1.146,193,0.964,194,1.068,195,1.146,196,1.146,197,0.008,198,0.008,200,1.428,201,2.395,203,0.288,204,0.914,206,1.246,209,2.615,213,1.428,214,0.647,215,0.733,218,3.023,219,1.246,220,2.137,227,1.431,228,1.489,234,1.377,355,2.492,370,4.329,380,1.771,384,2.335,388,2.133,408,2.51,434,2.064,441,2.963,445,1.955,476,2.335,477,2.335,507,2.597,518,1.918,528,2.423,631,1.771,720,3.135,724,2.335,853,1.692,855,2.064,1077,2.51,1139,2.8,1145,2.51,1146,4.266,1148,2.661,1150,2.51,1151,2.729,1163,5.058,1175,3.023,1177,2.729,1194,2.8,1275,2.729,1467,3.023,1610,4.723,1619,2.51,1683,4.2,1696,3.909,1712,4.329,1716,3.023,1720,3.023,1782,5.415,1854,3.023,1855,5.803,1856,4.967,1857,5.803,1858,4.967,1859,4.967,1860,4.967,1861,4.967,1862,3.468,1863,3.468,1864,4.967,1865,3.468,1866,4.967,1867,4.967,1868,4.967,1869,3.468,1870,3.468,1871,3.468,1872,3.468,1873,3.468,1874,3.468,1875,3.468,1876,3.468,1877,3.468,1878,3.468,1879,4.967,1880,4.967,1881,4.967,1882,4.967,1883,3.468,1884,3.468,1885,3.468]],["title/guards/TechnologyDetailsResolverService.html",[1204,2.711,1787,2.711]],["body/guards/TechnologyDetailsResolverService.html",[3,0.171,4,0.133,9,0.133,19,1.176,20,0.945,22,0.227,23,0.823,24,0.013,25,0.171,26,0.494,150,0.468,189,0.47,197,0.01,198,0.01,200,1.545,203,0.446,206,1.67,207,2.404,213,1.914,214,0.643,215,0.982,219,1.348,227,2.217,228,2.307,233,1.775,235,2.979,236,4.263,264,2.133,335,2.747,492,1.714,518,1.775,574,2.307,608,3.888,609,3.863,815,3.694,852,2.404,853,2.621,855,3.198,1148,2.879,1194,4.078,1202,4.87,1206,3.617,1208,3.617,1209,4.773,1210,3.391,1212,4.818,1213,5.472,1214,4.87,1215,5.472,1216,4.682,1217,3.391,1218,4.228,1220,4.228,1610,4.566,1787,4.482,1791,5.802,1793,4.682,1886,5.372,1887,5.372,1888,5.372]],["title/interfaces/TechnologyDossier.html",[481,0.446,854,2.542]],["body/interfaces/TechnologyDossier.html",[3,0.137,4,0.107,9,0.107,22,0.122,24,0.014,25,0.207,35,2.59,36,2.919,37,1.592,42,1.653,55,3.252,73,3.897,134,1.808,150,0.304,189,0.713,197,0.009,198,0.009,203,0.359,204,1.064,214,0.63,215,0.854,249,2.911,250,3.101,260,4.189,269,2.559,337,2.911,340,3.13,355,1.857,420,1.408,425,3.398,427,0.915,464,3.891,466,2.302,481,0.804,483,1.202,485,2.146,488,2.317,492,1.379,494,2.875,501,2.883,502,2.493,503,1.876,505,3.101,506,2.766,508,2.109,511,1.857,515,3.331,519,2.317,550,2.956,556,2.317,561,2.883,563,2.766,574,1.857,588,3.733,625,3.445,656,3.101,658,2.317,854,4.584,1013,3.403,1024,3.403,1194,2.438,1271,3.403,1719,3.403,1798,3.13,1799,3.769,1800,3.403,1801,3.769,1802,3.769,1803,5.044,1804,3.769,1805,3.769,1806,3.769,1807,3.769,1808,3.769,1809,3.769,1810,3.769,1811,3.769,1812,3.403,1813,3.769,1814,3.769,1815,5.044,1816,3.403,1817,5.134,1818,3.769,1889,4.324]],["title/interfaces/TechnologyDossierResponse.html",[481,0.446,587,2.158]],["body/interfaces/TechnologyDossierResponse.html",[3,0.161,4,0.125,9,0.125,22,0.181,24,0.013,25,0.248,42,2.689,51,3.284,67,1.613,134,1.826,150,0.52,189,0.442,197,0.01,198,0.01,203,0.42,204,1.179,214,0.679,215,0.945,222,1.312,420,1.489,425,3.608,426,1.312,453,1.932,466,1.974,481,0.896,483,1.405,485,2.167,492,2.36,493,3.053,503,2.023,509,2.262,510,2.752,538,2.171,539,2.262,546,2.262,547,2.262,561,2.793,563,2.937,575,2.709,576,3.009,577,3.191,578,4.188,579,4.441,580,2.582,581,3.191,582,2.582,583,3.191,584,2.582,585,3.191,586,3.191,587,3.433,588,3.964,589,4.171,590,2.36]],["title/interfaces/TechnologyFilterConfiguration.html",[481,0.446,644,1.802]],["body/interfaces/TechnologyFilterConfiguration.html",[3,0.11,4,0.086,9,0.086,20,0.822,22,0.098,24,0.014,25,0.222,38,2.217,61,3.266,62,3.448,67,1.848,112,1.637,125,1.852,134,0.897,150,0.525,164,1.048,189,0.586,197,0.008,198,0.008,203,0.287,204,0.911,214,0.722,222,0.897,233,1.142,234,1.372,269,1.184,390,3.567,400,2.063,420,1.4,427,1.553,481,0.851,482,1.321,483,0.96,485,2.211,494,1.427,495,2.611,501,2.512,502,2.214,503,2.181,506,2.767,511,1.485,515,1.485,517,3.212,531,2.704,532,2.592,534,3.585,537,2.704,558,1.614,567,2.213,574,2.128,590,1.614,620,1.614,621,2.058,622,3.915,623,2.794,624,2.327,625,2.058,628,2.958,630,4.26,631,3.42,632,2.327,633,2.327,634,4.72,635,3.874,636,1.949,637,2.182,638,2.182,639,2.327,640,4.516,641,3.9,642,3.336,643,3.9,644,2.217,645,4.26,646,2.327,647,2.95,648,2.95,649,2.058,650,2.182,651,3.086,652,3.128,653,2.327,654,2.327,655,2.327,656,2.655,657,2.182,658,1.852,659,4.833,660,2.95,661,3.128,662,2.327,663,3.336,664,3.336,665,3.128,666,2.327,667,3.128,668,3.657,669,3.994,670,3.994,671,2.95,672,2.327,673,2.95,674,3.128,675,3.128,676,2.327,677,2.327,678,2.327,679,2.327,680,2.327,681,2.182]],["title/components/TechnologyListComponent.html",[0,0.507,191,1.158]],["body/components/TechnologyListComponent.html",[0,0.704,1,0.935,2,1.512,3,0.103,4,0.08,5,1.074,6,1.113,7,1.074,8,1.074,9,0.08,11,0.967,12,2.6,13,2.418,14,1.512,15,1.566,17,1.566,19,1.225,20,0.928,22,0.158,23,0.498,24,0.013,25,0.103,26,0.299,37,2.851,43,0.688,79,1.396,80,1.455,81,2.693,82,3.175,83,2.403,84,1.742,85,2.822,86,2.309,87,2.312,88,2.538,89,2.87,90,2.441,92,3.054,94,2.503,95,1.512,96,3.338,98,3.192,99,3.431,100,2.833,101,3.532,103,2.312,104,3.192,106,2.558,107,2.833,108,2.558,111,2.189,112,2.386,114,2.121,115,2.353,117,2.189,118,2.052,119,2.413,120,2.833,121,2.833,122,2.189,123,2.833,124,2.822,127,2.54,128,2.54,129,2.822,130,2.353,131,1.66,133,2.036,134,1.23,135,2.052,136,2.312,137,1.742,138,2.612,142,2.558,144,1.074,145,1.566,146,1.512,147,1.074,148,2.032,149,1.074,150,0.495,151,1.074,152,0.935,153,1.074,154,0.935,155,1.074,156,0.935,157,1.074,158,0.935,159,1.037,160,1.074,161,0.935,162,1.074,163,0.935,164,0.688,165,1.074,166,0.903,167,1.074,168,0.935,169,1.074,170,0.903,171,1.074,172,0.935,173,1.074,174,0.935,175,1.074,176,0.903,177,0.903,178,1.074,179,0.935,180,1.074,181,0.903,182,1.002,183,1.074,184,0.903,185,1.074,186,0.903,187,1.074,188,0.903,189,0.654,190,1.074,191,1.768,192,1.074,193,0.903,194,1.002,195,1.074,196,1.074,197,0.007,198,0.007,200,1.363,201,2.309,203,0.27,204,0.872,206,1.189,209,2.538,213,0.935,214,0.54,215,0.48,219,1.189,220,2.06,355,1.396,360,2.822,369,3.431,372,1.935,380,2.421,388,1.396,394,2.833,399,2.833,400,1.894,415,2.673,420,0.993,426,0.844,427,0.688,428,2.54,441,1.66,445,2.673,471,1.935,476,2.189,477,2.189,567,1.566,622,2.312,716,2.833,720,2.052,724,3.192,725,2.052,790,2.558,1139,3.154,1198,2.833,1199,2.833,1200,2.833,1244,2.558,1252,2.833,1336,2.833,1472,3.33,1489,2.998,1502,2.353,1610,4.308,1620,2.353,1759,2.833,1770,3.73,1771,2.833,1780,5.371,1890,2.833,1891,5.595,1892,4.741,1893,5.595,1894,4.741,1895,4.741,1896,3.251,1897,3.251,1898,4.741,1899,3.251,1900,4.132,1901,3.251,1902,3.251,1903,3.251,1904,3.251,1905,3.251,1906,4.741,1907,4.741,1908,4.741,1909,4.741,1910,4.741,1911,6.149,1912,3.251,1913,3.251,1914,3.251,1915,3.251]],["title/components/TechnologyTableComponent.html",[0,0.507,193,1.119]],["body/components/TechnologyTableComponent.html",[0,0.605,1,0.727,2,1.252,3,0.08,4,0.063,5,0.836,6,0.866,7,0.836,8,0.836,9,0.063,11,0.753,12,2.521,13,2.342,14,1.252,15,1.297,17,1.297,19,1.053,20,1.056,22,0.183,23,0.388,24,0.014,25,0.125,26,0.361,43,1.146,79,1.087,80,1.132,81,1.838,82,2.57,83,2.065,84,1.356,85,2.336,86,1.985,87,1.234,88,2.236,89,1.181,90,1.909,92,3.075,94,1.132,95,1.534,96,2.004,101,3.702,103,1.234,104,3.949,111,1.703,112,1.297,114,1.756,119,2.353,124,2.862,126,3.763,127,1.356,128,1.356,129,1.506,130,4.491,131,2.004,133,2.327,135,1.597,136,1.234,137,1.356,138,2.738,144,0.836,145,1.297,146,1.252,147,0.836,148,1.79,149,0.836,150,0.517,151,0.836,152,0.727,153,0.836,154,0.727,155,0.836,156,0.727,157,0.836,158,0.727,159,0.807,160,0.836,161,0.727,162,0.836,163,0.727,164,0.83,165,0.836,166,0.703,167,0.836,168,0.727,169,0.836,170,0.703,171,0.836,172,0.727,173,0.836,174,0.727,175,0.836,176,0.703,177,0.703,178,0.836,179,0.727,180,0.836,181,0.703,182,0.779,183,0.836,184,0.703,185,0.836,186,0.703,187,0.836,188,0.703,189,0.614,190,0.836,191,0.727,192,0.836,193,1.506,194,1.807,195,0.836,196,0.836,197,0.006,198,0.006,200,1.128,201,1.985,203,0.45,204,0.722,206,0.985,207,2.152,209,2.236,213,0.727,214,0.678,215,0.373,219,1.359,220,2.16,335,1.985,360,3.225,372,2.862,380,1.292,388,2.327,400,0.779,415,2.213,420,1.269,426,1.406,427,1.369,428,3.143,434,1.506,440,3.48,441,2.004,442,3.48,449,1.914,460,2.151,474,3.055,476,2.642,477,2.642,492,1.534,518,1.589,566,2.103,567,0.836,644,2.152,648,1.506,649,2.862,709,3.088,720,1.597,724,2.642,725,1.597,748,1.506,837,1.703,853,1.234,955,1.991,976,1.991,1139,2.213,1178,1.991,1183,1.991,1197,4.264,1223,3.784,1231,3.421,1322,1.831,1472,2.862,1489,2.576,1607,2.84,1609,5.175,1610,4.745,1611,5.44,1612,1.991,1613,3.421,1618,4.191,1619,1.831,1620,1.831,1621,3.784,1622,3.421,1623,4.191,1624,3.784,1625,3.784,1626,3.421,1627,4.191,1628,4.191,1629,5.989,1630,4.191,1631,3.421,1632,4.191,1633,3.421,1634,2.205,1635,2.205,1636,2.205,1637,2.205,1638,2.205,1639,2.205,1640,2.205,1641,2.205,1642,3.421,1643,2.205,1644,3.421,1645,3.421,1646,4.722,1647,4.722,1648,2.205,1649,2.205,1650,2.205,1651,2.205,1652,3.088,1653,2.205,1654,2.205,1655,1.991,1656,1.991,1657,2.205,1658,4.722,1659,3.421,1660,4.722,1696,1.991,1758,3.421,1770,1.991,1916,3.925,1917,3.925,1918,2.53,1919,2.53,1920,2.53,1921,2.53,1922,2.53,1923,2.53,1924,2.53,1925,2.53,1926,2.53,1927,2.53,1928,2.53,1929,2.53,1930,3.925,1931,5.419,1932,3.925,1933,6.206,1934,3.925,1935,2.53,1936,2.53,1937,2.53,1938,5.419,1939,6.872,1940,5.419,1941,4.808,1942,2.53,1943,3.925,1944,2.53,1945,2.53,1946,2.53]],["title/pipes/TruncatePipe.html",[947,2.27,1452,2.711]],["body/pipes/TruncatePipe.html",[3,0.179,4,0.139,9,0.139,11,1.672,20,0.798,22,0.159,23,0.861,24,0.013,25,0.179,26,0.517,150,0.518,197,0.011,198,0.011,200,1.616,206,1.41,213,1.616,214,0.542,215,0.829,219,1.41,234,2.717,264,2.231,420,1.421,426,1.459,427,1.561,567,2.261,947,3.858,1232,5.965,1439,4.067,1443,4.423,1444,5.385,1446,5.385,1452,4.608,1947,4.898,1948,6.844,1949,8.006,1950,7.68,1951,7.68,1952,5.62,1953,6.844,1954,5.62,1955,5.62]],["title/pipes/YesNoPipe.html",[947,2.27,1453,2.711]],["body/pipes/YesNoPipe.html",[3,0.189,4,0.147,9,0.147,11,1.773,20,0.846,22,0.168,23,0.913,24,0.013,25,0.189,26,0.548,150,0.532,197,0.011,198,0.011,200,1.713,206,1.495,213,1.713,214,0.575,215,0.879,219,1.495,222,1.546,264,2.814,427,1.656,709,5.578,777,4.011,837,4.011,947,3.996,1439,4.312,1443,4.689,1444,5.578,1446,5.578,1453,4.772,1956,6.178,1957,5.193,1958,5.958]],["title/coverage.html",[1959,4.807]],["body/coverage.html",[0,1.017,1,0.922,9,0.079,10,2.796,24,0.013,26,0.598,38,3.338,50,1.638,119,2.906,152,0.922,154,0.922,156,0.922,158,0.922,161,0.922,163,0.922,166,0.891,168,0.922,170,0.891,172,0.922,174,0.922,176,0.891,177,0.891,179,0.922,181,0.891,184,0.891,186,0.891,188,0.891,189,0.281,191,0.922,193,0.891,194,0.988,197,0.007,198,0.007,199,2.796,214,0.31,235,2.734,236,1.809,238,2.796,239,2.796,250,1.719,262,2.322,273,1.565,279,1.498,315,2.525,317,2.796,333,2.322,349,2.796,407,2.796,408,2.322,409,2.796,437,2.796,446,2.796,447,2.525,448,2.796,460,1.274,466,0.988,474,4.423,481,0.904,482,1.226,484,3.956,502,1.226,507,1.436,518,1.06,530,1.565,559,1.638,575,1.719,576,4.044,580,1.638,582,1.638,584,1.638,587,1.719,589,1.809,594,2.16,600,2.322,602,2.525,609,1.565,620,1.498,621,3.871,628,1.638,635,1.638,636,1.809,644,1.436,683,2.796,726,2.796,727,2.525,728,2.796,792,2.796,854,2.025,857,1.809,859,2.796,860,2.796,867,2.796,874,5.871,875,5.871,913,2.525,915,2.525,917,2.525,919,2.525,922,2.525,924,2.525,926,2.525,928,2.525,930,2.525,947,3.13,1107,2.796,1142,2.796,1153,2.796,1154,2.525,1155,2.796,1194,1.809,1204,4.114,1205,2.16,1207,2.796,1208,4.114,1222,2.796,1253,2.796,1259,2.322,1260,3.695,1265,2.796,1287,2.16,1297,2.525,1298,2.525,1369,2.796,1396,2.796,1397,2.796,1404,3.695,1405,3.695,1417,2.322,1418,2.796,1434,2.796,1438,2.16,1440,2.796,1441,2.796,1452,2.16,1453,2.16,1470,2.16,1471,4.018,1483,2.16,1489,1.719,1609,2.322,1610,4.105,1611,3.398,1612,3.695,1661,2.796,1780,2.525,1782,2.322,1785,2.16,1787,2.16,1788,2.525,1798,3.398,1854,2.796,1890,2.796,1947,2.796,1956,2.796,1957,2.796,1959,2.796,1960,3.208,1961,7.723,1962,5.552,1963,6.111,1964,3.208,1965,3.208,1966,7.788,1967,7.983,1968,6.111,1969,6.111,1970,4.695,1971,3.208,1972,3.208,1973,3.208,1974,6.111,1975,5.552,1976,6.503,1977,3.208,1978,3.208,1979,3.208,1980,3.208,1981,4.695,1982,4.695,1983,3.208,1984,3.208,1985,3.208,1986,3.208,1987,3.208,1988,2.796,1989,4.092,1990,2.796,1991,4.092,1992,2.796,1993,2.796,1994,3.208]],["title/dependencies.html",[282,2.734,1995,3.354]],["body/dependencies.html",[23,0.915,24,0.013,197,0.011,198,0.011,227,2.464,282,3.365,298,6.185,299,4.778,302,5.202,303,5.202,429,3.553,749,4.32,852,2.671,1417,4.32,1996,5.969,1997,8.393,1998,5.969,1999,5.969,2000,5.969,2001,5.969,2002,5.969,2003,5.969,2004,5.969,2005,5.969,2006,5.969,2007,5.969,2008,5.969,2009,5.969,2010,5.969]],["title/miscellaneous/enumerations.html",[2011,2.427,2012,4.226]],["body/miscellaneous/enumerations.html",[24,0.013,38,2.519,55,3.198,62,3.351,189,0.492,197,0.011,198,0.011,203,0.468,214,0.543,427,1.775,485,2.111,503,1.97,508,2.746,517,2.519,621,3.351,622,2.746,635,2.875,647,3.351,648,3.351,651,3.342,656,3.671,657,3.554,658,3.017,661,4.325,665,4.325,667,4.325,671,4.078,673,4.078,674,4.325,675,4.325,1297,4.43,1298,5.391,1308,5.971,1309,5.971,1310,5.971,1311,5.971,1312,5.391,1798,4.075,1816,4.43,1817,5.391,2011,4.075,2012,4.907,2013,5.63,2014,5.63,2015,5.63]],["title/index.html",[203,0.279,2016,2.923,2017,2.923]],["body/index.html",[0,0.895,4,0.161,13,1.541,24,0.01,27,5.598,28,4.514,32,3.748,34,4.514,35,2.317,36,2.317,37,1.907,38,2.317,39,4.514,41,4.076,42,1.979,43,1.095,53,2.526,55,3.037,61,4.011,150,0.364,197,0.011,198,0.01,269,1.773,273,2.526,292,2.775,323,4.514,355,2.224,357,2.645,366,4.514,367,4.076,369,3.748,481,0.574,545,3.812,555,2.92,578,3.873,611,4.514,638,3.269,647,3.083,668,3.269,713,5.873,941,4.076,1756,4.514,2018,5.179,2019,5.179,2020,5.179,2021,5.179,2022,7.847,2023,7.463,2024,4.514,2025,5.179,2026,5.179,2027,5.179,2028,5.179,2029,5.179,2030,4.514,2031,5.179,2032,5.179,2033,5.179,2034,7.689,2035,7.964,2036,5.179,2037,5.179,2038,5.179,2039,5.179,2040,5.179,2041,5.179,2042,5.179,2043,4.514,2044,5.179,2045,7.114,2046,5.179,2047,5.179,2048,5.179,2049,5.179,2050,5.179,2051,5.179,2052,5.179,2053,5.179,2054,4.514,2055,6.507,2056,6.507,2057,7.463,2058,5.179,2059,6.507,2060,6.507,2061,5.179,2062,5.179,2063,5.179,2064,7.114,2065,6.507,2066,5.179,2067,5.179,2068,5.179]],["title/license.html",[2016,2.923,2017,2.923,2069,2.923]],["body/license.html",[4,0.176,9,0.161,20,0.327,22,0.065,24,0.007,26,0.212,31,1.815,32,1.67,36,1.032,38,1.032,40,4.418,45,2.011,49,7.046,50,2.314,51,1.077,53,1.125,54,1.456,58,3.008,61,1.301,64,2.011,81,1.395,90,0.916,91,1.67,109,3.182,112,0.762,113,1.553,132,1.236,134,0.599,136,1.125,150,0.318,182,0.711,197,0.006,198,0.006,292,1.236,354,2.011,357,1.178,390,2.905,432,1.67,471,2.697,483,0.641,487,1.956,494,0.952,506,0.916,508,1.125,526,1.236,532,2.305,545,3.664,550,1.178,560,1.178,561,0.916,572,1.301,573,1.301,640,1.373,650,1.456,658,1.956,669,1.456,681,1.456,713,1.815,873,6.648,941,3.566,956,1.815,963,1.553,1061,1.553,1114,2.011,1118,3.949,1119,3.182,1214,1.553,1374,2.011,1375,2.011,1388,4.698,1412,2.011,1683,1.67,1752,3.182,1753,2.011,1800,5.667,1812,1.815,2024,3.182,2030,2.011,2043,3.949,2069,7.046,2070,5.152,2071,4.531,2072,4.531,2073,2.307,2074,2.307,2075,2.307,2076,6.677,2077,7.202,2078,5.152,2079,5.614,2080,2.307,2081,7.376,2082,6.839,2083,2.307,2084,2.011,2085,2.307,2086,6.839,2087,7.202,2088,5.97,2089,6.839,2090,3.651,2091,2.307,2092,5.614,2093,2.307,2094,2.307,2095,2.307,2096,5.152,2097,2.307,2098,6.677,2099,2.307,2100,5.152,2101,3.651,2102,3.651,2103,2.307,2104,4.531,2105,3.651,2106,3.651,2107,2.307,2108,7.574,2109,3.651,2110,5.97,2111,2.307,2112,3.651,2113,2.307,2114,2.307,2115,2.307,2116,2.307,2117,2.307,2118,2.307,2119,4.531,2120,2.307,2121,4.531,2122,3.651,2123,2.307,2124,2.307,2125,5.97,2126,6.677,2127,5.152,2128,2.307,2129,2.307,2130,2.307,2131,2.307,2132,2.307,2133,2.307,2134,4.531,2135,3.651,2136,2.307,2137,6.677,2138,3.651,2139,2.307,2140,3.651,2141,7.574,2142,2.307,2143,2.307,2144,2.307,2145,2.307,2146,2.307,2147,3.651,2148,3.651,2149,2.307,2150,2.307,2151,2.307,2152,2.307,2153,5.152,2154,5.614,2155,2.307,2156,3.651,2157,5.152,2158,3.651,2159,2.307,2160,5.614,2161,3.651,2162,2.307,2163,2.307,2164,4.531,2165,2.307,2166,2.307,2167,2.307,2168,3.651,2169,2.307,2170,2.307,2171,2.307,2172,4.531,2173,2.307,2174,2.307,2175,4.531,2176,2.307,2177,2.307,2178,2.307,2179,5.152,2180,6.839,2181,2.307,2182,2.307,2183,3.651,2184,6.485,2185,4.531,2186,5.152,2187,3.651,2188,3.651,2189,3.651,2190,3.651,2191,4.531,2192,3.651,2193,4.531,2194,3.651,2195,3.651,2196,3.651,2197,3.651,2198,2.307,2199,3.651,2200,2.307,2201,5.614,2202,6.254,2203,4.531,2204,3.651,2205,2.307,2206,3.651,2207,3.651,2208,2.307,2209,2.307,2210,4.531,2211,3.651,2212,2.307,2213,2.307,2214,2.307,2215,4.531,2216,2.307,2217,2.307,2218,3.651,2219,3.651,2220,2.307,2221,2.307,2222,2.307,2223,2.307,2224,2.307,2225,2.307,2226,2.307,2227,3.651,2228,2.307,2229,2.307,2230,2.307,2231,2.307,2232,2.307,2233,2.307,2234,5.614,2235,2.307,2236,4.531,2237,2.307,2238,2.307,2239,4.531,2240,2.307,2241,2.307,2242,2.307,2243,6.485,2244,2.307,2245,2.307,2246,2.307,2247,2.307,2248,5.152,2249,3.651,2250,5.152,2251,2.307,2252,2.307,2253,2.307,2254,4.531,2255,2.307,2256,2.307,2257,3.651,2258,3.651,2259,2.307,2260,2.307,2261,2.307,2262,2.307,2263,3.651,2264,3.651,2265,2.307,2266,2.307,2267,2.307,2268,2.307,2269,2.307,2270,2.307,2271,2.307,2272,4.531,2273,5.152,2274,2.307,2275,2.307,2276,2.307,2277,2.307,2278,2.307,2279,2.307,2280,2.307,2281,2.307,2282,2.307,2283,2.307,2284,3.651,2285,2.307,2286,2.307,2287,3.651,2288,2.307,2289,5.152,2290,2.307,2291,2.307,2292,2.307,2293,2.307,2294,2.307,2295,5.152,2296,4.531,2297,4.531,2298,4.531,2299,3.651,2300,3.651,2301,3.651,2302,2.307,2303,2.307,2304,2.307,2305,2.307,2306,2.307,2307,2.307,2308,3.651,2309,2.307,2310,2.307,2311,2.307,2312,2.307,2313,5.614,2314,2.307,2315,2.307,2316,2.307,2317,2.307,2318,2.307,2319,2.307,2320,2.307,2321,2.307,2322,5.614,2323,2.307,2324,2.307,2325,2.307,2326,2.307,2327,2.307,2328,2.307,2329,2.307,2330,2.307,2331,2.307,2332,2.307,2333,2.307,2334,2.307,2335,2.307,2336,2.307,2337,2.307,2338,2.307,2339,4.531,2340,2.307,2341,2.307,2342,2.307,2343,3.651,2344,2.307,2345,2.307,2346,2.307,2347,2.307,2348,2.307,2349,2.307,2350,2.307,2351,2.307,2352,2.307,2353,2.307,2354,2.307,2355,2.307,2356,2.307,2357,2.307,2358,3.651,2359,2.307,2360,2.307,2361,2.307,2362,3.651,2363,3.651,2364,2.307,2365,2.307,2366,2.307,2367,2.307,2368,2.307,2369,2.307,2370,2.307,2371,2.307,2372,2.307,2373,2.307,2374,2.307,2375,2.307,2376,2.307,2377,2.307,2378,2.307,2379,2.307,2380,2.307,2381,2.307,2382,2.307]],["title/modules.html",[281,2.575]],["body/modules.html",[24,0.011,32,5.827,51,3.685,197,0.011,198,0.011,280,4.112,281,2.851,287,4.112,288,4.112,289,3.635,299,5.421,371,6.041,1278,4.42,1282,4.112,1312,6.336,1313,4.112,1773,4.42,1777,4.112,2383,7.895]],["title/overview.html",[1370,4.34]],["body/overview.html",[1,1.802,2,1.275,24,0.013,119,1.369,152,2.15,154,1.802,156,2.15,158,2.15,161,1.802,163,1.802,166,1.741,168,2.15,170,1.741,172,2.15,174,2.15,176,1.741,177,1.741,179,1.802,181,2.078,184,1.741,186,1.741,188,1.741,191,1.802,193,1.741,197,0.009,198,0.009,236,3.533,237,2.691,250,3.357,280,5.543,281,1.866,282,3.094,283,3.484,284,3.484,285,3.484,286,3.484,287,4.219,288,5.203,289,5.046,290,3.464,291,2.523,292,2.142,316,2.523,443,3.145,483,1.111,592,3.484,593,3.484,594,4.219,1206,2.691,1278,5.836,1279,3.484,1280,3.484,1281,3.484,1282,4.219,1313,5.035,1370,3.145,1438,5.035,1439,2.893,1448,3.484,1449,3.484,1450,3.484,1451,3.484,1452,5.035,1453,5.035,1773,5.894,1774,3.484,1775,3.484,1776,3.484,1777,4.219,1900,3.484,2084,3.484,2384,3.997,2385,5.487,2386,3.997]],["title/routes.html",[331,3.713]],["body/routes.html",[24,0.012,197,0.012,198,0.012,331,4.464]],["title/miscellaneous/variables.html",[2011,2.427,2387,4.226]],["body/miscellaneous/variables.html",[24,0.013,38,3.631,197,0.01,198,0.01,203,0.408,214,0.8,233,2.08,234,1.951,420,1.429,426,2.132,427,1.737,874,3.867,875,6.386,913,4.952,914,4.283,915,4.952,916,4.283,917,4.952,918,4.283,919,4.952,920,4.283,921,4.283,922,4.952,923,4.283,924,4.952,925,4.283,926,4.952,927,4.283,928,4.952,929,4.283,930,4.952,931,4.283,1388,4.952,1404,3.867,1405,4.952,1417,4.555,1848,4.283,1988,4.283,1989,6.38,1990,4.283,1991,4.283,1992,5.485,1993,5.485,2011,3.557,2054,5.485,2387,4.283,2388,6.293,2389,8.051,2390,4.914,2391,4.914,2392,4.914,2393,4.914,2394,4.914]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.11.4",{"_index":2010,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["0.22",{"_index":392,"title":{},"body":{"components/BannerComponent.html":{}}}],["0.2rem",{"_index":1912,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["0.6.2",{"_index":2005,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1967,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1971,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1973,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1987,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1985,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1963,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1964,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1965,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1972,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1961,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1968,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1962,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1969,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1970,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1986,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkRendererComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["1.1rem",{"_index":140,"title":{},"body":{"components/AboutComponent.html":{},"components/ChildGroupingComponent.html":{}}}],["1.2rem",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{}}}],["1.3rem",{"_index":404,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionComponent.html":{}}}],["1.5rem",{"_index":384,"title":{},"body":{"components/BannerComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["1.7rem",{"_index":389,"title":{},"body":{"components/BannerComponent.html":{}}}],["1.8rem",{"_index":403,"title":{},"body":{"components/BannerComponent.html":{}}}],["1/1",{"_index":1977,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1983,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1982,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":360,"title":{},"body":{"components/BannerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["100",{"_index":474,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":1275,"title":{},"body":{"components/InformationComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["10px",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["10rem",{"_index":1884,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["11",{"_index":1230,"title":{},"body":{"components/HeaderComponent.html":{}}}],["1100px",{"_index":405,"title":{},"body":{"components/BannerComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{}}}],["12.0.0",{"_index":2001,"title":{},"body":{"dependencies.html":{}}}],["12.2.8",{"_index":1997,"title":{},"body":{"dependencies.html":{}}}],["1200px",{"_index":1141,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{}}}],["1400px",{"_index":1946,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["150",{"_index":566,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["16",{"_index":1981,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["18",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{}}}],["18px",{"_index":402,"title":{},"body":{"components/BannerComponent.html":{}}}],["1em",{"_index":1133,"title":{},"body":{"components/FooterComponent.html":{}}}],["1fr",{"_index":1382,"title":{},"body":{"components/OverviewComponent.html":{}}}],["1px",{"_index":442,"title":{},"body":{"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["1rem",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["2",{"_index":725,"title":{},"body":{"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["2.0",{"_index":2072,"title":{},"body":{"license.html":{}}}],["2.2rem",{"_index":788,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["2.3.1",{"_index":2008,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":406,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologiesComponent.html":{}}}],["20",{"_index":437,"title":{},"body":{"components/BottomNavComponent.html":{},"coverage.html":{}}}],["200",{"_index":1878,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["2004",{"_index":2074,"title":{},"body":{"license.html":{}}}],["2021",{"_index":1113,"title":{},"body":{"components/FooterComponent.html":{}}}],["21",{"_index":2384,"title":{},"body":{"overview.html":{}}}],["212121",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{}}}],["24",{"_index":2386,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1232,"title":{},"body":{"components/HeaderComponent.html":{},"pipes/TruncatePipe.html":{}}}],["2em",{"_index":1242,"title":{},"body":{"components/HeaderComponent.html":{}}}],["2px",{"_index":1231,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["2rem",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["3",{"_index":443,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{},"overview.html":{}}}],["3.5rem",{"_index":1941,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["3/3",{"_index":1978,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1764,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["30em",{"_index":1760,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["35",{"_index":1395,"title":{},"body":{"components/OverviewComponent.html":{}}}],["3rem",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["3s",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["4",{"_index":2385,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1976,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":394,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologyListComponent.html":{}}}],["40px",{"_index":401,"title":{},"body":{"components/BannerComponent.html":{}}}],["4em",{"_index":1135,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["4px",{"_index":391,"title":{},"body":{"components/BannerComponent.html":{}}}],["4rem",{"_index":1136,"title":{},"body":{"components/FooterComponent.html":{}}}],["5",{"_index":1900,"title":{},"body":{"components/TechnologyListComponent.html":{},"overview.html":{}}}],["5.5rem",{"_index":1238,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5/5",{"_index":1974,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1980,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":432,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"license.html":{}}}],["500",{"_index":1131,"title":{},"body":{"components/FooterComponent.html":{}}}],["510px",{"_index":444,"title":{},"body":{"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{}}}],["550px",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{}}}],["55em",{"_index":1250,"title":{},"body":{"components/HeaderComponent.html":{}}}],["57rem",{"_index":1140,"title":{},"body":{"components/FooterComponent.html":{}}}],["5rem",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["5s",{"_index":1393,"title":{},"body":{"components/OverviewComponent.html":{}}}],["6.6.7",{"_index":2006,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1975,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":477,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["620px",{"_index":1251,"title":{},"body":{"components/HeaderComponent.html":{}}}],["6em",{"_index":1247,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7",{"_index":1392,"title":{},"body":{"components/OverviewComponent.html":{}}}],["70",{"_index":1387,"title":{},"body":{"components/OverviewComponent.html":{}}}],["790px",{"_index":142,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/TechnologyListComponent.html":{}}}],["7rem",{"_index":789,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["80",{"_index":1759,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["83",{"_index":1979,"title":{},"body":{"coverage.html":{}}}],["850px",{"_index":1707,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["8rem",{"_index":135,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["9",{"_index":2084,"title":{},"body":{"license.html":{},"overview.html":{}}}],["9/9",{"_index":1984,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":719,"title":{},"body":{"components/CriterionComponent.html":{},"components/TechnologiesComponent.html":{}}}],["900",{"_index":386,"title":{},"body":{"components/BannerComponent.html":{},"components/FooterComponent.html":{}}}],["900px",{"_index":1770,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["910px",{"_index":1771,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["93vw",{"_index":1935,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["95",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{}}}],["95rem",{"_index":1252,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{}}}],["9rem",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{}}}],["_scss/global/variables",{"_index":434,"title":{},"body":{"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["_scss/shared",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["a[sort.property",{"_index":1566,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["about'},{'name",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["about.component.html",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["above",{"_index":2276,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":793,"title":{},"body":{"classes/DataService.html":{}}}],["academic",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{}}}],["acceptance",{"_index":2341,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":2339,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":244,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["act",{"_index":2347,"title":{},"body":{"license.html":{}}}],["acting",{"_index":2094,"title":{},"body":{"license.html":{}}}],["activatedroute",{"_index":1146,"title":{},"body":{"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":1213,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["active",{"_index":1246,"title":{},"body":{"components/HeaderComponent.html":{}}}],["acts",{"_index":2320,"title":{},"body":{"license.html":{}}}],["actual",{"_index":678,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["actual_component",{"_index":196,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["add",{"_index":2264,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":2266,"title":{},"body":{"license.html":{}}}],["additional",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"license.html":{}}}],["additions",{"_index":2155,"title":{},"body":{"license.html":{}}}],["advised",{"_index":2337,"title":{},"body":{"license.html":{}}}],["against",{"_index":2219,"title":{},"body":{"license.html":{}}}],["agree",{"_index":2350,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":2298,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":2281,"title":{},"body":{"license.html":{}}}],["aims",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{}}}],["align",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["alleging",{"_index":2224,"title":{},"body":{"license.html":{}}}],["allvalues.includes(v",{"_index":1599,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["allvalues.push(v.value",{"_index":1595,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["alone",{"_index":2216,"title":{},"body":{"license.html":{}}}],["along",{"_index":2255,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":2265,"title":{},"body":{"license.html":{}}}],["alpha",{"_index":1413,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["already",{"_index":866,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["and/or",{"_index":2344,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2023,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1996,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1998,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":1477,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["angular/cdk/layout",{"_index":1704,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["angular/cli",{"_index":1999,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":429,"title":{},"body":{"components/BottomNavComponent.html":{},"modules/CoreModule.html":{},"components/FrameworkRendererComponent.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":259,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"injectables/FileBasedDataService.html":{}}}],["angular/compiler",{"_index":2000,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"modules/CoreModule.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":749,"title":{},"body":{"components/CriterionFilterComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2003,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1340,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/bottom",{"_index":1363,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":1316,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":1329,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":1356,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":1344,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":1333,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":1335,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":1331,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1318,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":1338,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":1327,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":1350,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":1352,"title":{},"body":{"modules/MaterialModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["angular/material/progress",{"_index":1324,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":1368,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1342,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1322,"title":{},"body":{"modules/MaterialModule.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["angular/material/slide",{"_index":1358,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slider",{"_index":1366,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":1346,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tabs",{"_index":1354,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1320,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":1348,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tree",{"_index":1360,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"dependencies.html":{}}}],["annotations",{"_index":2144,"title":{},"body":{"license.html":{}}}],["answers",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{}}}],["apache",{"_index":2070,"title":{},"body":{"license.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"index.html":{}}}],["app.component",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["app_initializer",{"_index":597,"title":{},"body":{"modules/CoreModule.html":{}}}],["appcomponent",{"_index":152,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":240,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["appconfigservice",{"_index":236,"title":{"injectables/AppConfigService.html":{}},"body":{"injectables/AppConfigService.html":{},"modules/CoreModule.html":{},"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{},"overview.html":{}}}],["appconfigservice.dataservicefactory",{"_index":615,"title":{},"body":{"modules/CoreModule.html":{}}}],["appconfigservice.loadappconfig",{"_index":614,"title":{},"body":{"modules/CoreModule.html":{}}}],["appear",{"_index":2260,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":2140,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":2296,"title":{},"body":{"license.html":{}}}],["applies",{"_index":2209,"title":{},"body":{"license.html":{}}}],["apply",{"_index":2358,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":280,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":315,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appropriate",{"_index":2367,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":2307,"title":{},"body":{"license.html":{}}}],["approutes",{"_index":336,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":287,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arbitrary",{"_index":672,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["archives",{"_index":2374,"title":{},"body":{"license.html":{}}}],["arguments",{"_index":1862,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["arising",{"_index":2327,"title":{},"body":{"license.html":{}}}],["around",{"_index":1235,"title":{},"body":{"components/HeaderComponent.html":{}}}],["array.from(criteriavalues.get(f.criterionid)).sort(((a",{"_index":1060,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["array.from(criteriavalues.get(f.criterionid).values",{"_index":1066,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["array.from(filtervalue.value",{"_index":1597,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["array.from(placement.values",{"_index":1735,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["array.from(reviewedcriterion.values).length",{"_index":1602,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["array.from(this.criterioninstance.values",{"_index":702,"title":{},"body":{"components/CriterionComponent.html":{}}}],["array.from(value",{"_index":1447,"title":{},"body":{"pipes/SetToArrayPipe.html":{}}}],["array.from(view.groupings).foreach((grouping",{"_index":1637,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["array.isarray(value",{"_index":775,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["array.pipe",{"_index":1461,"title":{},"body":{"modules/SharedModule.html":{}}}],["array.pipe.ts",{"_index":1441,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"coverage.html":{}}}],["array.pipe.ts:7",{"_index":1445,"title":{},"body":{"pipes/SetToArrayPipe.html":{}}}],["arrow_back_ios",{"_index":1932,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["arrow_forward",{"_index":1908,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["arrow_forward_ios",{"_index":1934,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["arrow_upward",{"_index":433,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["artifacts",{"_index":2048,"title":{},"body":{"index.html":{}}}],["asc",{"_index":1487,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{}}}],["aspect",{"_index":551,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["asserted",{"_index":2356,"title":{},"body":{"license.html":{}}}],["assets/data/framework/criteria.json",{"_index":914,"title":{},"body":{"injectables/FileBasedDataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/filters.json",{"_index":929,"title":{},"body":{"injectables/FileBasedDataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/frameworks.json",{"_index":923,"title":{},"body":{"injectables/FileBasedDataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/groupings.json",{"_index":916,"title":{},"body":{"injectables/FileBasedDataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/view",{"_index":920,"title":{},"body":{"injectables/FileBasedDataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/views.json",{"_index":918,"title":{},"body":{"injectables/FileBasedDataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/info/resources.json",{"_index":931,"title":{},"body":{"injectables/FileBasedDataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/platforms",{"_index":927,"title":{},"body":{"injectables/FileBasedDataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/platforms/platforms.json",{"_index":925,"title":{},"body":{"injectables/FileBasedDataService.html":{},"miscellaneous/variables.html":{}}}],["assets/images/vendor/logo",{"_index":1304,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["associated",{"_index":2311,"title":{},"body":{"license.html":{}}}],["assume",{"_index":2309,"title":{},"body":{"license.html":{}}}],["attach",{"_index":2359,"title":{},"body":{"license.html":{}}}],["attached",{"_index":2139,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":2031,"title":{},"body":{"index.html":{}}}],["attribution",{"_index":2248,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":2090,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":2134,"title":{},"body":{"license.html":{}}}],["auto",{"_index":380,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["automatically",{"_index":2040,"title":{},"body":{"index.html":{}}}],["available",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyDossierResponse.html":{},"license.html":{},"modules.html":{}}}],["aws",{"_index":556,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["aws.s3",{"_index":1809,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["azure",{"_index":1807,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["azure.functions",{"_index":1806,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["b",{"_index":1061,"title":{},"body":{"injectables/FileBasedDataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"license.html":{}}}],["b5ca8f",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{}}}],["b[sort.property",{"_index":1567,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["baas",{"_index":1817,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{}}}],["backend",{"_index":939,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["background",{"_index":372,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["banner",{"_index":350,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner'},{'name",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["banner.component.html",{"_index":352,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner.component.scss",{"_index":351,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__description",{"_index":393,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__heading",{"_index":383,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__quick",{"_index":397,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__summary",{"_index":395,"title":{},"body":{"components/BannerComponent.html":{}}}],["bannercomponent",{"_index":154,"title":{"components/BannerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["based",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AppConfigService.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/FileBasedDataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["basis",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["behalf",{"_index":2160,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":648,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["behaviorsubject",{"_index":1478,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject(0",{"_index":1491,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject(initialquery",{"_index":1507,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject(undefined",{"_index":1509,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject>(initialsort",{"_index":1505,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behind",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["belongs",{"_index":1802,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["below",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["beneficial",{"_index":2118,"title":{},"body":{"license.html":{}}}],["beta.35",{"_index":2002,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":514,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["bg",{"_index":472,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{}}}],["bind",{"_index":2152,"title":{},"body":{"license.html":{}}}],["block",{"_index":631,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"components/HeaderComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["block__filter",{"_index":785,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["blockchain",{"_index":1818,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["blockicon",{"_index":639,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["blockname",{"_index":637,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["body",{"_index":787,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["boilerplate",{"_index":2360,"title":{},"body":{"license.html":{}}}],["bool",{"_index":661,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"pipes/YesNoPipe.html":{}}}],["bootstrap",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["bottom",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["bottomnav",{"_index":1857,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["bottomnavcomponent",{"_index":156,"title":{"components/BottomNavComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["box",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["brackets",{"_index":2363,"title":{},"body":{"license.html":{}}}],["breadcrumbs",{"_index":541,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["break",{"_index":1178,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["browse",{"_index":371,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"modules.html":{}}}],["browser",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"components/TechnologiesComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":324,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["browsing",{"_index":2021,"title":{},"body":{"index.html":{}}}],["browsingmode",{"_index":1666,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["build",{"_index":2022,"title":{},"body":{"index.html":{}}}],["buildgroupings",{"_index":876,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["buildgroupings(data",{"_index":880,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["button",{"_index":790,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["buttons",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{}}}],["c",{"_index":956,"title":{},"body":{"injectables/FileBasedDataService.html":{},"components/TechnologiesComponent.html":{},"license.html":{}}}],["c.colspan",{"_index":1644,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["c.criterionid",{"_index":1731,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["c.default",{"_index":978,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["c.description",{"_index":977,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["c.displayname",{"_index":1931,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["c.id",{"_index":955,"title":{},"body":{"injectables/FileBasedDataService.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["c.name",{"_index":976,"title":{},"body":{"injectables/FileBasedDataService.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["c.technologycategory.tolocalelowercase",{"_index":1042,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["c.viewids.foreach(id",{"_index":979,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["canfilter",{"_index":1819,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["canfilter(filtervalue",{"_index":1568,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["card",{"_index":1196,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["carry",{"_index":2241,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":906,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["catcherror(filebaseddataservice.handleerror",{"_index":948,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["categories",{"_index":1816,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{}}}],["category",{"_index":574,"title":{},"body":{"interfaces/ClassificationFramework.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["category.tolocalelowercase",{"_index":1009,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["category]{@link",{"_index":519,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["cause",{"_index":2106,"title":{},"body":{"license.html":{}}}],["ccc",{"_index":1638,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["cell",{"_index":1939,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["center",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["change",{"_index":2042,"title":{},"body":{"index.html":{}}}],["changed",{"_index":2245,"title":{},"body":{"license.html":{}}}],["changedetection",{"_index":1662,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectionstrategy",{"_index":1701,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1663,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectorref",{"_index":1674,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectorref.detectchanges",{"_index":1709,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["character",{"_index":2326,"title":{},"body":{"license.html":{}}}],["charge",{"_index":2193,"title":{},"body":{"license.html":{}}}],["check",{"_index":2067,"title":{},"body":{"index.html":{}}}],["check_circle",{"_index":359,"title":{},"body":{"components/BannerComponent.html":{}}}],["checkboxes",{"_index":670,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["checkrouterevent",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["checkrouterevent(e",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["child",{"_index":159,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["child(even",{"_index":1945,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["childgroupingcomponent",{"_index":158,"title":{"components/ChildGroupingComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["children",{"_index":1294,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["choose",{"_index":354,"title":{},"body":{"components/BannerComponent.html":{},"license.html":{}}}],["choosing",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{}}}],["chosenvalue",{"_index":1601,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["chosenvalues",{"_index":1604,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["chosenvalues.indexof(value",{"_index":1608,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["chosenvalues.length",{"_index":1605,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["claim",{"_index":2221,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2211,"title":{},"body":{"license.html":{}}}],["class",{"_index":26,"title":{"classes/AppPage.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"classes/TableColumn.html":{},"classes/TechnologyDataSource.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"modules/CoreModule.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"license.html":{}}}],["class=\"criterion__value",{"_index":710,"title":{},"body":{"components/CriterionComponent.html":{}}}],["class=\"sidenav__filter",{"_index":1749,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["classes",{"_index":316,"title":{},"body":{"classes/AppPage.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"classes/TableColumn.html":{},"classes/TechnologyDataSource.html":{},"overview.html":{}}}],["classification",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"index.html":{}}}],["classificationcriterion",{"_index":482,"title":{"interfaces/ClassificationCriterion.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["classificationframework",{"_index":518,"title":{"interfaces/ClassificationFramework.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["classificationframeworkresponse",{"_index":575,"title":{"interfaces/ClassificationFrameworkResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/FileBasedDataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["classifications",{"_index":527,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["classificationview",{"_index":530,"title":{"interfaces/ClassificationView.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"coverage.html":{}}}],["classificationviewcombination",{"_index":507,"title":{"interfaces/ClassificationViewCombination.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["classificationviewcombinationresponse",{"_index":580,"title":{"interfaces/ClassificationViewCombinationResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["classificationviewresponse",{"_index":582,"title":{"interfaces/ClassificationViewResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["classificationviews",{"_index":591,"title":{},"body":{"interfaces/ClassificationViewCombination.html":{}}}],["classificationviews]{@link",{"_index":529,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["classified",{"_index":486,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["clear",{"_index":784,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["clearfilter",{"_index":732,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["cli",{"_index":2065,"title":{},"body":{"index.html":{}}}],["click",{"_index":1755,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["close",{"_index":1748,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["cloud",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{}}}],["cloud_done",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["cluster_appmodule",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":592,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":593,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_informationmodule",{"_index":1279,"title":{},"body":{"modules/InformationModule.html":{},"overview.html":{}}}],["cluster_informationmodule_declarations",{"_index":1281,"title":{},"body":{"modules/InformationModule.html":{},"overview.html":{}}}],["cluster_informationmodule_imports",{"_index":1280,"title":{},"body":{"modules/InformationModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1448,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1450,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1449,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":1451,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_technologiesmodule",{"_index":1774,"title":{},"body":{"modules/TechnologiesModule.html":{},"overview.html":{}}}],["cluster_technologiesmodule_declarations",{"_index":1775,"title":{},"body":{"modules/TechnologiesModule.html":{},"overview.html":{}}}],["cluster_technologiesmodule_imports",{"_index":1776,"title":{},"body":{"modules/TechnologiesModule.html":{},"overview.html":{}}}],["code",{"_index":941,"title":{},"body":{"injectables/FileBasedDataService.html":{},"index.html":{},"license.html":{}}}],["collected",{"_index":555,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"index.html":{}}}],["color",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["color.service",{"_index":606,"title":{},"body":{"modules/CoreModule.html":{}}}],["color.service.ts",{"_index":1405,"title":{},"body":{"injectables/RandomColorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["color.service.ts:11",{"_index":1414,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["color.service.ts:6",{"_index":1407,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["colspan",{"_index":1613,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["column",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["columns",{"_index":1380,"title":{},"body":{"components/OverviewComponent.html":{}}}],["columnstodisplay",{"_index":1632,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["combination",{"_index":526,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/FileBasedDataService.html":{},"license.html":{}}}],["combination.views.add(view",{"_index":981,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["combinations",{"_index":509,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["combinations.json",{"_index":921,"title":{},"body":{"injectables/FileBasedDataService.html":{},"miscellaneous/variables.html":{}}}],["combinelatest",{"_index":904,"title":{},"body":{"injectables/FileBasedDataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["combinelatest([this.criteriabasedquery",{"_index":1511,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["combinelatest([this.filtereddata",{"_index":1521,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["combining",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologiesComponent.html":{}}}],["combs.find(c",{"_index":1086,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["combs.find(v",{"_index":994,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["comment",{"_index":573,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"license.html":{}}}],["commercial",{"_index":1375,"title":{},"body":{"components/OverviewComponent.html":{},"license.html":{}}}],["common",{"_index":2099,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":599,"title":{},"body":{"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{}}}],["communication",{"_index":2164,"title":{},"body":{"license.html":{}}}],["community.github",{"_index":547,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["comparison",{"_index":1799,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["compiled",{"_index":2131,"title":{},"body":{"license.html":{}}}],["completewords",{"_index":1950,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["compliance",{"_index":2377,"title":{},"body":{"license.html":{}}}],["complies",{"_index":2270,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"overview.html":{}}}],["comprise",{"_index":632,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["comprises",{"_index":505,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["comprising",{"_index":524,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["computer",{"_index":2332,"title":{},"body":{"license.html":{}}}],["concat(extension.png",{"_index":1307,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["concat(grouping.name",{"_index":1742,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["concat(logolocator",{"_index":1306,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["concerning",{"_index":1120,"title":{},"body":{"components/FooterComponent.html":{}}}],["conditions",{"_index":2077,"title":{},"body":{"license.html":{}}}],["conducted",{"_index":562,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["conf.find(c",{"_index":1041,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["config",{"_index":1202,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["config.service",{"_index":608,"title":{},"body":{"modules/CoreModule.html":{},"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["config.service.ts",{"_index":239,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["config.service.ts:13",{"_index":254,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:21",{"_index":256,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:25",{"_index":258,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:29",{"_index":253,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:8",{"_index":251,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configuration",{"_index":640,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["confirming",{"_index":570,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["connect",{"_index":1473,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["consequential",{"_index":2325,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":2346,"title":{},"body":{"license.html":{}}}],["console.error(err",{"_index":944,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["console.log('found",{"_index":1563,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["console.log('new",{"_index":1539,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["console.log(nextquery",{"_index":1541,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["conspicuously",{"_index":2176,"title":{},"body":{"license.html":{}}}],["const",{"_index":335,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CriterionFilterComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{}}}],["constitutes",{"_index":2225,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["constructor(@optional",{"_index":617,"title":{},"body":{"modules/CoreModule.html":{}}}],["constructor(data",{"_index":1499,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["constructor(dataservice",{"_index":1210,"title":{},"body":{"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["constructor(fb",{"_index":735,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["constructor(http",{"_index":247,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/FileBasedDataService.html":{}}}],["constructor(private",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["constructor(route",{"_index":1145,"title":{},"body":{"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["constructor(router",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(targetmodule",{"_index":861,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["constructor(viewportscroller",{"_index":417,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["construed",{"_index":2267,"title":{},"body":{"license.html":{}}}],["contact",{"_index":1228,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contain",{"_index":488,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["contained",{"_index":669,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["container",{"_index":1758,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["containing",{"_index":554,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["containsall",{"_index":674,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["containsany",{"_index":673,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["containsany(filtervalue",{"_index":1600,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["containsone",{"_index":671,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["containsone(filtervalue",{"_index":1603,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["content",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["contents",{"_index":2261,"title":{},"body":{"license.html":{}}}],["context",{"_index":1992,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":2109,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":2154,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":2215,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":2272,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2180,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":2226,"title":{},"body":{"license.html":{}}}],["control",{"_index":2096,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":2097,"title":{},"body":{"license.html":{}}}],["controls",{"_index":756,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["controls.push(this.fb.control(false",{"_index":759,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["conversions",{"_index":2132,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2232,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2239,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2087,"title":{},"body":{"license.html":{}}}],["core/core.module",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/app",{"_index":1218,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["core/services/data.service",{"_index":1217,"title":{},"body":{"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["coremodule",{"_index":288,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["corresponding",{"_index":1756,"title":{},"body":{"components/TechnologiesComponent.html":{},"index.html":{}}}],["count",{"_index":1410,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["counter",{"_index":1647,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["counterclaim",{"_index":2222,"title":{},"body":{"license.html":{}}}],["cover",{"_index":377,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{}}}],["coverage",{"_index":1959,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["criteria",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/FileBasedDataService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["criteria.has(id",{"_index":1100,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["criteriabasedquery",{"_index":620,"title":{"interfaces/CriteriaBasedQuery.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["criteriacolumns",{"_index":1628,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["criteriafilterlookup",{"_index":1729,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["criteriagrouping",{"_index":460,"title":{"interfaces/CriteriaGrouping.html":{}},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkRendererComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["criteriagroupingresponse",{"_index":584,"title":{"interfaces/CriteriaGroupingResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["criteriagroupingspath",{"_index":915,"title":{},"body":{"injectables/FileBasedDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["criteriaids",{"_index":586,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["criterialookup",{"_index":953,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["criteriapath",{"_index":913,"title":{},"body":{"injectables/FileBasedDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["criteriaquery",{"_index":1516,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criteriareview",{"_index":589,"title":{"interfaces/CriteriaReview.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["criteriavalues",{"_index":1046,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["criteriavalues.get(key",{"_index":1051,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["criteriavalues.set(key",{"_index":1054,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["criterion",{"_index":164,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["criterion'},{'name",{"_index":162,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["criterion.component.html",{"_index":685,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion.component.scss",{"_index":684,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion.description",{"_index":703,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion.examplevalues",{"_index":705,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion/criterion.component",{"_index":1462,"title":{},"body":{"modules/SharedModule.html":{}}}],["criterion__heading",{"_index":714,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__icon",{"_index":721,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__reference",{"_index":722,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__title",{"_index":715,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__value",{"_index":717,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterioncomponent",{"_index":161,"title":{"components/CriterionComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["criterionfiltercomponent",{"_index":163,"title":{"components/CriterionFilterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["criterionfilterconfiguration",{"_index":635,"title":{"interfaces/CriterionFilterConfiguration.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["criterionfiltertype",{"_index":651,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/FileBasedDataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["criterionfiltertype.bool",{"_index":1065,"title":{},"body":{"injectables/FileBasedDataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.containsall",{"_index":1571,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.containsany",{"_index":1575,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.containsone",{"_index":1572,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.excludesall",{"_index":1573,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.lte",{"_index":1058,"title":{},"body":{"injectables/FileBasedDataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltervalue",{"_index":628,"title":{"interfaces/CriterionFilterValue.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["criterionfiltervalues",{"_index":626,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{}}}],["criterionfiltervalues]{@link",{"_index":676,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["criterionid",{"_index":558,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["criterioninstance",{"_index":466,"title":{"interfaces/CriterionInstance.html":{}},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["criterioninstance.values.foreach(v",{"_index":1052,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["criterioninstances",{"_index":1889,"title":{},"body":{"interfaces/TechnologyDossier.html":{}}}],["criterioninstances]{@link",{"_index":1814,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["criterionvalue",{"_index":559,"title":{"interfaces/CriterionValue.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"coverage.html":{}}}],["cross",{"_index":2220,"title":{},"body":{"license.html":{}}}],["current",{"_index":1736,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["current.filters.push(config",{"_index":1745,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["currentindex",{"_index":1495,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["cursor",{"_index":1198,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyListComponent.html":{}}}],["custom",{"_index":540,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["customary",{"_index":2291,"title":{},"body":{"license.html":{}}}],["d",{"_index":2251,"title":{},"body":{"license.html":{}}}],["d.reviewedcriteria.foreach((criterioninstance",{"_index":1048,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["damages",{"_index":2322,"title":{},"body":{"license.html":{}}}],["data",{"_index":269,"title":{},"body":{"injectables/AppConfigService.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/FileBasedDataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"index.html":{}}}],["data.filter(platform",{"_index":1553,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["data.foreach(g",{"_index":1096,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["data.length",{"_index":1527,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["data.resolveddata",{"_index":1152,"title":{},"body":{"components/FrameworkComponent.html":{},"components/ResourcesComponent.html":{}}}],["data.resolveddata[0",{"_index":1716,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["data.resolveddata[1",{"_index":1720,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["data.resolveddata[2",{"_index":1722,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["data.service",{"_index":263,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/FileBasedDataService.html":{}}}],["data.service.ts",{"_index":875,"title":{},"body":{"injectables/FileBasedDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data.service.ts:36",{"_index":879,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["data.service.ts:413",{"_index":881,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["data.service.ts:42",{"_index":902,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["data.slice(startindex",{"_index":1528,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["dataservice",{"_index":609,"title":{"classes/DataService.html":{}},"body":{"modules/CoreModule.html":{},"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["dataservice:108",{"_index":897,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:141",{"_index":890,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:173",{"_index":887,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:203",{"_index":888,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:211",{"_index":893,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:236",{"_index":894,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:246",{"_index":895,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:269",{"_index":885,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:283",{"_index":886,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:293",{"_index":896,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:333",{"_index":889,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:345",{"_index":884,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:367",{"_index":900,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:386",{"_index":898,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:405",{"_index":892,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:53",{"_index":883,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:61",{"_index":891,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservice:75",{"_index":899,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dataservicefactory",{"_index":242,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["datasource",{"_index":1472,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["date",{"_index":561,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"license.html":{}}}],["declarations",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{}}}],["declare",{"_index":1416,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["decoration",{"_index":723,"title":{},"body":{"components/CriterionComponent.html":{}}}],["decorators",{"_index":1696,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["dedicated",{"_index":642,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["default",{"_index":426,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["defaultcategory",{"_index":1219,"title":{},"body":{"guards/FrameworkResolver.html":{}}}],["defaulttechcategory",{"_index":245,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["defend",{"_index":2352,"title":{},"body":{"license.html":{}}}],["defined",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"license.html":{}}}],["defines",{"_index":641,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["definition",{"_index":2101,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":2080,"title":{},"body":{"license.html":{}}}],["delete",{"_index":1587,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["deliberate",{"_index":2317,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":282,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depends",{"_index":679,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["deps",{"_index":612,"title":{},"body":{"modules/CoreModule.html":{}}}],["derivative",{"_index":2141,"title":{},"body":{"license.html":{}}}],["derived",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["desc",{"_index":1488,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["describe",{"_index":549,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["describing",{"_index":572,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"license.html":{}}}],["description",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/FileBasedDataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"license.html":{}}}],["designated",{"_index":2178,"title":{},"body":{"license.html":{}}}],["desired",{"_index":646,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["detailed",{"_index":1754,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["details",{"_index":1194,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{}}}],["details'},{'name",{"_index":190,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["details.component",{"_index":1783,"title":{},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["details.component.html",{"_index":1856,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.scss",{"_index":1855,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts",{"_index":1854,"title":{},"body":{"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1869,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:15",{"_index":1871,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:16",{"_index":1870,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":1861,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":1865,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:32",{"_index":1864,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details/technology",{"_index":1782,"title":{},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["determining",{"_index":2306,"title":{},"body":{"license.html":{}}}],["dev",{"_index":2037,"title":{},"body":{"index.html":{}}}],["development",{"_index":2033,"title":{},"body":{"index.html":{}}}],["different",{"_index":508,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["direct",{"_index":2104,"title":{},"body":{"license.html":{}}}],["direction",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/FooterComponent.html":{},"components/OverviewComponent.html":{},"license.html":{}}}],["directive",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["directives",{"_index":195,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2046,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2051,"title":{},"body":{"index.html":{}}}],["disclaimer",{"_index":2294,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":1474,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["discussing",{"_index":2173,"title":{},"body":{"license.html":{}}}],["display",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["display:table",{"_index":1940,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["displayname",{"_index":649,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TableColumn.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyTableComponent.html":{}}}],["dist",{"_index":2050,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":653,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["distinctvalues",{"_index":1049,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["distinctvalues.add(v.value",{"_index":1053,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["distribute",{"_index":2201,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2254,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":2079,"title":{},"body":{"license.html":{}}}],["divider",{"_index":718,"title":{},"body":{"components/CriterionComponent.html":{}}}],["docs",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{}}}],["document",{"_index":2085,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["don't",{"_index":2366,"title":{},"body":{"license.html":{}}}],["dossier",{"_index":1024,"title":{},"body":{"injectables/FileBasedDataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["dossierpath",{"_index":1028,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dossiers",{"_index":1045,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dossiers.foreach(d",{"_index":1047,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dossierspath",{"_index":926,"title":{},"body":{"injectables/FileBasedDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dossierspath.concat(technologyid",{"_index":1029,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["dynamic",{"_index":2004,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["e.g",{"_index":539,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["e2e",{"_index":2062,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":317,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":322,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":320,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":2186,"title":{},"body":{"license.html":{}}}],["ease",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{}}}],["easier",{"_index":2372,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":2142,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":2145,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":2161,"title":{},"body":{"license.html":{}}}],["element",{"_index":146,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["element(by.css('app",{"_index":325,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":1618,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["elements",{"_index":643,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["ellipsis",{"_index":1951,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["enclosed",{"_index":2362,"title":{},"body":{"license.html":{}}}],["encompassing",{"_index":1815,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["end",{"_index":713,"title":{},"body":{"components/CriterionComponent.html":{},"index.html":{},"license.html":{}}}],["endindex",{"_index":1526,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["ensure",{"_index":601,"title":{},"body":{"modules/CoreModule.html":{}}}],["ensuremoduleloadedonceguard",{"_index":600,"title":{"classes/EnsureModuleLoadedOnceGuard.html":{}},"body":{"modules/CoreModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["entities",{"_index":2095,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2089,"title":{},"body":{"license.html":{}}}],["entry",{"_index":1606,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["entry.value",{"_index":1607,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyTableComponent.html":{}}}],["enum",{"_index":656,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":2012,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1989,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":663,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["err",{"_index":903,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["err.body?.error",{"_index":943,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["err.error",{"_index":934,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["err.error.message",{"_index":938,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["err.status",{"_index":942,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["error",{"_index":936,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["error(`${targetmodule.constructor.name",{"_index":865,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["errorevent",{"_index":935,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["errormessage",{"_index":933,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["errors",{"_index":1127,"title":{},"body":{"components/FooterComponent.html":{}}}],["even",{"_index":2336,"title":{},"body":{"license.html":{}}}],["evenly",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["event",{"_index":1683,"title":{},"body":{"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"license.html":{}}}],["event.pageindex",{"_index":1549,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["event.pagesize",{"_index":1546,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["eventemitter",{"_index":740,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["example",{"_index":494,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["examples",{"_index":704,"title":{},"body":{"components/CriterionComponent.html":{}}}],["examplevalues",{"_index":491,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["except",{"_index":2203,"title":{},"body":{"license.html":{}}}],["excludesall",{"_index":675,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["excluding",{"_index":2175,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2192,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2059,"title":{},"body":{"index.html":{}}}],["executed",{"_index":2282,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":2312,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":2120,"title":{},"body":{"license.html":{}}}],["existing",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{}}}],["explicitly",{"_index":2274,"title":{},"body":{"license.html":{}}}],["explore",{"_index":356,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{}}}],["export",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["exports",{"_index":348,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["express",{"_index":2299,"title":{},"body":{"license.html":{}}}],["extends",{"_index":616,"title":{},"body":{"modules/CoreModule.html":{},"injectables/FileBasedDataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["extensible",{"_index":368,"title":{},"body":{"components/BannerComponent.html":{}}}],["extension",{"_index":1308,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["extracriteriontitle",{"_index":452,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["extractgroupings",{"_index":1670,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["extratitletext",{"_index":686,"title":{},"body":{"components/CriterionComponent.html":{}}}],["f.description",{"_index":991,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["f.filtertype",{"_index":1057,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["f.filtervalues",{"_index":1062,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["f.find(item",{"_index":1007,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["f.id",{"_index":988,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["f.name",{"_index":990,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["f.technologycategory",{"_index":989,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["f.viewcombinationids.foreach(id",{"_index":992,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["faas",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["faastener",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["failure",{"_index":2333,"title":{},"body":{"license.html":{}}}],["false",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["faq",{"_index":868,"title":{},"body":{"components/FaqComponent.html":{},"modules/InformationRoutingModule.html":{}}}],["faq'},{'name",{"_index":167,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["faq.component.html",{"_index":870,"title":{},"body":{"components/FaqComponent.html":{}}}],["faq.component.scss",{"_index":869,"title":{},"body":{"components/FaqComponent.html":{}}}],["faq/faq.component",{"_index":1285,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["faqcomponent",{"_index":166,"title":{"components/FaqComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["faults",{"_index":1115,"title":{},"body":{"components/FooterComponent.html":{}}}],["fb",{"_index":738,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{}}}],["features",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{}}}],["fee",{"_index":2340,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1820,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["fetch(event",{"_index":1545,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["fff",{"_index":1229,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ffffff",{"_index":381,"title":{},"body":{"components/BannerComponent.html":{},"components/FooterComponent.html":{}}}],["field",{"_index":1336,"title":{},"body":{"modules/MaterialModule.html":{},"components/TechnologyListComponent.html":{}}}],["fields",{"_index":2361,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":2113,"title":{},"body":{"license.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"license.html":{}}}],["filebaseddataservice",{"_index":262,"title":{"injectables/FileBasedDataService.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/FileBasedDataService.html":{},"coverage.html":{}}}],["filebaseddataservice(this.http",{"_index":274,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["filed",{"_index":2230,"title":{},"body":{"license.html":{}}}],["files",{"_index":2043,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":622,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/FileBasedDataService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filter'},{'name",{"_index":165,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["filter.component",{"_index":1786,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["filter.component.html",{"_index":730,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.scss",{"_index":729,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts",{"_index":728,"title":{},"body":{"components/CriterionFilterComponent.html":{},"coverage.html":{}}}],["filter.component.ts:11",{"_index":739,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:12",{"_index":741,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:14",{"_index":746,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:15",{"_index":737,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:20",{"_index":743,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:67",{"_index":742,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.displayname",{"_index":783,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.filters.foreach((f",{"_index":1056,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["filter/criterion",{"_index":727,"title":{},"body":{"components/CriterionFilterComponent.html":{},"modules/TechnologiesModule.html":{},"coverage.html":{}}}],["filter_alt",{"_index":1757,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterblock.blockicon",{"_index":1750,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterblock.blockname",{"_index":1751,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterconfiguration",{"_index":1624,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["filterconfigurationspath",{"_index":928,"title":{},"body":{"injectables/FileBasedDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filtereddata",{"_index":1497,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filterelement",{"_index":731,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filterid",{"_index":645,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["filtering",{"_index":647,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["filteringresult",{"_index":1559,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filterlookup",{"_index":1685,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterlookup.get(c.id",{"_index":1744,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filters",{"_index":634,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["filtertype",{"_index":652,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["filtervalue",{"_index":1840,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["filtervalue.filtertype",{"_index":1569,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filtervalue.value",{"_index":1570,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filtervalues",{"_index":655,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["find",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{}}}],["first",{"_index":1203,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["fit",{"_index":1389,"title":{},"body":{"components/OverviewComponent.html":{}}}],["fitness",{"_index":2303,"title":{},"body":{"license.html":{}}}],["flag",{"_index":2053,"title":{},"body":{"index.html":{}}}],["flat",{"_index":1189,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["flex",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["flexibly",{"_index":512,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["flexlayoutmodule",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["flow",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["following",{"_index":2236,"title":{},"body":{"license.html":{}}}],["font",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["footer",{"_index":1108,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":169,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["footer.component.html",{"_index":1110,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1109,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":1464,"title":{},"body":{"modules/SharedModule.html":{}}}],["footer__heading",{"_index":1134,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer__section",{"_index":1132,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":168,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forkjoin",{"_index":1791,"title":{},"body":{"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["forkjoin([technologies",{"_index":1795,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["form",{"_index":1800,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"license.html":{}}}],["format",{"_index":1412,"title":{},"body":{"injectables/RandomColorService.html":{},"license.html":{}}}],["formbuilder",{"_index":736,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{}}}],["formcontrol",{"_index":744,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["formgroup",{"_index":745,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["forming",{"_index":489,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["formsmodule",{"_index":1457,"title":{},"body":{"modules/SharedModule.html":{}}}],["found",{"_index":1398,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":183,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["found.component",{"_index":334,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["found.component.css",{"_index":1399,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":1400,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1397,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":1402,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":1401,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":333,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["framework",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"index.html":{}}}],["framework'},{'name",{"_index":171,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["framework.component.html",{"_index":1144,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["framework.component.scss",{"_index":1143,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["framework.description",{"_index":1187,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework.name",{"_index":1186,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework.viewcombinationids",{"_index":1079,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["framework.viewcombinations.add(viewcombination",{"_index":995,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["framework/framework.component",{"_index":1290,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["framework__grouping",{"_index":1193,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework__info",{"_index":1191,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework__root",{"_index":1192,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework__view",{"_index":1201,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["frameworkcomponent",{"_index":170,"title":{"components/FrameworkComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["frameworkid",{"_index":818,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["frameworkrenderercomponent",{"_index":172,"title":{"components/FrameworkRendererComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["frameworkresolver",{"_index":1205,"title":{"guards/FrameworkResolver.html":{}},"body":{"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["frameworks",{"_index":986,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["frameworks.find(f",{"_index":998,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["frameworks.foreach(f",{"_index":987,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["frameworkspath",{"_index":922,"title":{},"body":{"injectables/FileBasedDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frameworkviewcombinationspath",{"_index":919,"title":{},"body":{"injectables/FileBasedDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frameworkviewspath",{"_index":917,"title":{},"body":{"injectables/FileBasedDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":2195,"title":{},"body":{"license.html":{}}}],["full",{"_index":340,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["function",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"index.html":{}}}],["functions",{"_index":1808,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["further",{"_index":2063,"title":{},"body":{"index.html":{}}}],["future",{"_index":544,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["fw",{"_index":997,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["fw.description",{"_index":1002,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["fw.id",{"_index":999,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["fw.name",{"_index":1001,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["fw.technologycategory",{"_index":1000,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["fw.viewcombinationids.foreach(id",{"_index":1003,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["fws",{"_index":1073,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["fws.find(f",{"_index":1078,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["g",{"_index":1091,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["g.criteriaids",{"_index":1098,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["g.criteriaids.foreach(id",{"_index":1099,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["g.id",{"_index":1090,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["g.locator",{"_index":1103,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["g.name",{"_index":468,"title":{},"body":{"components/ChildGroupingComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkRendererComponent.html":{}}}],["g.parentid",{"_index":1104,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["gap",{"_index":1383,"title":{},"body":{"components/OverviewComponent.html":{}}}],["generate",{"_index":2045,"title":{},"body":{"index.html":{}}}],["generated",{"_index":658,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["generatefilterstructure",{"_index":1671,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["generategroupingcolumns",{"_index":1916,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["generategroupingcolumns(grouping",{"_index":1645,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["generation",{"_index":542,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["generic",{"_index":504,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["getcriteria",{"_index":794,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getdefaulttechcategory",{"_index":255,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getdefaultviewcombinationdata",{"_index":795,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getdefaultviewcombinationdata(frameworkid",{"_index":816,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getdossier",{"_index":796,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getdossier(technologyid",{"_index":819,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getdossiersofcategory",{"_index":797,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getdossiersofcategory(category",{"_index":822,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getfilteringresult",{"_index":1821,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["getfilteringresult(filtervalue",{"_index":1589,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["getframeworkforcategory",{"_index":798,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getframeworkforcategory(techcategory",{"_index":824,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getframeworkfortechnologytype",{"_index":799,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getframeworkfortechnologytype(category",{"_index":827,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getframeworkgroupingsdata",{"_index":800,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getframeworkgroupingsdata(frameworkid",{"_index":829,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getframeworks",{"_index":801,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getgroupings",{"_index":802,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getinforesources",{"_index":803,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getlogopath",{"_index":1300,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["getlogopath(logolocator",{"_index":1302,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["getrandomcolor",{"_index":1406,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["getrandomcolor(hue",{"_index":1408,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["getrepositorymode",{"_index":257,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["gettechnologies",{"_index":804,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["gettechnologies(withdossier",{"_index":834,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["gettechnologiesofcategory",{"_index":805,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["gettechnologiesofcategory(category",{"_index":838,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["gettechnology",{"_index":806,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["gettechnology(id",{"_index":840,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["gettechnologyfilter",{"_index":807,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["gettechnologyfilter(category",{"_index":842,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getting",{"_index":2016,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettitletext",{"_index":318,"title":{},"body":{"classes/AppPage.html":{}}}],["getviewcombinations",{"_index":808,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getviewgroupingsdata",{"_index":809,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getviewgroupingsdata(viewid",{"_index":845,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getviews",{"_index":810,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getviewsdata",{"_index":811,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["getviewsdata(viewcombinationid",{"_index":849,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["give",{"_index":2237,"title":{},"body":{"license.html":{}}}],["given",{"_index":517,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["go",{"_index":2066,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":2330,"title":{},"body":{"license.html":{}}}],["governing",{"_index":2381,"title":{},"body":{"license.html":{}}}],["grant",{"_index":2185,"title":{},"body":{"license.html":{}}}],["granted",{"_index":2122,"title":{},"body":{"license.html":{}}}],["granting",{"_index":2091,"title":{},"body":{"license.html":{}}}],["grants",{"_index":2188,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2383,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":2025,"title":{},"body":{"index.html":{}}}],["gray",{"_index":1197,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["greater",{"_index":666,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["grey",{"_index":473,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{}}}],["grid",{"_index":1379,"title":{},"body":{"components/OverviewComponent.html":{}}}],["grid__footer",{"_index":1130,"title":{},"body":{"components/FooterComponent.html":{}}}],["grossly",{"_index":2318,"title":{},"body":{"license.html":{}}}],["group",{"_index":537,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["grouping",{"_index":449,"title":{},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping'},{'name",{"_index":160,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.component",{"_index":1459,"title":{},"body":{"modules/SharedModule.html":{}}}],["grouping.component.html",{"_index":451,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.scss",{"_index":450,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts",{"_index":448,"title":{},"body":{"components/ChildGroupingComponent.html":{},"coverage.html":{}}}],["grouping.component.ts:10",{"_index":461,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:11",{"_index":465,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:12",{"_index":462,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:13",{"_index":459,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:14",{"_index":463,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:15",{"_index":458,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.criteria",{"_index":1738,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["grouping.criteria.foreach((c",{"_index":1648,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.criteria.foreach(c",{"_index":1743,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["grouping.criteria.size",{"_index":1739,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["grouping.groupings",{"_index":1655,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.groupings.foreach(g",{"_index":1656,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.id",{"_index":1183,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.name",{"_index":1652,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping/child",{"_index":447,"title":{},"body":{"components/ChildGroupingComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["grouping__criterion",{"_index":479,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{}}}],["grouping__path",{"_index":478,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping__title",{"_index":475,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["groupingcolumnids",{"_index":1630,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns",{"_index":1629,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns.foreach(c",{"_index":1643,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns.length",{"_index":1640,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns.push",{"_index":1653,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingids",{"_index":583,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["groupings",{"_index":453,"title":{},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["groupings]{@link",{"_index":548,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["groupingslookup",{"_index":961,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["groupingslookup.has(id",{"_index":969,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["grow",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["gte",{"_index":667,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["guard",{"_index":1204,"title":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1206,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"overview.html":{}}}],["h.png",{"_index":1240,"title":{},"body":{"components/HeaderComponent.html":{}}}],["handleerror",{"_index":878,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["handleerror(err",{"_index":901,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["harmful",{"_index":1128,"title":{},"body":{"components/FooterComponent.html":{}}}],["harmless",{"_index":2354,"title":{},"body":{"license.html":{}}}],["header",{"_index":1223,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["header'},{'name",{"_index":175,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["header.component.html",{"_index":1225,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1224,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1463,"title":{},"body":{"modules/SharedModule.html":{}}}],["header__logo",{"_index":1237,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__menu",{"_index":1234,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__spacer",{"_index":1236,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__toolbar",{"_index":1233,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":174,"title":{"components/HeaderComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":388,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["help",{"_index":2064,"title":{},"body":{"index.html":{}}}],["helps",{"_index":521,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["hereby",{"_index":2187,"title":{},"body":{"license.html":{}}}],["herein",{"_index":2278,"title":{},"body":{"license.html":{}}}],["hierarchy",{"_index":490,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["high",{"_index":363,"title":{},"body":{"components/BannerComponent.html":{}}}],["hold",{"_index":2353,"title":{},"body":{"license.html":{}}}],["home",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["home.component.html",{"_index":1255,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1254,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/about/about.component",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["home/banner/banner.component",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["home/home.component",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home/overview/overview.component",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["homecomponent",{"_index":176,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["hostlistener",{"_index":1872,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["hostlistener('window:scroll",{"_index":1867,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["hostlisteners",{"_index":1859,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["hover",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{}}}],["html",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["http",{"_index":252,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/FileBasedDataService.html":{}}}],["http://localhost:4200",{"_index":2039,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses",{"_index":2075,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":2379,"title":{},"body":{"license.html":{}}}],["httpclient",{"_index":248,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/FileBasedDataService.html":{}}}],["httpclientmodule",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["hue",{"_index":1415,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["icon",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["id",{"_index":492,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"classes/TableColumn.html":{},"interfaces/Technology.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyTableComponent.html":{}}}],["identification",{"_index":2373,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":502,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["identifying",{"_index":2365,"title":{},"body":{"license.html":{}}}],["ids",{"_index":625,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["ii",{"_index":2111,"title":{},"body":{"license.html":{}}}],["iii",{"_index":2117,"title":{},"body":{"license.html":{}}}],["img",{"_index":1942,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["implementations",{"_index":277,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["implements",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["implied",{"_index":2300,"title":{},"body":{"license.html":{}}}],["import",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"license.html":{}}}],["import(`src/app/information/information.module`).then(m",{"_index":342,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import(`src/app/technologies/technologies.module`).then(m",{"_index":344,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["imports",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["improving",{"_index":2174,"title":{},"body":{"license.html":{}}}],["inability",{"_index":2328,"title":{},"body":{"license.html":{}}}],["inaccuracies",{"_index":1125,"title":{},"body":{"components/FooterComponent.html":{}}}],["incidental",{"_index":2324,"title":{},"body":{"license.html":{}}}],["include",{"_index":471,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"license.html":{}}}],["included",{"_index":2138,"title":{},"body":{"license.html":{}}}],["includeframeworkinfo",{"_index":1162,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["includes",{"_index":1374,"title":{},"body":{"components/OverviewComponent.html":{},"license.html":{}}}],["including",{"_index":2126,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":2158,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":2183,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":2355,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":2351,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":2342,"title":{},"body":{"license.html":{}}}],["index",{"_index":203,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":627,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaReview.html":{}}}],["indicated",{"_index":2136,"title":{},"body":{"license.html":{}}}],["indicates",{"_index":531,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["indirect",{"_index":2105,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2119,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["inforesource",{"_index":1259,"title":{"interfaces/InfoResource.html":{}},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"coverage.html":{}}}],["inforesources",{"_index":1264,"title":{},"body":{"interfaces/InfoResourceSection.html":{}}}],["inforesources]{@link",{"_index":1263,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{}}}],["inforesourcesection",{"_index":857,"title":{"interfaces/InfoResourceSection.html":{}},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"coverage.html":{}}}],["inforesourcespath",{"_index":930,"title":{},"body":{"injectables/FileBasedDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"license.html":{}}}],["information'},{'name",{"_index":178,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["information.component",{"_index":1286,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["information.component.html",{"_index":1267,"title":{},"body":{"components/InformationComponent.html":{}}}],["information.component.scss",{"_index":1266,"title":{},"body":{"components/InformationComponent.html":{}}}],["information/resolvers/framework",{"_index":1465,"title":{},"body":{"modules/SharedModule.html":{}}}],["informational",{"_index":2262,"title":{},"body":{"license.html":{}}}],["informationcomponent",{"_index":177,"title":{"components/InformationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["informationmodule",{"_index":1278,"title":{"modules/InformationModule.html":{}},"body":{"modules/InformationModule.html":{},"modules.html":{},"overview.html":{}}}],["informationroutingmodule",{"_index":1282,"title":{"modules/InformationRoutingModule.html":{}},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["inforoutes",{"_index":1293,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["infringed",{"_index":2214,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2227,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":882,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["initialize",{"_index":1179,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["initialquery",{"_index":1501,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["initialsort",{"_index":1500,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["initialvalues",{"_index":765,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["initialvalues.filter((x",{"_index":768,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["injectable",{"_index":235,"title":{"injectables/AppConfigService.html":{},"injectables/FileBasedDataService.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/FileBasedDataService.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["injectables",{"_index":237,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/FileBasedDataService.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"overview.html":{}}}],["inline",{"_index":1772,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["input",{"_index":428,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["inputs",{"_index":415,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["instance",{"_index":496,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["instanceof",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"injectables/FileBasedDataService.html":{}}}],["institute",{"_index":2217,"title":{},"body":{"license.html":{}}}],["intended",{"_index":2019,"title":{},"body":{"index.html":{}}}],["intentionally",{"_index":2156,"title":{},"body":{"license.html":{}}}],["interacting",{"_index":2026,"title":{},"body":{"index.html":{}}}],["interface",{"_index":481,"title":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":483,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{},"overview.html":{}}}],["interfaces/classification",{"_index":467,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["interfaces/filtering",{"_index":1482,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["interfaces/technology",{"_index":1480,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["introduced",{"_index":2028,"title":{},"body":{"index.html":{}}}],["irrevocable",{"_index":2196,"title":{},"body":{"license.html":{}}}],["isarrayofstrings(value",{"_index":774,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["ispaginated",{"_index":1493,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["issue",{"_index":2169,"title":{},"body":{"license.html":{}}}],["item",{"_index":396,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/FileBasedDataService.html":{},"components/HeaderComponent.html":{}}}],["item.id",{"_index":1026,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["item.technologycategory.tolocalelowercase",{"_index":1008,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["items",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["items.find(item",{"_index":1025,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["items.map",{"_index":1012,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["january",{"_index":2073,"title":{},"body":{"license.html":{}}}],["java",{"_index":565,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["jpeg",{"_index":1311,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["jpg",{"_index":1310,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["json",{"_index":706,"title":{},"body":{"components/CriterionComponent.html":{},"injectables/FileBasedDataService.html":{}}}],["justify",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["karma",{"_index":2061,"title":{},"body":{"index.html":{}}}],["key",{"_index":590,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/FileBasedDataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["keyof",{"_index":1485,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["keystodelete",{"_index":1578,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["keystodelete.foreach(key",{"_index":1586,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["keystodelete.push(key",{"_index":1582,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["kind",{"_index":1119,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["label",{"_index":1272,"title":{},"body":{"components/InformationComponent.html":{}}}],["lack",{"_index":1123,"title":{},"body":{"components/FooterComponent.html":{}}}],["lambda",{"_index":557,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["language",{"_index":2380,"title":{},"body":{"license.html":{}}}],["lastquery",{"_index":1536,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["lastsort",{"_index":1531,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["law",{"_index":2297,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":2223,"title":{},"body":{"license.html":{}}}],["layout",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["learn",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{}}}],["left",{"_index":724,"title":{},"body":{"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["legal",{"_index":2092,"title":{},"body":{"license.html":{}}}],["legend",{"_index":144,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["length",{"_index":1903,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["less",{"_index":662,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["level",{"_index":365,"title":{},"body":{"components/BannerComponent.html":{}}}],["liability",{"_index":2313,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2321,"title":{},"body":{"license.html":{}}}],["library_books",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/InformationComponent.html":{}}}],["licensable",{"_index":2212,"title":{},"body":{"license.html":{}}}],["license",{"_index":2069,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":2376,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":2228,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":546,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["licensor",{"_index":2086,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1949,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["limit).lastindexof",{"_index":1954,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["limitation",{"_index":2301,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":2382,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2127,"title":{},"body":{"license.html":{}}}],["line",{"_index":387,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionComponent.html":{}}}],["link",{"_index":506,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/InformationComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["link.label",{"_index":1274,"title":{},"body":{"components/InformationComponent.html":{}}}],["links",{"_index":398,"title":{},"body":{"components/BannerComponent.html":{}}}],["list",{"_index":400,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/HeaderComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["list'},{'name",{"_index":192,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["list.component",{"_index":1781,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["list.component.html",{"_index":1892,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.scss",{"_index":1891,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts",{"_index":1890,"title":{},"body":{"components/TechnologyListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":1896,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts:11",{"_index":1895,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts:16",{"_index":1899,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts:21",{"_index":1897,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list/technology",{"_index":1780,"title":{},"body":{"modules/TechnologiesModule.html":{},"components/TechnologyListComponent.html":{},"coverage.html":{}}}],["list__card",{"_index":1911,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__cards",{"_index":1910,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__explore",{"_index":1914,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__logo",{"_index":1913,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__paginator",{"_index":1915,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__search",{"_index":1909,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["lists",{"_index":1812,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"license.html":{}}}],["literal",{"_index":1848,"title":{},"body":{"classes/TechnologyDataSource.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":2218,"title":{},"body":{"license.html":{}}}],["loadappconfig",{"_index":243,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["loadchildren",{"_index":341,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":602,"title":{},"body":{"modules/CoreModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["loading",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["locate",{"_index":1805,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["location",{"_index":1271,"title":{},"body":{"components/InformationComponent.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["locator",{"_index":538,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/FileBasedDataService.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["locator.service",{"_index":261,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/CoreModule.html":{},"injectables/FileBasedDataService.html":{}}}],["locator.service.ts",{"_index":1298,"title":{},"body":{"injectables/LogoLocatorService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["locator.service.ts:10",{"_index":1303,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["locator.service.ts:5",{"_index":1301,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["logo",{"_index":260,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/FileBasedDataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["logolocation",{"_index":1013,"title":{},"body":{"injectables/FileBasedDataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["logolocator",{"_index":249,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/FileBasedDataService.html":{},"injectables/LogoLocatorService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["logolocatorservice",{"_index":250,"title":{"injectables/LogoLocatorService.html":{}},"body":{"injectables/AppConfigService.html":{},"modules/CoreModule.html":{},"injectables/FileBasedDataService.html":{},"injectables/LogoLocatorService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{},"overview.html":{}}}],["logolocatorservice.platformlogodir",{"_index":1305,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["lookup",{"_index":1095,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["lookup.get(g.parentid).groupings.add(lookup.get(g.id",{"_index":1105,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["lookup.set(g.id",{"_index":1102,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["loss",{"_index":2329,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2335,"title":{},"body":{"license.html":{}}}],["low",{"_index":364,"title":{},"body":{"components/BannerComponent.html":{}}}],["lte",{"_index":665,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["luminosity",{"_index":1409,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["m.informationmodule",{"_index":343,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.technologiesmodule",{"_index":345,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["made",{"_index":2135,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":2167,"title":{},"body":{"license.html":{}}}],["main",{"_index":1129,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologiesComponent.html":{}}}],["make",{"_index":2205,"title":{},"body":{"license.html":{}}}],["makes",{"_index":1117,"title":{},"body":{"components/FooterComponent.html":{}}}],["making",{"_index":2124,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":2334,"title":{},"body":{"license.html":{}}}],["managed",{"_index":2171,"title":{},"body":{"license.html":{}}}],["management",{"_index":2107,"title":{},"body":{"license.html":{}}}],["map",{"_index":464,"title":{},"body":{"components/ChildGroupingComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{}}}],["map(([combs",{"_index":985,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map(([criteria",{"_index":952,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map(([data",{"_index":1523,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["map(([filter",{"_index":1044,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map(([groupings",{"_index":960,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map(([items",{"_index":1023,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map(([vcs",{"_index":1072,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map(([views",{"_index":974,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map((conf",{"_index":1040,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map((f",{"_index":1006,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map((items",{"_index":1011,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map((res",{"_index":1031,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map((techs",{"_index":1019,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map(criteria.map(c",{"_index":954,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map(groupings.map(c",{"_index":962,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map(groupings.map(g",{"_index":1089,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map(object.entries(res.reviewedcriteria",{"_index":1033,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map(this.filterconfiguration.filters.map(c",{"_index":1730,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["map(vcs.map(vc",{"_index":1075,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["map(views.map(v",{"_index":1084,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["mapping",{"_index":624,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["margin",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["marked",{"_index":2177,"title":{},"body":{"license.html":{}}}],["marks",{"_index":2288,"title":{},"body":{"license.html":{}}}],["matautocompletemodule",{"_index":1339,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbottomsheetmodule",{"_index":1362,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":1315,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":1361,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":1328,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcheckboxmodule",{"_index":1355,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":198,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1343,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":638,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"index.html":{}}}],["material.module",{"_index":1455,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodule",{"_index":1313,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1332,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matformfieldmodule",{"_index":1334,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":1330,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":1317,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":1337,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":1326,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":1349,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":1351,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":1323,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":1367,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":1341,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":1621,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["matsidenavmodule",{"_index":1321,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":1365,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":1357,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":1345,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":1353,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":1319,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":1347,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattreemodule",{"_index":1359,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":1139,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["mean",{"_index":2082,"title":{},"body":{"license.html":{}}}],["means",{"_index":2102,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":2128,"title":{},"body":{"license.html":{}}}],["media",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["media.matchmedia('(max",{"_index":1706,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["mediamatcher",{"_index":1675,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["mediaquerylist",{"_index":1694,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["medium",{"_index":2233,"title":{},"body":{"license.html":{}}}],["meet",{"_index":2235,"title":{},"body":{"license.html":{}}}],["menu",{"_index":1227,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu__icon",{"_index":1248,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu__link",{"_index":1241,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu__text",{"_index":1243,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu_book",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"components/InformationComponent.html":{}}}],["merchantability",{"_index":2302,"title":{},"body":{"license.html":{}}}],["merely",{"_index":2151,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":907,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["mergemap",{"_index":908,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["mergemap((t",{"_index":1037,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["mergemap((techs",{"_index":1035,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["mergemap((vc",{"_index":1068,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["mergemap(v",{"_index":1070,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"pipes/SetToArrayPipe.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["methods",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"classes/DataService.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["min",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["miscellaneous",{"_index":2011,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mobilequery",{"_index":1667,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["mode",{"_index":1712,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["model",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["modifications",{"_index":2125,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2240,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2263,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":2268,"title":{},"body":{"license.html":{}}}],["module",{"_index":279,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}},"body":{"modules/CoreModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["modules",{"_index":281,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"index.html":{},"license.html":{}}}],["moz",{"_index":378,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{}}}],["multi",{"_index":611,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["multiple",{"_index":633,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["n/a",{"_index":707,"title":{},"body":{"components/CriterionComponent.html":{}}}],["name",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"index.html":{},"license.html":{}}}],["namebasedquery",{"_index":1492,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["namequery",{"_index":1514,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["names",{"_index":2287,"title":{},"body":{"license.html":{}}}],["nav",{"_index":410,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav'},{'name",{"_index":157,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["nav.component",{"_index":1467,"title":{},"body":{"modules/SharedModule.html":{},"components/TechnologyDetailsComponent.html":{}}}],["nav.component.html",{"_index":412,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.scss",{"_index":411,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts",{"_index":409,"title":{},"body":{"components/BottomNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:10",{"_index":421,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts:11",{"_index":419,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts:16",{"_index":422,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts:19",{"_index":424,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav/bottom",{"_index":408,"title":{},"body":{"components/BottomNavComponent.html":{},"modules/SharedModule.html":{},"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["nav_item",{"_index":1244,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["navbar",{"_index":438,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["navigate",{"_index":2038,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":319,"title":{},"body":{"classes/AppPage.html":{}}}],["navigating",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{}}}],["navigationcancel",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationend",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationerror",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["navlinks",{"_index":1269,"title":{},"body":{"components/InformationComponent.html":{}}}],["necessarily",{"_index":2213,"title":{},"body":{"license.html":{}}}],["needs",{"_index":533,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["negligence",{"_index":2316,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":2319,"title":{},"body":{"license.html":{}}}],["nested",{"_index":480,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["new",{"_index":273,"title":{},"body":{"injectables/AppConfigService.html":{},"components/CriterionFilterComponent.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":1016,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["nextquery",{"_index":1538,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextquery[key",{"_index":1588,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextquery[key].filtertype",{"_index":1580,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextquery[key].value",{"_index":1583,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextsort",{"_index":1533,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["ng",{"_index":2035,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["ngondestroy",{"_index":1423,"title":{},"body":{"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{}}}],["ngoninit",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["no.pipe",{"_index":1469,"title":{},"body":{"modules/SharedModule.html":{}}}],["no.pipe.ts",{"_index":1957,"title":{},"body":{"pipes/YesNoPipe.html":{},"coverage.html":{}}}],["no.pipe.ts:7",{"_index":1958,"title":{},"body":{"pipes/YesNoPipe.html":{}}}],["non",{"_index":2191,"title":{},"body":{"license.html":{}}}],["none",{"_index":445,"title":{},"body":{"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{}}}],["normally",{"_index":2259,"title":{},"body":{"license.html":{}}}],["note",{"_index":571,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["nothing",{"_index":2277,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2137,"title":{},"body":{"license.html":{}}}],["notices",{"_index":2243,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2275,"title":{},"body":{"license.html":{}}}],["nowrap",{"_index":441,"title":{},"body":{"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["null",{"_index":1581,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["number",{"_index":567,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/FileBasedDataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{}}}],["numeric",{"_index":499,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["o",{"_index":379,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{}}}],["obj",{"_index":763,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["obj[this.filter.criterionid",{"_index":764,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["object",{"_index":1388,"title":{},"body":{"components/OverviewComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.keys(criteriaquery).foreach(key",{"_index":1556,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["object.keys(criteriaquery).length",{"_index":1555,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["object.keys(nextquery).foreach(key",{"_index":1579,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["obligations",{"_index":2343,"title":{},"body":{"license.html":{}}}],["observable",{"_index":815,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"guards/FrameworkResolver.html":{},"components/OverviewComponent.html":{},"guards/ResourcesResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["obtain",{"_index":2378,"title":{},"body":{"license.html":{}}}],["obtained",{"_index":654,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["occurred",{"_index":937,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["of(result",{"_index":1519,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["offer",{"_index":2206,"title":{},"body":{"license.html":{}}}],["official",{"_index":569,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["once.guard",{"_index":603,"title":{},"body":{"modules/CoreModule.html":{}}}],["once.guard.ts",{"_index":860,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["once.guard.ts:3",{"_index":862,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["onchanges",{"_index":1702,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["ondestroy",{"_index":1419,"title":{},"body":{"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{}}}],["one",{"_index":357,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"index.html":{},"license.html":{}}}],["ongroupingselected",{"_index":1161,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["ongroupingselected(viewid",{"_index":1172,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["oninit",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["onnamechange",{"_index":1894,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["onnamechange(name",{"_index":1898,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["onqueryupdate",{"_index":1672,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["onqueryupdate($event",{"_index":1681,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["onscrolltotop",{"_index":414,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["onscrolltotop(platformid",{"_index":423,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["onwindowscroll",{"_index":1858,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["onwindowscroll(e",{"_index":1866,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["opacity",{"_index":1391,"title":{},"body":{"components/OverviewComponent.html":{}}}],["open",{"_index":367,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{},"index.html":{}}}],["option.name",{"_index":1881,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["optional",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["order",{"_index":1195,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{}}}],["organize",{"_index":522,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["origin",{"_index":2292,"title":{},"body":{"license.html":{}}}],["original",{"_index":2148,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":2110,"title":{},"body":{"license.html":{}}}],["out",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1245,"title":{},"body":{"components/HeaderComponent.html":{}}}],["output",{"_index":747,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["outputs",{"_index":733,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["outstanding",{"_index":2115,"title":{},"body":{"license.html":{}}}],["overflow",{"_index":1936,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["overview",{"_index":1370,"title":{"overview.html":{}},"body":{"components/OverviewComponent.html":{},"overview.html":{}}}],["overview'},{'name",{"_index":180,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["overview.component.html",{"_index":1372,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.scss",{"_index":1371,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overviewcomponent",{"_index":179,"title":{"components/OverviewComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["owner",{"_index":2088,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2112,"title":{},"body":{"license.html":{}}}],["p",{"_index":1577,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["p.platformname",{"_index":1906,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["p.shortdescription",{"_index":1907,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["package",{"_index":1995,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["page",{"_index":182,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["pageevent",{"_index":1481,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["pagenotfoundcomponent",{"_index":181,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagenumber",{"_index":1490,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["pagesize",{"_index":1502,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{}}}],["pagesizeoptions",{"_index":1893,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["paginateddata",{"_index":1498,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["panel",{"_index":1747,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parameters",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"components/CriterionFilterComponent.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["params.browsingmode",{"_index":1713,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parent",{"_index":454,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["parentgroup",{"_index":1687,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parentgroup.concat",{"_index":1741,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parentgroupingname",{"_index":1646,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["parentgroupingname.concat('.').concat(grouping.name",{"_index":1651,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["parentid",{"_index":585,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["parentmodule",{"_index":618,"title":{},"body":{"modules/CoreModule.html":{}}}],["part",{"_index":2250,"title":{},"body":{"license.html":{}}}],["partial",{"_index":1530,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["particular",{"_index":550,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"license.html":{}}}],["party",{"_index":2258,"title":{},"body":{"license.html":{}}}],["patent",{"_index":2202,"title":{},"body":{"license.html":{}}}],["path",{"_index":337,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["pathmatch",{"_index":339,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{}}}],["pattern.png",{"_index":374,"title":{},"body":{"components/BannerComponent.html":{}}}],["percent",{"_index":2114,"title":{},"body":{"license.html":{}}}],["perform",{"_index":2030,"title":{},"body":{"index.html":{},"license.html":{}}}],["permission",{"_index":2285,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":2121,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":2189,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":2249,"title":{},"body":{"license.html":{}}}],["pink",{"_index":1137,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["pipe",{"_index":947,"title":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}},"body":{"injectables/FileBasedDataService.html":{},"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{}}}],["pipes",{"_index":1439,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"overview.html":{}}}],["pipes/set",{"_index":1460,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/truncate.pipe",{"_index":1456,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/yes",{"_index":1468,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":1446,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["placement",{"_index":1686,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["placement.get(grouping.name",{"_index":1737,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["placement.set(grouping.name",{"_index":1740,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["places",{"_index":2253,"title":{},"body":{"license.html":{}}}],["platform",{"_index":355,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyDossier.html":{},"components/TechnologyListComponent.html":{},"index.html":{}}}],["platform.description",{"_index":1880,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["platform.platformname",{"_index":1879,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["platform.platformname.tolocalelowercase().includes(namequery",{"_index":1554,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["platformid",{"_index":425,"title":{},"body":{"components/BottomNavComponent.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/FileBasedDataService.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["platformlogodir",{"_index":1299,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["platformname",{"_index":1719,"title":{},"body":{"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["platformroutes",{"_index":1796,"title":{},"body":{"modules/TechnologiesRoutingModule.html":{}}}],["platforms",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyDossier.html":{},"components/TechnologyListComponent.html":{},"index.html":{}}}],["platforms__button",{"_index":1385,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__container",{"_index":1377,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__controls",{"_index":1765,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__description",{"_index":1766,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__filter",{"_index":1767,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__header",{"_index":1768,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__item",{"_index":1384,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__logo",{"_index":1386,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__logos",{"_index":1378,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__settings",{"_index":1769,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platform’s",{"_index":2027,"title":{},"body":{"index.html":{}}}],["png",{"_index":1309,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["pointer",{"_index":1199,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyListComponent.html":{}}}],["populaterenderblocks",{"_index":1673,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["populaterenderblocks(grouping",{"_index":1684,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["position",{"_index":435,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["possibility",{"_index":2338,"title":{},"body":{"license.html":{}}}],["possible",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{}}}],["power",{"_index":2103,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":2123,"title":{},"body":{"license.html":{}}}],["preloadallmodules",{"_index":329,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":347,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prepare",{"_index":2198,"title":{},"body":{"license.html":{}}}],["previous",{"_index":1050,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["primitive",{"_index":564,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["printed",{"_index":2371,"title":{},"body":{"license.html":{}}}],["private",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{}}}],["processdata",{"_index":1822,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["processdata(data",{"_index":1552,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["prod",{"_index":2052,"title":{},"body":{"index.html":{}}}],["product",{"_index":1114,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["production",{"_index":2054,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":1376,"title":{},"body":{"components/OverviewComponent.html":{}}}],["project",{"_index":2047,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":2242,"title":{},"body":{"license.html":{}}}],["promise",{"_index":321,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["property",{"_index":1484,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{}}}],["protected",{"_index":812,"title":{},"body":{"classes/DataService.html":{}}}],["prototype",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{}}}],["protractor",{"_index":323,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"modules/CoreModule.html":{},"license.html":{}}}],["provided",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["provider",{"_index":1116,"title":{},"body":{"components/FooterComponent.html":{}}}],["providers",{"_index":596,"title":{},"body":{"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{}}}],["provides",{"_index":2024,"title":{},"body":{"index.html":{},"license.html":{}}}],["prunequery",{"_index":1823,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["prunequery(nextquery",{"_index":1576,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["public",{"_index":241,"title":{},"body":{"injectables/AppConfigService.html":{},"components/CriterionFilterComponent.html":{},"classes/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["publication",{"_index":2029,"title":{},"body":{"index.html":{}}}],["publicly",{"_index":2199,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2172,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2100,"title":{},"body":{"license.html":{}}}],["q&a",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{}}}],["query",{"_index":623,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["querybycriteria",{"_index":1824,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["querybycriteria(query",{"_index":1535,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["querybyname",{"_index":1825,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["querybyname(query",{"_index":1543,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["question_answer",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{}}}],["questions",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{}}}],["radius",{"_index":1763,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["randomcolor",{"_index":1417,"title":{},"body":{"injectables/RandomColorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["randomcolorservice",{"_index":594,"title":{"injectables/RandomColorService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/RandomColorService.html":{},"coverage.html":{},"overview.html":{}}}],["range",{"_index":1059,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["range[0",{"_index":1063,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["range[range.length",{"_index":1064,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["reactiveformsmodule",{"_index":1458,"title":{},"body":{"modules/SharedModule.html":{}}}],["read",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{}}}],["readable",{"_index":2252,"title":{},"body":{"license.html":{}}}],["readme",{"_index":2068,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":1268,"title":{},"body":{"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reason",{"_index":2357,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":2290,"title":{},"body":{"license.html":{}}}],["received",{"_index":2181,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2238,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":2369,"title":{},"body":{"license.html":{}}}],["redirectto",{"_index":338,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{}}}],["redistributing",{"_index":2308,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":2231,"title":{},"body":{"license.html":{}}}],["reference",{"_index":1262,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/ResourcesComponent.html":{}}}],["references",{"_index":568,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["regarding",{"_index":2283,"title":{},"body":{"license.html":{}}}],["related",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["relatedcriteria",{"_index":1097,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["relatedcriteria.add(criteria.get(id",{"_index":1101,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["reload",{"_index":2041,"title":{},"body":{"index.html":{}}}],["remain",{"_index":2149,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":630,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["renderedfilter",{"_index":1668,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["renderedfilterblock",{"_index":636,"title":{"interfaces/RenderedFilterBlock.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["renderer",{"_index":1156,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer'},{'name",{"_index":173,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["renderer.component",{"_index":1466,"title":{},"body":{"modules/SharedModule.html":{}}}],["renderer.component.html",{"_index":1158,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.scss",{"_index":1157,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts",{"_index":1155,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"coverage.html":{}}}],["renderer.component.ts:12",{"_index":1166,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:13",{"_index":1167,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:14",{"_index":1170,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:15",{"_index":1165,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:16",{"_index":1168,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:17",{"_index":1169,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:19",{"_index":1174,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:20",{"_index":1164,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:25",{"_index":1171,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:38",{"_index":1173,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer/framework",{"_index":1154,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["rendering",{"_index":535,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["renderreviewdata",{"_index":455,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["renderreviewdata]=\"renderreviewdata",{"_index":469,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["repeat",{"_index":375,"title":{},"body":{"components/BannerComponent.html":{}}}],["repeat(4",{"_index":1381,"title":{},"body":{"components/OverviewComponent.html":{}}}],["repeat(5",{"_index":1394,"title":{},"body":{"components/OverviewComponent.html":{}}}],["replaced",{"_index":2364,"title":{},"body":{"license.html":{}}}],["repository",{"_index":276,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["repositorymode",{"_index":246,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["represent",{"_index":2146,"title":{},"body":{"license.html":{}}}],["representation",{"_index":523,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["representations",{"_index":516,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FooterComponent.html":{}}}],["representatives",{"_index":2166,"title":{},"body":{"license.html":{}}}],["representing",{"_index":485,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["reproduce",{"_index":2197,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":2293,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":2078,"title":{},"body":{"license.html":{}}}],["require",{"_index":1993,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":2289,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"index.html":{}}}],["res.resource",{"_index":1433,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["res.reviewdate",{"_index":1032,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["research",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["reserved",{"_index":543,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["reset",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}],["resolve",{"_index":1209,"title":{},"body":{"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["resolve(route",{"_index":1212,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["resolveddata",{"_index":1295,"title":{},"body":{"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["resolver.service",{"_index":1289,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["resolver.service.ts",{"_index":1208,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:10",{"_index":1886,"title":{},"body":{"guards/TechnologyDetailsResolverService.html":{}}}],["resolver.service.ts:11",{"_index":1789,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["resolver.service.ts:13",{"_index":1436,"title":{},"body":{"guards/ResourcesResolver.html":{}}}],["resolver.service.ts:14",{"_index":1216,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["resolver.service.ts:15",{"_index":1790,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["resolver.service.ts:8",{"_index":1435,"title":{},"body":{"guards/ResourcesResolver.html":{}}}],["resolver.service.ts:9",{"_index":1211,"title":{},"body":{"guards/FrameworkResolver.html":{}}}],["resolvers/framework",{"_index":1292,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["resolvers/resources",{"_index":1288,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["resource",{"_index":1261,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{}}}],["resources",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationRoutingModule.html":{},"components/ResourcesComponent.html":{}}}],["resources'},{'name",{"_index":185,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["resources.component.html",{"_index":1421,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources.component.scss",{"_index":1420,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources/resources.component",{"_index":1284,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["resourcescomponent",{"_index":184,"title":{"components/ResourcesComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcesresolver",{"_index":1287,"title":{"guards/ResourcesResolver.html":{}},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"guards/ResourcesResolver.html":{},"coverage.html":{}}}],["respective",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["response",{"_index":579,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["responsibility",{"_index":2349,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":2305,"title":{},"body":{"license.html":{}}}],["result",{"_index":963,"title":{},"body":{"injectables/FileBasedDataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"license.html":{}}}],["result.dossier",{"_index":1017,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["result.filter(t",{"_index":1558,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["result.length",{"_index":1518,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["result.push(combination",{"_index":982,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["result.push(framework",{"_index":996,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["result.push(groupingslookup.get(id",{"_index":1093,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["result.push(lookup.get(g.id",{"_index":1106,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["result.push(view",{"_index":971,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["result.push(viewslookup.get(id",{"_index":1088,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["result.sort((a",{"_index":1565,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["result.viewcombinations.add(viewcombination",{"_index":1004,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["resulting",{"_index":681,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["results",{"_index":197,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":2246,"title":{},"body":{"license.html":{}}}],["return",{"_index":264,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/CriterionFilterComponent.html":{},"injectables/FileBasedDataService.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["returned",{"_index":940,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["returns",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"classes/DataService.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["review",{"_index":515,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["reviewdata",{"_index":456,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["reviewdata]=\"reviewdata",{"_index":470,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["reviewdate",{"_index":563,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/FileBasedDataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["reviewed",{"_index":361,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/OverviewComponent.html":{}}}],["reviewedcriteria",{"_index":588,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/FileBasedDataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["reviewedcriterion",{"_index":1590,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reviewedcriterion.values",{"_index":1593,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reviewedcriterion.values[0].value",{"_index":1594,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reviewmode",{"_index":687,"title":{},"body":{"components/CriterionComponent.html":{}}}],["reviewvalue",{"_index":1592,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["revisions",{"_index":2143,"title":{},"body":{"license.html":{}}}],["rgba(0",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{}}}],["right",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["rights",{"_index":2345,"title":{},"body":{"license.html":{}}}],["risks",{"_index":2310,"title":{},"body":{"license.html":{}}}],["root",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["root'},{'name",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["route",{"_index":1148,"title":{},"body":{"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["route.params.platformid",{"_index":1887,"title":{},"body":{"guards/TechnologyDetailsResolverService.html":{}}}],["router",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["router.events.subscribe((e",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":330,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["routermodule.forchild(inforoutes",{"_index":1296,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["routermodule.forchild(platformroutes",{"_index":1797,"title":{},"body":{"modules/TechnologiesRoutingModule.html":{}}}],["routermodule.forroot",{"_index":346,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1215,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["routes",{"_index":331,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"modules/InformationModule.html":{},"modules/TechnologiesModule.html":{}}}],["routing.module.ts",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["row",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["row:nth",{"_index":1944,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["royalty",{"_index":2194,"title":{},"body":{"license.html":{}}}],["run",{"_index":2034,"title":{},"body":{"index.html":{}}}],["running",{"_index":2055,"title":{},"body":{"index.html":{}}}],["runtimes",{"_index":552,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["rxjs",{"_index":852,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"guards/FrameworkResolver.html":{},"components/OverviewComponent.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":912,"title":{},"body":{"injectables/FileBasedDataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["s.unsubscribe",{"_index":1726,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["s3",{"_index":1810,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["safety",{"_index":1121,"title":{},"body":{"components/FooterComponent.html":{}}}],["salad",{"_index":1200,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyListComponent.html":{}}}],["same",{"_index":2370,"title":{},"body":{"license.html":{}}}],["scaffolding",{"_index":2044,"title":{},"body":{"index.html":{}}}],["screen",{"_index":137,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["scroll",{"_index":1933,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["scrollleft",{"_index":1658,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["scrollright",{"_index":1660,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["scrolltoanchor",{"_index":416,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["search",{"_index":369,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"index.html":{}}}],["section",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["section.description",{"_index":1432,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["section.title",{"_index":1431,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["section__card",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["section__cards",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{}}}],["section_disclaimer",{"_index":1138,"title":{},"body":{"components/FooterComponent.html":{}}}],["sections",{"_index":2083,"title":{},"body":{"license.html":{}}}],["see",{"_index":650,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["seed",{"_index":1411,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["selected",{"_index":680,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["selectedgrouping",{"_index":1159,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["selectedstrings",{"_index":767,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["selectedstrings.length",{"_index":771,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["selectedviewcombination",{"_index":1163,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["selection",{"_index":366,"title":{},"body":{"components/BannerComponent.html":{},"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["self",{"_index":720,"title":{},"body":{"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sell",{"_index":2207,"title":{},"body":{"license.html":{}}}],["sent",{"_index":2165,"title":{},"body":{"license.html":{}}}],["separable",{"_index":2150,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2280,"title":{},"body":{"license.html":{}}}],["serve",{"_index":2036,"title":{},"body":{"index.html":{}}}],["server",{"_index":578,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{},"index.html":{}}}],["service",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"index.html":{},"license.html":{}}}],["services/app",{"_index":607,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/data.service",{"_index":610,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/logo",{"_index":604,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/random",{"_index":605,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":493,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/FileBasedDataService.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["set([...previous",{"_index":1055,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["settimeout",{"_index":430,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["settings",{"_index":657,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["settoarray",{"_index":1442,"title":{},"body":{"pipes/SetToArrayPipe.html":{}}}],["settoarraypipe",{"_index":1438,"title":{"pipes/SetToArrayPipe.html":{}},"body":{"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["shadow",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["shall",{"_index":2081,"title":{},"body":{"license.html":{}}}],["shared/bottom",{"_index":1873,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["shared/datasource",{"_index":1620,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["shared/interfaces/classification",{"_index":853,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkComponent.html":{},"guards/FrameworkResolver.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{}}}],["shared/interfaces/filtering",{"_index":748,"title":{},"body":{"components/CriterionFilterComponent.html":{},"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyTableComponent.html":{}}}],["shared/interfaces/info",{"_index":858,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{}}}],["shared/interfaces/responses",{"_index":856,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["shared/interfaces/technology",{"_index":855,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["shared/page",{"_index":332,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/shared.module",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"modules/InformationModule.html":{},"modules/TechnologiesModule.html":{}}}],["sharedmodule",{"_index":289,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules.html":{},"overview.html":{}}}],["sharereplay",{"_index":909,"title":{},"body":{"injectables/FileBasedDataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["sharereplay(1",{"_index":949,"title":{},"body":{"injectables/FileBasedDataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["shares",{"_index":2116,"title":{},"body":{"license.html":{}}}],["sheet",{"_index":1364,"title":{},"body":{"modules/MaterialModule.html":{}}}],["short",{"_index":1811,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["shortdescription",{"_index":1801,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["shown",{"_index":1803,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["shrink",{"_index":439,"title":{},"body":{"components/BottomNavComponent.html":{},"components/TechnologiesComponent.html":{}}}],["sidenav",{"_index":1625,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sidenav__accordion",{"_index":1762,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["sidenav__filter",{"_index":1761,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["simplechanges",{"_index":1703,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["simpledatasource",{"_index":1470,"title":{"interfaces/SimpleDataSource.html":{}},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{}}}],["simplify",{"_index":2020,"title":{},"body":{"index.html":{}}}],["size",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["skipself",{"_index":598,"title":{},"body":{"modules/CoreModule.html":{}}}],["slider",{"_index":664,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["smooth",{"_index":1937,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["software",{"_index":487,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["sole",{"_index":2348,"title":{},"body":{"license.html":{}}}],["solely",{"_index":2304,"title":{},"body":{"license.html":{}}}],["solid",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sort",{"_index":1483,"title":{"interfaces/Sort.html":{}},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{}}}],["sort.order",{"_index":1564,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["sortby",{"_index":1826,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["sortby(sort",{"_index":1529,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["spacer",{"_index":399,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologyListComponent.html":{}}}],["span')).gettext",{"_index":326,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":2323,"title":{},"body":{"license.html":{}}}],["specific",{"_index":560,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["specified",{"_index":668,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"index.html":{}}}],["spinner",{"_index":1325,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../environment.prod.ts",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filtering.ts",{"_index":2013,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logo",{"_index":2014,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../random",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../technology.ts",{"_index":2015,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core.module.ts",{"_index":595,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/ensure",{"_index":859,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["src/app/core/services/app",{"_index":238,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["src/app/core/services/data.service.ts",{"_index":792,"title":{},"body":{"classes/DataService.html":{},"coverage.html":{}}}],["src/app/core/services/data.service.ts:18",{"_index":813,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:23",{"_index":814,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:25",{"_index":832,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:27",{"_index":848,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:29",{"_index":844,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:31",{"_index":831,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:33",{"_index":825,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:35",{"_index":828,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:37",{"_index":835,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:39",{"_index":839,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:41",{"_index":841,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:43",{"_index":820,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:45",{"_index":823,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:47",{"_index":843,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:49",{"_index":830,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:51",{"_index":817,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:53",{"_index":850,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:55",{"_index":846,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/data.service.ts:57",{"_index":833,"title":{},"body":{"classes/DataService.html":{}}}],["src/app/core/services/file",{"_index":874,"title":{},"body":{"injectables/FileBasedDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/logo",{"_index":1297,"title":{},"body":{"injectables/LogoLocatorService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/services/random",{"_index":1404,"title":{},"body":{"injectables/RandomColorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/home/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/home/about/about.component.ts:8",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/home/banner/banner.component.ts",{"_index":349,"title":{},"body":{"components/BannerComponent.html":{},"coverage.html":{}}}],["src/app/home/banner/banner.component.ts:8",{"_index":353,"title":{},"body":{"components/BannerComponent.html":{}}}],["src/app/home/home.component.ts",{"_index":1253,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:9",{"_index":1257,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/overview/overview.component.ts",{"_index":1369,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/home/overview/overview.component.ts:11",{"_index":1373,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/information/faq/faq.component.ts",{"_index":867,"title":{},"body":{"components/FaqComponent.html":{},"coverage.html":{}}}],["src/app/information/faq/faq.component.ts:12",{"_index":872,"title":{},"body":{"components/FaqComponent.html":{}}}],["src/app/information/faq/faq.component.ts:8",{"_index":871,"title":{},"body":{"components/FaqComponent.html":{}}}],["src/app/information/framework/framework.component.ts",{"_index":1142,"title":{},"body":{"components/FrameworkComponent.html":{},"coverage.html":{}}}],["src/app/information/framework/framework.component.ts:11",{"_index":1147,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["src/app/information/framework/framework.component.ts:16",{"_index":1149,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["src/app/information/information",{"_index":1291,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["src/app/information/information.component.ts",{"_index":1265,"title":{},"body":{"components/InformationComponent.html":{},"coverage.html":{}}}],["src/app/information/information.component.ts:10",{"_index":1273,"title":{},"body":{"components/InformationComponent.html":{}}}],["src/app/information/information.component.ts:14",{"_index":1270,"title":{},"body":{"components/InformationComponent.html":{}}}],["src/app/information/information.module.ts",{"_index":1283,"title":{},"body":{"modules/InformationModule.html":{}}}],["src/app/information/resolvers/framework",{"_index":1207,"title":{},"body":{"guards/FrameworkResolver.html":{},"coverage.html":{}}}],["src/app/information/resolvers/resources",{"_index":1434,"title":{},"body":{"guards/ResourcesResolver.html":{},"coverage.html":{}}}],["src/app/information/resources/resources.component.ts",{"_index":1418,"title":{},"body":{"components/ResourcesComponent.html":{},"coverage.html":{}}}],["src/app/information/resources/resources.component.ts:12",{"_index":1427,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/information/resources/resources.component.ts:13",{"_index":1424,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/information/resources/resources.component.ts:18",{"_index":1426,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/information/resources/resources.component.ts:24",{"_index":1425,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/shared/bottom",{"_index":407,"title":{},"body":{"components/BottomNavComponent.html":{},"coverage.html":{}}}],["src/app/shared/child",{"_index":446,"title":{},"body":{"components/ChildGroupingComponent.html":{},"coverage.html":{}}}],["src/app/shared/criterion/criterion.component.ts",{"_index":683,"title":{},"body":{"components/CriterionComponent.html":{},"coverage.html":{}}}],["src/app/shared/criterion/criterion.component.ts:10",{"_index":689,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:11",{"_index":691,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:12",{"_index":690,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:13",{"_index":694,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:14",{"_index":693,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:15",{"_index":696,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:16",{"_index":688,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:21",{"_index":695,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/datasource.ts",{"_index":1471,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{}}}],["src/app/shared/datasource.ts:10",{"_index":1475,"title":{},"body":{"interfaces/SimpleDataSource.html":{}}}],["src/app/shared/datasource.ts:101",{"_index":1847,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:12",{"_index":1476,"title":{},"body":{"interfaces/SimpleDataSource.html":{}}}],["src/app/shared/datasource.ts:131",{"_index":1839,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:146",{"_index":1849,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:170",{"_index":1846,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:198",{"_index":1842,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:207",{"_index":1843,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:21",{"_index":1830,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:22",{"_index":1834,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:23",{"_index":1837,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:24",{"_index":1828,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:25",{"_index":1833,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:27",{"_index":1832,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:28",{"_index":1838,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:29",{"_index":1829,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:30",{"_index":1835,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:31",{"_index":1831,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:32",{"_index":1827,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:34",{"_index":1836,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:62",{"_index":1852,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:68",{"_index":1850,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:77",{"_index":1851,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:81",{"_index":1845,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:87",{"_index":1853,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:91",{"_index":1841,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:98",{"_index":1844,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":1107,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:12",{"_index":1112,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:8",{"_index":1111,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/framework",{"_index":1153,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":1222,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:8",{"_index":1226,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/interfaces/classification.ts",{"_index":484,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/filtering.ts",{"_index":621,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/interfaces/filtering.ts:119",{"_index":629,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{}}}],["src/app/shared/interfaces/info.ts",{"_index":1260,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/responses.ts",{"_index":576,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/responses.ts:53",{"_index":682,"title":{},"body":{"interfaces/CriteriaReview.html":{}}}],["src/app/shared/interfaces/technology.ts",{"_index":1798,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/material.module.ts",{"_index":1314,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/shared/page",{"_index":1396,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/pipes/set",{"_index":1440,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/truncate.pipe.ts",{"_index":1947,"title":{},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/truncate.pipe.ts:7",{"_index":1952,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["src/app/shared/pipes/yes",{"_index":1956,"title":{},"body":{"pipes/YesNoPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1454,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/technologies/criterion",{"_index":726,"title":{},"body":{"components/CriterionFilterComponent.html":{},"coverage.html":{}}}],["src/app/technologies/technologies",{"_index":1788,"title":{},"body":{"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"coverage.html":{}}}],["src/app/technologies/technologies.component.ts",{"_index":1661,"title":{},"body":{"components/TechnologiesComponent.html":{},"coverage.html":{}}}],["src/app/technologies/technologies.component.ts:114",{"_index":1682,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:25",{"_index":1699,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:26",{"_index":1700,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:27",{"_index":1692,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:28",{"_index":1691,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:29",{"_index":1693,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:31",{"_index":1690,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:32",{"_index":1689,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:34",{"_index":1695,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:36",{"_index":1698,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:37",{"_index":1676,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:51",{"_index":1680,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:74",{"_index":1679,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:78",{"_index":1677,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:87",{"_index":1678,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:94",{"_index":1688,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.module.ts",{"_index":1778,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["src/app/technologies/technology",{"_index":1610,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1988,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1990,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1991,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":716,"title":{},"body":{"components/CriterionComponent.html":{},"components/TechnologyListComponent.html":{}}}],["started",{"_index":2017,"title":{"index.html":{},"license.html":{}},"body":{}}],["startindex",{"_index":1524,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["state",{"_index":1214,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"license.html":{}}}],["stated",{"_index":2204,"title":{},"body":{"license.html":{}}}],["statement",{"_index":2269,"title":{},"body":{"license.html":{}}}],["statements",{"_index":1960,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":877,"title":{},"body":{"injectables/FileBasedDataService.html":{},"injectables/LogoLocatorService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["stating",{"_index":2244,"title":{},"body":{"license.html":{}}}],["sticky",{"_index":436,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["stoppage",{"_index":2331,"title":{},"body":{"license.html":{}}}],["store",{"_index":497,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["stored",{"_index":2049,"title":{},"body":{"index.html":{}}}],["storing",{"_index":1804,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["stretch",{"_index":791,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["string",{"_index":420,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":500,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["style",{"_index":786,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sub",{"_index":536,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["subgroups",{"_index":457,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["subject",{"_index":1752,"title":{},"body":{"components/TechnologiesComponent.html":{},"license.html":{}}}],["sublicense",{"_index":2200,"title":{},"body":{"license.html":{}}}],["submission",{"_index":2271,"title":{},"body":{"license.html":{}}}],["submit",{"_index":2159,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":2157,"title":{},"body":{"license.html":{}}}],["subscription",{"_index":1422,"title":{},"body":{"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{}}}],["subscriptions",{"_index":1669,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["subsequently",{"_index":2182,"title":{},"body":{"license.html":{}}}],["such",{"_index":2108,"title":{},"body":{"license.html":{}}}],["suitability",{"_index":1122,"title":{},"body":{"components/FooterComponent.html":{}}}],["suitable",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["suiting",{"_index":358,"title":{},"body":{"components/BannerComponent.html":{}}}],["super",{"_index":932,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["super(parentmodule",{"_index":619,"title":{},"body":{"modules/CoreModule.html":{}}}],["supersede",{"_index":2279,"title":{},"body":{"license.html":{}}}],["support",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{},"license.html":{},"modules.html":{}}}],["supported",{"_index":553,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["supportedplatforms",{"_index":1256,"title":{},"body":{"components/HomeComponent.html":{},"components/OverviewComponent.html":{}}}],["supportedplatformspath",{"_index":924,"title":{},"body":{"injectables/FileBasedDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":1312,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["switch",{"_index":513,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["switchmap",{"_index":1479,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["switchmap(([criteriaquery",{"_index":1513,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["syntax",{"_index":2368,"title":{},"body":{"license.html":{}}}],["system",{"_index":2018,"title":{},"body":{"index.html":{}}}],["systems",{"_index":2168,"title":{},"body":{"license.html":{}}}],["t",{"_index":1486,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["t.category.tolocalelowercase",{"_index":1021,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["t.dossier.reviewedcriteria.get(key",{"_index":1562,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["t.dossier.reviewedcriteria.has(key",{"_index":1560,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["table",{"_index":194,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["table.component",{"_index":1784,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["table.component.html",{"_index":1622,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["table.component.scss",{"_index":1623,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["table.component.ts",{"_index":1612,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:10",{"_index":1615,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:11",{"_index":1614,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:20",{"_index":1918,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:21",{"_index":1920,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:22",{"_index":1919,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:23",{"_index":1921,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:25",{"_index":1929,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:27",{"_index":1926,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:28",{"_index":1928,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:29",{"_index":1927,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:31",{"_index":1917,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:37",{"_index":1923,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:61",{"_index":1922,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:8",{"_index":1617,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:87",{"_index":1924,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:9",{"_index":1616,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:91",{"_index":1925,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table/technology",{"_index":1611,"title":{},"body":{"classes/TableColumn.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["tablecolumn",{"_index":1609,"title":{"classes/TableColumn.html":{}},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["tablecontainer",{"_index":1627,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1994,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1276,"title":{},"body":{"components/InformationComponent.html":{}}}],["tabs__links",{"_index":1277,"title":{},"body":{"components/InformationComponent.html":{}}}],["take",{"_index":910,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["target",{"_index":1596,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["target.every(v",{"_index":1598,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["targetmodule",{"_index":863,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["tech",{"_index":1938,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["tech.platformname",{"_index":1930,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["techcategory",{"_index":826,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["techname",{"_index":1633,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["technameheader",{"_index":1631,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["technologies",{"_index":520,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["technologies'},{'name",{"_index":187,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["technologies.component",{"_index":1779,"title":{},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["technologies.component.html",{"_index":1665,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["technologies.component.scss",{"_index":1664,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["technologiescomponent",{"_index":186,"title":{"components/TechnologiesComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["technologiesmodule",{"_index":1773,"title":{"modules/TechnologiesModule.html":{}},"body":{"modules/TechnologiesModule.html":{},"modules.html":{},"overview.html":{}}}],["technologiesresolver",{"_index":1785,"title":{"guards/TechnologiesResolver.html":{}},"body":{"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"coverage.html":{}}}],["technologiesroutingmodule",{"_index":1777,"title":{"modules/TechnologiesRoutingModule.html":{}},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["technology",{"_index":189,"title":{"interfaces/Technology.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"components/FaqComponent.html":{},"injectables/FileBasedDataService.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["technology__header",{"_index":1882,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["technology__logo",{"_index":1883,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["technology__view",{"_index":1885,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["technologycategory",{"_index":503,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["technologydatasource",{"_index":1489,"title":{"classes/TechnologyDataSource.html":{}},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["technologydatasource(this.technologies",{"_index":1718,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["technologydatasource.canfilter(criteriaquery[key",{"_index":1557,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["technologydatasource.containsany(filtervalue",{"_index":1591,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["technologydetailscomponent",{"_index":188,"title":{"components/TechnologyDetailsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["technologydetailsresolverservice",{"_index":1787,"title":{"guards/TechnologyDetailsResolverService.html":{}},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["technologydossier",{"_index":854,"title":{"interfaces/TechnologyDossier.html":{}},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{}}}],["technologydossier]{@link",{"_index":1813,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["technologydossierresponse",{"_index":587,"title":{"interfaces/TechnologyDossierResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/FileBasedDataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["technologyfilterconfiguration",{"_index":644,"title":{"interfaces/TechnologyFilterConfiguration.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["technologyid",{"_index":821,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["technologylistcomponent",{"_index":191,"title":{"components/TechnologyListComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["technologytablecomponent",{"_index":193,"title":{"components/TechnologyTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["techs",{"_index":1036,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["techs.filter(t",{"_index":1020,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["temp",{"_index":1080,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["temp.default",{"_index":1082,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["terminate",{"_index":2229,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2076,"title":{},"body":{"license.html":{}}}],["test",{"_index":2058,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2057,"title":{},"body":{"index.html":{}}}],["text",{"_index":390,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["text_snippet",{"_index":692,"title":{},"body":{"components/CriterionComponent.html":{}}}],["then(data",{"_index":267,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["theory",{"_index":2314,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":2153,"title":{},"body":{"license.html":{}}}],["third",{"_index":2257,"title":{},"body":{"license.html":{}}}],["this.appconfig",{"_index":268,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.appconfig?.defaulttechcategory",{"_index":270,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.appconfig?.repositorymode",{"_index":271,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.bottomnav.totop",{"_index":1876,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["this.browsingmode",{"_index":1714,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.buildgroupings(groupings",{"_index":957,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.checkrouterevent(e",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["this.columnstodisplay.push(c.id",{"_index":1650,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.config.defaulttechcategory",{"_index":1220,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["this.criteriabasedquery",{"_index":1506,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.criteriabasedquery.getvalue",{"_index":1537,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.criteriabasedquery.next(nextquery",{"_index":1542,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.criteriacolumns.push",{"_index":1649,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.criterion.name",{"_index":699,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.criterioninstance",{"_index":700,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.currentindex",{"_index":1548,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.data",{"_index":1503,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.dataservice.getframeworkforcategory(defaultcategory",{"_index":1221,"title":{},"body":{"guards/FrameworkResolver.html":{}}}],["this.dataservice.getframeworkfortechnologytype(category",{"_index":1793,"title":{},"body":{"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["this.dataservice.getinforesources",{"_index":1437,"title":{},"body":{"guards/ResourcesResolver.html":{}}}],["this.dataservice.gettechnologies",{"_index":1258,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.dataservice.gettechnologiesofcategory(category",{"_index":1792,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["this.dataservice.gettechnology(id",{"_index":1888,"title":{},"body":{"guards/TechnologyDetailsResolverService.html":{}}}],["this.dataservice.gettechnologyfilter(category",{"_index":1794,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["this.datasource",{"_index":1717,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.datasource.fetch({pageindex",{"_index":1902,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.datasource.pagesize",{"_index":1905,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.datasource.querybycriteria($event",{"_index":1746,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.datasource.querybyname(name",{"_index":1901,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.datasource.totalinputsize",{"_index":1904,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.extractgroupings",{"_index":1723,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.extratitletext",{"_index":697,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.fb.array",{"_index":757,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.fb.control(null",{"_index":755,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.fb.control(this.filter.filtertype",{"_index":761,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.fb.group",{"_index":760,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filter.filtertype",{"_index":750,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filter.filtervalues",{"_index":766,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filter.filtervalues.foreach(v",{"_index":758,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterconfiguration",{"_index":1721,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.filtereddata",{"_index":1510,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.filterelement",{"_index":754,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.get('filtertype').setvalue(this.filtertype.containsone",{"_index":782,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.markaspristine",{"_index":772,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.reset",{"_index":778,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.value.checkboxes[i",{"_index":769,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.value.filtertype",{"_index":770,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.valuechanges.subscribe(value",{"_index":762,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.bool",{"_index":751,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.containsall",{"_index":779,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.containsany",{"_index":752,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.containsone",{"_index":780,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.excludesall",{"_index":781,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.lte",{"_index":753,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.framework",{"_index":1151,"title":{},"body":{"components/FrameworkComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["this.framework.viewcombinations",{"_index":1176,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{}}}],["this.framework.viewcombinations.foreach(vc",{"_index":1875,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["this.framework.viewcombinations.foreach(viewcomb",{"_index":1634,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.generatefilterstructure",{"_index":1724,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.generategroupingcolumns(g",{"_index":1657,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.generategroupingcolumns(grouping",{"_index":1639,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.getcriteria",{"_index":950,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.getdefaultviewcombinationdata(frameworkid).pipe",{"_index":1067,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.getdossier(id",{"_index":1022,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.getdossier(item.id).pipe(take(1)).subscribe",{"_index":1015,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.getdossier(t.id",{"_index":1038,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.getdossiersofcategory(category",{"_index":1043,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.getfilteringresult(criteriaquery[key",{"_index":1561,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.getframeworks().pipe",{"_index":1005,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.getgroupings",{"_index":958,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.gettechnologies(withdossier).pipe",{"_index":1018,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.gettechnologiesofcategory(category).pipe",{"_index":1034,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.getviewcombinations",{"_index":983,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.getviewgroupingsdata(v.id",{"_index":1071,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.getviews",{"_index":972,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.getviewsdata(vc.id",{"_index":1069,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.groupingcolumnids.push(grouping.id",{"_index":1654,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.groupingcolumns.push(...groupingcolumns",{"_index":1641,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.groupings.foreach(g",{"_index":1732,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.groupings.push(...array.from(v.groupings",{"_index":1728,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.http.get('/assets/config.json",{"_index":265,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.http.get(criteriagroupingspath",{"_index":951,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.http.get(criteriapath",{"_index":946,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.http.get(dossierpath",{"_index":1030,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.http.get(filterconfigurationspath).pipe",{"_index":1039,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.http.get(frameworkspath",{"_index":984,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.http.get(frameworkviewcombinationspath",{"_index":973,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.http.get(frameworkviewspath",{"_index":959,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.http.get(inforesourcespath",{"_index":1094,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.http.get(supportedplatformspath",{"_index":1010,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.ispaginated",{"_index":1551,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.loading",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["this.logolocator",{"_index":275,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.logolocator.getlogopath(item.logolocator",{"_index":1014,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.logolocator.getlogopath(technology.logolocator",{"_index":1027,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["this.mobilequery",{"_index":1705,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.mobilequery.addeventlistener('change",{"_index":1708,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.namebasedquery",{"_index":1508,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.namebasedquery.next(query",{"_index":1544,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagenumber$]).pipe",{"_index":1522,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagenumber.asobservable",{"_index":1496,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagenumber.next(event.pageindex",{"_index":1547,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagesize",{"_index":1525,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.paginateddata",{"_index":1520,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.platform",{"_index":1874,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["this.populaterenderblocks(g",{"_index":1733,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.processdata(this.data",{"_index":1515,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.prunequery(nextquery",{"_index":1540,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.renderedfilter",{"_index":1734,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.repositorymode",{"_index":272,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.resources",{"_index":1429,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.route.data.subscribe(data",{"_index":1150,"title":{},"body":{"components/FrameworkComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":1711,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.selectedgrouping.get(viewid)?.id",{"_index":1182,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.selectedgrouping.set(viewid",{"_index":1184,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.selectedviewcombination",{"_index":1175,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["this.selectedviewcombination.views.foreach(v",{"_index":1180,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.sort",{"_index":1504,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.sort.getvalue",{"_index":1532,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.sort.next(nextsort",{"_index":1534,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.sort]).pipe",{"_index":1512,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.subscription",{"_index":1428,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":1430,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.subscriptions.foreach(s",{"_index":1725,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.subscriptions.push",{"_index":1710,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.tablecontainer.nativeelement.scrollleft",{"_index":1659,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.technologies",{"_index":1715,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.title",{"_index":698,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.totalinputsize",{"_index":1517,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.updatequery.emit(obj",{"_index":773,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.values",{"_index":701,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.viewportscroller.scrolltoanchor(grouping.id",{"_index":1185,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.viewportscroller.scrolltoanchor(platformid",{"_index":431,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["this.viewtoggles.set(v.id",{"_index":1181,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["those",{"_index":2210,"title":{},"body":{"license.html":{}}}],["through",{"_index":1753,"title":{},"body":{"components/TechnologiesComponent.html":{},"license.html":{}}}],["throw",{"_index":864,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["throwerror",{"_index":905,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["throwerror(errormessage",{"_index":945,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["title",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/PageNotFoundComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"license.html":{}}}],["titlepage",{"_index":1403,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["toarray",{"_index":911,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["toggle",{"_index":660,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"components/FrameworkRendererComponent.html":{},"modules/MaterialModule.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["togglepagination",{"_index":1550,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["top",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["topromise",{"_index":266,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["tort",{"_index":2315,"title":{},"body":{"license.html":{}}}],["totalinputsize",{"_index":1494,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["totop",{"_index":413,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["tracking",{"_index":2170,"title":{},"body":{"license.html":{}}}],["trade",{"_index":2286,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":2247,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2284,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":2208,"title":{},"body":{"license.html":{}}}],["transform",{"_index":1443,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["transform(value",{"_index":1444,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["transformation",{"_index":2129,"title":{},"body":{"license.html":{}}}],["transition",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{}}}],["translates",{"_index":659,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["translation",{"_index":2130,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["true",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":498,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["truncate",{"_index":1948,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["truncatepipe",{"_index":1452,"title":{"pipes/TruncatePipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["tslib",{"_index":2007,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":777,"title":{},"body":{"components/CriterionFilterComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"pipes/YesNoPipe.html":{}}}],["types",{"_index":2133,"title":{},"body":{"license.html":{}}}],["typographical",{"_index":1126,"title":{},"body":{"components/FooterComponent.html":{}}}],["ui",{"_index":534,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["undefined",{"_index":278,"title":{},"body":{"injectables/AppConfigService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{}}}],["under",{"_index":2098,"title":{},"body":{"license.html":{}}}],["union",{"_index":2093,"title":{},"body":{"license.html":{}}}],["unique",{"_index":501,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["unit",{"_index":2056,"title":{},"body":{"index.html":{}}}],["unless",{"_index":2273,"title":{},"body":{"license.html":{}}}],["updatequery",{"_index":734,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["url(\"../../../assets/images/logo",{"_index":1239,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url(../../../assets/images/bg",{"_index":373,"title":{},"body":{"components/BannerComponent.html":{}}}],["use",{"_index":545,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":511,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["usefactory",{"_index":613,"title":{},"body":{"modules/CoreModule.html":{}}}],["user",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["user's",{"_index":677,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["using",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"index.html":{},"license.html":{}}}],["v",{"_index":1085,"title":{},"body":{"injectables/FileBasedDataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["v.description",{"_index":967,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["v.groupingids.foreach(id",{"_index":968,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["v.id",{"_index":965,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["v.length",{"_index":1574,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["v.name",{"_index":966,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["v.png",{"_index":1249,"title":{},"body":{"components/HeaderComponent.html":{}}}],["v.value",{"_index":712,"title":{},"body":{"components/CriterionComponent.html":{}}}],["value",{"_index":427,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.every(item",{"_index":776,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["value.length",{"_index":1955,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value.substr(0",{"_index":1953,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["valueindex",{"_index":711,"title":{},"body":{"components/CriterionComponent.html":{}}}],["values",{"_index":495,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["values[0].value",{"_index":708,"title":{},"body":{"components/CriterionComponent.html":{}}}],["valuetocheck",{"_index":1584,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["valuetocheck.length",{"_index":1585,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["var",{"_index":148,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["variable",{"_index":1966,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2387,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vc",{"_index":1077,"title":{},"body":{"injectables/FileBasedDataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["vc.default",{"_index":1177,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["vc.id",{"_index":1076,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["vc.viewids.foreach(id",{"_index":1087,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["vc.views.foreach(v",{"_index":1727,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["vclookup",{"_index":1074,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["vclookup.get(id",{"_index":1081,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["verbal",{"_index":2162,"title":{},"body":{"license.html":{}}}],["version",{"_index":2071,"title":{},"body":{"license.html":{}}}],["vertical",{"_index":1390,"title":{},"body":{"components/OverviewComponent.html":{}}}],["via",{"_index":2060,"title":{},"body":{"index.html":{}}}],["view",{"_index":528,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["view.description",{"_index":1190,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["view.groupingids.foreach(id",{"_index":1092,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["view.groupings.add(groupingslookup.get(id",{"_index":970,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["view.name",{"_index":1188,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["view_list",{"_index":370,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["viewchild",{"_index":1619,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["viewchild('bottomnavcomponent",{"_index":1868,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["viewchild('content",{"_index":1626,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewchild('sidenav",{"_index":1697,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["viewcolspan",{"_index":1642,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewcomb.default",{"_index":1635,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewcomb.views.foreach(view",{"_index":1636,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewcombination",{"_index":993,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["viewcombinationid",{"_index":851,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["viewcombinationids",{"_index":577,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["viewcombinations",{"_index":525,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/FileBasedDataService.html":{}}}],["viewcombinations.foreach(c",{"_index":975,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["viewid",{"_index":847,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{},"components/FrameworkRendererComponent.html":{}}}],["viewids",{"_index":581,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["viewportscroller",{"_index":418,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["views",{"_index":510,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/FileBasedDataService.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["views.find(v",{"_index":980,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["views.foreach(v",{"_index":964,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["viewslookup",{"_index":1083,"title":{},"body":{"injectables/FileBasedDataService.html":{}}}],["viewtoggles",{"_index":1160,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["violet",{"_index":476,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FooterComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["viruses",{"_index":1124,"title":{},"body":{"components/FooterComponent.html":{}}}],["visualize",{"_index":2032,"title":{},"body":{"index.html":{}}}],["void",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["warranties",{"_index":1118,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["warranty",{"_index":2295,"title":{},"body":{"license.html":{}}}],["way",{"_index":362,"title":{},"body":{"components/BannerComponent.html":{}}}],["webkit",{"_index":376,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/OverviewComponent.html":{}}}],["weight",{"_index":385,"title":{},"body":{"components/BannerComponent.html":{}}}],["wherever",{"_index":2256,"title":{},"body":{"license.html":{}}}],["whether",{"_index":532,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["white",{"_index":440,"title":{},"body":{"components/BottomNavComponent.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["whole",{"_index":2147,"title":{},"body":{"license.html":{}}}],["width",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["window.pageyoffset",{"_index":1877,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["window:scroll",{"_index":1860,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["window:scroll(e",{"_index":1863,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["withdossier",{"_index":836,"title":{},"body":{"classes/DataService.html":{},"injectables/FileBasedDataService.html":{}}}],["within",{"_index":2184,"title":{},"body":{"license.html":{}}}],["without",{"_index":2234,"title":{},"body":{"license.html":{}}}],["word",{"_index":1943,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["work",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["works",{"_index":873,"title":{},"body":{"components/FaqComponent.html":{},"license.html":{}}}],["worldwide",{"_index":2190,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["writing",{"_index":2179,"title":{},"body":{"license.html":{}}}],["written",{"_index":2163,"title":{},"body":{"license.html":{}}}],["yes",{"_index":837,"title":{},"body":{"classes/DataService.html":{},"injectables/RandomColorService.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/YesNoPipe.html":{}}}],["yesno",{"_index":709,"title":{},"body":{"components/CriterionComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/YesNoPipe.html":{}}}],["yesnopipe",{"_index":1453,"title":{"pipes/YesNoPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"overview.html":{}}}],["yyyy",{"_index":2375,"title":{},"body":{"license.html":{}}}],["z",{"_index":382,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{}}}],["zone.js",{"_index":2009,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/about/about.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/about/about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-home-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent {\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  About\n  \n    FaaStener is a research prototype which aims to provide support in choosing suitable Function-as-a-Service\n    platforms based on the user-provided requirements.\n    The classification framework behind FaaStener is derived by combining existing academic work and documentation\n    of available Function-as-a-Service platforms.\n    You can find more information about the classification framework, FaaStener, and FaaS cloud service model with\n    additional resources by navigating using the respective buttons below.\n  \n\n\n  \n    \n      menu_book\n       Framework\n       Learn about the classification framework and available\n        criteria.\n      READ MORE\n    \n\n    \n      cloud_done\n      Docs\n       Information on how to work with FaaStener and its features. \n      READ MORE\n    \n\n    \n      library_books\n      Resources\n       Additional resources related to Function-as-a-Service platforms. \n      READ MORE\n    \n\n    \n      question_answer\n      Q&A\n      Answers to some possible questions.\n      READ MORE\n    -->\n  \n\n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n}\n\n.about-section {\n  width: 95%;\n  margin-bottom: .5rem;\n}\n\n.about-section__cards {\n  display: flex;\n  flex-flow: wrap;\n  justify-content: space-evenly;\n}\n\n.about-section__card {\n  margin: .5rem;\n  border-top: .2rem solid #212121;\n  transition: all .3s ease;\n  flex-basis: 18%;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n\n  &:hover {\n    border-top: .2rem solid #b5ca8f;\n    box-shadow: 0 10px 16px rgba(0, 0, 0, 0.2) !important;\n\n    .about-section__card-icon {\n      color: #b5ca8f;\n    }\n  }\n}\n\n.about-section__card-icon {\n  font-size: 3rem !important;\n  transition: all .3s ease;\n  margin-right: 1rem;\n}\n\n.about-section__card-title {\n  padding-top: 1rem;\n  font-size: 1rem;\n}\n\n.about-section__card-description {\n  flex: 1;\n  font-size: .8rem;\n}\n\n@media screen and (min-width: 550px) {\n  .about-section__card-title {\n    font-size: 1.1rem;\n  }\n\n  .about-section__card-description {\n    flex: 1;\n    font-size: .9rem;\n  }\n}\n\n\n@media (min-width: 790px) {\n  .about-section__card-title {\n    font-size: 1.2rem;\n  }\n\n  .about-section__card-description {\n    flex: 1;\n    font-size: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  About      FaaStener is a research prototype which aims to provide support in choosing suitable Function-as-a-Service    platforms based on the user-provided requirements.    The classification framework behind FaaStener is derived by combining existing academic work and documentation    of available Function-as-a-Service platforms.    You can find more information about the classification framework, FaaStener, and FaaS cloud service model with    additional resources by navigating using the respective buttons below.              menu_book       Framework       Learn about the classification framework and available        criteria.      READ MORE              cloud_done      Docs       Information on how to work with FaaStener and its features.       READ MORE              library_books      Resources       Additional resources related to Function-as-a-Service platforms.       READ MORE              question_answer      Q&A      Answers to some possible questions.      READ MORE    -->  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                template\n                \n  \n    \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkRouterEvent\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkRouterEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRouterEvent(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    \n      \n        \n      \n      \n    \n  `\n})\nexport class AppComponent implements OnInit {\n  loading: boolean;\n\n  constructor(private router: Router) {\n    router.events.subscribe((e) => this.checkRouterEvent(e));\n  }\n\n  ngOnInit(): void {\n  }\n\n  private checkRouterEvent(e): void {\n    if (e instanceof NavigationStart) {\n      this.loading = true;\n    }\n\n    if (e instanceof NavigationCancel || e instanceof NavigationEnd || e instanceof NavigationError) {\n      this.loading = false;\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/app-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                appConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataServiceFactory\n                            \n                            \n                                loadAppConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    defaultTechCategory\n                                \n                                \n                                    repositoryMode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logoLocator: LogoLocatorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/app-config.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logoLocator\n                                                  \n                                                        \n                                                                        LogoLocatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dataServiceFactory\n                        \n                    \n                \n            \n            \n                \n                    \n                    dataServiceFactory()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/app-config.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadAppConfig\n                        \n                    \n                \n            \n            \n                \nloadAppConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/app-config.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/app-config.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        defaultTechCategory\n                    \n                \n\n                \n                    \n                        getdefaultTechCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/app-config.service.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        repositoryMode\n                    \n                \n\n                \n                    \n                        getrepositoryMode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/app-config.service.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {LogoLocatorService} from './logo-locator.service';\nimport {FileBasedDataService} from './file-based-data.service';\n\n@Injectable()\nexport class AppConfigService {\n  private appConfig: any;\n\n  constructor(private http: HttpClient, private logoLocator: LogoLocatorService) {\n  }\n\n  loadAppConfig() {\n    return this.http.get('/assets/config.json')\n      .toPromise()\n      .then(data => {\n        this.appConfig = data;\n      });\n  }\n\n  get defaultTechCategory() {\n    return this.appConfig?.defaultTechCategory;\n  }\n\n  get repositoryMode() {\n    return this.appConfig?.repositoryMode;\n  }\n\n  public dataServiceFactory() {\n    if (this.repositoryMode === 'file' || !this.repositoryMode) {\n      return new FileBasedDataService(this.http, this.logoLocator);\n    } else {\n      // other repository implementations\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBannerComponent\n\nBannerComponent\n\nAppModule -->\n\nBannerComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nAppModule -->\n\nOverviewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            BannerComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            OverviewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {AppRoutingModule} from './app-routing.module';\nimport {CoreModule} from './core/core.module';\nimport {SharedModule} from './shared/shared.module';\nimport {HomeComponent} from './home/home.component';\nimport {AboutComponent} from './home/about/about.component';\nimport {BannerComponent} from './home/banner/banner.component';\nimport {OverviewComponent} from './home/overview/overview.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    CoreModule,\n    SharedModule,\n    AppRoutingModule\n  ],\n  declarations: [AppComponent, HomeComponent, AboutComponent, BannerComponent, OverviewComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTitleText\n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise<>\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\nimport {PageNotFoundComponent} from './shared/page-not-found/page-not-found.component';\nimport {HomeComponent} from './home/home.component';\n\nconst appRoutes: Routes = [\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\n  {path: 'home', component: HomeComponent},\n  {path: 'info', loadChildren: () => \"import(`src/app/information/information.module`).then(m => m.InformationModule)\"},\n  {path: 'platforms', loadChildren: () => \"import(`src/app/technologies/technologies.module`).then(m => m.TechnologiesModule)\"},\n  {path: '**', component: PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      {\n        preloadingStrategy: PreloadAllModules\n      }\n    )\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BannerComponent.html":{"url":"components/BannerComponent.html","title":"component - BannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/banner/banner.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-banner\n            \n\n            \n                styleUrls\n                ./banner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./banner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/banner/banner.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-home-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent {\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n  \n    Choose your Function-as-a-Service Platform\n  \n  \n    Explore available Function-as-a-Service platforms and find one suiting your requirements.\n  \n\n\n  \n    \n      check_circle\n       10 reviewed platforms, more on the way \n    \n    \n      check_circle\n       High- and low-level platform selection criteria\n    \n    \n      check_circle\n       Open source and extensible \n    \n  \n\n  \n    \n      search\n      Find a Platform\n    \n    \n    \n      view_list\n      Browse Platforms\n    \n  \n\n\n    \n\n    \n                \n                    ./banner.component.scss\n                \n                @import \"../../_scss/shared\";\n\n.banner {\n  background: url(../../../assets/images/bg-pattern.png) repeat;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: auto;\n  color: #ffffff;\n  z-index: -10;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n}\n\n.banner__heading {\n  margin: 1rem auto 0;\n  padding: 0 1rem;\n  font-size: 1.5rem !important;\n  font-weight: 900;\n  line-height: 1.7rem;\n  text-shadow: 0 4px 4px rgba(0, 0, 0, 0.22);\n}\n\n.banner__description {\n  margin: .8rem auto 0;\n  padding: 0 1rem;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5rem;\n}\n\n.banner__summary {\n  margin: 2rem 0;\n  display: flex;\n  flex-flow: column wrap;\n  align-content: center;\n}\n\n.banner__summary-item {\n  margin-bottom: .5rem;\n  display: flex;\n  align-content: center;\n}\n\n.banner__summary-item-text {\n  padding: .2rem 0 0 .5rem;\n  font-size: .9rem;\n}\n\n.banner__quick-links {\n  margin: 1rem 0;\n  display: flex;\n  justify-content: center;\n}\n\n.banner__quick-links-spacer {\n  margin: 0 .5rem;\n}\n\n.banner-description-list {\n  margin: 0 auto 40px;\n  font-size: 18px;\n}\n\n\n@media (min-width: 790px) {\n  .banner__heading {\n    font-size: 1.8rem !important;\n  }\n\n  .banner__description {\n    font-size: 1.3rem;\n  }\n\n  .banner__summary-item-text {\n    font-size: 1rem;\n  }\n\n}\n\n@media (min-width: 1100px) {\n  .banner__heading {\n    font-size: 2rem !important;\n    margin-top: 3rem;\n  }\n\n  .banner__quick-links {\n    margin: 1rem 0 3rem 0;\n  }\n\n  .banner__summary {\n    margin: 2.5rem 0;\n  }\n\n  .banner__summary-item {\n    margin: 0 2rem .5rem 0;\n    display: flex;\n    align-content: center;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Choose your Function-as-a-Service Platform        Explore available Function-as-a-Service platforms and find one suiting your requirements.              check_circle       10 reviewed platforms, more on the way               check_circle       High- and low-level platform selection criteria              check_circle       Open source and extensible                   search      Find a Platform                  view_list      Browse Platforms      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BottomNavComponent.html":{"url":"components/BottomNavComponent.html","title":"component - BottomNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BottomNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/bottom-nav/bottom-nav.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-bottom-nav\n            \n\n            \n                styleUrls\n                ./bottom-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./bottom-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toTop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onScrollToTop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scrollToAnchor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewportScroller: ViewportScroller)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewportScroller\n                                                  \n                                                        \n                                                                        ViewportScroller\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scrollToAnchor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onScrollToTop\n                        \n                    \n                \n            \n            \n                \nonScrollToTop(platformId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    platformId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        toTop\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ViewportScroller} from '@angular/common';\n\n@Component({\n  selector: 'app-bottom-nav',\n  templateUrl: './bottom-nav.component.html',\n  styleUrls: ['./bottom-nav.component.scss']\n})\nexport class BottomNavComponent implements OnInit {\n  @Input() scrollToAnchor: string;\n  toTop = false;\n\n  constructor(private viewportScroller: ViewportScroller) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onScrollToTop(platformId: string) {\n    setTimeout(() => {\n      this.viewportScroller.scrollToAnchor(platformId);\n    }, 50);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    arrow_upward\n    To Top\n  \n\n\n    \n\n    \n                \n                    ./bottom-nav.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  position: sticky;\n  position: -webkit-sticky;\n  bottom: 0;\n  z-index: 20;\n}\n\n.bottom-navbar {\n  flex-shrink: 0;\n  padding: 0;\n  height: 3rem !important;\n  background: white;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-evenly;\n  box-shadow: 0 0 1px rgba(0, 0, 0, .3);\n}\n\n@media screen and (min-width: 510px) {\n  .bottom-navbar {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        arrow_upward    To Top  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BottomNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChildGroupingComponent.html":{"url":"components/ChildGroupingComponent.html","title":"component - ChildGroupingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChildGroupingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/child-grouping/child-grouping.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-child-grouping\n            \n\n            \n                styleUrls\n                ./child-grouping.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./child-grouping.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraCriterionTitle\n                            \n                            \n                                groupings\n                            \n                            \n                                parent\n                            \n                            \n                                renderReviewData\n                            \n                            \n                                reviewData\n                            \n                            \n                                subGroups\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/child-grouping/child-grouping.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraCriterionTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupings\n                    \n                \n                \n                    \n                        Type :         CriteriaGrouping[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parent\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        renderReviewData\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewData\n                    \n                \n                \n                    \n                        Type :         Map\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subGroups\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {CriteriaGrouping, CriterionInstance} from '../interfaces/classification';\n\n@Component({\n  selector: 'app-child-grouping',\n  templateUrl: './child-grouping.component.html',\n  styleUrls: ['./child-grouping.component.scss']\n})\nexport class ChildGroupingComponent {\n  @Input() groupings: CriteriaGrouping[];\n  @Input() subGroups = false;\n  @Input() parent = '';\n  @Input() extraCriterionTitle: string;\n  @Input() renderReviewData = false;\n  @Input() reviewData: Map;\n\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Grouping: {{g.name}}\n      {{parent + ' > ' + g.name}}\n    \n\n\n    \n      \n        \n        \n      \n\n      \n        \n        \n      \n    \n\n\n     ' + g.name\"\n                        [renderReviewData]=\"renderReviewData\"\n                        [reviewData]=\"reviewData\">\n    \n  \n\n\n\n    \n\n    \n                \n                    ./child-grouping.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  @include bg-grey;\n  margin: 0 .2rem;\n}\n\n.child-grouping {\n  margin: 0;\n  height: 100%;\n}\n\n.child-grouping__title {\n  padding: 1rem 1rem .5rem 1rem;\n  font-size: 1.1rem;\n  color: $violet-600;\n}\n\n.child-grouping__path {\n  padding: 0 1rem 1rem 1rem;\n}\n\n.child-grouping__criterion {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-items: center;\n  margin: .5rem;\n}\n\n.child-grouping__criterion--nested {\n  @include bg-grey;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Grouping: {{g.name}}      {{parent + \\' > \\' + g.name}}                                                                         \\' + g.name\"                        [renderReviewData]=\"renderReviewData\"                        [reviewData]=\"reviewData\">      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChildGroupingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationCriterion.html":{"url":"interfaces/ClassificationCriterion.html","title":"interface - ClassificationCriterion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationCriterion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a classification criterion for a to-be-classified software.\nGroupings can also contain other groupings, forming a hierarchy for criteria.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            exampleValues\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Criterion description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exampleValues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exampleValues:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Example values which an instance of this criterion CriterionInstance can store.\na true/false value, numeric values, a list of strings\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique criterion identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Criterion name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationFramework.html":{"url":"interfaces/ClassificationFramework.html","title":"interface - ClassificationFramework","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationFramework\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a generic classification framework, which comprises one or more ClassificationViewCombination.\nDifferent combinations of classification views can be used to flexibly switch between different review representations for a given TechnologyCategory.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            technologyCategory\n                                        \n                                \n                                \n                                        \n                                            viewCombinations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Framework description (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique framework identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Framework name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category of technologies this framework helps to review.\nFunction-as-a-Service platforms\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewCombinations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewCombinations:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of ClassificationViewCombination which organize the representation of views comprising different criteria groupings.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationFrameworkResponse.html":{"url":"interfaces/ClassificationFrameworkResponse.html","title":"interface - ClassificationFrameworkResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationFrameworkResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            technologyCategory\n                                        \n                                \n                                \n                                        \n                                            viewCombinationIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewCombinationIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewCombinationIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationView.html":{"url":"interfaces/ClassificationView.html","title":"interface - ClassificationView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a classification view which comprises one or more CriteriaGrouping.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            groupings\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupings:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of CriteriaGrouping which organize the representation of criteria and optional sub-groupings.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique view identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationViewCombination.html":{"url":"interfaces/ClassificationViewCombination.html","title":"interface - ClassificationViewCombination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationViewCombination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a combination of classifications view which comprises one or more ClassificationViews.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            views\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates whether this combination needs to be used for default UI rendering (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View combination description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique view combination identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View combination name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        views:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of ClassificationView which organize the representation of criteria groupings.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationViewCombinationResponse.html":{"url":"interfaces/ClassificationViewCombinationResponse.html","title":"interface - ClassificationViewCombinationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationViewCombinationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a server response with available combinations of classification views.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            viewIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationViewResponse.html":{"url":"interfaces/ClassificationViewResponse.html","title":"interface - ClassificationViewResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationViewResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a server response with available classification views.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            groupingIds\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupingIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupingIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAppConfigService\n\nAppConfigService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAppConfigService->CoreModule\n\n\n\n\n\nLogoLocatorService\n\nLogoLocatorService\n\nCoreModule -->\n\nLogoLocatorService->CoreModule\n\n\n\n\n\nRandomColorService\n\nRandomColorService\n\nCoreModule -->\n\nRandomColorService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            LogoLocatorService\n                        \n                        \n                            RandomColorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {APP_INITIALIZER, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {EnsureModuleLoadedOnceGuard} from './ensure-module-loaded-once.guard';\nimport {LogoLocatorService} from './services/logo-locator.service';\nimport {RandomColorService} from './services/random-color.service';\nimport {AppConfigService} from './services/app-config.service';\nimport {DataService} from './services/data.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [AppConfigService],\n      useFactory: (appConfigService: AppConfigService) => (() => appConfigService.loadAppConfig())\n    },\n    {\n      provide: DataService,\n      useFactory: (appConfigService: AppConfigService) => (appConfigService.dataServiceFactory()),\n      deps: [AppConfigService]\n    },\n    AppConfigService,\n    LogoLocatorService,\n    RandomColorService\n  ]\n})\nexport class CoreModule extends EnsureModuleLoadedOnceGuard {\n\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    super(parentModule);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaBasedQuery.html":{"url":"interfaces/CriteriaBasedQuery.html","title":"interface - CriteriaBasedQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CriteriaBasedQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a filter-based query mapping unique criteria IDs to respective CriterionFilterValues.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        CriterionFilterValue\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interfaces/filtering.ts:119\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a rendered filter block in the UI which may comprise multiple filters with {@link CriterionFilterConfiguration}.\n */\nexport interface RenderedFilterBlock {\n  /**\n   * Name of the filter block\n   */\n  blockName: string;\n\n  /**\n   * Material Icon name\n   */\n  blockIcon?: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  /**\n   * Unique filter configuration identifier\n   */\n  filterId: string;\n\n  /**\n   * Technology category\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * Configuration name\n   */\n  name: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  /**\n   * Unique criterion identifier\n   */\n  criterionId: string;\n\n  /**\n   * Filter name\n   */\n  displayName: string;\n\n  /**\n   * Filter type {@see CriterionFilterType}\n   */\n  filterType: CriterionFilterType;\n\n  /**\n   * Distinct filter values obtained from the review data\n   */\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n */\nexport enum CriterionFilterType {\n  /**\n   * Indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n   */\n  bool = 'bool',\n\n  /**\n   * Indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n   */\n  lte = 'lte',\n\n  /**\n   * Indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n   */\n  gte = 'gte',\n\n  /**\n   * At least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n   */\n  containsOne = 'containsOne',\n\n  /**\n   * At least 1 arbitrary text value must be contained, translates to a toggle in the UI\n   */\n  containsAny = 'containsAny',\n\n  /**\n   * All specified text values must be contained, translates to a group of checkboxes in the UI\n   */\n  containsAll = 'containsAll',\n\n  /**\n   * All specified text values must not be contained, translates to a group of checkboxes in the UI\n   */\n  excludesAll = 'excludesAll'\n}\n\n/**\n * An interface representing a filter-based query mapping unique criteria IDs to respective [CriterionFilterValues]{@link CriterionFilterValue}.\n */\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\n/**\n * An interface representing a filter value used in a user's query.\n */\nexport interface CriterionFilterValue {\n  /**\n   * Filter type\n   */\n  filterType?: CriterionFilterType;\n\n  /**\n   * Actual value, type depends on the filter type and respective UI elements.\n   *\n   * @example\n   * a list of selected checkboxes resulting in a list of string values   *\n   */\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaGrouping.html":{"url":"interfaces/CriteriaGrouping.html","title":"interface - CriteriaGrouping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CriteriaGrouping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a group of ClassificationCriterion.\nGroupings can also contain other groupings, forming a hierarchy for criteria.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            criteria\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupings\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            locator\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criteria:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A set of ClassificationCriterion which describe a particular aspect of the reviewed technology.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupings:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A set of Sub-groupings which organize the representation of criteria and optional sub-groupings.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique grouping identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        locator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Grouping locator which can be used, e.g., for custom breadcrumbs generation.\nReserved for future use.\n\"licensing\", \"community.github\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Grouping name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaGroupingResponse.html":{"url":"interfaces/CriteriaGroupingResponse.html","title":"interface - CriteriaGroupingResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CriteriaGroupingResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a server response with available criteria groupings.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            criteriaIds\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            locator\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteriaIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criteriaIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        locator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaReview.html":{"url":"interfaces/CriteriaReview.html","title":"interface - CriteriaReview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CriteriaReview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        CriterionInstance\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interfaces/responses.ts:53\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CriterionComponent.html":{"url":"components/CriterionComponent.html","title":"component - CriterionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CriterionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/criterion/criterion.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-criterion\n            \n\n            \n                styleUrls\n                ./criterion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./criterion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                criterion\n                            \n                            \n                                criterionInstance\n                            \n                            \n                                extraTitleText\n                            \n                            \n                                icon\n                            \n                            \n                                reviewMode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/criterion/criterion.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        criterion\n                    \n                \n                \n                    \n                        Type :         ClassificationCriterion\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        criterionInstance\n                    \n                \n                \n                    \n                        Type :         CriterionInstance\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        extraTitleText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text_snippet'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/criterion/criterion.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/criterion/criterion.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        values\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CriterionValue[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/criterion/criterion.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ClassificationCriterion, CriterionInstance, CriterionValue} from '../interfaces/classification';\n\n@Component({\n  selector: 'app-criterion',\n  templateUrl: './criterion.component.html',\n  styleUrls: ['./criterion.component.scss']\n})\nexport class CriterionComponent implements OnInit {\n  @Input() criterion: ClassificationCriterion;\n  @Input() extraTitleText: string;\n  @Input() criterionInstance: CriterionInstance;\n  @Input() reviewMode: boolean;\n  @Input() icon = 'text_snippet';\n  title: string;\n  values: CriterionValue[];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    if (this.extraTitleText) {\n      this.title = this.extraTitleText + this.criterion.name;\n    } else {\n      this.title = this.criterion.name;\n    }\n\n    if (this.criterionInstance) {\n      this.values = Array.from(this.criterionInstance.values);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{icon}}\n      {{title}}\n    \n  \n   {{criterion.description }}\n  \n     Examples: {{criterion.exampleValues | json }} \n  \n\n\n\n  \n    \n      {{icon}}\n      {{title}}: \n    \n\n\n    \n      \n        N/A\n        block\n      \n    \n\n    \n      \n        {{values[0].value | yesNo }}\n        info\n        \n         [{{i + 1}}] \n      \n    \n  \n\n   1\" class=\"criterion__value-list-block\">\n    \n      \n        {{valueIndex + 1 + \". \" + v.value}}\n        info\n        \n        \n          [{{i + 1}}]\n        \n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./criterion.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  width: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: flex-end;\n}\n\n.criterion__heading-line {\n  width: 100%;\n  margin: .5rem 0;\n  display: flex;\n  flex-flow: row nowrap;\n}\n\n.criterion__title-block {\n  display: flex;\n  flex-flow: row nowrap;\n  align-content: center;\n  justify-content: flex-start;\n  flex: 1 1 min-content;\n}\n\n.criterion__value-block {\n  display: flex;\n  flex-flow: row nowrap;\n  align-content: center;\n  justify-content: flex-end;\n  flex: 1 1 min-content;\n}\n\n.criterion__value-list-item {\n  font-size: 1rem;\n  line-height: 1rem;\n  margin: .5rem 0;\n}\n\n.criterion__value-list-item-divider {\n  margin: .5rem 0;\n}\n\n.criterion__value-list-block {\n  margin-top: .5rem;\n  display: flex;\n  flex-flow: column nowrap;\n  width: 90%;\n  align-self: center;\n}\n\n.criterion__heading-line-block-item {\n  align-self: center;\n  font-size: 1rem;\n  line-height: 1rem;\n}\n\n.criterion__icon {\n  font-size: 1.3rem;\n}\n\n.criterion__reference {\n  font-size: 1rem;\n  text-decoration: none;\n  padding-left: .2rem;\n}\n\n.criterion__title {\n  flex: 1;\n}\n\n.child-grouping__criterion-description {\n  flex: 2 0 100%;\n}\n\n.child-grouping__criterion-examples {\n  flex: 2 0 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{icon}}      {{title}}         {{criterion.description }}       Examples: {{criterion.exampleValues | json }}               {{icon}}      {{title}}:                       N/A        block                            {{values[0].value | yesNo }}        info                 [{{i + 1}}]                1\" class=\"criterion__value-list-block\">                  {{valueIndex + 1 + \". \" + v.value}}        info                          [{{i + 1}}]                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CriterionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CriterionFilterComponent.html":{"url":"components/CriterionFilterComponent.html","title":"component - CriterionFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CriterionFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/criterion-filter/criterion-filter.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-criterion-filter\n            \n\n            \n                styleUrls\n                ./criterion-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./criterion-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterElement\n                            \n                            \n                                    Public\n                                FilterType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearFilter\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateQuery\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         CriterionFilterConfiguration\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateQuery\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearFilter\n                        \n                    \n                \n            \n            \n                \nclearFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filterElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl | FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        FilterType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CriterionFilterType\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {CriteriaBasedQuery, CriterionFilterConfiguration, CriterionFilterType} from '../../shared/interfaces/filtering';\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-criterion-filter',\n  templateUrl: './criterion-filter.component.html',\n  styleUrls: ['./criterion-filter.component.scss']\n})\nexport class CriterionFilterComponent implements OnInit {\n  @Input() filter: CriterionFilterConfiguration;\n  @Output() updateQuery = new EventEmitter();\n\n  filterElement: FormControl | FormGroup;\n  public FilterType = CriterionFilterType;\n\n  constructor(private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    if (this.filter.filterType === this.FilterType.bool || this.filter.filterType === this.FilterType.containsAny || this.filter.filterType === this.FilterType.lte) {\n      this.filterElement = this.fb.control(null);\n    } else {\n      const controls = this.fb.array([]);\n      this.filter.filterValues.forEach(v => controls.push(this.fb.control(false)));\n      this.filterElement = this.fb.group({\n        checkboxes: controls,\n        filterType: this.fb.control(this.filter.filterType)\n      });\n    }\n\n    this.filterElement.valueChanges.subscribe(value => {\n      const obj = {};\n      if (this.filter.filterType === this.FilterType.bool || this.filter.filterType === this.FilterType.containsAny) {\n        obj[this.filter.criterionId] = {\n          filterType: this.filter.filterType,\n          value: value as boolean\n        };\n      } else if (this.filter.filterType === this.FilterType.lte) {\n        obj[this.filter.criterionId] = {\n          filterType: this.filter.filterType,\n          value: value as number\n        };\n      } else {\n        const initialValues = this.filter.filterValues as string[];\n        const selectedStrings = initialValues.filter((x, i) => !!this.filterElement.value.checkboxes[i]);\n\n        obj[this.filter.criterionId] = {\n          filterType: this.filterElement.value.filterType,\n          value: selectedStrings\n        };\n        if (selectedStrings.length === 0) {\n          this.filterElement.markAsPristine();\n        }\n      }\n\n      this.updateQuery.emit(obj);\n    });\n\n\n    function isArrayOfStrings(value: any): boolean {\n      return Array.isArray(value) && value.every(item => typeof item === 'string');\n    }\n\n  }\n\n  clearFilter() {\n    this.filterElement.reset();\n    if (\n      this.filter.filterType === this.FilterType.containsAll ||\n      this.filter.filterType === this.FilterType.containsOne ||\n      this.filter.filterType === this.FilterType.excludesAll\n    ) {\n      this.filterElement.get('filterType').setValue(this.FilterType.containsOne);\n    }\n    this.filterElement.markAsPristine();\n  }\n}\n\n    \n\n    \n        \n  \n    {{filter.displayName}}\n  \n  \n    \n      \n        \n          Available\n        \n      \n      \n        \n          Not Available\n        \n      \n    \n  \n\n\n\n  \n    {{filter.displayName}}\n  \n  \n    \n    \n  \n\n\n\n  \n    {{filter.displayName}}\n  \n  \n    \n      \n        \n          {{value}}\n        \n      \n\n      \n        OR\n        AND\n        NOT\n      \n    \n  \n\n\n\n\n  Clear Filter\n\n\n\n    \n\n    \n                \n                    ./criterion-filter.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.filter-block__filter-values {\n  @include list-style-none;\n  padding-left: .2rem;\n}\n\n.criterion-block {\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.criterion-block__filter-name {\n  margin-bottom: 0;\n}\n\n.criterion-block__filter-body {\n  margin-top: .3rem;\n}\n\n.filter-block__filter-type {\n  height: 2.2rem;\n  margin: 0 auto .7rem;\n  align-items: center;\n}\n\n.clear-filter-button {\n  align-self: stretch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{filter.displayName}}                                Available                                      Not Available                          {{filter.displayName}}                    {{filter.displayName}}                                {{value}}                            OR        AND        NOT              Clear Filter'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CriterionFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionFilterConfiguration.html":{"url":"interfaces/CriterionFilterConfiguration.html","title":"interface - CriterionFilterConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CriterionFilterConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a filter configuration for a given ClassificationCriterion.\nThis configuration defines the desired filtering behavior.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            criterionId\n                                        \n                                \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            filterType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filterValues\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criterionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criterionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique criterion identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Filter name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterType:         CriterionFilterType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Filter type {@see CriterionFilterType}\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterValues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterValues:      | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Distinct filter values obtained from the review data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a rendered filter block in the UI which may comprise multiple filters with {@link CriterionFilterConfiguration}.\n */\nexport interface RenderedFilterBlock {\n  /**\n   * Name of the filter block\n   */\n  blockName: string;\n\n  /**\n   * Material Icon name\n   */\n  blockIcon?: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  /**\n   * Unique filter configuration identifier\n   */\n  filterId: string;\n\n  /**\n   * Technology category\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * Configuration name\n   */\n  name: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  /**\n   * Unique criterion identifier\n   */\n  criterionId: string;\n\n  /**\n   * Filter name\n   */\n  displayName: string;\n\n  /**\n   * Filter type {@see CriterionFilterType}\n   */\n  filterType: CriterionFilterType;\n\n  /**\n   * Distinct filter values obtained from the review data\n   */\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n */\nexport enum CriterionFilterType {\n  /**\n   * Indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n   */\n  bool = 'bool',\n\n  /**\n   * Indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n   */\n  lte = 'lte',\n\n  /**\n   * Indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n   */\n  gte = 'gte',\n\n  /**\n   * At least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n   */\n  containsOne = 'containsOne',\n\n  /**\n   * At least 1 arbitrary text value must be contained, translates to a toggle in the UI\n   */\n  containsAny = 'containsAny',\n\n  /**\n   * All specified text values must be contained, translates to a group of checkboxes in the UI\n   */\n  containsAll = 'containsAll',\n\n  /**\n   * All specified text values must not be contained, translates to a group of checkboxes in the UI\n   */\n  excludesAll = 'excludesAll'\n}\n\n/**\n * An interface representing a filter-based query mapping unique criteria IDs to respective [CriterionFilterValues]{@link CriterionFilterValue}.\n */\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\n/**\n * An interface representing a filter value used in a user's query.\n */\nexport interface CriterionFilterValue {\n  /**\n   * Filter type\n   */\n  filterType?: CriterionFilterType;\n\n  /**\n   * Actual value, type depends on the filter type and respective UI elements.\n   *\n   * @example\n   * a list of selected checkboxes resulting in a list of string values   *\n   */\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionFilterValue.html":{"url":"interfaces/CriterionFilterValue.html","title":"interface - CriterionFilterValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CriterionFilterValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a filter value used in a user's query.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            filterType\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterType:         CriterionFilterType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Filter type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     boolean | number | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | number | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Actual value, type depends on the filter type and respective UI elements.\na list of selected checkboxes resulting in a list of string values   *\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a rendered filter block in the UI which may comprise multiple filters with {@link CriterionFilterConfiguration}.\n */\nexport interface RenderedFilterBlock {\n  /**\n   * Name of the filter block\n   */\n  blockName: string;\n\n  /**\n   * Material Icon name\n   */\n  blockIcon?: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  /**\n   * Unique filter configuration identifier\n   */\n  filterId: string;\n\n  /**\n   * Technology category\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * Configuration name\n   */\n  name: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  /**\n   * Unique criterion identifier\n   */\n  criterionId: string;\n\n  /**\n   * Filter name\n   */\n  displayName: string;\n\n  /**\n   * Filter type {@see CriterionFilterType}\n   */\n  filterType: CriterionFilterType;\n\n  /**\n   * Distinct filter values obtained from the review data\n   */\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n */\nexport enum CriterionFilterType {\n  /**\n   * Indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n   */\n  bool = 'bool',\n\n  /**\n   * Indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n   */\n  lte = 'lte',\n\n  /**\n   * Indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n   */\n  gte = 'gte',\n\n  /**\n   * At least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n   */\n  containsOne = 'containsOne',\n\n  /**\n   * At least 1 arbitrary text value must be contained, translates to a toggle in the UI\n   */\n  containsAny = 'containsAny',\n\n  /**\n   * All specified text values must be contained, translates to a group of checkboxes in the UI\n   */\n  containsAll = 'containsAll',\n\n  /**\n   * All specified text values must not be contained, translates to a group of checkboxes in the UI\n   */\n  excludesAll = 'excludesAll'\n}\n\n/**\n * An interface representing a filter-based query mapping unique criteria IDs to respective [CriterionFilterValues]{@link CriterionFilterValue}.\n */\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\n/**\n * An interface representing a filter value used in a user's query.\n */\nexport interface CriterionFilterValue {\n  /**\n   * Filter type\n   */\n  filterType?: CriterionFilterType;\n\n  /**\n   * Actual value, type depends on the filter type and respective UI elements.\n   *\n   * @example\n   * a list of selected checkboxes resulting in a list of string values   *\n   */\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionInstance.html":{"url":"interfaces/CriterionInstance.html","title":"interface - CriterionInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CriterionInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            criterionId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reviewDate\n                                        \n                                \n                                \n                                        \n                                            values\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criterionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criterionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique ClassificationCriterion identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reviewDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A date review was conducted (optional).\nReserved for future use.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of CriterionValue which store the criterion-specific review data for the reviewed technology.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionValue.html":{"url":"interfaces/CriterionValue.html","title":"interface - CriterionValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CriterionValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a generic data value for the given CriterionInstance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            references\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An additional note describing the review value (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A list of references, e.g., to official documentation, confirming the review value (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     string | number | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number | boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A value of primitive type representing criterion-specific review data.\n\"Java\", \"not supported\", 150, true\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataService.html":{"url":"classes/DataService.html","title":"class - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/data.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                getCriteria\n                            \n                            \n                                    Public\n                                    Abstract\n                                getDefaultViewCombinationData\n                            \n                            \n                                    Public\n                                    Abstract\n                                getDossier\n                            \n                            \n                                    Public\n                                    Abstract\n                                getDossiersOfCategory\n                            \n                            \n                                    Public\n                                    Abstract\n                                getFrameworkForCategory\n                            \n                            \n                                    Public\n                                    Abstract\n                                getFrameworkForTechnologyType\n                            \n                            \n                                    Public\n                                    Abstract\n                                getFrameworkGroupingsData\n                            \n                            \n                                    Public\n                                    Abstract\n                                getFrameworks\n                            \n                            \n                                    Public\n                                    Abstract\n                                getGroupings\n                            \n                            \n                                    Public\n                                    Abstract\n                                getInfoResources\n                            \n                            \n                                    Public\n                                    Abstract\n                                getTechnologies\n                            \n                            \n                                    Public\n                                    Abstract\n                                getTechnologiesOfCategory\n                            \n                            \n                                    Public\n                                    Abstract\n                                getTechnology\n                            \n                            \n                                    Public\n                                    Abstract\n                                getTechnologyFilter\n                            \n                            \n                                    Public\n                                    Abstract\n                                getViewCombinations\n                            \n                            \n                                    Public\n                                    Abstract\n                                getViewGroupingsData\n                            \n                            \n                                    Public\n                                    Abstract\n                                getViews\n                            \n                            \n                                    Public\n                                    Abstract\n                                getViewsData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/data.service.ts:18\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCriteria()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getDefaultViewCombinationData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultViewCombinationData(frameworkId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    frameworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getDossier\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDossier(technologyId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    technologyId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getDossiersOfCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDossiersOfCategory(category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getFrameworkForCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFrameworkForCategory(techCategory: TechnologyCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    techCategory\n                                    \n                                                TechnologyCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getFrameworkForTechnologyType\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFrameworkForTechnologyType(category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getFrameworkGroupingsData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFrameworkGroupingsData(frameworkId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    frameworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getFrameworks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFrameworks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getGroupings\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getInfoResources\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInfoResources()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getTechnologies\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTechnologies(withDossier?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    withDossier\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getTechnologiesOfCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTechnologiesOfCategory(category: string, withDossier?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    withDossier\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getTechnology\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTechnology(id: string, withDossier?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    withDossier\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getTechnologyFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTechnologyFilter(category: TechnologyCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                TechnologyCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getViewCombinations\n                        \n                    \n                \n            \n            \n                \n                    \n                    getViewCombinations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getViewGroupingsData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getViewGroupingsData(viewId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getViews\n                        \n                    \n                \n            \n            \n                \n                    \n                    getViews()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getViewsData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getViewsData(viewCombinationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewCombinationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {\n  ClassificationCriterion,\n  ClassificationFramework,\n  ClassificationView,\n  ClassificationViewCombination,\n  CriteriaGrouping\n} from '../../shared/interfaces/classification';\nimport {Technology, TechnologyCategory, TechnologyDossier} from '../../shared/interfaces/technology';\nimport {TechnologyFilterConfiguration} from '../../shared/interfaces/filtering';\nimport {\n  ClassificationViewCombinationResponse,\n  ClassificationViewResponse,\n  CriteriaGroupingResponse\n} from '../../shared/interfaces/responses';\nimport {InfoResourceSection} from '../../shared/interfaces/info';\n\nexport abstract class DataService {\n\n  protected constructor() {\n  }\n\n  public abstract getCriteria(): Observable;\n\n  public abstract getGroupings(): Observable;\n\n  public abstract getViews(): Observable;\n\n  public abstract getViewCombinations(): Observable;\n\n  public abstract getFrameworks(): Observable;\n\n  public abstract getFrameworkForCategory(techCategory: TechnologyCategory): Observable;\n\n  public abstract getFrameworkForTechnologyType(category: string): Observable;\n\n  public abstract getTechnologies(withDossier?: boolean): Observable;\n\n  public abstract getTechnologiesOfCategory(category: string, withDossier?: boolean): Observable;\n\n  public abstract getTechnology(id: string, withDossier?: boolean): Observable;\n\n  public abstract getDossier(technologyId: string): Observable;\n\n  public abstract getDossiersOfCategory(category: string): Observable;\n\n  public abstract getTechnologyFilter(category: TechnologyCategory): Observable;\n\n  public abstract getFrameworkGroupingsData(frameworkId: string): Observable;\n\n  public abstract getDefaultViewCombinationData(frameworkId: string): Observable;\n\n  public abstract getViewsData(viewCombinationId: string): Observable;\n\n  public abstract getViewGroupingsData(viewId: string): Observable;\n\n  public abstract getInfoResources(): Observable;\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnsureModuleLoadedOnceGuard.html":{"url":"classes/EnsureModuleLoadedOnceGuard.html","title":"class - EnsureModuleLoadedOnceGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnsureModuleLoadedOnceGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ensure-module-loaded-once.guard.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(targetModule: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/ensure-module-loaded-once.guard.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        targetModule\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EnsureModuleLoadedOnceGuard {\n  constructor(targetModule: any) {\n    if (targetModule) {\n      throw new Error(`${targetModule.constructor.name} has already been loaded. Import this module in the AppModule only.`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FaqComponent.html":{"url":"components/FaqComponent.html","title":"component - FaqComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FaqComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/faq/faq.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-faq\n            \n\n            \n                styleUrls\n                ./faq.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./faq.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/information/faq/faq.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/faq/faq.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.scss']\n})\nexport class FaqComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        faq works!\n\n    \n\n    \n                \n                    ./faq.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'faq works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FaqComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileBasedDataService.html":{"url":"injectables/FileBasedDataService.html","title":"injectable - FileBasedDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileBasedDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/file-based-data.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DataService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildGroupings\n                            \n                            \n                                getCriteria\n                            \n                            \n                                getDefaultViewCombinationData\n                            \n                            \n                                getDossier\n                            \n                            \n                                getDossiersOfCategory\n                            \n                            \n                                getFrameworkForCategory\n                            \n                            \n                                getFrameworkForTechnologyType\n                            \n                            \n                                getFrameworkGroupingsData\n                            \n                            \n                                getFrameworks\n                            \n                            \n                                getGroupings\n                            \n                            \n                                getInfoResources\n                            \n                            \n                                getTechnologies\n                            \n                            \n                                getTechnologiesOfCategory\n                            \n                            \n                                getTechnology\n                            \n                            \n                                getTechnologyFilter\n                            \n                            \n                                getViewCombinations\n                            \n                            \n                                getViewGroupingsData\n                            \n                            \n                                getViews\n                            \n                            \n                                getViewsData\n                            \n                            \n                                    Private\n                                    Static\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logoLocator: LogoLocatorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/file-based-data.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logoLocator\n                                                  \n                                                        \n                                                                        LogoLocatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        buildGroupings\n                        \n                    \n                \n            \n            \n                \n                    \n                    buildGroupings(data: CriteriaGroupingResponse[], criteria: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/file-based-data.service.ts:413\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            CriteriaGroupingResponse[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    criteria\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CriteriaGrouping[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCriteria\n                        \n                    \n                \n            \n            \n                \ngetCriteria()\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultViewCombinationData\n                        \n                    \n                \n            \n            \n                \ngetDefaultViewCombinationData(frameworkId: string)\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:345\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    frameworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDossier\n                        \n                    \n                \n            \n            \n                \ngetDossier(technologyId: string)\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:269\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    technologyId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDossiersOfCategory\n                        \n                    \n                \n            \n            \n                \ngetDossiersOfCategory(category: string)\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:283\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrameworkForCategory\n                        \n                    \n                \n            \n            \n                \ngetFrameworkForCategory(techCategory: TechnologyCategory)\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:173\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    techCategory\n                                    \n                                                TechnologyCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrameworkForTechnologyType\n                        \n                    \n                \n            \n            \n                \ngetFrameworkForTechnologyType(category: string)\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:203\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrameworkGroupingsData\n                        \n                    \n                \n            \n            \n                \ngetFrameworkGroupingsData(frameworkId: string)\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:333\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    frameworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrameworks\n                        \n                    \n                \n            \n            \n                \ngetFrameworks()\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupings\n                        \n                    \n                \n            \n            \n                \ngetGroupings()\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInfoResources\n                        \n                    \n                \n            \n            \n                \ngetInfoResources()\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:405\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTechnologies\n                        \n                    \n                \n            \n            \n                \ngetTechnologies(withDossier)\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:211\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    withDossier\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTechnologiesOfCategory\n                        \n                    \n                \n            \n            \n                \ngetTechnologiesOfCategory(category: string, withDossier)\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:236\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    withDossier\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTechnology\n                        \n                    \n                \n            \n            \n                \ngetTechnology(id: string, withDossier)\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:246\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    withDossier\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTechnologyFilter\n                        \n                    \n                \n            \n            \n                \ngetTechnologyFilter(category: TechnologyCategory)\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:293\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                TechnologyCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getViewCombinations\n                        \n                    \n                \n            \n            \n                \ngetViewCombinations()\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:108\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getViewGroupingsData\n                        \n                    \n                \n            \n            \n                \ngetViewGroupingsData(viewId: string)\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:386\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getViews\n                        \n                    \n                \n            \n            \n                \ngetViews()\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getViewsData\n                        \n                    \n                \n            \n            \n                \ngetViewsData(viewCombinationId: string)\n                \n            \n\n\n            \n                \n                    Inherited from         DataService\n\n                \n            \n            \n                \n                        Defined in         DataService:367\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewCombinationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(err: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/file-based-data.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {combineLatest, Observable, throwError} from 'rxjs';\nimport {catchError, map, mergeAll, mergeMap, shareReplay, take, toArray} from 'rxjs/operators';\nimport {LogoLocatorService} from './logo-locator.service';\nimport {\n  ClassificationCriterion,\n  ClassificationFramework,\n  ClassificationView,\n  ClassificationViewCombination,\n  CriteriaGrouping\n} from '../../shared/interfaces/classification';\nimport {Technology, TechnologyCategory, TechnologyDossier} from '../../shared/interfaces/technology';\nimport {\n  ClassificationFrameworkResponse,\n  ClassificationViewCombinationResponse,\n  ClassificationViewResponse,\n  CriteriaGroupingResponse,\n  TechnologyDossierResponse\n} from '../../shared/interfaces/responses';\nimport {CriterionFilterType, TechnologyFilterConfiguration} from '../../shared/interfaces/filtering';\nimport {InfoResourceSection} from '../../shared/interfaces/info';\nimport {DataService} from './data.service';\n\nconst criteriaPath = '/assets/data/framework/criteria.json';\nconst criteriaGroupingsPath = '/assets/data/framework/groupings.json';\nconst frameworkViewsPath = '/assets/data/framework/views.json';\nconst frameworkViewCombinationsPath = '/assets/data/framework/view-combinations.json';\nconst frameworksPath = '/assets/data/framework/frameworks.json';\nconst supportedPlatformsPath = '/assets/data/platforms/platforms.json';\nconst dossiersPath = '/assets/data/platforms/';\nconst filterConfigurationsPath = '/assets/data/framework/filters.json';\nconst infoResourcesPath = '/assets/data/info/resources.json';\n\n@Injectable()\nexport class FileBasedDataService extends DataService {\n\n  constructor(private http: HttpClient, private logoLocator: LogoLocatorService) {\n    super();\n  }\n\n  private static handleError(err: any): Observable {\n    let errorMessage: string;\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      errorMessage = `Backend returned code ${err.status}: ${err.body?.error}`;\n    }\n    console.error(err);\n    return throwError(errorMessage);\n  }\n\n  getCriteria(): Observable {\n    return this.http.get(criteriaPath)\n      .pipe(\n        catchError(FileBasedDataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  getGroupings(): Observable {\n    return combineLatest([\n      this.getCriteria(),\n      this.http.get(criteriaGroupingsPath)\n    ]).pipe(\n      map(([criteria, groupings]) => {\n        const criteriaLookup = new Map(criteria.map(c => [c.id, c] as [string, ClassificationCriterion]));\n        return this.buildGroupings(groupings, criteriaLookup);\n      }),\n      catchError(FileBasedDataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViews(): Observable {\n    return combineLatest([\n      this.getGroupings(),\n      this.http.get(frameworkViewsPath)\n    ]).pipe(\n      map(([groupings, views]) => {\n          const groupingsLookup = new Map(groupings.map(c => [c.id, c] as [string, CriteriaGrouping]));\n          const result: ClassificationView[] = [];\n\n          views.forEach(v => {\n            const view: ClassificationView = {\n              id: v.id,\n              name: v.name,\n              description: v.description,\n              groupings: new Set()\n            };\n\n            v.groupingIds.forEach(id => {\n              if (groupingsLookup.has(id)) {\n                view.groupings.add(groupingsLookup.get(id));\n              }\n            });\n            result.push(view);\n          });\n\n          return result;\n        }\n      ),\n      catchError(FileBasedDataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViewCombinations(): Observable {\n    return combineLatest([\n      this.getViews(),\n      this.http.get(frameworkViewCombinationsPath)\n    ]).pipe(\n      map(([views, viewCombinations]) => {\n          const result: ClassificationViewCombination[] = [];\n          viewCombinations.forEach(c => {\n            const combination: ClassificationViewCombination = {\n              id: c.id,\n              name: c.name,\n              description: c.description,\n              default: c.default,\n              views: new Set()\n            };\n\n            c.viewIds.forEach(id => {\n              const view = views.find(v => id === v.id);\n              if (view) {\n                combination.views.add(view);\n              }\n            });\n            result.push(combination);\n          });\n\n          return result;\n        }\n      ),\n      catchError(FileBasedDataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getFrameworks(): Observable {\n    return combineLatest([\n      this.getViewCombinations(),\n      this.http.get(frameworksPath)\n    ]).pipe(\n      map(([combs, frameworks]) => {\n        const result: ClassificationFramework[] = [];\n        frameworks.forEach(f => {\n          const framework: ClassificationFramework = {\n            id: f.id,\n            technologyCategory: f.technologyCategory,\n            name: f.name,\n            description: f.description,\n            viewCombinations: new Set()\n          };\n\n          f.viewCombinationIds.forEach(id => {\n            const viewCombination = combs.find(v => id === v.id);\n            if (viewCombination) {\n              framework.viewCombinations.add(viewCombination);\n            }\n          });\n          result.push(framework);\n        });\n\n        return result;\n      }),\n      shareReplay(1),\n      catchError(FileBasedDataService.handleError)\n    );\n  }\n\n  getFrameworkForCategory(techCategory: TechnologyCategory): Observable {\n    return combineLatest([\n      this.getViewCombinations(),\n      this.http.get(frameworksPath)\n    ]).pipe(\n      map(([combs, frameworks]) => {\n        const fw = frameworks.find(f => f.technologyCategory === techCategory);\n\n        const result: ClassificationFramework = {\n          id: fw.id,\n          technologyCategory: fw.technologyCategory,\n          name: fw.name,\n          description: fw.description,\n          viewCombinations: new Set()\n        };\n\n        fw.viewCombinationIds.forEach(id => {\n          const viewCombination = combs.find(v => id === v.id);\n          if (viewCombination) {\n            result.viewCombinations.add(viewCombination);\n          }\n        });\n\n        return result;\n      }),\n      shareReplay(1),\n      catchError(FileBasedDataService.handleError)\n    );\n  }\n\n  getFrameworkForTechnologyType(category: string): Observable {\n    return this.getFrameworks().pipe(\n      map((f) => f.find(item => item.technologyCategory.toLocaleLowerCase() === category.toLocaleLowerCase())),\n      shareReplay(1),\n      catchError(FileBasedDataService.handleError)\n    );\n  }\n\n  getTechnologies(withDossier = false): Observable {\n    return this.http.get(supportedPlatformsPath)\n      .pipe(\n        map((items) =>\n          items.map(\n            item => {\n              const result: Technology = {\n                ...item,\n                logoLocation: this.logoLocator.getLogoPath(item.logoLocator)\n              };\n              if (withDossier) {\n                this.getDossier(item.id).pipe(take(1)).subscribe({\n                  next: value => value ? result.dossier = value : false,\n                  error: catchError\n                });\n              }\n              return result;\n            }\n          )\n        ),\n        shareReplay(1),\n        catchError(FileBasedDataService.handleError)\n      );\n  }\n\n  getTechnologiesOfCategory(category: string, withDossier = false): Observable {\n    return this.getTechnologies(withDossier).pipe(\n      map((techs) =>\n        techs.filter(t => t.category.toLocaleLowerCase() === category.toLocaleLowerCase())\n      ),\n      shareReplay(1),\n      catchError(FileBasedDataService.handleError)\n    );\n  }\n\n  getTechnology(id: string, withDossier = false): Observable {\n    return combineLatest([\n      this.http.get(supportedPlatformsPath),\n      this.getDossier(id)\n    ]).pipe(\n      map(([items, dossier]) => {\n          const technology: Technology = items.find(item => item.id === id);\n          const result: Technology = {\n            ...technology,\n            logoLocation: this.logoLocator.getLogoPath(technology.logoLocator)\n          };\n          if (withDossier) {\n            result.dossier = dossier;\n          }\n          return result;\n        }\n      ),\n      shareReplay(1),\n      catchError(FileBasedDataService.handleError)\n    );\n\n  }\n\n  getDossier(technologyId: string): Observable {\n    const dossierPath = dossiersPath.concat(technologyId, '.json');\n    return this.http.get(dossierPath)\n      .pipe(\n        map((res) => ({\n          platformId: technologyId,\n          reviewDate: res.reviewDate,\n          reviewedCriteria: new Map(Object.entries(res.reviewedCriteria))\n        } as TechnologyDossier)),\n        catchError(FileBasedDataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  getDossiersOfCategory(category: string): Observable {\n    return this.getTechnologiesOfCategory(category).pipe(\n      mergeMap((techs) => techs),\n      mergeMap((t) => this.getDossier(t.id)),\n      toArray(),\n      shareReplay(1),\n      catchError(FileBasedDataService.handleError)\n    );\n  }\n\n  getTechnologyFilter(category: TechnologyCategory): Observable {\n    return combineLatest([\n      this.http.get(filterConfigurationsPath).pipe(\n        map((conf) => conf.find(c => c.technologyCategory.toLocaleLowerCase() === category.toLocaleLowerCase())),\n      ),\n      this.getDossiersOfCategory(category)\n    ]).pipe(\n      map(([filter, dossiers]) => {\n          const criteriaValues = new Map>();\n          dossiers.forEach(d => {\n\n            d.reviewedCriteria.forEach((criterionInstance, key) => {\n              const distinctValues = new Set();\n              const previous: Set = criteriaValues.get(key);\n\n              criterionInstance.values.forEach(v => distinctValues.add(v.value));\n              if (previous) {\n                criteriaValues.set(key, new Set([...previous, ...distinctValues]));\n              } else {\n                criteriaValues.set(key, distinctValues);\n              }\n            });\n          });\n\n          filter.filters.forEach((f) => {\n            if (f.filterType === CriterionFilterType.lte) {\n              const range: number[] = Array.from(criteriaValues.get(f.criterionId)).sort(((a, b) => a > b ? 1 : -1));\n              f.filterValues = [range[0], range[range.length - 1]];\n            } else if (f.filterType !== CriterionFilterType.bool) {\n              f.filterValues = Array.from(criteriaValues.get(f.criterionId).values());\n            }\n          });\n          return filter;\n        }\n      ),\n      catchError(FileBasedDataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getFrameworkGroupingsData(frameworkId: string): Observable {\n    return this.getDefaultViewCombinationData(frameworkId).pipe(\n      mergeMap((vc) => this.getViewsData(vc.id)),\n      mergeAll(),\n      mergeMap(v => this.getViewGroupingsData(v.id)),\n      mergeAll(),\n      toArray(),\n      catchError(FileBasedDataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getDefaultViewCombinationData(frameworkId: string): Observable {\n    return combineLatest([\n      this.http.get(frameworkViewCombinationsPath),\n      this.http.get(frameworksPath),\n    ]).pipe(\n      map(([vcs, fws]) => {\n        const vcLookup = new Map(vcs.map(vc => [vc.id, vc] as [string, ClassificationViewCombinationResponse]));\n        const framework = fws.find(f => f.id === frameworkId);\n        if (framework) {\n          for (const id of framework.viewCombinationIds) {\n            const temp = vcLookup.get(id);\n            if (temp && temp.default) {\n              return temp;\n            }\n          }\n        }\n      }),\n      catchError(FileBasedDataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViewsData(viewCombinationId: string): Observable {\n    return combineLatest([\n      this.http.get(frameworkViewCombinationsPath),\n      this.http.get(frameworkViewsPath)\n    ]).pipe(\n      map(([combs, views]) => {\n        const viewsLookup = new Map(views.map(v => [v.id, v] as [string, ClassificationViewResponse]));\n        const result = [];\n        const vc = combs.find(c => c.id === viewCombinationId);\n        if (vc) {\n          vc.viewIds.forEach(id => result.push(viewsLookup.get(id)));\n        }\n        return result;\n      }),\n      catchError(FileBasedDataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViewGroupingsData(viewId: string): Observable {\n    return combineLatest([\n      this.http.get(frameworkViewsPath),\n      this.http.get(criteriaGroupingsPath)])\n      .pipe(\n        map(([views, groupings]) => {\n          const groupingsLookup = new Map(groupings.map(g => [g.id, g] as [string, CriteriaGroupingResponse]));\n          const result = [];\n          const view = views.find(v => v.id === viewId);\n          if (view) {\n            view.groupingIds.forEach(id => result.push(groupingsLookup.get(id)));\n          }\n          return result;\n        }),\n        catchError(FileBasedDataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  getInfoResources(): Observable {\n    return this.http.get(infoResourcesPath)\n      .pipe(\n        catchError(FileBasedDataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  private buildGroupings(data: CriteriaGroupingResponse[], criteria: Map): CriteriaGrouping[] {\n    const result: CriteriaGrouping[] = [];\n    const lookup: Map = new Map();\n\n    data.forEach(g => {\n        const relatedCriteria: Set = new Set();\n        if (g.criteriaIds) {\n          g.criteriaIds.forEach(id => criteria.has(id) ? relatedCriteria.add(criteria.get(id)) : false);\n        }\n        lookup.set(g.id, ({\n          id: g.id,\n          name: g.name,\n          locator: g.locator,\n          groupings: new Set(),\n          criteria: relatedCriteria\n        } as CriteriaGrouping));\n      }\n    );\n\n    data.forEach(g => {\n      if (g.parentId) {\n        lookup.get(g.parentId).groupings.add(lookup.get(g.id));\n      } else {\n        result.push(lookup.get(g.id));\n      }\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    © 2021 FaaStener\n    \n      This SOFTWARE PRODUCT is provided \"as is\" and \"with all faults.\"\n      THE PROVIDER makes no representations or warranties of any kind concerning the safety, suitability, lack\n      of viruses, inaccuracies, typographical errors, or other harmful components of this SOFTWARE PRODUCT.\n    \n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                @import \"../../_scss/global/variables\";\n\n.main-grid__footer {\n  height: 100%;\n  background-color: $violet-500;\n  color: #ffffff;\n  display: flex;\n  justify-content: center;\n}\n\n.footer__section {\n  margin: 0;\n  padding: 1em;\n  display: flex;\n  flex-direction: column;\n  justify-items: center;\n  align-items: center;\n}\n\n.footer__heading {\n  padding: 0 .4em .5rem .4rem;\n  border-bottom: .2rem solid $pink-900;\n}\n\n.section_disclaimer {\n  max-width: 57rem;\n}\n\n@media screen and (min-width: 1100px) {\n  .footer__section {\n    max-width: 1200px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      © 2021 FaaStener          This SOFTWARE PRODUCT is provided \"as is\" and \"with all faults.\"      THE PROVIDER makes no representations or warranties of any kind concerning the safety, suitability, lack      of viruses, inaccuracies, typographical errors, or other harmful components of this SOFTWARE PRODUCT.      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameworkComponent.html":{"url":"components/FrameworkComponent.html","title":"component - FrameworkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FrameworkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/framework/framework.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-framework\n            \n\n            \n                styleUrls\n                ./framework.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./framework.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                framework\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/framework/framework.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/framework/framework.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        framework\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                    \n                        \n                                Defined in src/app/information/framework/framework.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ClassificationFramework} from '../../shared/interfaces/classification';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-framework',\n  templateUrl: './framework.component.html',\n  styleUrls: ['./framework.component.scss']\n})\nexport class FrameworkComponent implements OnInit {\n  framework: ClassificationFramework;\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.framework = data.resolvedData;\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./framework.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FrameworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameworkRendererComponent.html":{"url":"components/FrameworkRendererComponent.html","title":"component - FrameworkRendererComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FrameworkRendererComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/framework-renderer/framework-renderer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-framework-renderer\n            \n\n            \n                styleUrls\n                ./framework-renderer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./framework-renderer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedGrouping\n                            \n                            \n                                viewToggles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onGroupingSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraCriterionTitle\n                            \n                            \n                                framework\n                            \n                            \n                                includeFrameworkInfo\n                            \n                            \n                                renderReviewData\n                            \n                            \n                                reviewData\n                            \n                            \n                                selectedViewCombination\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, viewportScroller: ViewportScroller)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewportScroller\n                                                  \n                                                        \n                                                                        ViewportScroller\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraCriterionTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        framework\n                    \n                \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        includeFrameworkInfo\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        renderReviewData\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewData\n                    \n                \n                \n                    \n                        Type :         Map\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedViewCombination\n                    \n                \n                \n                    \n                        Type :         ClassificationViewCombination\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGroupingSelected\n                        \n                    \n                \n            \n            \n                \nonGroupingSelected(viewId: string, grouping: CriteriaGrouping)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    grouping\n                                    \n                                                CriteriaGrouping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        selectedGrouping\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewToggles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ClassificationFramework, ClassificationViewCombination, CriteriaGrouping, CriterionInstance} from '../interfaces/classification';\nimport {ViewportScroller} from '@angular/common';\n\n@Component({\n  selector: 'app-framework-renderer',\n  templateUrl: './framework-renderer.component.html',\n  styleUrls: ['./framework-renderer.component.scss']\n})\nexport class FrameworkRendererComponent implements OnInit {\n  @Input() framework: ClassificationFramework;\n  @Input() includeFrameworkInfo = true;\n  @Input() selectedViewCombination: ClassificationViewCombination;\n  @Input() extraCriterionTitle: string;\n  @Input() renderReviewData = false;\n  @Input() reviewData: Map;\n\n  viewToggles: Map = new Map();\n  selectedGrouping: Map = new Map();\n\n  constructor(private route: ActivatedRoute, private viewportScroller: ViewportScroller) {\n  }\n\n  ngOnInit(): void {\n    if (!this.selectedViewCombination) {\n      for (const vc of this.framework.viewCombinations) {\n        if (vc.default) {\n          this.selectedViewCombination = vc;\n          break;\n        }\n      }\n    }\n    // Initialize default view configuration\n    this.selectedViewCombination.views.forEach(v => this.viewToggles.set(v.id, false));\n  }\n\n  onGroupingSelected(viewId: string, grouping: CriteriaGrouping) {\n    if (this.selectedGrouping.get(viewId)?.id === grouping.id) {\n      this.selectedGrouping.set(viewId, undefined);\n    } else {\n      this.selectedGrouping.set(viewId, grouping);\n      setTimeout(() => {\n        this.viewportScroller.scrollToAnchor(grouping.id);\n      }, 50);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{framework.name}}\n    {{framework.description}}\n  \n\n  \n    \n      \n        {{view.name}}\n        \n        Flat View\n        \n      \n      {{view.description}}\n\n      \n        \n          \n          \n          \n            \n              {{g.name}}\n            \n          \n        \n      \n\n      \n        \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./framework-renderer.component.scss\n                \n                @import \"../../_scss/shared\";\n\n.framework {\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 0 1rem;\n  align-items: center;\n  height: 100%;\n}\n\n.framework__info {\n}\n\n.framework__root-groupings {\n  display: flex;\n  flex-flow: row wrap;\n}\n\n.framework__grouping-details {\n  order: 2;\n  flex: 100% 0;\n  padding-bottom: 1rem;\n}\n\n.framework__root-grouping-card {\n  margin: .2rem;\n  background: $gray-card;\n  cursor: pointer;\n  flex: 1 1 min-content;\n  order: 3;\n\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: $salad-600;\n  }\n}\n\n\n.framework__view {\n  margin: 1.5rem 0;\n  display: flex;\n  flex-flow: column nowrap;\n  width: 100%;\n}\n\n.framework__view-config-row {\n  display: flex;\n  align-items: center;\n}\n\n.framework__view-title {\n  flex: 1 1 auto;\n}\n\n.framework__view-toggle {\n  flex: 0 0 auto;\n  font-size: .8rem;\n}\n\n.framework__root-grouping-card--first {\n  order: 1;\n  background: $salad-600;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{framework.name}}    {{framework.description}}                      {{view.name}}                Flat View                    {{view.description}}                                                                      {{g.name}}                                                                      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FrameworkRendererComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/FrameworkResolver.html":{"url":"guards/FrameworkResolver.html","title":"guard - FrameworkResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    FrameworkResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/information/resolvers/framework-resolver.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, config: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/resolvers/framework-resolver.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resolvers/framework-resolver.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {ClassificationFramework} from '../../shared/interfaces/classification';\nimport {Observable} from 'rxjs';\nimport {DataService} from '../../core/services/data.service';\nimport {AppConfigService} from '../../core/services/app-config.service';\n\n@Injectable()\nexport class FrameworkResolver implements Resolve {\n\n  constructor(private dataService: DataService, private config: AppConfigService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    const defaultCategory = this.config.defaultTechCategory;\n    return this.dataService.getFrameworkForCategory(defaultCategory);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/header/header.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n  \n    \n      menu\n      \n       Home \n       About \n       Platforms \n       Contact Us \n      \n      \n    \n\n    \n      \n         Home \n         About \n         Platforms \n         Contact Us \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  z-index: 10;\n  background: #fff;\n  box-shadow: 0 0 1px rgba(0, 0, 0, .11), 0 1px 2px rgba(0, 0, 0, .25);\n}\n\n.header__toolbar {\n  margin: 0;\n  height: 4em;\n  display: flex;\n  justify-content: center;\n}\n\n.header__menu {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  margin: 0;\n  padding: 0 !important;\n  justify-content: space-around;\n  align-items: center;\n  @include list-style-none;\n}\n\n.header__spacer {\n  display: none;\n  flex-grow: 2;\n}\n\n.header__logo {\n  width: 100%;\n  height: auto;\n  max-width: 5.5rem;\n  padding-top: .5rem;\n  content: url(\"../../../assets/images/logo-h.png\");\n}\n\n.menu__link {\n  display: block !important;\n  height: 100% !important;\n  width: 100% !important;\n  padding-top: 2em !important;\n}\n\n.menu__text {\n  display: none;\n}\n\n.menu__link, .menu__link-icon {\n  @include nav_item;\n  outline: 0;\n}\n\n.menu__link--active {\n  color: $pink-main !important;\n}\n\n@media screen and (min-width: 510px) {\n  .header__toolbar {\n    height: 6em;\n  }\n\n  .menu__icon {\n    display: none;\n  }\n\n  .header__logo {\n    content: url(\"../../../assets/images/logo-v.png\");\n    max-width: 3rem;\n  }\n\n  .menu__text {\n    display: flex;\n    height: 100%;\n    align-items: center;\n  }\n\n  .menu__link-icon {\n    margin-top: .55em !important;\n  }\n}\n\n@media screen and (min-width: 620px) {\n  .menu__link {\n    font-size: .95rem;\n  }\n\n  .header__spacer {\n    display: list-item;\n  }\n\n  .header__logo {\n    margin: 0 1rem 0 2rem;\n  }\n\n  .menu__link-icon {\n    margin-right: 2rem !important;\n  }\n}\n\n@media screen and (min-width: 1100px) {\n  .header__menu {\n    max-width: 1200px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu             Home        About        Platforms        Contact Us                                    Home          About          Platforms          Contact Us             '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                supportedPlatforms$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        supportedPlatforms$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dataService.getTechnologies()\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {DataService} from '../core/services/data.service';\n\n@Component({\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n  supportedPlatforms$ = this.dataService.getTechnologies();\n\n  constructor(private dataService: DataService) {\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                :host {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoResource.html":{"url":"interfaces/InfoResource.html","title":"interface - InfoResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InfoResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/info.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing an information resource related to a specific technology category.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            reference\n                                        \n                                \n                                \n                                        \n                                            resource\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Unique resource identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Resource reference.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resource:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Resource name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\nexport interface InfoResourceSection {\n  /**\n   * Unique info section identifier.\n   */\n  id: string;\n\n  /**\n   * Section title.\n   */\n  title: string;\n\n  /**\n   * Section description.\n   */\n  description: string;\n\n  /**\n   * Technology category.\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * A list of [InfoResources]{@link InfoResource} related to this section.\n   */\n  resources: InfoResource[];\n}\n\n/**\n * An interface representing an information resource related to a specific technology category.\n */\nexport interface InfoResource {\n  /**\n   * Unique resource identifier.\n   */\n  id?: string;\n\n  /**\n   * Resource name.\n   */\n  resource: string;\n\n  /**\n   * Resource reference.\n   */\n  reference: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoResourceSection.html":{"url":"interfaces/InfoResourceSection.html","title":"interface - InfoResourceSection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InfoResourceSection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            resources\n                                        \n                                \n                                \n                                        \n                                            technologyCategory\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Section description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique info section identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resources:         InfoResource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InfoResource[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A list of InfoResources related to this section.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Technology category.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Section title.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\nexport interface InfoResourceSection {\n  /**\n   * Unique info section identifier.\n   */\n  id: string;\n\n  /**\n   * Section title.\n   */\n  title: string;\n\n  /**\n   * Section description.\n   */\n  description: string;\n\n  /**\n   * Technology category.\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * A list of [InfoResources]{@link InfoResource} related to this section.\n   */\n  resources: InfoResource[];\n}\n\n/**\n * An interface representing an information resource related to a specific technology category.\n */\nexport interface InfoResource {\n  /**\n   * Unique resource identifier.\n   */\n  id?: string;\n\n  /**\n   * Resource name.\n   */\n  resource: string;\n\n  /**\n   * Resource reference.\n   */\n  reference: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationComponent.html":{"url":"components/InformationComponent.html","title":"component - InformationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InformationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/information.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-information\n            \n\n            \n                styleUrls\n                ./information.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                framework\n                            \n                            \n                                    Readonly\n                                navLinks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/information/information.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        framework\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                    \n                        \n                                Defined in src/app/information/information.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        navLinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {location: 'framework', label: 'Framework', icon: 'menu_book'},\n    {location: 'resources', label: 'Resources', icon: 'library_books'}\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/information/information.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ClassificationFramework} from '../shared/interfaces/classification';\n\n@Component({\n  selector: 'app-information',\n  templateUrl: './information.component.html',\n  styleUrls: ['./information.component.scss']\n})\nexport class InformationComponent {\n  readonly navLinks = [\n    {location: 'framework', label: 'Framework', icon: 'menu_book'},\n    {location: 'resources', label: 'Resources', icon: 'library_books'}\n  ];\n  framework: ClassificationFramework;\n\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      {{ link.label }}\n    \n  \n\n\n\n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./information.component.scss\n                \n                @import \"../_scss/shared\";\n\n:host {\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.info-tabs {\n  width: 100%;\n  color: white;\n  display: flex;\n}\n\n.info-tabs__links {\n  width: 100%;\n  display: flex;\n  margin: 0 auto;\n}\n\n.info-tabs--link {\n  flex: 1 1 auto;\n  font-size: .8rem;\n}\n\n.info-main {\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  width: 100%;\n}\n\n@media screen and (min-width: 1100px) {\n  .info-tabs__links {\n    max-width: 1200px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ link.label }}              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InformationModule.html":{"url":"modules/InformationModule.html","title":"module - InformationModule","body":"\n                   \n\n\n\n\n    Modules\n    InformationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InformationModule\n\n\n\ncluster_InformationModule_imports\n\n\n\ncluster_InformationModule_declarations\n\n\n\n\nFaqComponent\n\nFaqComponent\n\n\n\nInformationModule\n\nInformationModule\n\nInformationModule -->\n\nFaqComponent->InformationModule\n\n\n\n\n\nFrameworkComponent\n\nFrameworkComponent\n\nInformationModule -->\n\nFrameworkComponent->InformationModule\n\n\n\n\n\nInformationComponent\n\nInformationComponent\n\nInformationModule -->\n\nInformationComponent->InformationModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nInformationModule -->\n\nResourcesComponent->InformationModule\n\n\n\n\n\nInformationRoutingModule\n\nInformationRoutingModule\n\nInformationModule -->\n\nInformationRoutingModule->InformationModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nInformationModule -->\n\nSharedModule->InformationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/information/information.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FaqComponent\n                        \n                        \n                            FrameworkComponent\n                        \n                        \n                            InformationComponent\n                        \n                        \n                            ResourcesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InformationRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ResourcesComponent} from './resources/resources.component';\nimport {FaqComponent} from './faq/faq.component';\nimport {InformationComponent} from './information.component';\nimport {InformationRoutingModule} from './information-routing.module';\nimport {SharedModule} from '../shared/shared.module';\nimport {ResourcesResolver} from './resolvers/resources-resolver.service';\nimport {FrameworkComponent} from './framework/framework.component';\n\n@NgModule({\n  declarations: [ResourcesComponent, FaqComponent, InformationComponent, FrameworkComponent],\n  imports: [CommonModule, SharedModule, InformationRoutingModule],\n  providers: [ResourcesResolver]\n})\nexport class InformationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InformationRoutingModule.html":{"url":"modules/InformationRoutingModule.html","title":"module - InformationRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    InformationRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/information/information-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ResourcesComponent} from './resources/resources.component';\nimport {FaqComponent} from './faq/faq.component';\nimport {InformationComponent} from './information.component';\nimport {FrameworkResolver} from './resolvers/framework-resolver.service';\nimport {ResourcesResolver} from './resolvers/resources-resolver.service';\nimport {FrameworkComponent} from './framework/framework.component';\n\nconst infoRoutes: Routes = [\n  {\n    path: '',\n    component: InformationComponent,\n    children: [\n      {path: '', pathMatch: 'full', redirectTo: 'framework'},\n      {path: 'framework', component: FrameworkComponent, resolve: {resolvedData: FrameworkResolver}},\n      {path: 'resources', component: ResourcesComponent, resolve: {resolvedData: ResourcesResolver}},\n      {path: 'faq', component: FaqComponent}\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(infoRoutes)],\n  exports: [RouterModule]\n})\nexport class InformationRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoLocatorService.html":{"url":"injectables/LogoLocatorService.html","title":"injectable - LogoLocatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogoLocatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/logo-locator.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                platformLogoDir\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLogoPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/logo-locator.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLogoPath\n                        \n                    \n                \n            \n            \n                \ngetLogoPath(logoLocator: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/logo-locator.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logoLocator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        platformLogoDir\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/images/vendor/logo/'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/logo-locator.service.ts:5\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class LogoLocatorService {\n  static readonly platformLogoDir = '/assets/images/vendor/logo/';\n\n  constructor() {\n  }\n\n  getLogoPath(logoLocator: string) {\n    return LogoLocatorService.platformLogoDir\n      .concat(logoLocator)\n      .concat(Extension.png);\n  }\n}\n\nenum Extension {\n  png = '.png',\n  jpg = '.jpg',\n  jpeg = '.jpeg',\n  svg = '.svg'\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatListModule} from '@angular/material/list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatRadioModule} from '@angular/material/radio';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatProgressSpinnerModule,\n    MatListModule,\n    MatCardModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatTreeModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatSliderModule,\n    MatRadioModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatProgressSpinnerModule,\n    MatListModule,\n    MatCardModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatTreeModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatSliderModule,\n    MatRadioModule\n  ]\n})\nexport class MaterialModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/overview/overview.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                ./overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                supportedPlatforms$\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/overview/overview.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        supportedPlatforms$\n                    \n                \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/overview/overview.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Technology} from '../../shared/interfaces/technology';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent {\n  @Input() supportedPlatforms$: Observable;\n\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  Reviewed Platforms\n  \n    Explore the list of reviewed platforms which includes commercial and open source products.\n  \n\n  \n    \n      \n        \n          \n            \n          \n        \n      \n    \n\n    \n      Browse Platforms\n    \n  \n\n\n\n    \n\n    \n                \n                    ./overview.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n  @include bg-grey;\n}\n\n.platforms {\n  width: 95%;\n  margin-bottom: 1.5rem;\n}\n\n.platforms__container {\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n}\n\n\n.platforms__logos {\n  flex: 1 1 auto;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  justify-items: center;\n  grid-gap: .5rem;\n  list-style: none;\n  padding: .5rem;\n}\n\n.platforms__item {\n  margin: .5rem;\n\n  align-self: center;\n}\n\n.platforms__button {\n  width: 50%;\n}\n\n.platforms__logo {\n  max-width: 70%;\n  height: auto;\n  object-fit: cover;\n  vertical-align: bottom;\n  justify-self: center;\n  opacity: .7;\n  transition: opacity .5s ease-out;\n  -moz-transition: opacity .5s ease-out;\n  -webkit-transition: opacity .5s ease-out;\n  -o-transition: opacity .5s ease-out;\n\n  &:hover {\n    opacity: 1;\n  }\n}\n\n@media screen and (min-width: 550px) {\n  .platforms__logos {\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n  }\n\n  .platforms__button {\n    width: 35%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Reviewed Platforms      Explore the list of reviewed platforms which includes commercial and open source products.                                                                                  Browse Platforms      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/page-not-found/page-not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/page-not-found/page-not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/page-not-found/page-not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  Title\n\n\nPage not found\n\n\n\n    \n\n    \n                \n                    ./page-not-found.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    TitlePage not found'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RandomColorService.html":{"url":"injectables/RandomColorService.html","title":"injectable - RandomColorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RandomColorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/random-color.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRandomColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/random-color.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomColor\n                        \n                    \n                \n            \n            \n                \ngetRandomColor(hue?, luminosity?, count?, seed?, format?, alpha?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/random-color.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hue\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    luminosity\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    count\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    seed\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    format\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    alpha\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\ndeclare let randomColor: any;\n\n@Injectable()\nexport class RandomColorService {\n\n  constructor() {\n  }\n\n  getRandomColor(hue?, luminosity?, count?, seed?, format?, alpha?) {\n    return randomColor({\n      hue, luminosity, count, seed, format, alpha\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RenderedFilterBlock.html":{"url":"interfaces/RenderedFilterBlock.html","title":"interface - RenderedFilterBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RenderedFilterBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a rendered filter block in the UI which may comprise multiple filters with CriterionFilterConfiguration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            blockIcon\n                                        \n                                \n                                \n                                        \n                                            blockName\n                                        \n                                \n                                \n                                        \n                                            filters\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockIcon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Material Icon name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the filter block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filters:         CriterionFilterConfiguration[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterConfiguration[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of filters to be rendered in this block defined using CriterionFilterConfiguration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a rendered filter block in the UI which may comprise multiple filters with {@link CriterionFilterConfiguration}.\n */\nexport interface RenderedFilterBlock {\n  /**\n   * Name of the filter block\n   */\n  blockName: string;\n\n  /**\n   * Material Icon name\n   */\n  blockIcon?: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  /**\n   * Unique filter configuration identifier\n   */\n  filterId: string;\n\n  /**\n   * Technology category\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * Configuration name\n   */\n  name: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  /**\n   * Unique criterion identifier\n   */\n  criterionId: string;\n\n  /**\n   * Filter name\n   */\n  displayName: string;\n\n  /**\n   * Filter type {@see CriterionFilterType}\n   */\n  filterType: CriterionFilterType;\n\n  /**\n   * Distinct filter values obtained from the review data\n   */\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n */\nexport enum CriterionFilterType {\n  /**\n   * Indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n   */\n  bool = 'bool',\n\n  /**\n   * Indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n   */\n  lte = 'lte',\n\n  /**\n   * Indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n   */\n  gte = 'gte',\n\n  /**\n   * At least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n   */\n  containsOne = 'containsOne',\n\n  /**\n   * At least 1 arbitrary text value must be contained, translates to a toggle in the UI\n   */\n  containsAny = 'containsAny',\n\n  /**\n   * All specified text values must be contained, translates to a group of checkboxes in the UI\n   */\n  containsAll = 'containsAll',\n\n  /**\n   * All specified text values must not be contained, translates to a group of checkboxes in the UI\n   */\n  excludesAll = 'excludesAll'\n}\n\n/**\n * An interface representing a filter-based query mapping unique criteria IDs to respective [CriterionFilterValues]{@link CriterionFilterValue}.\n */\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\n/**\n * An interface representing a filter value used in a user's query.\n */\nexport interface CriterionFilterValue {\n  /**\n   * Filter type\n   */\n  filterType?: CriterionFilterType;\n\n  /**\n   * Actual value, type depends on the filter type and respective UI elements.\n   *\n   * @example\n   * a list of selected checkboxes resulting in a list of string values   *\n   */\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourcesComponent.html":{"url":"components/ResourcesComponent.html","title":"component - ResourcesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResourcesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/resources/resources.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-resources\n            \n\n            \n                styleUrls\n                ./resources.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./resources.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resources\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/resources/resources.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resources/resources.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resources/resources.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        resources\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InfoResourceSection[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/information/resources/resources.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/information/resources/resources.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {InfoResourceSection} from '../../shared/interfaces/info';\n\n@Component({\n  selector: 'app-resources',\n  templateUrl: './resources.component.html',\n  styleUrls: ['./resources.component.scss']\n})\nexport class ResourcesComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n  resources: InfoResourceSection[];\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.route.data.subscribe(data => {\n      this.resources = data.resolvedData;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    {{section.title}}\n  \n  \n    {{section.description}}\n  \n\n  \n    [{{i + 1}}]\n    \n      {{res.resource}}\n      (reference)\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./resources.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{section.title}}        {{section.description}}        [{{i + 1}}]          {{res.resource}}      (reference)      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResourcesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ResourcesResolver.html":{"url":"guards/ResourcesResolver.html","title":"guard - ResourcesResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ResourcesResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/information/resolvers/resources-resolver.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/resolvers/resources-resolver.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resolvers/resources-resolver.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {DataService} from '../../core/services/data.service';\nimport {InfoResourceSection} from '../../shared/interfaces/info';\n\n@Injectable()\nexport class ResourcesResolver implements Resolve {\n\n  constructor(private dataService: DataService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    return this.dataService.getInfoResources();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SetToArrayPipe.html":{"url":"pipes/SetToArrayPipe.html","title":"pipe - SetToArrayPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SetToArrayPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/set-to-array.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        setToArray\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: Set)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/set-to-array.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'setToArray'\n})\nexport class SetToArrayPipe implements PipeTransform {\n  transform(value: Set) {\n    return Array.from(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\n\nBottomNavComponent\n\nBottomNavComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nBottomNavComponent->SharedModule\n\n\n\n\n\nChildGroupingComponent\n\nChildGroupingComponent\n\nSharedModule -->\n\nChildGroupingComponent->SharedModule\n\n\n\n\n\nCriterionComponent\n\nCriterionComponent\n\nSharedModule -->\n\nCriterionComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nFrameworkRendererComponent\n\nFrameworkRendererComponent\n\nSharedModule -->\n\nFrameworkRendererComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nSharedModule -->\n\nPageNotFoundComponent->SharedModule\n\n\n\n\n\nSetToArrayPipe\n\nSetToArrayPipe\n\nSharedModule -->\n\nSetToArrayPipe->SharedModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nSharedModule -->\n\nTruncatePipe->SharedModule\n\n\n\n\n\nYesNoPipe\n\nYesNoPipe\n\nSharedModule -->\n\nYesNoPipe->SharedModule\n\n\n\n\n\nBottomNavComponent \n\nBottomNavComponent \n\nBottomNavComponent  -->\n\nSharedModule->BottomNavComponent \n\n\n\n\n\nChildGroupingComponent \n\nChildGroupingComponent \n\nChildGroupingComponent  -->\n\nSharedModule->ChildGroupingComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nFrameworkRendererComponent \n\nFrameworkRendererComponent \n\nFrameworkRendererComponent  -->\n\nSharedModule->FrameworkRendererComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nPageNotFoundComponent \n\nPageNotFoundComponent \n\nPageNotFoundComponent  -->\n\nSharedModule->PageNotFoundComponent \n\n\n\n\n\nSetToArrayPipe \n\nSetToArrayPipe \n\nSetToArrayPipe  -->\n\nSharedModule->SetToArrayPipe \n\n\n\n\n\nTruncatePipe \n\nTruncatePipe \n\nTruncatePipe  -->\n\nSharedModule->TruncatePipe \n\n\n\n\n\nYesNoPipe \n\nYesNoPipe \n\nYesNoPipe  -->\n\nSharedModule->YesNoPipe \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BottomNavComponent\n                        \n                        \n                            ChildGroupingComponent\n                        \n                        \n                            CriterionComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            FrameworkRendererComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            SetToArrayPipe\n                        \n                        \n                            TruncatePipe\n                        \n                        \n                            YesNoPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BottomNavComponent\n                        \n                        \n                            ChildGroupingComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            FrameworkRendererComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            SetToArrayPipe\n                        \n                        \n                            TruncatePipe\n                        \n                        \n                            YesNoPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MaterialModule} from './material.module';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\nimport {RouterModule} from '@angular/router';\nimport {TruncatePipe} from './pipes/truncate.pipe';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ChildGroupingComponent} from './child-grouping/child-grouping.component';\nimport {SetToArrayPipe} from './pipes/set-to-array.pipe';\nimport {CriterionComponent} from './criterion/criterion.component';\nimport {HeaderComponent} from './header/header.component';\nimport {FooterComponent} from './footer/footer.component';\nimport {FrameworkResolver} from '../information/resolvers/framework-resolver.service';\nimport {FrameworkRendererComponent} from './framework-renderer/framework-renderer.component';\nimport {BottomNavComponent} from './bottom-nav/bottom-nav.component';\nimport {YesNoPipe} from './pipes/yes-no.pipe';\n\n@NgModule({\n  declarations: [\n    PageNotFoundComponent,\n    TruncatePipe,\n    SetToArrayPipe,\n    YesNoPipe,\n    ChildGroupingComponent,\n    CriterionComponent,\n    HeaderComponent,\n    FooterComponent,\n    FrameworkRendererComponent,\n    BottomNavComponent\n  ],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MaterialModule, RouterModule],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    PageNotFoundComponent,\n    TruncatePipe,\n    SetToArrayPipe,\n    YesNoPipe,\n    ChildGroupingComponent,\n    HeaderComponent,\n    FooterComponent,\n    FrameworkRendererComponent,\n    BottomNavComponent\n  ],\n  providers: [FrameworkResolver]\n})\nexport class SharedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDataSource.html":{"url":"interfaces/SimpleDataSource.html","title":"interface - SimpleDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SimpleDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datasource.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    DataSource\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        connect\n                                    \n                                \n                                \n                                    \n                                        disconnect\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, combineLatest, Observable, of} from 'rxjs';\nimport {map, shareReplay, switchMap} from 'rxjs/operators';\nimport {Technology} from './interfaces/technology';\nimport {PageEvent} from '@angular/material/paginator';\nimport {CriteriaBasedQuery, CriterionFilterType, CriterionFilterValue} from './interfaces/filtering';\nimport {CriterionInstance} from './interfaces/classification';\n\nexport interface SimpleDataSource extends DataSource {\n  connect(): Observable;\n\n  disconnect(): void;\n}\n\nexport interface Sort {\n  property: keyof T;\n  order: 'asc' | 'desc';\n}\n\nexport class TechnologyDataSource implements SimpleDataSource {\n  private readonly data: Technology[];\n  private readonly pageNumber = new BehaviorSubject(0);\n  private readonly sort: BehaviorSubject>;\n  private readonly criteriaBasedQuery: BehaviorSubject;\n  private readonly nameBasedQuery: BehaviorSubject;\n\n  public isPaginated = true;\n  public totalInputSize: number;\n  public currentIndex = 0;\n  public pageNumber$ = this.pageNumber.asObservable();\n  public filteredData$: Observable;\n  public paginatedData$: Observable;\n\n  constructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, public pageSize = 10) {\n    this.data = data;\n    this.sort = new BehaviorSubject>(initialSort);\n    this.criteriaBasedQuery = new BehaviorSubject(initialQuery);\n    this.nameBasedQuery = new BehaviorSubject(undefined);\n\n    this.filteredData$ = combineLatest([this.criteriaBasedQuery, this.nameBasedQuery, this.sort]).pipe(\n      switchMap(([criteriaQuery, nameQuery, sort]) => {\n          const result = this.processData(this.data, criteriaQuery, nameQuery, sort);\n          this.totalInputSize = result.length;\n          return of(result);\n        }\n      ),\n      shareReplay(1)\n    );\n\n    this.paginatedData$ = combineLatest([this.filteredData$, this.pageNumber$]).pipe(\n      map(([data, pageNumber]) => {\n        const startIndex = pageNumber * this.pageSize;\n        let endIndex = startIndex + this.pageSize;\n        if (endIndex > data.length) {\n          endIndex = data.length;\n        }\n        return data.slice(startIndex, endIndex);\n      })\n    );\n  }\n\n  sortBy(sort: Partial>): void {\n    const lastSort = this.sort.getValue();\n    const nextSort = {...lastSort, ...sort};\n    this.sort.next(nextSort);\n  }\n\n  queryByCriteria(query: CriteriaBasedQuery): void {\n    const lastQuery = this.criteriaBasedQuery.getValue();\n    const nextQuery = {...lastQuery, ...query};\n    console.log('new query:');\n    this.pruneQuery(nextQuery);\n    console.log(nextQuery);\n    this.criteriaBasedQuery.next(nextQuery);\n  }\n\n  queryByName(query: string): void {\n    this.nameBasedQuery.next(query);\n  }\n\n  fetch(event: PageEvent): void {\n    this.pageSize = event.pageSize;\n    this.pageNumber.next(event.pageIndex);\n    this.currentIndex = event.pageIndex;\n  }\n\n  togglePagination(): void {\n    this.isPaginated = !this.isPaginated;\n  }\n\n  connect(): Observable {\n    if (this.isPaginated) {\n      return this.paginatedData$;\n    }\n    return this.filteredData$;\n  }\n\n  disconnect(): void {\n  }\n\n  private processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort): Technology[] {\n    let result: Technology[] = data;\n    if (nameQuery) {\n      result = data.filter(platform => nameQuery ? platform.platformName.toLocaleLowerCase().includes(nameQuery) : true);\n    }\n\n    if (criteriaQuery && Object.keys(criteriaQuery).length !== 0) {\n      Object.keys(criteriaQuery).forEach(key => {\n        if (TechnologyDataSource.canFilter(criteriaQuery[key])) {\n          result = result.filter(t => {\n            let filteringResult = false;\n            if (t.dossier.reviewedCriteria.has(key)) {\n              filteringResult = this.getFilteringResult(criteriaQuery[key], t.dossier.reviewedCriteria.get(key));\n            }\n            return filteringResult;\n          });\n        }\n      });\n      console.log('found: ' + result.length);\n    }\n\n    if (sort && sort.order === 'asc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? 1 : -1);\n    } else if (sort && sort.order === 'desc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? -1 : 1);\n    }\n\n    return result;\n  }\n\n  private static canFilter(filterValue: CriterionFilterValue): boolean {\n    if (filterValue.filterType && filterValue.filterType === CriterionFilterType.lte) {\n      return typeof filterValue.value === 'number';\n    } else if (filterValue.filterType && filterValue.filterType === CriterionFilterType.containsAll ||\n      filterValue.filterType === CriterionFilterType.containsOne ||\n      filterValue.filterType === CriterionFilterType.excludesAll) {\n      const v = filterValue.value as string[];\n      return v && v.length > 0;\n    } else if (filterValue.filterType === CriterionFilterType.bool || filterValue.filterType === CriterionFilterType.containsAny) {\n      return typeof filterValue.value === 'boolean';\n    }\n\n    return false;\n  }\n\n  private pruneQuery(nextQuery: { [p: string]: CriterionFilterValue }) {\n    const keysToDelete = [];\n    Object.keys(nextQuery).forEach(key => {\n        if (nextQuery[key].filterType === null) {\n          keysToDelete.push(key);\n        } else if (nextQuery[key].filterType === CriterionFilterType.bool ||\n          nextQuery[key].filterType === CriterionFilterType.containsAny ||\n          nextQuery[key].filterType === CriterionFilterType.lte) {\n          if (nextQuery[key].value === null) {\n            keysToDelete.push(key);\n          }\n        } else if (nextQuery[key].filterType === CriterionFilterType.containsOne ||\n          nextQuery[key].filterType === CriterionFilterType.containsAll ||\n          nextQuery[key].filterType === CriterionFilterType.excludesAll) {\n          const valueToCheck = nextQuery[key].value as string[];\n          if (valueToCheck.length === 0) {\n            keysToDelete.push(key);\n          }\n        }\n      }\n    );\n    keysToDelete.forEach(key => delete nextQuery[key]);\n  }\n\n  private getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    if (filterValue.filterType === CriterionFilterType.containsAny) {\n      return TechnologyDataSource.containsAny(filterValue, reviewedCriterion);\n    }\n\n    for (const reviewValue of reviewedCriterion.values) {\n      if (filterValue.filterType === CriterionFilterType.lte) {\n        return reviewedCriterion.values[0].value  allValues.push(v.value));\n        const target = Array.from(filterValue.value as string[]);\n\n        if (filterValue.filterType === CriterionFilterType.containsAll) {\n          return target.every(v => allValues.includes(v));\n        } else if (filterValue.filterType === CriterionFilterType.excludesAll) {\n          return target.every(v => !allValues.includes(v));\n        }\n      }\n    }\n  }\n\n  private static containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    const chosenValue = filterValue.value as boolean;\n    if (chosenValue) {\n      return Array.from(reviewedCriterion.values).length > 0;\n    } else {\n      return Array.from(reviewedCriterion.values).length === 0;\n    }\n  }\n\n  private static containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    const chosenValues = filterValue.value as string[];\n    if (chosenValues && chosenValues.length > 0) {\n      for (const entry of reviewedCriterion.values) {\n        const value = entry.value as string;\n        if (chosenValues.indexOf(value) !== -1) {\n          return true;\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sort.html":{"url":"interfaces/Sort.html","title":"interface - Sort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Sort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datasource.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            order\n                                        \n                                \n                                \n                                        \n                                            property\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:     \"asc\" | \"desc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"asc\" | \"desc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, combineLatest, Observable, of} from 'rxjs';\nimport {map, shareReplay, switchMap} from 'rxjs/operators';\nimport {Technology} from './interfaces/technology';\nimport {PageEvent} from '@angular/material/paginator';\nimport {CriteriaBasedQuery, CriterionFilterType, CriterionFilterValue} from './interfaces/filtering';\nimport {CriterionInstance} from './interfaces/classification';\n\nexport interface SimpleDataSource extends DataSource {\n  connect(): Observable;\n\n  disconnect(): void;\n}\n\nexport interface Sort {\n  property: keyof T;\n  order: 'asc' | 'desc';\n}\n\nexport class TechnologyDataSource implements SimpleDataSource {\n  private readonly data: Technology[];\n  private readonly pageNumber = new BehaviorSubject(0);\n  private readonly sort: BehaviorSubject>;\n  private readonly criteriaBasedQuery: BehaviorSubject;\n  private readonly nameBasedQuery: BehaviorSubject;\n\n  public isPaginated = true;\n  public totalInputSize: number;\n  public currentIndex = 0;\n  public pageNumber$ = this.pageNumber.asObservable();\n  public filteredData$: Observable;\n  public paginatedData$: Observable;\n\n  constructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, public pageSize = 10) {\n    this.data = data;\n    this.sort = new BehaviorSubject>(initialSort);\n    this.criteriaBasedQuery = new BehaviorSubject(initialQuery);\n    this.nameBasedQuery = new BehaviorSubject(undefined);\n\n    this.filteredData$ = combineLatest([this.criteriaBasedQuery, this.nameBasedQuery, this.sort]).pipe(\n      switchMap(([criteriaQuery, nameQuery, sort]) => {\n          const result = this.processData(this.data, criteriaQuery, nameQuery, sort);\n          this.totalInputSize = result.length;\n          return of(result);\n        }\n      ),\n      shareReplay(1)\n    );\n\n    this.paginatedData$ = combineLatest([this.filteredData$, this.pageNumber$]).pipe(\n      map(([data, pageNumber]) => {\n        const startIndex = pageNumber * this.pageSize;\n        let endIndex = startIndex + this.pageSize;\n        if (endIndex > data.length) {\n          endIndex = data.length;\n        }\n        return data.slice(startIndex, endIndex);\n      })\n    );\n  }\n\n  sortBy(sort: Partial>): void {\n    const lastSort = this.sort.getValue();\n    const nextSort = {...lastSort, ...sort};\n    this.sort.next(nextSort);\n  }\n\n  queryByCriteria(query: CriteriaBasedQuery): void {\n    const lastQuery = this.criteriaBasedQuery.getValue();\n    const nextQuery = {...lastQuery, ...query};\n    console.log('new query:');\n    this.pruneQuery(nextQuery);\n    console.log(nextQuery);\n    this.criteriaBasedQuery.next(nextQuery);\n  }\n\n  queryByName(query: string): void {\n    this.nameBasedQuery.next(query);\n  }\n\n  fetch(event: PageEvent): void {\n    this.pageSize = event.pageSize;\n    this.pageNumber.next(event.pageIndex);\n    this.currentIndex = event.pageIndex;\n  }\n\n  togglePagination(): void {\n    this.isPaginated = !this.isPaginated;\n  }\n\n  connect(): Observable {\n    if (this.isPaginated) {\n      return this.paginatedData$;\n    }\n    return this.filteredData$;\n  }\n\n  disconnect(): void {\n  }\n\n  private processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort): Technology[] {\n    let result: Technology[] = data;\n    if (nameQuery) {\n      result = data.filter(platform => nameQuery ? platform.platformName.toLocaleLowerCase().includes(nameQuery) : true);\n    }\n\n    if (criteriaQuery && Object.keys(criteriaQuery).length !== 0) {\n      Object.keys(criteriaQuery).forEach(key => {\n        if (TechnologyDataSource.canFilter(criteriaQuery[key])) {\n          result = result.filter(t => {\n            let filteringResult = false;\n            if (t.dossier.reviewedCriteria.has(key)) {\n              filteringResult = this.getFilteringResult(criteriaQuery[key], t.dossier.reviewedCriteria.get(key));\n            }\n            return filteringResult;\n          });\n        }\n      });\n      console.log('found: ' + result.length);\n    }\n\n    if (sort && sort.order === 'asc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? 1 : -1);\n    } else if (sort && sort.order === 'desc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? -1 : 1);\n    }\n\n    return result;\n  }\n\n  private static canFilter(filterValue: CriterionFilterValue): boolean {\n    if (filterValue.filterType && filterValue.filterType === CriterionFilterType.lte) {\n      return typeof filterValue.value === 'number';\n    } else if (filterValue.filterType && filterValue.filterType === CriterionFilterType.containsAll ||\n      filterValue.filterType === CriterionFilterType.containsOne ||\n      filterValue.filterType === CriterionFilterType.excludesAll) {\n      const v = filterValue.value as string[];\n      return v && v.length > 0;\n    } else if (filterValue.filterType === CriterionFilterType.bool || filterValue.filterType === CriterionFilterType.containsAny) {\n      return typeof filterValue.value === 'boolean';\n    }\n\n    return false;\n  }\n\n  private pruneQuery(nextQuery: { [p: string]: CriterionFilterValue }) {\n    const keysToDelete = [];\n    Object.keys(nextQuery).forEach(key => {\n        if (nextQuery[key].filterType === null) {\n          keysToDelete.push(key);\n        } else if (nextQuery[key].filterType === CriterionFilterType.bool ||\n          nextQuery[key].filterType === CriterionFilterType.containsAny ||\n          nextQuery[key].filterType === CriterionFilterType.lte) {\n          if (nextQuery[key].value === null) {\n            keysToDelete.push(key);\n          }\n        } else if (nextQuery[key].filterType === CriterionFilterType.containsOne ||\n          nextQuery[key].filterType === CriterionFilterType.containsAll ||\n          nextQuery[key].filterType === CriterionFilterType.excludesAll) {\n          const valueToCheck = nextQuery[key].value as string[];\n          if (valueToCheck.length === 0) {\n            keysToDelete.push(key);\n          }\n        }\n      }\n    );\n    keysToDelete.forEach(key => delete nextQuery[key]);\n  }\n\n  private getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    if (filterValue.filterType === CriterionFilterType.containsAny) {\n      return TechnologyDataSource.containsAny(filterValue, reviewedCriterion);\n    }\n\n    for (const reviewValue of reviewedCriterion.values) {\n      if (filterValue.filterType === CriterionFilterType.lte) {\n        return reviewedCriterion.values[0].value  allValues.push(v.value));\n        const target = Array.from(filterValue.value as string[]);\n\n        if (filterValue.filterType === CriterionFilterType.containsAll) {\n          return target.every(v => allValues.includes(v));\n        } else if (filterValue.filterType === CriterionFilterType.excludesAll) {\n          return target.every(v => !allValues.includes(v));\n        }\n      }\n    }\n  }\n\n  private static containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    const chosenValue = filterValue.value as boolean;\n    if (chosenValue) {\n      return Array.from(reviewedCriterion.values).length > 0;\n    } else {\n      return Array.from(reviewedCriterion.values).length === 0;\n    }\n  }\n\n  private static containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    const chosenValues = filterValue.value as string[];\n    if (chosenValues && chosenValues.length > 0) {\n      for (const entry of reviewedCriterion.values) {\n        const value = entry.value as string;\n        if (chosenValues.indexOf(value) !== -1) {\n          return true;\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableColumn.html":{"url":"classes/TableColumn.html","title":"class - TableColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/technologies/technology-table/technology-table.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                colSpan\n                            \n                            \n                                displayName\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        colSpan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {TechnologyDataSource} from '../../shared/datasource';\nimport {ClassificationFramework, CriteriaGrouping} from '../../shared/interfaces/classification';\nimport {TechnologyFilterConfiguration} from '../../shared/interfaces/filtering';\nimport {MatSidenav} from '@angular/material/sidenav';\n\nexport class TableColumn {\n  id: string;\n  displayName: string;\n  colSpan?: number;\n  color?: string;\n}\n\n@Component({\n  selector: 'app-technology-table',\n  templateUrl: './technology-table.component.html',\n  styleUrls: ['./technology-table.component.scss']\n})\nexport class TechnologyTableComponent implements OnInit {\n  @Input() dataSource: TechnologyDataSource;\n  @Input() framework: ClassificationFramework;\n  @Input() filterConfiguration: TechnologyFilterConfiguration;\n  @Input() sidenav: MatSidenav;\n\n  @ViewChild('content') tableContainer: ElementRef;\n\n  criteriaColumns: TableColumn[] = [];\n  groupingColumns: TableColumn[] = [];\n  groupingColumnIds: string[] = ['techNameHeader'];\n\n  columnsToDisplay = ['techName'];\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n    this.framework.viewCombinations.forEach(viewComb => {\n      if (viewComb.default) {\n        viewComb.views.forEach(view => {\n          const groupingColumns: TableColumn[] = [];\n          Array.from(view.groupings).forEach((grouping, index) => {\n            const color = index % 2 === 0 ? '#ccc' : 'white';\n            this.generateGroupingColumns(grouping, groupingColumns, color);\n          });\n          if (groupingColumns.length > 0) {\n            this.groupingColumns.push(...groupingColumns);\n            let viewColspan = 0;\n            groupingColumns.forEach(c => {\n              if (c.colSpan) {\n                viewColspan += c.colSpan;\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  private generateGroupingColumns(grouping: CriteriaGrouping, groupingColumns: TableColumn[], color: string, parentGroupingName?: string) {\n    let counter = 0;\n    grouping.criteria.forEach((c, index) => {\n      this.criteriaColumns.push({\n        id: c.id,\n        displayName: c.name,\n        color\n      } as TableColumn);\n      this.columnsToDisplay.push(c.id);\n      counter += 1;\n    });\n    if (counter > 0) {\n      const name = parentGroupingName ? parentGroupingName.concat('.').concat(grouping.name) : grouping.name;\n      groupingColumns.push({\n        id: grouping.id,\n        displayName: name,\n        color,\n        colSpan: counter\n      } as TableColumn);\n      this.groupingColumnIds.push(grouping.id);\n    }\n    if (grouping.groupings) {\n      grouping.groupings.forEach(g => this.generateGroupingColumns(g, groupingColumns, color, grouping.name));\n    }\n  }\n\n  scrollLeft() {\n    this.tableContainer.nativeElement.scrollLeft -= 150;\n  }\n\n  scrollRight() {\n    this.tableContainer.nativeElement.scrollLeft += 150;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologiesComponent.html":{"url":"components/TechnologiesComponent.html","title":"component - TechnologiesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TechnologiesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technologies.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technologies\n            \n\n            \n                styleUrls\n                ./technologies.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technologies.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                browsingMode\n                            \n                            \n                                dataSource\n                            \n                            \n                                filterConfiguration\n                            \n                            \n                                framework\n                            \n                            \n                                groupings\n                            \n                            \n                                mobileQuery\n                            \n                            \n                                renderedFilter\n                            \n                            \n                                sidenav\n                            \n                            \n                                subscriptions\n                            \n                            \n                                technologies\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractGroupings\n                            \n                            \n                                    Private\n                                generateFilterStructure\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onQueryUpdate\n                            \n                            \n                                    Private\n                                populateRenderBlocks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, route: ActivatedRoute, fb: FormBuilder, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technologies.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                    MediaMatcher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        extractGroupings\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractGroupings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateFilterStructure\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateFilterStructure()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onQueryUpdate\n                        \n                    \n                \n            \n            \n                \nonQueryUpdate($event: CriteriaBasedQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                CriteriaBasedQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        populateRenderBlocks\n                        \n                    \n                \n            \n            \n                \n                    \n                    populateRenderBlocks(grouping: CriteriaGrouping, filterLookup: Map, placement: Map, parentGroup?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grouping\n                                    \n                                                CriteriaGrouping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filterLookup\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    placement\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        browsingMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'explore'\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TechnologyDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterConfiguration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TechnologyFilterConfiguration\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        framework\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CriteriaGrouping[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mobileQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaQueryList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderedFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RenderedFilterBlock[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('sidenav')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        technologies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Technology[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technologies.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {DataService} from '../core/services/data.service';\nimport {Subscription} from 'rxjs';\nimport {Technology} from '../shared/interfaces/technology';\nimport {ActivatedRoute} from '@angular/router';\nimport {TechnologyDataSource} from '../shared/datasource';\nimport {ClassificationFramework, CriteriaGrouping} from '../shared/interfaces/classification';\nimport {\n  CriteriaBasedQuery,\n  CriterionFilterConfiguration,\n  RenderedFilterBlock,\n  TechnologyFilterConfiguration\n} from '../shared/interfaces/filtering';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {MediaMatcher} from '@angular/cdk/layout';\nimport {FormBuilder} from '@angular/forms';\n\n@Component({\n  selector: 'app-technologies',\n  templateUrl: './technologies.component.html',\n  styleUrls: ['./technologies.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TechnologiesComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  technologies: Technology[];\n  framework: ClassificationFramework;\n  filterConfiguration: TechnologyFilterConfiguration;\n  groupings: CriteriaGrouping[] = [];\n\n  dataSource: TechnologyDataSource;\n  browsingMode = 'explore';\n\n  renderedFilter: RenderedFilterBlock[] = [];\n\n  @ViewChild('sidenav') sidenav: MatSidenav;\n  mobileQuery: MediaQueryList;\n\n  constructor(\n    private dataService: DataService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private changeDetectorRef: ChangeDetectorRef,\n    private media: MediaMatcher\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 850px)');\n    this.mobileQuery.addEventListener('change', () => changeDetectorRef.detectChanges());\n  }\n\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.route.queryParams.subscribe(params => {\n        const mode = params.browsingMode;\n        if (mode) {\n          this.browsingMode = mode;\n        }\n      })\n    );\n\n    this.subscriptions.push(\n      this.route.data.subscribe(data => {\n        this.technologies = data.resolvedData[0];\n        this.dataSource = new TechnologyDataSource(this.technologies, {property: 'platformName', order: 'asc'}, {});\n        this.framework = data.resolvedData[1];\n        this.filterConfiguration = data.resolvedData[2];\n\n        this.extractGroupings();\n        this.generateFilterStructure();\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private extractGroupings() {\n    for (const vc of this.framework.viewCombinations) {\n      if (vc.default) {\n        vc.views.forEach(v => this.groupings.push(...Array.from(v.groupings)));\n        break;\n      }\n    }\n  }\n\n  private generateFilterStructure() {\n    const criteriaFilterLookup = new Map(this.filterConfiguration.filters.map(c => [c.criterionId, c] as [string, CriterionFilterConfiguration]));\n    const placement: Map = new Map();\n    this.groupings.forEach(g => this.populateRenderBlocks(g, criteriaFilterLookup, placement));\n    this.renderedFilter = Array.from(placement.values());\n  }\n\n  private populateRenderBlocks(grouping: CriteriaGrouping, filterLookup: Map, placement: Map, parentGroup?: string) {\n    let current = placement.get(grouping.name);\n\n    if (current === undefined && grouping.criteria && grouping.criteria.size > 0) {\n      placement.set(grouping.name, {blockName: parentGroup ? parentGroup.concat(' : ').concat(grouping.name) : grouping.name, filters: []});\n      current = placement.get(grouping.name);\n    }\n\n    grouping.criteria.forEach(c => {\n      const config = filterLookup.get(c.id);\n      if (config) {\n        current.filters.push(config);\n      }\n    });\n\n    if (grouping.groupings) {\n      grouping.groupings.forEach(g => this.populateRenderBlocks(g, filterLookup, placement, grouping.name));\n    }\n  }\n\n  onQueryUpdate($event: CriteriaBasedQuery) {\n    this.dataSource.queryByCriteria($event);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Filter Panel\n        \n        \n          close\n        \n      \n      \n        Filter platforms by combining criteria values.\n      \n\n    \n\n    \n      \n         0\"\n                             class=\"sidenav__filter-block\">\n          \n            \n              {{filterBlock.blockIcon}}\n              {{filterBlock.blockName}}\n            \n          \n          \n\n          \n          \n\n        \n\n      \n\n    \n  \n\n  \n    \n    \n      \n        Platform Browser\n        \n        \n          \n            subject\n          \n          \n            search\n          \n        \n      \n\n      \n        \n          Browse through the list of available platforms, for a detailed view click on the corresponding platform.\n        \n        \n          filter_alt\n          Filters\n        \n      \n\n      \n      \n\n      \n      \n    \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./technologies.component.scss\n                \n                @import \"../_scss/shared\";\n@import \"../_scss/global/variables\";\n\n:host {\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.sidenav-container {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n  flex: 1;\n}\n\n.sidenav {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n  flex: 1;\n  width: 80%;\n  max-width: 30em;\n}\n\n.sidenav__filter-header {\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 1rem;\n}\n\n.sidenav__filter-title {\n  display: flex;\n  flex-flow: row nowrap;\n}\n\n.sidenav__accordion {\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.sidenav__filter-block {\n  flex-grow: 1;\n  flex-shrink: 0;\n  box-shadow: none !important;\n  border-radius: 0 !important;\n  border-bottom: 1px solid $gray-30;\n}\n\n.content-container {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n  flex: 1;\n}\n\n.platforms-main {\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  @include bg-grey;\n  padding-top: 1.5rem;\n}\n\n.platforms__controls {\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: space-evenly;\n  width: 90%;\n}\n\n.platforms__description-block {\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  width: 90%;\n}\n\n.platforms__description {\n  flex: 1 1 max-content;\n}\n\n.platforms__filter-button {\n  height: 2.5rem;\n  @include nav_item;\n}\n\n.platforms__filter-button-title {\n  display: none;\n}\n\n.platforms__header {\n  flex: 1 1 auto;\n}\n\n.platforms__settings {\n  @include nav_item;\n}\n\n@media screen and (min-width: 900px) {\n  .platforms__controls, .platforms__description-block  {\n    max-width: 910px;\n  }\n\n  .platforms__filter-button-title {\n    display: inline;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Filter Panel                          close                            Filter platforms by combining criteria values.                             0\"                             class=\"sidenav__filter-block\">                                    {{filterBlock.blockIcon}}              {{filterBlock.blockName}}                                                                                                Platform Browser                                      subject                                search                                                Browse through the list of available platforms, for a detailed view click on the corresponding platform.                          filter_alt          Filters                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologiesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TechnologiesModule.html":{"url":"modules/TechnologiesModule.html","title":"module - TechnologiesModule","body":"\n                   \n\n\n\n\n    Modules\n    TechnologiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TechnologiesModule\n\n\n\ncluster_TechnologiesModule_declarations\n\n\n\ncluster_TechnologiesModule_imports\n\n\n\n\nCriterionFilterComponent\n\nCriterionFilterComponent\n\n\n\nTechnologiesModule\n\nTechnologiesModule\n\nTechnologiesModule -->\n\nCriterionFilterComponent->TechnologiesModule\n\n\n\n\n\nTechnologiesComponent\n\nTechnologiesComponent\n\nTechnologiesModule -->\n\nTechnologiesComponent->TechnologiesModule\n\n\n\n\n\nTechnologyDetailsComponent\n\nTechnologyDetailsComponent\n\nTechnologiesModule -->\n\nTechnologyDetailsComponent->TechnologiesModule\n\n\n\n\n\nTechnologyListComponent\n\nTechnologyListComponent\n\nTechnologiesModule -->\n\nTechnologyListComponent->TechnologiesModule\n\n\n\n\n\nTechnologyTableComponent\n\nTechnologyTableComponent\n\nTechnologiesModule -->\n\nTechnologyTableComponent->TechnologiesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTechnologiesModule -->\n\nSharedModule->TechnologiesModule\n\n\n\n\n\nTechnologiesRoutingModule\n\nTechnologiesRoutingModule\n\nTechnologiesModule -->\n\nTechnologiesRoutingModule->TechnologiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/technologies/technologies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CriterionFilterComponent\n                        \n                        \n                            TechnologiesComponent\n                        \n                        \n                            TechnologyDetailsComponent\n                        \n                        \n                            TechnologyListComponent\n                        \n                        \n                            TechnologyTableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TechnologiesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TechnologiesComponent} from './technologies.component';\nimport {TechnologiesRoutingModule} from './technologies-routing.module';\nimport {SharedModule} from '../shared/shared.module';\nimport {TechnologyListComponent} from './technology-list/technology-list.component';\nimport {TechnologyDetailsComponent} from './technology-details/technology-details.component';\nimport {TechnologyTableComponent} from './technology-table/technology-table.component';\nimport {TechnologiesResolver} from './technologies-resolver.service';\nimport {CriterionFilterComponent} from './criterion-filter/criterion-filter.component';\nimport {TechnologyDetailsResolverService} from './technology-details-resolver.service';\n\n@NgModule({\n  declarations: [TechnologiesComponent, TechnologyListComponent, TechnologyDetailsComponent, TechnologyTableComponent, CriterionFilterComponent],\n  imports: [CommonModule, SharedModule, TechnologiesRoutingModule],\n  providers: [TechnologiesResolver, TechnologyDetailsResolverService]\n\n})\nexport class TechnologiesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TechnologiesResolver.html":{"url":"guards/TechnologiesResolver.html","title":"guard - TechnologiesResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TechnologiesResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/technologies/technologies-resolver.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, config: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technologies-resolver.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies-resolver.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {ClassificationFramework} from '../shared/interfaces/classification';\nimport {forkJoin, Observable} from 'rxjs';\nimport {DataService} from '../core/services/data.service';\nimport {Technology} from '../shared/interfaces/technology';\nimport {TechnologyFilterConfiguration} from '../shared/interfaces/filtering';\nimport {AppConfigService} from '../core/services/app-config.service';\n\n@Injectable()\nexport class TechnologiesResolver implements Resolve {\n  constructor(private dataService: DataService, private config: AppConfigService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    const category = this.config.defaultTechCategory;\n\n    const technologies = this.dataService.getTechnologiesOfCategory(category, true);\n    const framework = this.dataService.getFrameworkForTechnologyType(category);\n    const filter = this.dataService.getTechnologyFilter(category);\n\n    return forkJoin([technologies, framework, filter]);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TechnologiesRoutingModule.html":{"url":"modules/TechnologiesRoutingModule.html","title":"module - TechnologiesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TechnologiesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/technologies/technologies-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {TechnologiesComponent} from './technologies.component';\nimport {TechnologyDetailsComponent} from './technology-details/technology-details.component';\nimport {TechnologiesResolver} from './technologies-resolver.service';\nimport {TechnologyDetailsResolverService} from './technology-details-resolver.service';\n\nconst platformRoutes: Routes = [\n  {path: '', component: TechnologiesComponent, resolve: {resolvedData: TechnologiesResolver}},\n  {path: ':platformId', component: TechnologyDetailsComponent, resolve: {resolvedData: TechnologyDetailsResolverService}}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(platformRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class TechnologiesRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Technology.html":{"url":"interfaces/Technology.html","title":"interface - Technology","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Technology\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/technology.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a technology for comparison,\nwhich might contain the review data in a form of a TechnologyDossier.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dossier\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logoLocation\n                                        \n                                \n                                \n                                        \n                                            logoLocator\n                                        \n                                \n                                \n                                        \n                                            platformName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            shortDescription\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category this technology belongs to.\nFunction-as-a-Service platforms\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Full description shown in technology details.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dossier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dossier:         TechnologyDossier\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyDossier\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A TechnologyDossier storing the review data.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique technology identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoLocation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoLocation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Technology logo location path generated by the LogoLocatorService.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoLocator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoLocator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A string value that can be used by the LogoLocatorService to locate the technology logo.\nazure.functions for Azure Functions,\naws.s3 for AWS S3\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Technology name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shortDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Short description shown in technology lists.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {CriterionInstance} from './classification';\n\n/**\n * An interface representing a technology for comparison,\n * which might contain the review data in a form of a {@link TechnologyDossier}.\n *\n * @example a FaaS platform\n */\nexport interface Technology {\n  /**\n   * Unique technology identifier.\n   */\n  id: string;\n\n  /**\n   * Technology name.\n   */\n  platformName: string;\n\n  /**\n   * [Category]{@link TechnologyCategory} this technology belongs to.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  category: TechnologyCategory;\n\n  /**\n   * A string value that can be used by the {@link LogoLocatorService} to locate the technology logo.\n   *\n   * @example\n   * azure.functions for Azure Functions,\n   * aws.s3 for AWS S3\n   */\n  logoLocator: string;\n\n  /**\n   * Technology logo location path generated by the {@link LogoLocatorService}.\n   */\n  logoLocation?: string;\n\n  /**\n   * Short description shown in technology lists.\n   */\n  shortDescription?: string;\n\n  /**\n   * Full description shown in technology details.\n   */\n  description?: string;\n\n  /**\n   * A [TechnologyDossier]{@link TechnologyDossier} storing the review data.\n   */\n  dossier?: TechnologyDossier;\n}\n\n/**\n * An interface representing the review data which comprises [CriterionInstances]{@link CriterionInstance} related to a particular technology.\n */\nexport interface TechnologyDossier {\n  /**\n   * Unique technology identifier.\n   */\n  platformId: string;\n\n  /**\n   * Date of review.\n   */\n  reviewDate?: Date;\n\n  /**\n   * A map of CriterionInstance unique IDs and {@link CriterionInstance} encompassing the review data.\n   */\n  reviewedCriteria: Map;\n}\n\n/**\n * An enum representing different technology categories.\n *\n * @example\n * faas for Function-as-a-Service\n * baas for Blockchain-as-a-Service\n */\nexport enum TechnologyCategory {\n  faas = 'faas', baas = 'baas'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TechnologyDataSource.html":{"url":"classes/TechnologyDataSource.html","title":"class - TechnologyDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TechnologyDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datasource.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            SimpleDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                criteriaBasedQuery\n                            \n                            \n                                    Public\n                                currentIndex\n                            \n                            \n                                    Private\n                                    Readonly\n                                data\n                            \n                            \n                                    Public\n                                filteredData$\n                            \n                            \n                                    Public\n                                isPaginated\n                            \n                            \n                                    Private\n                                    Readonly\n                                nameBasedQuery\n                            \n                            \n                                    Private\n                                    Readonly\n                                pageNumber\n                            \n                            \n                                    Public\n                                pageNumber$\n                            \n                            \n                                    Public\n                                pageSize\n                            \n                            \n                                    Public\n                                paginatedData$\n                            \n                            \n                                    Private\n                                    Readonly\n                                sort\n                            \n                            \n                                    Public\n                                totalInputSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                canFilter\n                            \n                            \n                                connect\n                            \n                            \n                                    Private\n                                    Static\n                                containsAny\n                            \n                            \n                                    Private\n                                    Static\n                                containsOne\n                            \n                            \n                                disconnect\n                            \n                            \n                                fetch\n                            \n                            \n                                    Private\n                                getFilteringResult\n                            \n                            \n                                    Private\n                                processData\n                            \n                            \n                                    Private\n                                pruneQuery\n                            \n                            \n                                queryByCriteria\n                            \n                            \n                                queryByName\n                            \n                            \n                                sortBy\n                            \n                            \n                                togglePagination\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, pageSize: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/datasource.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Technology[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialSort\n                                                  \n                                                        \n                                                                    Sort\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialQuery\n                                                  \n                                                        \n                                                                        CriteriaBasedQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pageSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        criteriaBasedQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Technology[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filteredData$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isPaginated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        nameBasedQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pageNumber$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.pageNumber.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        paginatedData$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        totalInputSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/datasource.ts:28\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        canFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    canFilter(filterValue: CriterionFilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        containsAny\n                        \n                    \n                \n            \n            \n                \n                    \n                    containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewedCriterion\n                                    \n                                                CriterionInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        containsOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewedCriterion\n                                    \n                                                CriterionInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetch\n                        \n                    \n                \n            \n            \n                \nfetch(event: PageEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            PageEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFilteringResult\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewedCriterion\n                                    \n                                                CriterionInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        processData\n                        \n                    \n                \n            \n            \n                \n                    \n                    processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Technology[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    criteriaQuery\n                                    \n                                                CriteriaBasedQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameQuery\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sort\n                                    \n                                            Sort\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Technology[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        pruneQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    pruneQuery(nextQuery: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nextQuery\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryByCriteria\n                        \n                    \n                \n            \n            \n                \nqueryByCriteria(query: CriteriaBasedQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                CriteriaBasedQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryByName\n                        \n                    \n                \n            \n            \n                \nqueryByName(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortBy\n                        \n                    \n                \n            \n            \n                \nsortBy(sort: Partial>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sort\n                                    \n                                            Partial>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePagination\n                        \n                    \n                \n            \n            \n                \ntogglePagination()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, combineLatest, Observable, of} from 'rxjs';\nimport {map, shareReplay, switchMap} from 'rxjs/operators';\nimport {Technology} from './interfaces/technology';\nimport {PageEvent} from '@angular/material/paginator';\nimport {CriteriaBasedQuery, CriterionFilterType, CriterionFilterValue} from './interfaces/filtering';\nimport {CriterionInstance} from './interfaces/classification';\n\nexport interface SimpleDataSource extends DataSource {\n  connect(): Observable;\n\n  disconnect(): void;\n}\n\nexport interface Sort {\n  property: keyof T;\n  order: 'asc' | 'desc';\n}\n\nexport class TechnologyDataSource implements SimpleDataSource {\n  private readonly data: Technology[];\n  private readonly pageNumber = new BehaviorSubject(0);\n  private readonly sort: BehaviorSubject>;\n  private readonly criteriaBasedQuery: BehaviorSubject;\n  private readonly nameBasedQuery: BehaviorSubject;\n\n  public isPaginated = true;\n  public totalInputSize: number;\n  public currentIndex = 0;\n  public pageNumber$ = this.pageNumber.asObservable();\n  public filteredData$: Observable;\n  public paginatedData$: Observable;\n\n  constructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, public pageSize = 10) {\n    this.data = data;\n    this.sort = new BehaviorSubject>(initialSort);\n    this.criteriaBasedQuery = new BehaviorSubject(initialQuery);\n    this.nameBasedQuery = new BehaviorSubject(undefined);\n\n    this.filteredData$ = combineLatest([this.criteriaBasedQuery, this.nameBasedQuery, this.sort]).pipe(\n      switchMap(([criteriaQuery, nameQuery, sort]) => {\n          const result = this.processData(this.data, criteriaQuery, nameQuery, sort);\n          this.totalInputSize = result.length;\n          return of(result);\n        }\n      ),\n      shareReplay(1)\n    );\n\n    this.paginatedData$ = combineLatest([this.filteredData$, this.pageNumber$]).pipe(\n      map(([data, pageNumber]) => {\n        const startIndex = pageNumber * this.pageSize;\n        let endIndex = startIndex + this.pageSize;\n        if (endIndex > data.length) {\n          endIndex = data.length;\n        }\n        return data.slice(startIndex, endIndex);\n      })\n    );\n  }\n\n  sortBy(sort: Partial>): void {\n    const lastSort = this.sort.getValue();\n    const nextSort = {...lastSort, ...sort};\n    this.sort.next(nextSort);\n  }\n\n  queryByCriteria(query: CriteriaBasedQuery): void {\n    const lastQuery = this.criteriaBasedQuery.getValue();\n    const nextQuery = {...lastQuery, ...query};\n    console.log('new query:');\n    this.pruneQuery(nextQuery);\n    console.log(nextQuery);\n    this.criteriaBasedQuery.next(nextQuery);\n  }\n\n  queryByName(query: string): void {\n    this.nameBasedQuery.next(query);\n  }\n\n  fetch(event: PageEvent): void {\n    this.pageSize = event.pageSize;\n    this.pageNumber.next(event.pageIndex);\n    this.currentIndex = event.pageIndex;\n  }\n\n  togglePagination(): void {\n    this.isPaginated = !this.isPaginated;\n  }\n\n  connect(): Observable {\n    if (this.isPaginated) {\n      return this.paginatedData$;\n    }\n    return this.filteredData$;\n  }\n\n  disconnect(): void {\n  }\n\n  private processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort): Technology[] {\n    let result: Technology[] = data;\n    if (nameQuery) {\n      result = data.filter(platform => nameQuery ? platform.platformName.toLocaleLowerCase().includes(nameQuery) : true);\n    }\n\n    if (criteriaQuery && Object.keys(criteriaQuery).length !== 0) {\n      Object.keys(criteriaQuery).forEach(key => {\n        if (TechnologyDataSource.canFilter(criteriaQuery[key])) {\n          result = result.filter(t => {\n            let filteringResult = false;\n            if (t.dossier.reviewedCriteria.has(key)) {\n              filteringResult = this.getFilteringResult(criteriaQuery[key], t.dossier.reviewedCriteria.get(key));\n            }\n            return filteringResult;\n          });\n        }\n      });\n      console.log('found: ' + result.length);\n    }\n\n    if (sort && sort.order === 'asc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? 1 : -1);\n    } else if (sort && sort.order === 'desc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? -1 : 1);\n    }\n\n    return result;\n  }\n\n  private static canFilter(filterValue: CriterionFilterValue): boolean {\n    if (filterValue.filterType && filterValue.filterType === CriterionFilterType.lte) {\n      return typeof filterValue.value === 'number';\n    } else if (filterValue.filterType && filterValue.filterType === CriterionFilterType.containsAll ||\n      filterValue.filterType === CriterionFilterType.containsOne ||\n      filterValue.filterType === CriterionFilterType.excludesAll) {\n      const v = filterValue.value as string[];\n      return v && v.length > 0;\n    } else if (filterValue.filterType === CriterionFilterType.bool || filterValue.filterType === CriterionFilterType.containsAny) {\n      return typeof filterValue.value === 'boolean';\n    }\n\n    return false;\n  }\n\n  private pruneQuery(nextQuery: { [p: string]: CriterionFilterValue }) {\n    const keysToDelete = [];\n    Object.keys(nextQuery).forEach(key => {\n        if (nextQuery[key].filterType === null) {\n          keysToDelete.push(key);\n        } else if (nextQuery[key].filterType === CriterionFilterType.bool ||\n          nextQuery[key].filterType === CriterionFilterType.containsAny ||\n          nextQuery[key].filterType === CriterionFilterType.lte) {\n          if (nextQuery[key].value === null) {\n            keysToDelete.push(key);\n          }\n        } else if (nextQuery[key].filterType === CriterionFilterType.containsOne ||\n          nextQuery[key].filterType === CriterionFilterType.containsAll ||\n          nextQuery[key].filterType === CriterionFilterType.excludesAll) {\n          const valueToCheck = nextQuery[key].value as string[];\n          if (valueToCheck.length === 0) {\n            keysToDelete.push(key);\n          }\n        }\n      }\n    );\n    keysToDelete.forEach(key => delete nextQuery[key]);\n  }\n\n  private getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    if (filterValue.filterType === CriterionFilterType.containsAny) {\n      return TechnologyDataSource.containsAny(filterValue, reviewedCriterion);\n    }\n\n    for (const reviewValue of reviewedCriterion.values) {\n      if (filterValue.filterType === CriterionFilterType.lte) {\n        return reviewedCriterion.values[0].value  allValues.push(v.value));\n        const target = Array.from(filterValue.value as string[]);\n\n        if (filterValue.filterType === CriterionFilterType.containsAll) {\n          return target.every(v => allValues.includes(v));\n        } else if (filterValue.filterType === CriterionFilterType.excludesAll) {\n          return target.every(v => !allValues.includes(v));\n        }\n      }\n    }\n  }\n\n  private static containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    const chosenValue = filterValue.value as boolean;\n    if (chosenValue) {\n      return Array.from(reviewedCriterion.values).length > 0;\n    } else {\n      return Array.from(reviewedCriterion.values).length === 0;\n    }\n  }\n\n  private static containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    const chosenValues = filterValue.value as string[];\n    if (chosenValues && chosenValues.length > 0) {\n      for (const entry of reviewedCriterion.values) {\n        const value = entry.value as string;\n        if (chosenValues.indexOf(value) !== -1) {\n          return true;\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologyDetailsComponent.html":{"url":"components/TechnologyDetailsComponent.html","title":"component - TechnologyDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TechnologyDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technology-details/technology-details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technology-details\n            \n\n            \n                styleUrls\n                ./technology-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technology-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bottomNav\n                            \n                            \n                                framework\n                            \n                            \n                                platform\n                            \n                            \n                                selectedViewCombination\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onWindowScroll\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-details/technology-details.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:scroll\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:scroll(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-details/technology-details.component.ts:32\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-details/technology-details.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onWindowScroll\n                        \n                    \n                \n            \n            \n                \nonWindowScroll(e)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:scroll', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/technologies/technology-details/technology-details.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bottomNav\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BottomNavComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('bottomNavComponent')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-details/technology-details.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        framework\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-details/technology-details.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Technology\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-details/technology-details.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedViewCombination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClassificationViewCombination\n\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-details/technology-details.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, HostListener, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Technology} from '../../shared/interfaces/technology';\nimport {ClassificationFramework, ClassificationViewCombination} from '../../shared/interfaces/classification';\nimport {BottomNavComponent} from '../../shared/bottom-nav/bottom-nav.component';\n\n@Component({\n  selector: 'app-technology-details',\n  templateUrl: './technology-details.component.html',\n  styleUrls: ['./technology-details.component.scss']\n})\nexport class TechnologyDetailsComponent implements OnInit {\n  @ViewChild('bottomNavComponent') bottomNav: BottomNavComponent;\n\n  platform: Technology;\n  framework: ClassificationFramework;\n  selectedViewCombination: ClassificationViewCombination;\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.platform = data.resolvedData[0];\n      this.framework = data.resolvedData[1];\n\n      this.framework.viewCombinations.forEach(vc => vc.default ? this.selectedViewCombination = vc : false);\n    });\n  }\n\n  @HostListener('window:scroll', ['$event'])\n  onWindowScroll(e) {\n    this.bottomNav.toTop = window.pageYOffset > 200;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    {{platform.platformName}}\n    {{platform.description}}\n\n    \n      Technology View Mode\n      \n        {{ option.name }}\n      \n    \n  \n  \n  \n\n\n\n  \n    home Home\n  \n  \n    view_list Platforms\n  \n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./technology-details.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.technology {\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  margin: 0 auto;\n}\n\n.technology__header-block {\n  padding: 0 1rem;\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.technology__logo {\n  max-height: 5rem;\n  max-width: 10rem;\n  margin: 1.5rem .5rem 0;\n  border: none;\n  align-self: center;\n}\n\n.technology__header {\n  margin-top: 2rem;\n  align-self: center;\n  //color: $violet-600;\n}\n\n.technology__view-title {\n  margin-left: .5rem;\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{platform.platformName}}    {{platform.description}}          Technology View Mode              {{ option.name }}                      home Home        view_list Platforms  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologyDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TechnologyDetailsResolverService.html":{"url":"guards/TechnologyDetailsResolverService.html","title":"guard - TechnologyDetailsResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TechnologyDetailsResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/technologies/technology-details-resolver.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, config: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-details-resolver.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-details-resolver.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {ClassificationFramework} from '../shared/interfaces/classification';\nimport {forkJoin, Observable} from 'rxjs';\nimport {DataService} from '../core/services/data.service';\nimport {Technology} from '../shared/interfaces/technology';\nimport {AppConfigService} from '../core/services/app-config.service';\n\n@Injectable()\nexport class TechnologyDetailsResolverService implements Resolve {\n  constructor(private dataService: DataService, private config: AppConfigService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    const id = route.params.platformId;\n    const category = this.config.defaultTechCategory;\n\n    return forkJoin([\n      this.dataService.getTechnology(id, true),\n      this.dataService.getFrameworkForTechnologyType(category)\n    ]);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TechnologyDossier.html":{"url":"interfaces/TechnologyDossier.html","title":"interface - TechnologyDossier","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TechnologyDossier\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/technology.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing the review data which comprises CriterionInstances related to a particular technology.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            platformId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reviewDate\n                                        \n                                \n                                \n                                        \n                                            reviewedCriteria\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique technology identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reviewDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Date of review.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewedCriteria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reviewedCriteria:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A map of CriterionInstance unique IDs and CriterionInstance encompassing the review data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {CriterionInstance} from './classification';\n\n/**\n * An interface representing a technology for comparison,\n * which might contain the review data in a form of a {@link TechnologyDossier}.\n *\n * @example a FaaS platform\n */\nexport interface Technology {\n  /**\n   * Unique technology identifier.\n   */\n  id: string;\n\n  /**\n   * Technology name.\n   */\n  platformName: string;\n\n  /**\n   * [Category]{@link TechnologyCategory} this technology belongs to.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  category: TechnologyCategory;\n\n  /**\n   * A string value that can be used by the {@link LogoLocatorService} to locate the technology logo.\n   *\n   * @example\n   * azure.functions for Azure Functions,\n   * aws.s3 for AWS S3\n   */\n  logoLocator: string;\n\n  /**\n   * Technology logo location path generated by the {@link LogoLocatorService}.\n   */\n  logoLocation?: string;\n\n  /**\n   * Short description shown in technology lists.\n   */\n  shortDescription?: string;\n\n  /**\n   * Full description shown in technology details.\n   */\n  description?: string;\n\n  /**\n   * A [TechnologyDossier]{@link TechnologyDossier} storing the review data.\n   */\n  dossier?: TechnologyDossier;\n}\n\n/**\n * An interface representing the review data which comprises [CriterionInstances]{@link CriterionInstance} related to a particular technology.\n */\nexport interface TechnologyDossier {\n  /**\n   * Unique technology identifier.\n   */\n  platformId: string;\n\n  /**\n   * Date of review.\n   */\n  reviewDate?: Date;\n\n  /**\n   * A map of CriterionInstance unique IDs and {@link CriterionInstance} encompassing the review data.\n   */\n  reviewedCriteria: Map;\n}\n\n/**\n * An enum representing different technology categories.\n *\n * @example\n * faas for Function-as-a-Service\n * baas for Blockchain-as-a-Service\n */\nexport enum TechnologyCategory {\n  faas = 'faas', baas = 'baas'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TechnologyDossierResponse.html":{"url":"interfaces/TechnologyDossierResponse.html","title":"interface - TechnologyDossierResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TechnologyDossierResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            platformId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reviewDate\n                                        \n                                \n                                \n                                        \n                                            reviewedCriteria\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reviewDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewedCriteria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reviewedCriteria:         CriteriaReview\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriteriaReview\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TechnologyFilterConfiguration.html":{"url":"interfaces/TechnologyFilterConfiguration.html","title":"interface - TechnologyFilterConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TechnologyFilterConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a filter configuration for a given technology TechnologyCategory.\nThis configuration defines which criteria have dedicated filter elements in the UI.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filterId\n                                        \n                                \n                                \n                                        \n                                            filters\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            technologyCategory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique filter configuration identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filters:         CriterionFilterConfiguration[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterConfiguration[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of filters to be rendered in this block defined using CriterionFilterConfiguration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Technology category\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a rendered filter block in the UI which may comprise multiple filters with {@link CriterionFilterConfiguration}.\n */\nexport interface RenderedFilterBlock {\n  /**\n   * Name of the filter block\n   */\n  blockName: string;\n\n  /**\n   * Material Icon name\n   */\n  blockIcon?: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  /**\n   * Unique filter configuration identifier\n   */\n  filterId: string;\n\n  /**\n   * Technology category\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * Configuration name\n   */\n  name: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  /**\n   * Unique criterion identifier\n   */\n  criterionId: string;\n\n  /**\n   * Filter name\n   */\n  displayName: string;\n\n  /**\n   * Filter type {@see CriterionFilterType}\n   */\n  filterType: CriterionFilterType;\n\n  /**\n   * Distinct filter values obtained from the review data\n   */\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n */\nexport enum CriterionFilterType {\n  /**\n   * Indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n   */\n  bool = 'bool',\n\n  /**\n   * Indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n   */\n  lte = 'lte',\n\n  /**\n   * Indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n   */\n  gte = 'gte',\n\n  /**\n   * At least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n   */\n  containsOne = 'containsOne',\n\n  /**\n   * At least 1 arbitrary text value must be contained, translates to a toggle in the UI\n   */\n  containsAny = 'containsAny',\n\n  /**\n   * All specified text values must be contained, translates to a group of checkboxes in the UI\n   */\n  containsAll = 'containsAll',\n\n  /**\n   * All specified text values must not be contained, translates to a group of checkboxes in the UI\n   */\n  excludesAll = 'excludesAll'\n}\n\n/**\n * An interface representing a filter-based query mapping unique criteria IDs to respective [CriterionFilterValues]{@link CriterionFilterValue}.\n */\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\n/**\n * An interface representing a filter value used in a user's query.\n */\nexport interface CriterionFilterValue {\n  /**\n   * Filter type\n   */\n  filterType?: CriterionFilterType;\n\n  /**\n   * Actual value, type depends on the filter type and respective UI elements.\n   *\n   * @example\n   * a list of selected checkboxes resulting in a list of string values   *\n   */\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologyListComponent.html":{"url":"components/TechnologyListComponent.html","title":"component - TechnologyListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TechnologyListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technology-list/technology-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technology-list\n            \n\n            \n                styleUrls\n                ./technology-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technology-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageSizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNameChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-list/technology-list.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :         TechnologyDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-list/technology-list.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-list/technology-list.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNameChange\n                        \n                    \n                \n            \n            \n                \nonNameChange(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-list/technology-list.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [5, 10]\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-list/technology-list.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {TechnologyDataSource} from '../../shared/datasource';\n\n@Component({\n  selector: 'app-technology-list',\n  templateUrl: './technology-list.component.html',\n  styleUrls: ['./technology-list.component.scss']\n})\nexport class TechnologyListComponent implements OnInit {\n  @Input() dataSource: TechnologyDataSource;\n  pageSizeOptions: number[] = [5, 10];\n\n  constructor() {\n  }\n\n  onNameChange(name: string) {\n    this.dataSource.queryByName(name);\n    this.dataSource.fetch({pageIndex: 0, length: this.dataSource.totalInputSize, pageSize: this.dataSource.pageSize});\n  }\n\n  ngOnInit(): void {\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n      Filter by name\n      \n      search\n    \n  \n\n  \n    \n      \n        \n         {{p.platformName}} -->\n\n        \n          \n            {{p.shortDescription}}\n          \n\n        \n\n        \n          arrow_forward\n        \n\n      \n    \n  \n\n  \n  \n\n\n\n\n    \n\n    \n                \n                    ./technology-list.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  flex: 1;\n}\n\n.platforms-list {\n  margin-bottom: 1rem;\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.platforms-list__search {\n  display: flex;\n  justify-content: center;\n}\n\n.platforms-list__search-field {\n  width: 80%;\n}\n\n.platforms-list__cards {\n  flex: 1;\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: flex-start;\n}\n\n.platforms-list__card {\n  margin: 0.2rem .5rem 0 .5rem;\n  padding: 0 .5rem !important;\n  border-left: .2rem solid $violet-400;\n  transition: all .3s ease;\n  flex: 1 1 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n\n  &:hover {\n    border-left: .2rem solid $salad-600;\n    box-shadow: 0 10px 16px rgba(0, 0, 0, 0.2) !important;\n    cursor: pointer;\n  }\n}\n\n.platforms-list__logo {\n  max-height: 3rem;\n  max-width: 3rem;\n  margin: 0 .5rem;\n  border: none;\n  align-self: center;\n}\n\n.platforms-list__card-spacer {\n  flex-grow: 2;\n}\n\n.platforms-list__card-description {\n  flex: 1;\n  font-size: .8rem;\n  padding-right: .5rem;\n}\n\n.platforms-list__explore-button {\n  @include nav_item;\n}\n\n.platforms-list__paginator {\n  background: none;\n}\n\n@media (min-width: 790px) {\n  .platform-section__card-description {\n    display: flex;\n    flex: 1;\n    font-size: .95rem;\n  }\n\n  .platforms-list__cards {\n    display: flex;\n    flex-flow: row wrap;\n  }\n\n  .platforms-list__card {\n    flex: 1 1 auto;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n  }\n\n}\n\n@media screen and (min-width: 900px) {\n  .platforms-list {\n    max-width: 910px;\n    min-width: 900px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Filter by name            search                                   {{p.platformName}} -->                              {{p.shortDescription}}                                    arrow_forward                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologyListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologyTableComponent.html":{"url":"components/TechnologyTableComponent.html","title":"component - TechnologyTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TechnologyTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technology-table/technology-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technology-table\n            \n\n            \n                styleUrls\n                ./technology-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technology-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnsToDisplay\n                            \n                            \n                                criteriaColumns\n                            \n                            \n                                groupingColumnIds\n                            \n                            \n                                groupingColumns\n                            \n                            \n                                tableContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateGroupingColumns\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                scrollLeft\n                            \n                            \n                                scrollRight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                filterConfiguration\n                            \n                            \n                                framework\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :         TechnologyDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filterConfiguration\n                    \n                \n                \n                    \n                        Type :         TechnologyFilterConfiguration\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        framework\n                    \n                \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sidenav\n                    \n                \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateGroupingColumns\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateGroupingColumns(grouping: CriteriaGrouping, groupingColumns: TableColumn[], color: string, parentGroupingName?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grouping\n                                    \n                                                CriteriaGrouping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupingColumns\n                                    \n                                                TableColumn[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentGroupingName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollLeft\n                        \n                    \n                \n            \n            \n                \nscrollLeft()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollRight\n                        \n                    \n                \n            \n            \n                \nscrollRight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columnsToDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['techName']\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        criteriaColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableColumn[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupingColumnIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['techNameHeader']\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupingColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableColumn[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('content')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {TechnologyDataSource} from '../../shared/datasource';\nimport {ClassificationFramework, CriteriaGrouping} from '../../shared/interfaces/classification';\nimport {TechnologyFilterConfiguration} from '../../shared/interfaces/filtering';\nimport {MatSidenav} from '@angular/material/sidenav';\n\nexport class TableColumn {\n  id: string;\n  displayName: string;\n  colSpan?: number;\n  color?: string;\n}\n\n@Component({\n  selector: 'app-technology-table',\n  templateUrl: './technology-table.component.html',\n  styleUrls: ['./technology-table.component.scss']\n})\nexport class TechnologyTableComponent implements OnInit {\n  @Input() dataSource: TechnologyDataSource;\n  @Input() framework: ClassificationFramework;\n  @Input() filterConfiguration: TechnologyFilterConfiguration;\n  @Input() sidenav: MatSidenav;\n\n  @ViewChild('content') tableContainer: ElementRef;\n\n  criteriaColumns: TableColumn[] = [];\n  groupingColumns: TableColumn[] = [];\n  groupingColumnIds: string[] = ['techNameHeader'];\n\n  columnsToDisplay = ['techName'];\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n    this.framework.viewCombinations.forEach(viewComb => {\n      if (viewComb.default) {\n        viewComb.views.forEach(view => {\n          const groupingColumns: TableColumn[] = [];\n          Array.from(view.groupings).forEach((grouping, index) => {\n            const color = index % 2 === 0 ? '#ccc' : 'white';\n            this.generateGroupingColumns(grouping, groupingColumns, color);\n          });\n          if (groupingColumns.length > 0) {\n            this.groupingColumns.push(...groupingColumns);\n            let viewColspan = 0;\n            groupingColumns.forEach(c => {\n              if (c.colSpan) {\n                viewColspan += c.colSpan;\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  private generateGroupingColumns(grouping: CriteriaGrouping, groupingColumns: TableColumn[], color: string, parentGroupingName?: string) {\n    let counter = 0;\n    grouping.criteria.forEach((c, index) => {\n      this.criteriaColumns.push({\n        id: c.id,\n        displayName: c.name,\n        color\n      } as TableColumn);\n      this.columnsToDisplay.push(c.id);\n      counter += 1;\n    });\n    if (counter > 0) {\n      const name = parentGroupingName ? parentGroupingName.concat('.').concat(grouping.name) : grouping.name;\n      groupingColumns.push({\n        id: grouping.id,\n        displayName: name,\n        color,\n        colSpan: counter\n      } as TableColumn);\n      this.groupingColumnIds.push(grouping.id);\n    }\n    if (grouping.groupings) {\n      grouping.groupings.forEach(g => this.generateGroupingColumns(g, groupingColumns, color, grouping.name));\n    }\n  }\n\n  scrollLeft() {\n    this.tableContainer.nativeElement.scrollLeft -= 150;\n  }\n\n  scrollRight() {\n    this.tableContainer.nativeElement.scrollLeft += 150;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Name\n    \n\n    \n      Name\n      \n        \n          \n           {{tech.platformName}}\n        \n      \n    \n\n    \n      \n         {{c.displayName}}\n      \n    \n\n    \n      \n         {{c.displayName}}\n        \n          \n            \n              {{entry.value | yesNo }}\n            \n          \n        \n      \n    \n\n    \n    \n    \n  \n\n\n  \n    arrow_back_ios Scroll Left\n  \n  \n    arrow_forward_ios Scroll Right\n  \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./technology-table.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.table-container {\n  align-self: center;\n  flex-grow: 1;\n  height: auto;\n  width: 93vw;\n  margin-bottom: 3rem;\n  overflow: scroll;\n  scroll-behavior: smooth;\n}\n\n.tech-name-header-cell {\n  display:table-cell;\n  background: white;\n  min-width: 3.5rem;\n  border-right: 2px solid $violet-600;\n}\n\n.grouping-header-cell {\n  display:table-cell;\n  min-width: 3.5rem;\n  padding: 0 .5rem;\n  border-right: 1px solid $gray-10;\n}\n\n.criterion-header-cell {\n  display:table-cell;\n  min-width: 5rem;\n  padding: 0 1rem;\n  border-right: 1px solid $gray-10;\n  border-bottom: 1px solid $gray-10;\n}\n\n.tech-name-cell {\n  height: 100%;\n  padding: 0 !important;\n  display:table-cell;\n  background: white;\n  min-width: 3.5rem;\n  border-right: 2px solid $violet-600;\n\n  img {\n    max-width: 2rem;\n  }\n}\n\n.tech-name-content {\n  height: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n}\n\n.value-cell {\n  padding: 0 1rem !important;\n  word-wrap: break-word !important;\n}\n\n.value-list {\n  display: flex;\n  flex-flow: row wrap;\n}\n\n.value {\n  font-size: .8rem;\n}\n\n/*.tech-row:nth-child(even) {\n  background-color: $gray-10;\n}*/\n\n@media screen and (min-width: 900px) {\n  .table-container {\n    max-width: 1400px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Name              Name                                   {{tech.platformName}}                                     {{c.displayName}}                             {{c.displayName}}                                            {{entry.value | yesNo }}                                                            arrow_back_ios Scroll Left        arrow_forward_ios Scroll Right  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologyTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TruncatePipe.html":{"url":"pipes/TruncatePipe.html","title":"pipe - TruncatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TruncatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/truncate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        truncate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, limit: number, completeWords, ellipsis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/truncate.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        25\n                                    \n\n                                \n                                \n                                    completeWords\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    ellipsis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '...'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = '...') {\n    if (completeWords) {\n      limit = value.substr(0, limit).lastIndexOf(' ');\n    }\n    return value.length > limit ? value.substr(0, limit) + ellipsis : value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/YesNoPipe.html":{"url":"pipes/YesNoPipe.html","title":"pipe - YesNoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  YesNoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/yes-no.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        yesNo\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/yes-no.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'yesNo'\n})\nexport class YesNoPipe implements PipeTransform {\n  transform(value: any) {\n    if (typeof value === 'boolean') {\n      return value ? 'yes' : 'no';\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/ensure-module-loaded-once.guard.ts\n            \n            class\n            EnsureModuleLoadedOnceGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/app-config.service.ts\n            \n            injectable\n            AppConfigService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            class\n            DataService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/core/services/file-based-data.service.ts\n            \n            injectable\n            FileBasedDataService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/core/services/file-based-data.service.ts\n            \n            variable\n            criteriaGroupingsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/file-based-data.service.ts\n            \n            variable\n            criteriaPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/file-based-data.service.ts\n            \n            variable\n            dossiersPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/file-based-data.service.ts\n            \n            variable\n            filterConfigurationsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/file-based-data.service.ts\n            \n            variable\n            frameworksPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/file-based-data.service.ts\n            \n            variable\n            frameworkViewCombinationsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/file-based-data.service.ts\n            \n            variable\n            frameworkViewsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/file-based-data.service.ts\n            \n            variable\n            infoResourcesPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/file-based-data.service.ts\n            \n            variable\n            supportedPlatformsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/logo-locator.service.ts\n            \n            injectable\n            LogoLocatorService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/random-color.service.ts\n            \n            injectable\n            RandomColorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/random-color.service.ts\n            \n            variable\n            randomColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/home/banner/banner.component.ts\n            \n            component\n            BannerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/overview/overview.component.ts\n            \n            component\n            OverviewComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/faq/faq.component.ts\n            \n            component\n            FaqComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/framework/framework.component.ts\n            \n            component\n            FrameworkComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/information/information.component.ts\n            \n            component\n            InformationComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/information/resolvers/framework-resolver.service.ts\n            \n            guard\n            FrameworkResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/resolvers/resources-resolver.service.ts\n            \n            guard\n            ResourcesResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/resources/resources.component.ts\n            \n            component\n            ResourcesComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/bottom-nav/bottom-nav.component.ts\n            \n            component\n            BottomNavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/child-grouping/child-grouping.component.ts\n            \n            component\n            ChildGroupingComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/criterion/criterion.component.ts\n            \n            component\n            CriterionComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/datasource.ts\n            \n            class\n            TechnologyDataSource\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/shared/datasource.ts\n            \n            interface\n            SimpleDataSource\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/datasource.ts\n            \n            interface\n            Sort\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/framework-renderer/framework-renderer.component.ts\n            \n            component\n            FrameworkRendererComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationCriterion\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationFramework\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationView\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationViewCombination\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            CriteriaGrouping\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            CriterionInstance\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            CriterionValue\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            CriteriaBasedQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            CriterionFilterConfiguration\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            CriterionFilterValue\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            RenderedFilterBlock\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            TechnologyFilterConfiguration\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/info.ts\n            \n            interface\n            InfoResource\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/info.ts\n            \n            interface\n            InfoResourceSection\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            ClassificationFrameworkResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            ClassificationViewCombinationResponse\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            ClassificationViewResponse\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            CriteriaGroupingResponse\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            CriteriaReview\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            TechnologyDossierResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/technology.ts\n            \n            interface\n            Technology\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/technology.ts\n            \n            interface\n            TechnologyDossier\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/set-to-array.pipe.ts\n            \n            pipe\n            SetToArrayPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/truncate.pipe.ts\n            \n            pipe\n            TruncatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/yes-no.pipe.ts\n            \n            pipe\n            YesNoPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/technologies/criterion-filter/criterion-filter.component.ts\n            \n            component\n            CriterionFilterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/technologies/technologies-resolver.service.ts\n            \n            guard\n            TechnologiesResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/technologies/technologies.component.ts\n            \n            component\n            TechnologiesComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-details-resolver.service.ts\n            \n            guard\n            TechnologyDetailsResolverService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-details/technology-details.component.ts\n            \n            component\n            TechnologyDetailsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-list/technology-list.component.ts\n            \n            component\n            TechnologyListComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-table/technology-table.component.ts\n            \n            component\n            TechnologyTableComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-table/technology-table.component.ts\n            \n            class\n            TableColumn\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^12.2.8\n        \n            @angular/cdk : ^12.2.8\n        \n            @angular/cli : ^12.2.8\n        \n            @angular/common : ^12.2.8\n        \n            @angular/compiler : ^12.2.8\n        \n            @angular/core : ^12.2.8\n        \n            @angular/flex-layout : ^12.0.0-beta.35\n        \n            @angular/forms : ^12.2.8\n        \n            @angular/material : ^12.2.8\n        \n            @angular/platform-browser : ^12.2.8\n        \n            @angular/platform-browser-dynamic : ^12.2.8\n        \n            @angular/router : ^12.2.8\n        \n            randomcolor : ^0.6.2\n        \n            rxjs : ^6.6.7\n        \n            tslib : ^2.3.1\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CriterionFilterType   (src/.../filtering.ts)\n                        \n                        \n                            Extension   (src/.../logo-locator.service.ts)\n                        \n                        \n                            TechnologyCategory   (src/.../technology.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/interfaces/filtering.ts\n    \n        \n            \n                \n                    \n                        \n                        CriterionFilterType\n                    \n                \n                    \n                        \n                            An enum representing a filter type for a given CriterionFilterConfiguration.\nBased on these settings the respective filtering behavior is generated.\n\n                        \n                    \n                        \n                            \n                                 bool\n                            \n                        \n                        \n                            \n                                Value : bool\n                            \n                        \n                        \n                            \n                                 lte\n                            \n                        \n                        \n                            \n                                Value : lte\n                            \n                        \n                        \n                            \n                                 gte\n                            \n                        \n                        \n                            \n                                Value : gte\n                            \n                        \n                        \n                            \n                                 containsOne\n                            \n                        \n                        \n                            \n                                Value : containsOne\n                            \n                        \n                        \n                            \n                                 containsAny\n                            \n                        \n                        \n                            \n                                Value : containsAny\n                            \n                        \n                        \n                            \n                                 containsAll\n                            \n                        \n                        \n                            \n                                Value : containsAll\n                            \n                        \n                        \n                            \n                                 excludesAll\n                            \n                        \n                        \n                            \n                                Value : excludesAll\n                            \n                        \n            \n        \n\n    src/app/core/services/logo-locator.service.ts\n    \n        \n            \n                \n                    \n                        \n                        Extension\n                    \n                \n                        \n                            \n                                 png\n                            \n                        \n                        \n                            \n                                Value : .png\n                            \n                        \n                        \n                            \n                                 jpg\n                            \n                        \n                        \n                            \n                                Value : .jpg\n                            \n                        \n                        \n                            \n                                 jpeg\n                            \n                        \n                        \n                            \n                                Value : .jpeg\n                            \n                        \n                        \n                            \n                                 svg\n                            \n                        \n                        \n                            \n                                Value : .svg\n                            \n                        \n            \n        \n\n    src/app/shared/interfaces/technology.ts\n    \n        \n            \n                \n                    \n                        \n                        TechnologyCategory\n                    \n                \n                    \n                        \n                            An enum representing different technology categories.\n\n                        \n                    \n                        \n                            \n                                 faas\n                            \n                        \n                        \n                            \n                                Value : faas\n                            \n                        \n                        \n                            \n                                 baas\n                            \n                        \n                        \n                            \n                                Value : baas\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFaaStener\n\n\nFaaStener is an open source selection support system intended to simplify browsing and filtering Function-as-a-Service (FaaS) platforms.\nIt is build using Angular and Angular Material and provides a graphical user interface for interacting with the platform’s data collected using the classification framework introduced in this research publication.\nUsing FaaStener, one can perform multi-attribute search for suitable FaaS platform based on the specified requirements and to visualize the corresponding results.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright [yyyy] [name of copyright owner]\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InformationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InformationRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TechnologiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TechnologiesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_InformationModule\n\n\n\ncluster_InformationModule_declarations\n\n\n\ncluster_InformationModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TechnologiesModule\n\n\n\ncluster_TechnologiesModule_declarations\n\n\n\ncluster_TechnologiesModule_imports\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBannerComponent\n\nBannerComponent\n\nAppModule -->\n\nBannerComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nAppModule -->\n\nOverviewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nInformationModule\n\nInformationModule\n\nInformationModule -->\n\nSharedModule->InformationModule\n\n\n\n\n\nBottomNavComponent \n\nBottomNavComponent \n\nBottomNavComponent  -->\n\nSharedModule->BottomNavComponent \n\n\n\n\n\nChildGroupingComponent \n\nChildGroupingComponent \n\nChildGroupingComponent  -->\n\nSharedModule->ChildGroupingComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nFrameworkRendererComponent \n\nFrameworkRendererComponent \n\nFrameworkRendererComponent  -->\n\nSharedModule->FrameworkRendererComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nPageNotFoundComponent \n\nPageNotFoundComponent \n\nPageNotFoundComponent  -->\n\nSharedModule->PageNotFoundComponent \n\n\n\n\n\nSetToArrayPipe \n\nSetToArrayPipe \n\nSetToArrayPipe  -->\n\nSharedModule->SetToArrayPipe \n\n\n\n\n\nTruncatePipe \n\nTruncatePipe \n\nTruncatePipe  -->\n\nSharedModule->TruncatePipe \n\n\n\n\n\nYesNoPipe \n\nYesNoPipe \n\nYesNoPipe  -->\n\nSharedModule->YesNoPipe \n\n\n\n\n\nTechnologiesModule\n\nTechnologiesModule\n\nTechnologiesModule -->\n\nSharedModule->TechnologiesModule\n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nCoreModule -->\n\nAppConfigService->CoreModule\n\n\n\n\n\nLogoLocatorService\n\nLogoLocatorService\n\nCoreModule -->\n\nLogoLocatorService->CoreModule\n\n\n\n\n\nRandomColorService\n\nRandomColorService\n\nCoreModule -->\n\nRandomColorService->CoreModule\n\n\n\n\n\nFaqComponent\n\nFaqComponent\n\nInformationModule -->\n\nFaqComponent->InformationModule\n\n\n\n\n\nFrameworkComponent\n\nFrameworkComponent\n\nInformationModule -->\n\nFrameworkComponent->InformationModule\n\n\n\n\n\nInformationComponent\n\nInformationComponent\n\nInformationModule -->\n\nInformationComponent->InformationModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nInformationModule -->\n\nResourcesComponent->InformationModule\n\n\n\n\n\nInformationRoutingModule\n\nInformationRoutingModule\n\nInformationModule -->\n\nInformationRoutingModule->InformationModule\n\n\n\n\n\nBottomNavComponent\n\nBottomNavComponent\n\nSharedModule -->\n\nBottomNavComponent->SharedModule\n\n\n\n\n\nChildGroupingComponent\n\nChildGroupingComponent\n\nSharedModule -->\n\nChildGroupingComponent->SharedModule\n\n\n\n\n\nCriterionComponent\n\nCriterionComponent\n\nSharedModule -->\n\nCriterionComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nFrameworkRendererComponent\n\nFrameworkRendererComponent\n\nSharedModule -->\n\nFrameworkRendererComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nSharedModule -->\n\nPageNotFoundComponent->SharedModule\n\n\n\n\n\nSetToArrayPipe\n\nSetToArrayPipe\n\nSharedModule -->\n\nSetToArrayPipe->SharedModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nSharedModule -->\n\nTruncatePipe->SharedModule\n\n\n\n\n\nYesNoPipe\n\nYesNoPipe\n\nSharedModule -->\n\nYesNoPipe->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nCriterionFilterComponent\n\nCriterionFilterComponent\n\nTechnologiesModule -->\n\nCriterionFilterComponent->TechnologiesModule\n\n\n\n\n\nTechnologiesComponent\n\nTechnologiesComponent\n\nTechnologiesModule -->\n\nTechnologiesComponent->TechnologiesModule\n\n\n\n\n\nTechnologyDetailsComponent\n\nTechnologyDetailsComponent\n\nTechnologiesModule -->\n\nTechnologyDetailsComponent->TechnologiesModule\n\n\n\n\n\nTechnologyListComponent\n\nTechnologyListComponent\n\nTechnologiesModule -->\n\nTechnologyListComponent->TechnologiesModule\n\n\n\n\n\nTechnologyTableComponent\n\nTechnologyTableComponent\n\nTechnologiesModule -->\n\nTechnologyTableComponent->TechnologiesModule\n\n\n\n\n\nTechnologiesRoutingModule\n\nTechnologiesRoutingModule\n\nTechnologiesModule -->\n\nTechnologiesRoutingModule->TechnologiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    21 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    24 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            criteriaGroupingsPath   (src/.../file-based-data.service.ts)\n                        \n                        \n                            criteriaPath   (src/.../file-based-data.service.ts)\n                        \n                        \n                            dossiersPath   (src/.../file-based-data.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            filterConfigurationsPath   (src/.../file-based-data.service.ts)\n                        \n                        \n                            frameworksPath   (src/.../file-based-data.service.ts)\n                        \n                        \n                            frameworkViewCombinationsPath   (src/.../file-based-data.service.ts)\n                        \n                        \n                            frameworkViewsPath   (src/.../file-based-data.service.ts)\n                        \n                        \n                            infoResourcesPath   (src/.../file-based-data.service.ts)\n                        \n                        \n                            randomColor   (src/.../random-color.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            supportedPlatformsPath   (src/.../file-based-data.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/app/core/services/file-based-data.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        criteriaGroupingsPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/framework/groupings.json'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        criteriaPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/framework/criteria.json'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dossiersPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/platforms/'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterConfigurationsPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/framework/filters.json'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frameworksPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/framework/frameworks.json'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frameworkViewCombinationsPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/framework/view-combinations.json'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frameworkViewsPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/framework/views.json'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infoResourcesPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/info/resources.json'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        supportedPlatformsPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/platforms/platforms.json'\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/services/random-color.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        randomColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
