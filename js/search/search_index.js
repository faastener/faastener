var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.494,1,1.145]],["body/components/AboutComponent.html",[0,0.685,1,1.745,2,1.492,3,0.104,4,0.081,5,1.059,6,1.098,7,1.059,8,1.059,9,0.081,10,2.81,11,0.953,12,2.573,13,2.391,14,1.938,15,1.546,16,5.563,17,1.546,18,4.71,19,1.246,20,0.467,21,3.226,22,0.169,23,0.486,24,0.013,25,0.104,26,0.317,27,5.653,28,3.703,29,4.71,30,4.71,31,3.703,32,3.405,33,4.71,34,4.103,35,3.027,36,3.205,37,2.488,38,2.517,39,4.103,40,3.703,41,3.703,42,2.583,43,1.533,44,4.71,45,4.103,46,4.103,47,4.71,48,4.71,49,5.328,50,2.398,51,2.845,52,4.103,53,3.623,54,3.854,55,2.191,56,4.71,57,4.71,58,3.114,59,4.28,60,4.71,61,2.649,62,2.798,63,4.71,64,4.103,65,4.103,66,4.71,67,1.492,68,7.19,69,4.71,70,4.71,71,4.71,72,4.103,73,3.166,74,4.71,75,4.71,76,4.71,77,4.71,78,4.71,79,1.38,80,1.438,81,2.115,82,2.983,83,2.014,84,1.724,85,2.798,86,1.935,87,2.29,88,2.285,89,2.587,90,2.198,91,2.537,92,2.479,93,2.81,94,2.479,95,1.492,96,2.398,97,3.226,98,3.166,99,3.405,100,6.388,101,2.968,102,3.129,103,2.29,104,3.166,105,3.226,106,3.703,107,4.103,108,3.703,109,2.81,110,3.226,111,2.169,112,2.008,113,2.169,114,1.438,115,2.332,116,4.71,117,2.169,118,2.033,119,1.893,120,2.81,121,2.81,122,2.169,123,2.81,124,2.798,125,2.517,126,1.724,127,3.748,128,3.748,129,1.916,130,2.332,131,3.114,132,2.972,133,1.38,134,1.431,135,2.033,136,2.29,137,1.724,138,2.191,139,2.81,140,2.81,141,2.81,142,2.537,143,3.226,144,0.859,145,1.546,146,1.492,147,1.059,148,2.008,149,1.059,150,0.446,151,1.059,152,0.92,153,1.059,154,0.92,155,1.059,156,0.92,157,1.059,158,0.92,159,1.022,160,1.059,161,0.92,162,1.059,163,0.92,164,0.674,165,1.059,166,0.889,167,1.059,168,0.92,169,1.059,170,0.889,171,1.059,172,0.92,173,1.059,174,0.92,175,1.059,176,0.889,177,0.889,178,1.059,179,0.92,180,1.059,181,0.889,182,0.987,183,1.059,184,0.889,185,1.059,186,0.889,187,1.059,188,0.889,189,0.495,190,1.059,191,0.92,192,1.059,193,0.889,194,0.987,195,1.059,196,1.059,197,0.005,198,0.008,199,0.005]],["title/components/AppComponent.html",[0,0.494,152,1.145]],["body/components/AppComponent.html",[0,0.802,1,1.233,2,1.832,3,0.14,4,0.109,5,1.898,7,1.419,8,1.419,9,0.109,11,1.277,12,2.646,13,2.462,14,1.832,19,0.969,20,1.007,22,0.208,23,0.651,24,0.014,25,0.14,26,0.425,43,0.904,95,1.37,144,1.151,145,1.898,146,1.832,147,1.419,148,2.283,149,1.419,150,0.581,151,1.419,152,1.983,153,1.419,154,1.233,155,1.419,156,1.233,157,1.419,158,1.233,159,1.37,160,1.419,161,1.233,162,1.419,163,1.233,164,0.904,165,1.419,166,1.191,167,1.419,168,1.233,169,1.419,170,1.191,171,1.419,172,1.233,173,1.419,174,1.233,175,1.419,176,1.191,177,1.191,178,1.419,179,1.233,180,1.419,181,1.191,182,1.322,183,1.419,184,1.191,185,1.419,186,1.191,187,1.419,188,1.191,189,0.58,190,1.419,191,1.233,192,1.419,193,1.191,194,1.322,195,1.419,196,1.419,197,0.007,198,0.009,199,0.007,200,3.766,201,1.649,202,2.676,203,5.036,204,0.366,205,1.048,206,6.513,207,1.487,208,2.903,209,5.781,210,2.857,211,4.324,212,7.457,213,5.781,214,1.707,215,0.568,216,0.87,217,5.781,218,4.324,219,7.247,220,1.487,221,2.546,222,4.324,223,1.539,224,5.781,225,5.781,226,5.781,227,5.781,228,1.776,229,1.849,230,4.324,231,4.324,232,6.057,233,5.781,234,1.419,235,1.708]],["title/injectables/AppConfigService.html",[236,1.789,237,2.258]],["body/injectables/AppConfigService.html",[3,0.181,4,0.141,9,0.141,19,1.251,20,1.107,22,0.245,23,0.841,24,0.014,25,0.181,26,0.549,150,0.448,197,0.009,198,0.011,199,0.009,204,0.472,205,1.235,207,1.751,208,3.274,214,1.649,215,0.67,216,0.841,220,1.436,229,2.388,236,3.035,237,3.829,238,3.754,239,6.83,240,4.865,241,7.346,242,7.647,243,6.809,244,7.346,245,4.865,246,6.662,247,6.809,248,5.932,249,5.585,250,5.585,251,5.585,252,4.391,253,2.589,254,5.585,255,5.585,256,5.585,257,5.585,258,1.901,259,5.585]],["title/modules/AppModule.html",[260,1.527,261,2.699]],["body/modules/AppModule.html",[1,2.209,3,0.16,4,0.125,9,0.125,13,1.465,22,0.296,23,0.747,24,0.013,25,0.16,26,0.488,144,1.32,152,2.34,154,2.209,176,2.133,179,2.209,197,0.008,198,0.01,199,0.008,252,3.9,260,1.886,261,5.658,262,2.307,263,2.789,264,4.135,265,4.386,266,3.125,267,2.525,268,4.321,269,4.321,270,4.321,271,4.321,272,5.205,273,5.205,274,4.599,275,3.984,276,3.125,277,2.65,278,4.96,279,3.379,280,6.323,281,5.508,282,3.334,283,3.379,284,6.323,285,4.321,286,4.321,287,6.323,288,4.96,289,6.323,290,4.96,291,3.9,292,4.96,293,3.9,294,4.321,295,4.96,296,4.96,297,4.96]],["title/classes/AppPage.html",[26,0.395,298,3.157]],["body/classes/AppPage.html",[3,0.192,4,0.15,9,0.15,20,1.024,22,0.214,24,0.013,25,0.192,26,0.585,90,2.35,146,1.885,197,0.01,198,0.011,199,0.01,203,5.182,204,0.503,207,1.819,220,1.819,253,2.689,282,3.999,298,5.561,299,3.999,300,5.182,301,7.811,302,7.811,303,5.949,304,8.092,305,5.949,306,5.182,307,5.949,308,5.949,309,5.949]],["title/modules/AppRoutingModule.html",[260,1.527,272,2.699]],["body/modules/AppRoutingModule.html",[0,0.846,3,0.222,4,0.143,9,0.143,14,2.179,22,0.277,23,0.855,24,0.014,25,0.183,26,0.558,37,2.079,176,1.895,181,1.895,197,0.009,198,0.011,199,0.009,228,2.332,262,2.64,267,2.89,272,4.623,279,3.033,283,3.675,294,4.945,310,5.677,311,4.463,312,6.877,313,4.971,314,4.623,315,5.677,316,4.104,317,4.945,318,2.89,319,6.877,320,5.295,321,4.945,322,4.945,323,4.104,324,6.877,325,5.677,326,5.677,327,5.677,328,5.677,329,5.677,330,5.677]],["title/components/BannerComponent.html",[0,0.494,154,1.145]],["body/components/BannerComponent.html",[0,0.697,1,0.949,2,1.526,3,0.108,4,0.142,5,1.092,6,1.132,7,1.092,8,1.092,9,0.084,11,0.982,12,2.581,13,2.399,14,1.966,15,1.581,17,1.581,19,1.268,20,0.482,22,0.173,23,0.501,24,0.014,25,0.108,26,0.327,35,2.766,36,2.766,37,2.514,41,3.787,43,0.695,51,2.24,52,5.406,53,2.341,67,1.526,79,1.423,81,2.504,82,2.797,83,1.423,85,1.976,86,2.549,88,2.705,89,1.547,90,2.602,92,2.146,94,3.387,95,1.526,96,3.159,102,1.871,103,3.017,113,2.236,114,2.146,118,2.096,119,2.723,122,2.236,124,3.362,126,1.778,127,4.01,128,4.105,129,2.861,131,3.605,133,2.421,134,0.856,135,2.096,136,2.341,138,2.24,141,2.898,142,2.615,144,0.886,145,1.581,146,1.526,147,1.092,148,2.037,149,1.092,150,0.454,151,1.092,152,0.949,153,1.092,154,1.77,155,1.092,156,0.949,157,1.092,158,0.949,159,1.054,160,1.092,161,0.949,162,1.092,163,0.949,164,0.695,165,1.092,166,0.917,167,1.092,168,0.949,169,1.092,170,0.917,171,1.092,172,0.949,173,1.092,174,0.949,175,1.092,176,0.917,177,0.917,178,1.092,179,0.949,180,1.092,181,0.917,182,1.017,183,1.092,184,0.917,185,1.092,186,0.917,187,1.092,188,0.917,189,0.504,190,1.092,191,0.949,192,1.092,193,0.917,194,1.017,195,1.092,196,1.092,197,0.005,198,0.008,199,0.005,204,0.281,331,2.898,332,6.205,333,5.661,334,4.816,335,3.326,336,4.195,337,2.936,338,3.787,339,2.452,340,4.816,341,6.865,342,3.362,343,2.573,344,4.816,345,4.816,346,4.816,347,4.816,348,4.195,349,3.787,350,4.816,351,3.481,352,4.195,353,3.481,354,3.911,355,3.326,356,3.326,357,3.326,358,2.615,359,4.931,360,2.898,361,2.898,362,3.159,363,2.898,364,2.615,365,5.661,366,3.237,367,4.816,368,2.898,369,4.195,370,2.06,371,3.326,372,3.184,373,4.816,374,3.326,375,4.816,376,2.898,377,6.865,378,4.171,379,5.661,380,5.661,381,2.898,382,1.092,383,3.326,384,3.326,385,3.326,386,2.898,387,2.405,388,2.898]],["title/components/BottomNavComponent.html",[0,0.494,156,1.145]],["body/components/BottomNavComponent.html",[0,0.758,1,1.105,2,1.7,3,0.125,4,0.098,5,1.272,6,1.319,7,1.272,8,1.272,9,0.098,11,1.145,12,2.621,13,2.437,14,1.7,15,1.762,17,1.762,19,0.868,20,1.01,22,0.239,23,0.583,24,0.013,25,0.125,26,0.381,43,0.81,79,1.657,80,1.727,81,2.04,82,2.432,83,1.657,84,2.071,89,1.802,90,1.531,92,1.727,95,2.481,98,2.605,99,2.801,102,3.018,117,2.605,118,2.442,119,2.518,122,2.605,124,2.302,129,2.302,133,1.657,136,1.884,137,2.071,138,1.802,144,1.032,145,1.762,146,1.7,147,1.272,148,2.181,149,1.272,150,0.559,151,1.272,152,1.105,153,1.272,154,1.105,155,1.272,156,1.895,157,1.272,158,1.105,159,1.228,160,1.272,161,1.105,162,1.272,163,1.105,164,0.81,165,1.272,166,1.068,167,1.272,168,1.105,169,1.272,170,1.068,171,1.272,172,1.105,173,1.272,174,1.105,175,1.272,176,1.068,177,1.068,178,1.272,179,1.105,180,1.272,181,1.068,182,1.185,183,1.272,184,1.068,185,1.272,186,1.068,187,1.272,188,1.068,189,0.548,190,1.272,191,1.105,192,1.272,193,1.068,194,1.185,195,1.272,196,1.272,197,0.006,198,0.009,199,0.006,201,1.531,202,2.529,204,0.454,205,0.973,207,1.38,210,2.73,214,1.585,215,0.605,216,0.808,220,1.38,221,2.254,229,1.657,235,2.12,354,2.302,358,3.047,364,3.047,370,1.657,389,6.287,390,5.217,391,3.376,392,5.366,393,6.155,394,5.366,395,6.155,396,5.366,397,3.018,398,6.155,399,3.875,400,6.287,401,5.366,402,1.265,403,3.875,404,5.366,405,3.875,406,1.884,407,0.997,408,0.81,409,3.875,410,2.867,411,2.302,412,3.376,413,3.875,414,2.801,415,5.366,416,2.302,417,5.366,418,5.366,419,3.376,420,5.366,421,3.376,422,2.801,423,1.973,424,2.801,425,3.047,426,3.376,427,2.179]],["title/components/ChildGroupingComponent.html",[0,0.494,158,1.145]],["body/components/ChildGroupingComponent.html",[0,0.742,1,1.064,2,1.656,3,0.121,4,0.094,5,1.225,6,1.27,7,1.225,8,1.225,9,0.094,11,1.102,12,2.611,13,2.428,14,1.656,15,1.716,17,1.716,19,1.351,20,1.06,22,0.217,23,0.562,24,0.014,25,0.121,26,0.367,43,0.78,79,1.596,80,1.663,81,1.419,82,2.065,83,1.596,84,1.993,85,2.216,86,1.533,87,2.541,88,2.147,89,1.735,94,2.688,95,1.182,96,2.66,103,1.814,119,2.053,126,1.993,127,1.993,128,1.993,131,3.63,133,2.235,140,3.25,144,0.993,145,1.716,146,1.656,147,1.225,148,2.146,149,1.225,150,0.483,151,1.225,152,1.064,153,1.225,154,1.064,155,1.225,156,1.064,157,1.225,158,1.864,159,2.505,160,1.225,161,1.064,162,1.225,163,1.064,164,0.78,165,1.225,166,1.028,167,1.225,168,1.064,169,1.225,170,1.028,171,1.225,172,1.064,173,1.225,174,1.064,175,1.225,176,1.028,177,1.028,178,1.225,179,1.064,180,1.225,181,1.028,182,1.141,183,1.225,184,1.028,185,1.225,186,1.028,187,1.225,188,1.028,189,0.537,190,1.225,191,1.064,192,1.225,193,1.028,194,1.141,195,1.225,196,1.225,197,0.006,198,0.008,199,0.006,204,0.315,215,0.677,223,1.391,235,2.582,370,1.596,397,2.939,402,1.185,407,1.551,408,1.261,410,3.912,428,6.509,429,5.874,430,3.25,431,3.2,432,6.032,433,5.226,434,5.254,435,2.293,436,6.88,437,5.254,438,5.254,439,6.032,440,5.226,441,3.731,442,2.478,443,3.731,444,3.731,445,3.731,446,2.792,447,3.731,448,1.141,449,2.351,450,5.607,451,5.226,452,5.226,453,3.104,454,4.109,455,4.109,456,2.098,457,3.731,458,2.508,459,2.508,460,3.731,461,4.552,462,3.731]],["title/interfaces/ClassificationCriterion.html",[463,0.433,464,1.586]],["body/interfaces/ClassificationCriterion.html",[3,0.097,4,0.075,9,0.075,22,0.108,24,0.014,25,0.221,35,1.334,36,1.334,37,1.096,42,2.604,43,1.318,50,1.524,53,2.588,55,1.392,58,1.524,67,2.23,134,1.955,150,0.615,164,1.603,189,0.525,197,0.005,198,0.007,199,0.005,204,0.253,205,0.808,215,0.62,216,1.082,223,1.186,234,0.983,258,2.007,337,1.28,339,2.71,343,2.381,382,1.463,402,1.469,407,1.146,408,1.382,431,2.476,435,2.86,442,2.423,448,1.804,463,0.835,464,2.492,465,0.825,466,1.683,467,2.239,468,2.647,469,2.381,470,2.845,471,3.162,472,3.162,473,3.504,474,2.31,475,3.2,476,2.891,477,2.423,478,3.162,479,3.162,480,2.929,481,2.814,482,1.863,483,2.647,484,2.845,485,2.971,486,2.476,487,2.476,488,1.334,489,2.277,490,2.277,491,1.778,492,1.778,493,1.778,494,2.929,495,1.683,496,1.986,497,1.018,498,1.599,499,1.455,500,1.778,501,3.504,502,3.504,503,1.778,504,1.683,505,3.37,506,1.778,507,3.421,508,1.778,509,2.71,510,1.392,511,1.334,512,1.778,513,1.392,514,1.778,515,3.162,516,1.392,517,1.906,518,1.906,519,1.778,520,1.778,521,1.778,522,2.647,523,2.647,524,2.381,525,1.334,526,1.334,527,1.778,528,1.778,529,2.269,530,1.778,531,2.647,532,3.162,533,1.778,534,1.778,535,1.778,536,1.778,537,1.683,538,1.599,539,1.778,540,1.392,541,2.269,542,2.269,543,1.761,544,1.778,545,1.182,546,1.778,547,1.778,548,1.599,549,0.983,550,2.647,551,1.778,552,1.778,553,1.778,554,1.683,555,1.683]],["title/interfaces/ClassificationFramework.html",[463,0.433,497,1.366]],["body/interfaces/ClassificationFramework.html",[3,0.094,4,0.073,9,0.073,22,0.105,24,0.014,25,0.22,35,1.301,36,1.301,37,1.069,42,2.656,43,1.521,50,1.486,53,2.832,55,1.358,58,1.486,67,2.213,134,1.946,150,0.612,164,1.493,189,0.519,197,0.005,198,0.007,199,0.005,204,0.247,205,0.793,215,0.644,216,1.095,223,1.165,234,0.958,258,1.983,337,1.249,339,2.966,343,2.337,382,1.436,402,1.465,407,1.125,408,1.369,431,2.44,435,2.809,442,2.394,448,1.605,463,0.831,464,2.302,465,0.804,466,1.642,467,2.225,468,1.734,469,1.56,470,2.337,471,2.598,472,2.598,473,1.734,474,2.293,475,3.208,476,2.791,477,2.155,478,2.598,479,2.598,480,2.905,481,2.791,482,2.182,483,3.116,484,3.113,485,2.956,486,2.903,487,3.047,488,1.95,489,2.669,490,2.492,491,2.598,492,2.598,493,2.598,494,3.055,495,2.46,496,2.338,497,1.489,498,1.56,499,2.127,500,2.598,501,3.707,502,3.707,503,2.598,504,3.277,505,3.335,506,1.734,507,3.396,508,1.734,509,2.671,510,1.358,511,1.301,512,1.734,513,1.358,514,1.734,515,3.116,516,1.358,517,1.871,518,1.871,519,1.734,520,1.734,521,1.734,522,2.598,523,2.598,524,2.337,525,1.301,526,1.301,527,1.734,528,1.734,529,2.227,530,1.734,531,2.598,532,3.116,533,1.734,534,1.734,535,1.734,536,1.734,537,1.642,538,1.56,539,1.734,540,1.358,541,2.227,542,2.227,543,1.728,544,1.734,545,1.153,546,1.734,547,1.734,548,1.56,549,0.958,550,2.598,551,1.734,552,1.734,553,1.734,554,1.642,555,1.642,556,1.301]],["title/interfaces/ClassificationFrameworkResponse.html",[463,0.433,557,2.145]],["body/interfaces/ClassificationFrameworkResponse.html",[3,0.159,4,0.123,9,0.123,22,0.226,24,0.014,25,0.25,42,2.633,51,3.221,67,1.554,134,1.986,150,0.629,189,0.437,197,0.008,198,0.01,199,0.008,204,0.415,205,1.138,215,0.742,216,0.945,223,1.306,402,1.525,406,2.384,407,1.262,435,1.865,448,1.92,463,0.866,465,1.352,467,2.118,474,2.577,475,3.172,482,2.347,488,2.186,489,2.685,517,2.098,518,2.098,525,2.186,526,2.186,543,1.938,545,1.938,557,3.355,558,2.913,559,4.6,560,4.113,561,4.363,562,2.621,563,3.09,564,2.621,565,3.09,566,2.621,567,3.09,568,3.09,569,2.621,570,2.621,571,3.531,572,2.281]],["title/interfaces/ClassificationView.html",[463,0.433,509,2.044]],["body/interfaces/ClassificationView.html",[3,0.097,4,0.076,9,0.076,22,0.108,24,0.014,25,0.222,35,1.339,36,1.339,37,1.1,42,2.607,43,1.32,50,1.529,53,2.873,55,1.397,58,1.529,67,2.232,134,1.957,150,0.615,164,1.505,189,0.526,197,0.005,198,0.007,199,0.005,204,0.254,205,0.81,215,0.621,216,1.06,223,1.19,234,0.986,258,2.011,337,1.285,339,3.009,343,2.388,382,1.467,402,1.469,407,1.149,408,1.384,431,2.482,435,2.919,442,2.72,448,1.632,463,0.835,464,2.335,465,0.828,466,1.69,467,2.241,468,1.784,469,1.605,470,2.388,471,2.655,472,2.655,473,1.784,474,2.313,475,3.222,476,2.817,477,2.192,478,2.655,479,2.655,480,2.933,481,2.817,482,1.866,483,2.655,484,3.158,485,2.974,486,2.482,487,2.482,488,1.339,489,2.282,490,2.282,491,1.784,492,1.784,493,1.784,494,2.933,495,1.69,496,1.992,497,1.022,498,1.605,499,1.461,500,1.784,501,3.752,502,3.752,503,1.784,504,1.69,505,3.375,506,1.784,507,3.659,508,1.784,509,3.009,510,1.397,511,1.339,512,1.784,513,1.397,514,1.784,515,3.51,516,1.397,517,1.911,518,1.911,519,1.784,520,1.784,521,1.784,522,2.655,523,2.655,524,2.388,525,1.339,526,1.339,527,1.784,528,1.784,529,2.275,530,1.784,531,2.655,532,3.17,533,1.784,534,1.784,535,1.784,536,1.784,537,1.69,538,1.605,539,1.784,540,1.397,541,2.275,542,2.275,543,1.766,544,1.784,545,1.187,546,1.784,547,1.784,548,1.605,549,0.986,550,2.655,551,1.784,552,1.784,553,1.784,554,1.69,555,1.69]],["title/interfaces/ClassificationViewCombination.html",[463,0.433,486,1.867]],["body/interfaces/ClassificationViewCombination.html",[3,0.095,4,0.074,9,0.074,22,0.106,24,0.014,25,0.22,35,1.314,36,1.314,37,1.079,42,2.5,43,1.31,50,1.5,53,2.846,55,1.371,58,1.5,67,2.22,134,1.949,150,0.613,164,1.497,189,0.521,197,0.005,198,0.007,199,0.005,204,0.249,205,0.799,215,0.646,216,1.098,223,1.558,234,0.968,258,1.992,337,1.26,339,2.98,343,2.354,382,1.446,402,1.466,407,1.691,408,1.374,431,2.454,435,2.815,442,2.405,448,1.614,463,0.833,464,2.313,465,0.812,466,1.658,467,2.23,468,1.751,469,1.575,470,2.354,471,2.617,472,2.617,473,1.751,474,2.3,475,3.213,476,2.799,477,2.168,478,2.617,479,2.617,480,2.914,481,2.799,482,1.851,483,2.617,484,3.128,485,2.962,486,2.723,487,2.454,488,1.314,489,2.812,490,2.504,491,1.751,492,1.751,493,1.751,494,2.914,495,1.658,496,1.964,497,1.003,498,1.575,499,1.433,500,1.751,501,3.722,502,3.722,503,1.751,504,1.658,505,3.897,506,2.617,507,3.645,508,1.751,509,2.98,510,2.049,511,1.964,512,2.617,513,2.049,514,2.617,515,3.134,516,1.371,517,1.884,518,1.884,519,1.751,520,1.751,521,1.751,522,2.617,523,2.617,524,2.354,525,1.314,526,1.314,527,1.751,528,1.751,529,2.243,530,1.751,531,2.617,532,3.134,533,1.751,534,1.751,535,1.751,536,1.751,537,1.658,538,1.575,539,1.751,540,1.371,541,2.243,542,2.243,543,1.741,544,1.751,545,1.164,546,1.751,547,1.751,548,1.575,549,0.968,550,2.617,551,1.751,552,1.751,553,1.751,554,1.658,555,1.658,573,2.947]],["title/interfaces/ClassificationViewCombinationResponse.html",[463,0.433,562,2.145]],["body/interfaces/ClassificationViewCombinationResponse.html",[3,0.156,4,0.122,9,0.122,22,0.224,24,0.014,25,0.249,42,2.761,51,3.378,67,1.532,134,2.012,150,0.627,189,0.431,197,0.008,198,0.01,199,0.008,204,0.409,205,1.128,215,0.739,216,0.937,223,1.831,402,1.523,406,2.351,407,1.868,435,1.839,448,1.903,463,0.871,465,1.333,467,2.221,474,2.568,475,3.16,482,2.032,488,2.773,489,2.942,517,2.068,518,2.068,525,2.155,526,2.155,543,1.911,545,1.911,557,2.584,558,2.872,559,3.047,560,4.314,561,4.576,562,3.325,563,4.576,564,2.584,565,3.047,566,2.584,567,3.047,568,3.047,569,2.584,570,2.584,571,3.499,572,2.249]],["title/interfaces/ClassificationViewResponse.html",[463,0.433,564,2.145]],["body/interfaces/ClassificationViewResponse.html",[3,0.159,4,0.124,9,0.124,22,0.226,24,0.014,25,0.25,42,2.778,51,3.398,67,1.556,134,2.019,150,0.629,189,0.438,197,0.008,198,0.01,199,0.008,204,0.415,205,1.14,215,0.718,223,1.308,402,1.525,406,2.388,407,1.264,435,1.868,448,1.922,463,0.874,465,1.354,467,2.234,474,2.578,475,3.173,482,2.047,488,2.19,489,2.964,517,2.101,518,2.101,525,2.19,526,2.19,543,1.941,545,1.941,557,2.625,558,2.918,559,3.095,560,4.339,561,4.603,562,2.625,563,3.095,564,3.358,565,4.603,566,2.625,567,3.095,568,3.095,569,2.625,570,2.625,571,3.535,572,2.285]],["title/modules/CoreModule.html",[260,1.527,273,2.699]],["body/modules/CoreModule.html",[3,0.168,4,0.131,9,0.131,22,0.286,23,0.784,24,0.014,25,0.168,26,0.512,31,4.096,144,1.387,197,0.008,198,0.01,199,0.008,216,0.784,234,1.71,237,4.563,253,2.48,260,2.48,262,2.423,263,2.93,264,3.874,265,3.282,266,4.487,267,2.652,273,5.573,275,4.11,276,3.282,277,2.784,279,2.784,283,3.485,411,3.094,574,4.538,575,4.538,576,3.811,577,4.409,578,5.27,579,5.21,580,6.523,581,6.523,582,4.715,583,4.715,584,5.21,585,4.096,586,5.21,587,5.21,588,5.21,589,4.538,590,5.21,591,5.21,592,5.21,593,3.766,594,4.538,595,5.21,596,5.21,597,5.21,598,3.766,599,5.21,600,5.21,601,5.21]],["title/interfaces/CriteriaBasedQuery.html",[463,0.433,602,1.867]],["body/interfaces/CriteriaBasedQuery.html",[3,0.116,4,0.09,9,0.09,20,0.854,22,0.129,24,0.014,25,0.228,38,3.153,61,2.857,62,3.814,67,1.87,112,1.668,125,1.915,134,0.922,150,0.543,164,1.062,189,0.526,197,0.006,198,0.008,199,0.006,215,0.666,223,0.954,234,1.177,235,1.416,258,1.22,372,3.611,382,2.108,402,1.399,408,1.546,463,0.833,464,1.416,465,0.988,467,2.214,476,1.473,477,2.638,480,2.746,481,2.087,482,1.896,485,2.781,490,1.533,494,1.533,496,3.137,510,2.745,511,2.63,513,3.548,516,2.745,540,1.667,549,2.225,556,1.597,572,2.363,602,2.363,603,2.129,604,3.87,605,3.319,606,3.415,607,3.018,608,3.584,609,3.122,610,3.269,611,3.584,612,3.967,613,3.269,614,2.409,615,2.409,616,4.271,617,3.685,618,2.016,619,2.258,620,2.258,621,2.409,622,4.181,623,3.415,624,2.409,625,3.415,626,1.667,627,2.409,628,2.409,629,3.018,630,3.018,631,2.129,632,2.258,633,3.121,634,3.201,635,2.409,636,2.409,637,2.409,638,2.715,639,2.258,640,1.915,641,4.866,642,3.018,643,3.201,644,2.409,645,3.415,646,3.415,647,3.201,648,2.409,649,3.201,650,3.718,651,4.045,652,4.045,653,3.018,654,2.409,655,3.018,656,3.201,657,3.201,658,2.409,659,2.409,660,2.409,661,2.409,662,2.409,663,2.258]],["title/interfaces/CriteriaGrouping.html",[442,1.65,463,0.433]],["body/interfaces/CriteriaGrouping.html",[3,0.094,4,0.074,9,0.074,22,0.105,24,0.014,25,0.22,35,1.302,36,1.302,37,1.07,42,2.492,43,1.305,50,1.488,53,2.552,55,1.359,58,1.488,67,2.371,134,1.838,150,0.612,164,1.493,189,0.556,197,0.005,198,0.007,199,0.005,204,0.247,205,0.794,215,0.644,216,1.126,223,1.165,234,0.959,258,1.984,337,1.25,339,2.672,343,2.805,382,1.437,402,1.465,407,1.126,408,1.37,431,3.048,435,2.969,442,2.565,448,1.605,463,0.831,464,2.589,465,0.805,466,1.643,467,2.226,468,1.736,469,1.561,470,2.805,471,3.118,472,3.118,473,1.736,474,2.294,475,3.26,476,2.792,477,2.157,478,2.6,479,2.6,480,2.906,481,2.792,482,1.844,483,2.6,484,2.805,485,2.956,486,2.441,487,2.441,488,1.302,489,2.245,490,2.493,491,1.736,492,1.736,493,1.736,494,2.906,495,1.643,496,1.951,497,0.994,498,1.561,499,1.421,500,1.736,501,3.708,502,3.708,503,1.736,504,1.643,505,3.336,506,1.736,507,3.397,508,1.736,509,2.672,510,1.359,511,1.302,512,1.736,513,1.359,514,1.736,515,3.708,516,2.036,517,2.803,518,2.245,519,2.6,520,2.6,521,2.6,522,3.118,523,3.118,524,2.805,525,1.302,526,1.302,527,1.736,528,2.6,529,2.672,530,2.6,531,2.6,532,3.118,533,1.736,534,1.736,535,1.736,536,1.736,537,1.643,538,1.561,539,1.736,540,1.359,541,2.229,542,2.229,543,1.729,544,1.736,545,1.154,546,1.736,547,1.736,548,1.561,549,0.959,550,2.6,551,1.736,552,1.736,553,1.736,554,1.643,555,1.643]],["title/interfaces/CriteriaGroupingResponse.html",[463,0.433,566,2.145]],["body/interfaces/CriteriaGroupingResponse.html",[3,0.156,4,0.122,9,0.122,22,0.224,24,0.014,25,0.248,42,2.614,51,3.376,67,1.969,134,1.867,150,0.627,189,0.43,197,0.008,198,0.01,199,0.008,204,0.408,205,1.127,215,0.738,216,1.093,223,1.285,402,1.528,406,2.347,407,1.242,435,2.363,448,1.901,463,0.871,465,1.33,467,2.22,474,2.567,475,3.159,482,2.03,488,2.152,489,2.658,517,3.104,518,2.065,525,2.152,526,2.152,543,1.908,545,1.908,557,2.58,558,2.868,559,3.042,560,4.311,561,4.573,562,2.58,563,3.042,564,2.58,565,3.042,566,3.321,567,4.573,568,4.573,569,2.58,570,2.58,571,3.496,572,2.246]],["title/interfaces/CriteriaReview.html",[463,0.433,571,2.258]],["body/interfaces/CriteriaReview.html",[3,0.168,4,0.13,9,0.13,20,0.751,22,0.234,24,0.014,25,0.253,42,2.701,51,3.304,67,1.642,134,1.827,150,0.597,189,0.462,197,0.008,198,0.01,199,0.008,223,1.38,402,1.517,406,2.52,407,1.333,435,1.971,448,2.173,463,0.875,465,1.428,467,2.173,474,2.446,475,3.061,482,2.098,488,2.31,489,2.781,517,2.217,518,2.217,525,2.31,526,2.31,543,2.048,545,2.048,557,2.77,558,3.079,559,3.266,560,4.22,561,4.477,562,2.77,563,3.266,564,2.77,565,3.266,566,2.77,567,3.266,568,3.266,569,2.77,570,2.77,571,3.996,572,3.024,609,4.515,664,5.183]],["title/components/CriterionComponent.html",[0,0.494,161,1.145]],["body/components/CriterionComponent.html",[0,0.671,1,0.888,2,1.454,3,0.207,4,0.078,5,1.022,6,1.059,7,1.022,8,1.022,9,0.078,11,0.919,12,2.562,13,2.381,14,1.454,15,1.506,17,1.506,19,1.221,20,1.052,22,0.216,23,0.469,24,0.014,25,0.101,26,0.306,43,0.651,79,1.331,80,1.387,81,2.438,82,3.132,83,2.742,84,2.912,86,2.634,88,2.47,89,2.134,90,2.74,92,2.428,94,2.68,95,0.986,96,3.061,102,1.751,103,1.513,112,2.515,114,2.045,119,2.182,125,3.706,127,3.213,128,3.213,131,3.264,132,3.706,133,1.331,134,0.801,138,2.134,144,0.829,145,1.506,146,1.454,147,1.022,148,1.974,149,1.022,150,0.437,151,1.022,152,0.888,153,1.022,154,0.888,155,1.022,156,0.888,157,1.022,158,0.888,159,1.726,160,1.022,161,1.715,162,1.022,163,0.888,164,1.402,165,1.022,166,0.858,167,1.022,168,0.888,169,1.022,170,0.858,171,1.022,172,0.888,173,1.022,174,0.888,175,1.022,176,0.858,177,0.858,178,1.022,179,0.888,180,1.022,181,0.858,182,0.952,183,1.022,184,0.858,185,1.022,186,0.858,187,1.022,188,0.858,189,0.485,190,1.022,191,0.888,192,1.022,193,0.858,194,0.952,195,1.022,196,1.022,197,0.005,198,0.007,199,0.005,201,1.309,202,2.239,204,0.263,205,0.832,207,1.18,210,2.47,215,0.682,220,0.801,221,1.68,223,1.221,369,5.238,370,1.962,372,1.751,378,3.663,382,2.105,386,2.712,397,2.58,402,1.216,407,0.801,408,0.651,410,3.584,416,1.849,423,3.264,427,1.751,448,2.051,449,1.961,456,3.382,461,3.997,464,2.153,477,2.239,541,2.774,613,3.624,665,2.712,666,5.449,667,4.588,668,5.449,669,5.449,670,4.588,671,3.113,672,3.113,673,3.113,674,4.588,675,3.113,676,3.113,677,3.113,678,3.113,679,4.588,680,4.588,681,4.588,682,3.113,683,3.113,684,3.113,685,4.588,686,5.449,687,4.588,688,3.997,689,4.588,690,4.588,691,3.607,692,4.588,693,4.588,694,4.588,695,3.607,696,4.588,697,4.588,698,2.712,699,6.013,700,3.113,701,2.712,702,2.891,703,3.113,704,3.113,705,3.113,706,2.093,707,2.891]],["title/components/CriterionFilterComponent.html",[0,0.494,163,1.145]],["body/components/CriterionFilterComponent.html",[0,0.679,1,0.906,2,1.475,3,0.103,4,0.08,5,1.043,6,1.081,7,1.043,8,1.043,9,0.08,11,0.938,12,2.568,13,2.386,14,1.475,15,1.529,17,1.529,19,0.712,20,1.011,22,0.218,23,0.478,24,0.014,25,0.103,26,0.312,35,1.416,43,0.664,51,2.824,79,1.359,80,1.416,81,1.771,82,2.399,83,1.992,86,1.913,87,1.544,88,1.305,94,2.457,95,1.475,102,1.787,103,1.544,114,2.076,119,1.876,129,1.887,133,1.359,144,0.846,145,1.529,146,1.475,147,1.043,148,1.993,149,1.043,150,0.518,151,1.043,152,0.906,153,1.043,154,0.906,155,1.043,156,0.906,157,1.043,158,0.906,159,1.006,160,1.043,161,0.906,162,1.043,163,1.732,164,1.573,165,1.043,166,0.875,167,1.043,168,0.906,169,1.043,170,0.875,171,1.043,172,0.906,173,1.043,174,0.906,175,1.043,176,0.875,177,0.875,178,1.043,179,0.906,180,1.043,181,0.875,182,0.972,183,1.043,184,0.875,185,1.043,186,0.875,187,1.043,188,0.875,189,0.491,190,1.043,191,0.906,192,1.043,193,0.875,194,0.972,195,1.043,196,1.043,197,0.005,198,0.007,199,0.005,201,1.328,202,2.265,204,0.269,205,0.844,207,1.198,210,2.495,214,0.938,215,0.636,216,0.478,220,1.198,221,2.019,223,1.24,229,1.359,253,1.208,362,1.617,370,1.359,378,2.135,382,1.043,397,2.619,402,0.844,407,0.817,408,1.496,410,2.488,423,2.371,427,1.787,453,1.887,477,1.305,549,1.043,602,1.477,604,3.61,613,1.617,617,2.807,633,2.68,634,4.398,652,2.002,702,2.002,706,2.135,708,6.236,709,5.629,710,2.767,711,5.513,712,4.657,713,5.513,714,3.985,715,6.072,716,4.657,717,5.513,718,3.177,719,5.289,720,4.657,721,4.057,722,3.177,723,5.513,724,3.177,725,3.177,726,3.177,727,5.513,728,5.513,729,3.177,730,4.657,731,2.002,732,2.296,733,1.617,734,7.527,735,4.657,736,4.657,737,4.657,738,4.657,739,3.177,740,4.657,741,3.177,742,3.177,743,3.177,744,3.177,745,3.177,746,3.177,747,3.177,748,5.513,749,3.177,750,3.177,751,4.657,752,3.177,753,3.177,754,3.177,755,3.177,756,4.657,757,3.177,758,3.177,759,3.177,760,3.177,761,2.135,762,3.177,763,3.177,764,3.177,765,3.177,766,3.177,767,6.756,768,5.513,769,6.072,770,2.498,771,3.177,772,3.177,773,3.177,774,2.498,775,3.177]],["title/interfaces/CriterionFilterConfiguration.html",[463,0.433,617,2.044]],["body/interfaces/CriterionFilterConfiguration.html",[3,0.11,4,0.086,9,0.086,20,0.71,22,0.123,24,0.014,25,0.224,38,2.62,61,2.758,62,3.41,67,1.554,112,1.61,125,1.822,134,0.877,150,0.555,164,1.2,189,0.511,197,0.005,198,0.008,199,0.005,204,0.288,205,0.889,215,0.742,216,0.738,223,0.908,234,1.12,235,1.347,258,1.669,372,3.53,382,2.061,402,1.441,408,1.526,463,0.825,464,1.937,465,0.94,467,2.182,476,1.401,477,2.732,480,2.685,481,2.359,482,1.854,485,2.736,490,1.459,494,2.097,496,3.18,510,2.67,511,2.559,513,3.51,516,2.67,540,2.92,549,2.183,556,1.52,572,1.586,602,1.586,603,2.026,604,3.902,605,2.758,606,2.293,607,2.026,610,2.923,612,3.859,613,3.196,614,2.293,615,2.293,616,4.19,617,3.716,618,1.918,619,2.149,620,2.149,621,2.293,622,4.336,623,3.859,624,2.293,625,3.296,626,1.586,627,2.293,628,3.296,629,3.41,630,3.41,631,3.729,632,3.09,633,3.468,634,4.19,635,3.296,636,3.296,637,4.22,638,2.62,639,2.149,640,1.822,641,4.796,642,2.913,643,3.09,644,2.293,645,3.296,646,3.296,647,3.09,648,2.293,649,3.09,650,3.617,651,3.955,652,3.955,653,2.913,654,2.293,655,2.913,656,3.09,657,3.09,658,2.293,659,2.293,660,2.293,661,2.293,662,2.293,663,2.149]],["title/interfaces/CriterionFilterValue.html",[463,0.433,610,2.044]],["body/interfaces/CriterionFilterValue.html",[3,0.112,4,0.087,9,0.087,20,0.719,22,0.125,24,0.014,25,0.225,38,2.654,61,2.793,62,3.759,67,1.574,112,1.63,125,1.855,134,0.893,150,0.537,164,1.038,189,0.516,197,0.006,198,0.008,199,0.006,204,0.294,205,0.901,215,0.745,216,0.748,223,1.544,234,1.14,235,1.372,258,1.181,372,3.559,382,2.078,402,1.404,408,1.633,463,0.828,464,1.372,465,0.957,467,2.194,476,1.426,477,2.6,480,2.48,481,2.04,482,1.869,485,2.752,490,2.124,494,1.485,496,3.105,510,2.697,511,2.584,513,3.566,516,2.697,540,1.615,549,2.355,556,1.547,572,1.615,602,1.615,603,2.062,604,3.893,605,3.261,606,2.334,607,2.062,610,3.222,612,3.898,613,3.222,614,2.334,615,2.334,616,4.219,617,3.651,618,1.953,619,2.187,620,2.187,621,2.334,622,4.137,623,3.339,624,2.334,625,3.898,626,1.615,627,2.334,628,2.334,629,2.95,630,2.95,631,2.062,632,2.187,633,3.386,634,4.219,635,2.334,636,2.334,637,2.334,638,2.654,639,2.187,640,1.855,641,4.821,642,2.95,643,3.129,644,2.334,645,3.339,646,3.339,647,3.129,648,2.334,649,3.129,650,3.654,651,3.988,652,3.988,653,2.95,654,2.334,655,2.95,656,3.129,657,3.129,658,2.334,659,3.339,660,3.339,661,3.339,662,2.334,663,2.187]],["title/interfaces/CriterionInstance.html",[448,1.228,463,0.433]],["body/interfaces/CriterionInstance.html",[3,0.097,4,0.076,9,0.076,22,0.108,24,0.014,25,0.222,35,1.338,36,1.338,37,1.099,42,2.606,43,1.32,50,1.528,53,2.593,55,1.396,58,1.528,67,2.172,134,1.851,150,0.587,164,1.554,189,0.59,197,0.005,198,0.007,199,0.005,204,0.254,205,0.81,215,0.581,216,1.103,223,1.189,234,0.985,258,2.252,337,1.284,339,2.715,343,2.85,382,1.466,402,1.45,407,1.149,408,1.383,431,2.481,435,2.785,442,2.427,448,1.807,463,0.835,464,2.495,465,0.827,466,1.688,467,2.24,468,1.783,469,1.604,470,2.386,471,2.653,472,2.653,473,1.783,474,2.073,475,3.222,476,2.816,477,2.719,478,3.168,479,3.168,480,2.932,481,2.816,482,1.865,483,2.653,484,2.85,485,2.973,486,2.481,487,2.481,488,1.338,489,2.281,490,2.281,491,1.783,492,1.783,493,1.783,494,3.078,495,1.688,496,1.99,497,1.021,498,1.604,499,1.459,500,1.783,501,3.509,502,3.509,503,1.783,504,1.688,505,3.374,506,1.783,507,3.424,508,1.783,509,2.715,510,1.396,511,1.338,512,1.783,513,1.396,514,1.783,515,3.168,516,1.396,517,1.91,518,1.91,519,1.783,520,1.783,521,1.783,522,3.168,523,3.168,524,2.85,525,1.338,526,1.338,527,1.783,528,1.783,529,2.715,530,1.783,531,2.653,532,3.168,533,1.783,534,1.783,535,1.783,536,2.653,537,2.512,538,1.604,539,1.783,540,2.747,541,2.715,542,2.715,543,2.495,544,2.653,545,2.334,546,1.783,547,1.783,548,1.604,549,0.985,550,2.653,551,1.783,552,1.783,553,1.783,554,1.688,555,1.688]],["title/interfaces/CriterionValue.html",[463,0.433,541,2.044]],["body/interfaces/CriterionValue.html",[3,0.096,4,0.075,9,0.075,22,0.107,24,0.014,25,0.221,35,1.324,36,1.324,37,1.088,42,2.507,43,1.314,50,2.256,53,2.576,55,1.381,58,2.256,67,2.164,134,1.846,150,0.585,164,1.527,189,0.523,197,0.005,198,0.007,199,0.005,204,0.251,205,0.803,215,0.618,216,1.143,223,1.564,234,0.975,258,2.244,337,1.27,339,2.698,343,2.368,382,1.74,402,1.468,407,1.14,408,1.586,431,2.465,435,2.778,442,2.414,448,1.797,463,0.834,464,2.321,465,0.818,466,1.67,467,2.268,468,1.764,469,1.587,470,2.368,471,2.632,472,2.632,473,1.764,474,2.064,475,3.148,476,2.807,477,2.177,478,2.632,479,2.632,480,2.82,481,2.709,482,1.857,483,3.148,484,2.832,485,2.967,486,2.465,487,2.465,488,1.324,489,2.267,490,2.267,491,1.764,492,1.764,493,1.764,494,3.125,495,1.67,496,2.362,497,1.011,498,1.587,499,1.444,500,1.764,501,3.49,502,3.49,503,1.764,504,1.67,505,3.359,506,1.764,507,3.413,508,1.764,509,2.698,510,1.381,511,1.324,512,1.764,513,1.381,514,1.764,515,3.148,516,1.381,517,1.895,518,2.267,519,1.764,520,1.764,521,1.764,522,2.632,523,2.632,524,2.368,525,1.324,526,1.324,527,1.764,528,1.764,529,2.256,530,1.764,531,2.632,532,3.148,533,1.764,534,1.764,535,1.764,536,1.764,537,1.67,538,1.587,539,1.764,540,1.381,541,2.698,542,2.698,543,1.75,544,1.764,545,1.173,546,2.632,547,1.764,548,1.587,549,1.74,550,3.916,551,2.632,552,2.632,553,2.632,554,2.492,555,3.305]],["title/injectables/DataService.html",[236,1.789,576,1.952]],["body/injectables/DataService.html",[3,0.058,4,0.045,9,0.045,19,0.404,20,1.067,22,0.227,23,0.271,24,0.014,25,0.058,26,0.177,43,0.799,67,1.41,112,1.256,134,1.144,150,0.586,189,0.474,197,0.012,198,0.005,199,0.003,204,0.152,207,0.768,208,2.51,214,2.051,215,0.673,216,1.045,220,1.882,229,0.771,232,1.57,235,2.328,236,1.331,238,1.211,245,1.57,246,3.876,248,2.602,252,1.417,253,2.961,258,0.613,318,3.753,378,2.008,402,1.421,406,0.876,407,1.144,408,1.111,435,1.692,442,2.185,446,3.149,450,1.417,464,1.18,474,2.122,475,2.511,482,1.805,486,1.779,489,1.636,497,1.514,504,2.151,505,0.963,507,2.398,509,1.947,517,0.771,545,0.712,549,0.592,556,1.983,557,0.963,562,1.596,564,1.596,566,2.636,569,0.963,570,0.963,572,0.838,576,1.452,577,2.502,589,1.57,604,0.876,626,0.838,633,0.876,688,1.57,731,1.135,733,3.58,776,1.417,777,2.986,778,4.449,779,2.986,780,2.986,781,2.986,782,2.986,783,2.986,784,2.986,785,4.449,786,4.449,787,4.449,788,2.986,789,2.986,790,2.986,791,2.986,792,4.449,793,2.986,794,4.449,795,2.986,796,2.571,797,2.986,798,2.765,799,1.802,800,2.986,801,1.802,802,1.802,803,4.242,804,2.986,805,1.802,806,3.825,807,2.986,808,1.802,809,2.986,810,2.986,811,1.802,812,2.986,813,1.802,814,2.986,815,2.986,816,1.802,817,2.986,818,1.802,819,1.802,820,1.802,821,1.802,822,2.986,823,1.802,824,6.113,825,2.986,826,1.802,827,2.986,828,1.802,829,2.986,830,1.802,831,1.802,832,2.986,833,1.802,834,2.602,835,1.802,836,2.986,837,1.802,838,2.986,839,2.986,840,1.802,841,1.802,842,4.673,843,1.802,844,0.838,845,2.986,846,3.825,847,1.802,848,1.302,849,1.802,850,3.825,851,1.302,852,1.417,853,0.917,854,2.008,855,1.135,856,1.802,857,1.07,858,1.417,859,1.417,860,1.57,861,1.417,862,1.57,863,1.417,864,1.57,865,1.417,866,1.57,867,1.57,868,1.417,869,1.57,870,1.417,871,1.57,872,1.417,873,1.57,874,1.417,875,1.57,876,1.417,877,1.57,878,3.825,879,1.802,880,1.802,881,2.986,882,1.802,883,1.802,884,1.802,885,1.802,886,1.417,887,1.802,888,1.802,889,1.802,890,1.802,891,1.802,892,3.849,893,7.187,894,5.195,895,1.802,896,2.986,897,1.802,898,2.986,899,1.802,900,3.498,901,2.602,902,1.802,903,1.802,904,3.825,905,1.802,906,2.986,907,1.802,908,1.802,909,5.317,910,1.802,911,1.802,912,1.802,913,1.802,914,1.802,915,1.802,916,1.802,917,3.825,918,2.986,919,1.802,920,1.417,921,1.802,922,1.802,923,1.802,924,2.986,925,1.802,926,1.802,927,2.986,928,3.825,929,3.825,930,2.986,931,1.802,932,3.825,933,3.825,934,2.986,935,2.986,936,2.986,937,4.449,938,2.986,939,1.802,940,1.802,941,1.802,942,1.802,943,1.802,944,1.802,945,1.802,946,1.802,947,1.802,948,3.825,949,2.986,950,1.802,951,1.802,952,2.348,953,1.802,954,1.802,955,1.802,956,2.986,957,1.802,958,1.802,959,1.802,960,1.802,961,1.802,962,1.802,963,2.348,964,1.802,965,1.802,966,1.802,967,1.802,968,1.802,969,1.802,970,1.802,971,1.802,972,1.802,973,1.802,974,1.802,975,1.802,976,1.802,977,1.802,978,1.802,979,1.802,980,1.802,981,1.802,982,1.802,983,1.802,984,1.802,985,1.802,986,1.802,987,1.802,988,3.825,989,2.986,990,1.802,991,1.802,992,1.802,993,2.986,994,1.802,995,1.802,996,2.986,997,1.302,998,1.802,999,1.802,1000,2.159,1001,2.986,1002,1.802,1003,1.802,1004,1.302,1005,1.802,1006,1.802,1007,1.802,1008,1.802,1009,1.802,1010,1.802,1011,1.802,1012,1.802,1013,1.802,1014,1.802,1015,1.802,1016,2.765,1017,1.802,1018,1.802,1019,3.825,1020,1.802,1021,1.802,1022,1.802,1023,1.802,1024,1.302,1025,1.802,1026,1.802,1027,1.802,1028,1.802,1029,2.986,1030,1.802,1031,1.802,1032,1.802,1033,1.802,1034,1.802,1035,2.986,1036,2.986,1037,1.802,1038,1.802,1039,1.802,1040,1.802,1041,1.802,1042,1.802,1043,1.802,1044,1.802,1045,1.802]],["title/classes/EnsureModuleLoadedOnceGuard.html",[26,0.395,583,2.902]],["body/classes/EnsureModuleLoadedOnceGuard.html",[3,0.197,4,0.153,9,0.153,19,1.364,20,0.882,22,0.219,24,0.013,25,0.197,26,0.599,150,0.488,197,0.01,198,0.011,199,0.01,214,1.798,215,0.599,216,0.917,260,2.898,261,4.093,299,4.093,583,5.184,585,5.993,733,3.1,1046,6.247,1047,5.305,1048,7.171,1049,6.089,1050,7.171,1051,6.089,1052,6.089,1053,6.089]],["title/components/FaqComponent.html",[0,0.494,166,1.106]],["body/components/FaqComponent.html",[0,0.839,1,1.354,2,1.948,3,0.153,4,0.119,5,1.558,6,1.616,7,1.558,8,1.558,9,0.119,11,1.402,12,2.666,13,2.481,14,1.948,15,2.018,17,2.018,19,1.528,20,0.89,22,0.171,23,0.715,24,0.013,25,0.153,26,0.467,43,0.992,95,1.504,144,1.264,145,2.018,146,1.948,147,1.558,148,2.368,149,1.558,150,0.546,151,1.558,152,1.354,153,1.558,154,1.354,155,1.558,156,1.354,157,1.558,158,1.354,159,1.504,160,1.558,161,1.354,162,1.558,163,1.354,164,0.992,165,1.558,166,1.987,167,1.558,168,1.354,169,1.558,170,1.308,171,1.558,172,1.354,173,1.558,174,1.354,175,1.558,176,1.308,177,1.308,178,1.558,179,1.354,180,1.558,181,1.308,182,1.452,183,1.558,184,1.308,185,1.558,186,1.308,187,1.558,188,1.308,189,0.607,190,1.558,191,1.354,192,1.558,193,1.308,194,1.452,195,1.558,196,1.558,197,0.008,198,0.01,199,0.008,201,1.754,202,2.801,204,0.401,207,1.581,210,2.963,220,1.221,221,2.251,1054,4.135,1055,6.282,1056,6.818,1057,6.148,1058,4.747,1059,4.747,1060,5.355]],["title/components/FooterComponent.html",[0,0.494,168,1.145]],["body/components/FooterComponent.html",[0,0.773,1,1.15,2,2.141,3,0.13,4,0.101,5,1.323,6,1.372,7,1.323,8,1.323,9,0.101,11,1.191,12,2.63,13,2.446,14,1.747,15,1.81,17,1.81,19,1.408,20,0.798,22,0.198,23,0.607,24,0.013,25,0.13,26,0.396,27,4.335,40,4.335,43,0.843,81,2.097,82,2.483,86,1.656,87,2.681,88,2.582,89,2.565,90,1.593,92,2.801,94,1.797,95,1.747,96,2.052,101,2.54,103,1.96,104,2.71,113,2.71,114,1.797,119,1.876,126,2.946,133,2.358,136,1.96,137,2.154,138,1.875,144,1.073,145,1.81,146,1.747,147,1.323,148,2.218,149,1.323,150,0.504,151,1.323,152,1.15,153,1.323,154,1.15,155,1.323,156,1.15,157,1.323,158,1.15,159,1.277,160,1.323,161,1.15,162,1.323,163,1.15,164,0.843,165,1.323,166,1.111,167,1.323,168,1.927,169,1.323,170,1.111,171,1.323,172,1.15,173,1.323,174,1.15,175,1.323,176,1.111,177,1.111,178,1.323,179,1.15,180,1.323,181,1.111,182,1.233,183,1.323,184,1.111,185,1.323,186,1.111,187,1.323,188,1.111,189,0.56,190,1.323,191,1.15,192,1.323,193,1.111,194,1.233,195,1.323,196,1.323,197,0.006,198,0.009,199,0.006,201,1.573,202,2.582,204,0.341,207,1.418,210,2.776,220,1.037,221,2.019,354,2.395,363,3.512,368,3.512,370,1.724,387,2.914,416,2.395,456,2.267,458,2.71,469,3.61,495,3.101,1061,3.512,1062,5.514,1063,6.284,1064,5.514,1065,4.031,1066,4.031,1067,5.514,1068,5.885,1069,5.514,1070,5.514,1071,5.514,1072,4.803,1073,4.803,1074,5.514,1075,5.514,1076,5.514,1077,5.514,1078,5.514,1079,5.514,1080,5.514,1081,5.514,1082,5.514,1083,2.914,1084,4.031,1085,4.031,1086,5.514,1087,4.031,1088,4.031,1089,3.512,1090,4.031,1091,3.512,1092,4.031,1093,3.101,1094,4.031,1095,3.17]],["title/components/FrameworkComponent.html",[0,0.494,170,1.106]],["body/components/FrameworkComponent.html",[0,0.822,1,1.297,2,1.893,3,0.147,4,0.114,5,1.492,6,1.547,7,1.492,8,1.492,9,0.114,11,1.342,12,2.657,13,2.472,14,1.893,15,1.962,17,1.962,19,1.018,20,0.967,22,0.24,23,0.684,24,0.013,25,0.147,26,0.447,43,1.581,95,1.44,144,1.21,145,1.962,146,1.893,147,1.492,148,2.328,149,1.492,150,0.568,151,1.492,152,1.297,153,1.492,154,1.297,155,1.492,156,1.297,157,1.492,158,1.297,159,1.44,160,1.492,161,1.297,162,1.492,163,1.297,164,0.95,165,1.492,166,1.252,167,1.492,168,1.297,169,1.492,170,1.954,171,1.492,172,1.297,173,1.492,174,1.297,175,1.492,176,1.252,177,1.252,178,1.492,179,1.297,180,1.492,181,1.252,182,1.39,183,1.492,184,1.252,185,1.492,186,1.252,187,1.492,188,1.252,189,0.595,190,1.492,191,1.297,192,1.492,193,1.252,194,1.39,195,1.492,196,1.492,197,0.007,198,0.01,199,0.007,201,1.705,202,2.743,204,0.384,205,1.084,207,1.537,210,2.914,214,1.342,215,0.588,216,0.684,220,1.169,221,2.188,228,1.867,229,1.944,497,2.272,853,2.314,1096,3.96,1097,6.676,1098,5.976,1099,3.286,1100,4.767,1101,5.976,1102,3.193,1103,4.545,1104,3.286,1105,3.574,1106,3.96]],["title/components/FrameworkRendererComponent.html",[0,0.494,172,1.145]],["body/components/FrameworkRendererComponent.html",[0,0.657,1,0.858,2,1.417,3,0.097,4,0.076,5,0.987,6,1.023,7,0.987,8,0.987,9,0.076,11,0.888,12,2.552,13,2.371,14,1.417,15,1.468,17,1.468,19,0.674,20,1.077,22,0.227,23,0.453,24,0.014,25,0.097,26,0.296,43,1.574,79,1.286,81,2.403,82,3.006,83,2.529,84,2.39,85,1.786,86,2.194,87,2.596,88,2.429,89,1.399,90,1.767,92,1.34,94,1.993,95,1.417,103,1.462,112,2.075,114,2.38,115,2.174,119,2.151,127,1.607,128,1.607,131,2.277,132,1.607,133,1.913,135,1.895,138,1.399,144,0.801,145,1.468,146,1.417,147,0.987,148,1.941,149,0.987,150,0.506,151,0.987,152,0.858,153,0.987,154,0.858,155,0.987,156,0.858,157,0.987,158,0.858,159,0.953,160,0.987,161,0.858,162,0.987,163,0.858,164,0.629,165,0.987,166,0.829,167,0.987,168,0.858,169,0.987,170,0.829,171,0.987,172,1.687,173,0.987,174,0.858,175,0.987,176,0.829,177,0.829,178,0.987,179,0.858,180,0.987,181,0.829,182,0.92,183,0.987,184,0.829,185,0.987,186,0.829,187,0.987,188,0.829,189,0.476,190,0.987,191,0.858,192,0.987,193,0.829,194,0.92,195,0.987,196,0.987,197,0.005,198,0.007,199,0.005,201,1.276,202,2.194,204,0.254,205,0.811,207,1.15,208,1.34,210,2.429,214,1.321,215,0.708,216,0.673,220,1.15,221,1.955,223,1.191,228,1.235,229,1.286,234,1.468,235,2.109,354,3.171,362,2.277,366,2.022,370,1.286,397,2.515,400,5.975,402,1.146,407,1.625,408,1.236,410,3.665,411,1.786,412,2.62,414,2.174,423,2.718,425,2.364,431,3.081,434,4.651,435,1.143,437,4.651,438,4.651,442,2.429,446,3.916,448,0.92,449,1.895,450,3.516,456,3.003,459,3.006,486,2.483,497,1.817,507,2.596,622,1.786,642,1.786,707,1.895,733,3.01,834,2.62,1016,3.233,1099,2.174,1100,3.974,1102,2.39,1107,6.559,1108,5.919,1109,2.62,1110,4.472,1111,5.339,1112,4.472,1113,5.339,1114,5.339,1115,4.472,1116,5.339,1117,4.651,1118,4.472,1119,3.007,1120,3.007,1121,3.007,1122,3.007,1123,3.007,1124,3.007,1125,3.007,1126,4.472,1127,3.007,1128,3.007,1129,3.896,1130,2.62,1131,2.364,1132,2.364,1133,3.007,1134,3.007,1135,3.007,1136,3.007,1137,2.364,1138,4.472,1139,2.62,1140,3.007,1141,4.472,1142,4.472,1143,4.472,1144,4.472,1145,4.472,1146,3.007,1147,5.339,1148,3.007,1149,1.691,1150,3.589,1151,5.339,1152,2.364,1153,2.62,1154,2.62,1155,3.896,1156,5.912,1157,2.022,1158,3.007]],["title/guards/FrameworkResolver.html",[1159,2.699,1160,2.699]],["body/guards/FrameworkResolver.html",[3,0.177,4,0.138,9,0.138,19,1.229,20,0.975,22,0.286,23,0.826,24,0.013,25,0.177,26,0.539,150,0.54,197,0.009,198,0.011,199,0.009,201,1.565,204,0.464,207,1.732,208,2.445,214,1.989,215,0.662,216,1.014,220,1.411,228,2.254,229,2.346,236,3.002,237,4.275,253,2.086,497,1.867,576,3.86,593,3.966,803,3.895,844,2.552,853,2.793,1102,2.931,1157,4.899,1160,4.528,1161,3.688,1162,6.349,1163,3.688,1164,4.789,1165,3.457,1166,5.486,1167,4.869,1168,5.494,1169,4.899,1170,5.494,1171,4.779,1172,3.457,1173,4.313,1174,5.486,1175,4.313,1176,5.486]],["title/components/HeaderComponent.html",[0,0.494,174,1.145]],["body/components/HeaderComponent.html",[0,0.728,1,1.026,2,1.614,3,0.116,4,0.091,5,1.181,6,1.224,7,1.181,8,1.181,9,0.091,11,1.062,12,2.602,13,2.419,14,2.233,15,1.672,17,1.672,19,1.325,20,0.521,22,0.213,23,0.541,24,0.014,25,0.116,26,0.354,37,2.355,43,0.752,79,1.538,80,1.603,81,2.815,82,2.54,86,2.092,87,2.476,88,2.429,89,2.369,90,2.54,92,3.356,94,3.025,95,1.14,96,1.831,98,2.418,102,3.325,103,2.476,111,2.418,117,2.418,118,2.266,119,2.675,122,3.423,124,4.397,125,3.159,126,1.922,127,1.922,128,1.922,129,2.136,130,2.6,131,1.831,133,2.529,136,2.874,137,3.159,138,2.75,144,0.957,145,1.672,146,1.614,147,1.181,148,2.111,149,1.181,150,0.474,151,1.181,152,1.026,153,1.181,154,1.026,155,1.181,156,1.026,157,1.181,158,1.026,159,1.14,160,1.181,161,1.026,162,1.181,163,1.026,164,0.752,165,1.181,166,0.991,167,1.181,168,1.026,169,1.181,170,0.991,171,1.181,172,1.026,173,1.181,174,1.834,175,1.181,176,0.991,177,0.991,178,1.181,179,1.026,180,1.181,181,0.991,182,1.1,183,1.181,184,0.991,185,1.181,186,0.991,187,1.181,188,0.991,189,0.527,190,1.181,191,1.026,192,1.181,193,0.991,194,1.1,195,1.181,196,1.181,197,0.006,198,0.008,199,0.006,204,0.304,342,2.136,354,2.136,362,1.831,364,2.828,370,3.014,378,2.418,382,1.672,387,2.6,416,2.136,424,3.681,426,3.133,427,3.616,453,3.025,456,3.963,613,1.831,707,2.266,770,2.828,1083,2.6,1089,3.133,1091,3.133,1093,3.325,1095,2.828,1177,3.133,1178,4.004,1179,5.913,1180,5.093,1181,3.597,1182,5.093,1183,6.43,1184,3.597,1185,3.597,1186,3.133,1187,2.828,1188,5.093,1189,5.093,1190,3.597,1191,5.093,1192,5.913,1193,3.597,1194,5.093,1195,3.597,1196,7.246,1197,3.597,1198,5.093,1199,2.828,1200,3.597,1201,3.597,1202,3.597,1203,3.597,1204,3.597,1205,3.597,1206,3.597,1207,3.133]],["title/components/HomeComponent.html",[0,0.494,176,1.106]],["body/components/HomeComponent.html",[0,0.834,1,1.338,2,1.932,3,0.152,4,0.118,5,1.54,6,1.596,7,1.54,8,1.54,9,0.118,11,1.385,12,2.654,13,2.47,14,1.932,15,2.002,17,2.002,19,1.051,20,0.883,22,0.219,23,0.706,24,0.013,25,0.152,26,0.461,43,0.98,80,2.09,81,1.783,82,2.41,83,2.006,86,1.927,88,1.927,90,1.853,95,1.486,114,2.09,144,1.248,145,2.002,146,1.932,147,1.54,148,2.357,149,1.54,150,0.575,151,1.54,152,1.338,153,1.54,154,1.338,155,1.54,156,1.338,157,1.54,158,1.338,159,1.486,160,1.54,161,1.338,162,1.54,163,1.338,164,0.98,165,1.54,166,1.292,167,1.54,168,1.338,169,1.54,170,1.292,171,1.54,172,1.338,173,1.54,174,1.338,175,1.54,176,1.978,177,1.292,178,1.54,179,1.338,180,1.54,181,1.292,182,1.434,183,1.54,184,1.292,185,1.54,186,1.292,187,1.54,188,1.292,189,0.604,190,1.54,191,1.338,192,1.54,193,1.292,194,1.434,195,1.54,196,1.54,197,0.008,198,0.01,199,0.008,204,0.397,205,1.106,214,1.385,215,0.461,216,0.706,229,2.006,407,1.206,408,0.98,423,2.388,576,3.708,1165,2.955,1172,2.955,1208,4.085,1209,6.779,1210,6.099,1211,5.905,1212,6.099,1213,6.099]],["title/interfaces/InfoResource.html",[463,0.433,1214,2.902]],["body/interfaces/InfoResource.html",[3,0.183,4,0.143,9,0.143,24,0.013,25,0.222,54,4.333,59,3.577,73,4.623,132,3.033,134,1.769,189,0.613,197,0.009,198,0.011,199,0.009,204,0.48,205,1.247,215,0.727,216,1.035,402,1.519,463,0.83,465,1.564,467,2.103,474,2.586,482,1.677,542,3.501,556,3.065,857,3.372,1214,5.348,1215,4.463,1216,6.974,1217,6.046]],["title/interfaces/InfoResourceSection.html",[463,0.433,857,2.385]],["body/interfaces/InfoResourceSection.html",[3,0.176,4,0.137,9,0.137,24,0.013,25,0.217,28,4.283,54,4.578,58,2.773,59,4.905,73,3.662,91,4.283,132,4.051,134,2.002,189,0.485,197,0.009,198,0.011,199,0.009,204,0.461,205,1.216,215,0.765,402,1.52,431,2.534,463,0.818,465,1.501,467,2.051,474,2.556,482,2.239,487,2.534,518,2.33,542,2.773,556,2.428,857,3.983,1214,5.481,1215,4.283,1216,5.842,1217,4.283,1218,4.745,1219,4.745,1220,4.745,1221,3.938,1222,5.447,1223,5.447,1224,5.447,1225,5.447]],["title/components/InformationComponent.html",[0,0.494,177,1.106]],["body/components/InformationComponent.html",[0,0.771,1,1.144,2,1.741,3,0.236,4,0.101,5,1.317,6,1.365,7,1.317,8,1.317,9,0.101,11,1.184,12,2.629,13,2.445,14,1.741,15,1.804,17,1.804,19,1.404,20,0.907,22,0.225,23,0.604,24,0.014,25,0.13,26,0.394,43,1.589,54,3.462,59,4.248,65,4.786,72,4.786,79,1.715,80,1.787,81,2.563,82,3.004,83,2.35,86,2.257,87,1.95,88,2.257,90,1.584,92,3.148,94,1.787,95,1.271,112,2.058,114,2.449,119,1.365,125,3.602,126,2.143,127,2.143,128,2.143,135,2.527,136,1.95,137,2.143,138,1.865,144,1.068,145,1.804,146,1.741,147,1.317,148,2.213,149,1.317,150,0.502,151,1.317,152,1.144,153,1.317,154,1.144,155,1.317,156,1.144,157,1.317,158,1.144,159,1.271,160,1.317,161,1.144,162,1.317,163,1.144,164,0.838,165,1.317,166,1.105,167,1.317,168,1.144,169,1.317,170,1.105,171,1.317,172,1.144,173,1.317,174,1.144,175,1.317,176,1.105,177,1.858,178,1.317,179,1.144,180,1.317,181,1.105,182,1.227,183,1.317,184,1.105,185,1.317,186,1.105,187,1.317,188,1.105,189,0.558,190,1.317,191,1.144,192,1.317,193,1.105,194,1.227,195,1.317,196,1.317,197,0.006,198,0.009,199,0.006,204,0.339,205,0.996,215,0.54,362,2.797,370,1.715,387,2.899,407,1.031,408,0.838,422,2.899,423,2.797,456,3.525,485,1.584,497,2.133,853,2.042,1083,2.899,1093,2.256,1095,3.153,1226,3.494,1227,6.267,1228,5.494,1229,4.213,1230,6.267,1231,5.494,1232,5.3,1233,6.741,1234,4.01,1235,5.494,1236,3.153,1237,5.494,1238,5.494]],["title/modules/InformationModule.html",[260,1.527,1239,2.902]],["body/modules/InformationModule.html",[3,0.172,4,0.134,9,0.134,22,0.293,23,0.803,24,0.013,25,0.172,26,0.525,54,3.362,144,1.42,166,2.173,170,2.173,177,2.173,184,2.173,197,0.009,198,0.011,199,0.009,260,2.029,262,2.481,263,3,264,4.276,265,3.362,266,4.171,267,2.716,274,4.685,275,4.171,276,3.362,277,2.851,279,3.537,283,3.537,291,4.195,293,4.195,411,3.169,582,4.785,1239,6.063,1240,4.648,1241,4.648,1242,4.648,1243,5.302,1244,5.335,1245,4.648,1246,4.648,1247,4.648,1248,4.45,1249,4.648,1250,3.586,1251,4.648]],["title/modules/InformationRoutingModule.html",[260,1.527,1243,2.699]],["body/modules/InformationRoutingModule.html",[0,0.942,3,0.181,4,0.141,9,0.141,22,0.293,23,0.842,24,0.013,25,0.181,26,0.55,43,1.425,59,3.525,166,1.878,170,1.878,177,1.878,184,1.878,197,0.009,198,0.011,199,0.009,228,2.299,262,2.602,264,3.323,267,2.848,279,2.99,283,3.642,311,4.399,313,4.927,314,4.582,318,2.848,320,5.273,321,4.874,322,4.874,323,4.044,1055,4.874,1160,4.582,1164,4.295,1243,4.582,1245,4.874,1246,4.874,1247,4.874,1248,4.582,1249,4.874,1250,4.582,1251,4.874,1252,5.595,1253,5.595,1254,5.595,1255,5.595,1256,5.938,1257,5.595]],["title/injectables/LogoLocatorService.html",[236,1.789,577,2.258]],["body/injectables/LogoLocatorService.html",[3,0.18,4,0.14,9,0.14,19,1.642,20,1.061,22,0.2,23,0.836,24,0.014,25,0.18,26,0.546,150,0.445,197,0.009,198,0.011,199,0.009,204,0.47,205,1.231,207,1.746,214,1.641,215,0.667,216,0.836,220,1.429,236,3.025,238,3.734,253,2.112,402,1.384,407,1.429,408,1.161,577,3.817,638,2.968,796,4.926,798,4.015,1229,4.926,1258,6.002,1259,4.367,1260,7.328,1261,6.787,1262,6.787,1263,6.787,1264,5.555,1265,6.787,1266,5.555,1267,5.555,1268,5.555,1269,4.839,1270,5.912,1271,5.912,1272,5.912,1273,5.336]],["title/modules/MaterialModule.html",[260,1.527,1274,2.699]],["body/modules/MaterialModule.html",[3,0.16,4,0.125,9,0.125,22,0.305,23,0.745,24,0.013,25,0.16,26,0.487,197,0.008,198,0.01,199,0.008,262,2.303,267,2.521,279,2.646,283,3.375,382,1.626,642,3.752,1274,4.246,1275,4.952,1276,6.956,1277,6.317,1278,6.956,1279,4.952,1280,6.956,1281,4.952,1282,6.956,1283,3.579,1284,6.956,1285,4.952,1286,4.952,1287,6.956,1288,4.952,1289,6.956,1290,4.952,1291,6.956,1292,4.952,1293,6.956,1294,4.952,1295,6.956,1296,4.952,1297,4.314,1298,6.956,1299,4.952,1300,6.956,1301,4.952,1302,6.956,1303,4.952,1304,6.956,1305,4.952,1306,6.956,1307,4.952,1308,6.956,1309,4.952,1310,6.956,1311,4.952,1312,6.956,1313,3.579,1314,6.956,1315,4.952,1316,6.956,1317,4.952,1318,6.956,1319,4.952,1320,6.956,1321,4.952,1322,6.956,1323,6.956,1324,4.952,1325,4.952,1326,6.956,1327,4.952,1328,6.956,1329,4.952]],["title/components/OverviewComponent.html",[0,0.494,179,1.145]],["body/components/OverviewComponent.html",[0,0.746,1,1.073,2,1.666,3,0.122,4,0.152,5,1.989,6,1.28,7,1.235,8,1.235,9,0.095,11,1.111,12,2.613,13,2.43,14,1.666,15,1.726,17,1.726,19,1.358,20,0.761,22,0.236,23,0.566,24,0.013,25,0.122,26,0.37,37,2.688,43,0.786,79,1.609,80,1.677,81,2.494,82,2.727,83,1.609,84,2.01,85,2.235,86,2.836,87,2.946,88,3.015,89,2.818,90,2.077,92,3.076,93,3.277,94,2.343,95,1.92,96,3.085,106,5.157,108,5.157,112,1.989,113,2.529,114,1.677,115,2.72,133,1.609,136,1.829,137,2.01,138,1.75,139,3.277,144,1.002,145,1.726,146,1.666,147,1.235,148,2.154,149,1.235,150,0.486,151,1.235,152,1.073,153,1.235,154,1.073,155,1.235,156,1.073,157,1.235,158,1.073,159,1.192,160,1.235,161,1.073,162,1.235,163,1.073,164,0.786,165,1.235,166,1.037,167,1.235,168,1.073,169,1.235,170,1.037,171,1.235,172,1.073,173,1.235,174,1.073,175,1.235,176,1.037,177,1.037,178,1.235,179,1.871,180,1.235,181,1.037,182,1.151,183,1.235,184,1.037,185,1.235,186,1.037,187,1.235,188,1.037,189,0.584,190,1.235,191,1.073,192,1.235,193,1.037,194,1.151,195,1.235,196,1.235,197,0.006,198,0.008,199,0.006,204,0.318,215,0.37,277,3.505,338,4.133,343,3.505,349,4.133,353,3.8,358,2.958,359,3.277,360,3.277,361,3.277,362,2.676,366,2.529,370,1.609,382,1.989,397,2.956,410,2.809,414,2.72,427,2.116,453,2.235,454,2.958,455,2.958,702,3.312,770,2.958,803,3.238,844,1.75,855,2.371,1093,2.116,1211,5.278,1330,3.277,1331,4.133,1332,6.059,1333,5.257,1334,5.257,1335,4.579,1336,4.579,1337,5.257,1338,3.762,1339,5.257,1340,6.902,1341,5.257,1342,3.762,1343,5.257,1344,3.762,1345,3.762,1346,5.257,1347,3.762,1348,3.762,1349,2.958,1350,3.762,1351,3.762,1352,7.15,1353,3.762,1354,6.56,1355,3.762,1356,3.762]],["title/components/PageNotFoundComponent.html",[0,0.494,181,1.106]],["body/components/PageNotFoundComponent.html",[0,0.831,1,1.326,2,1.921,3,0.15,4,0.117,5,1.526,6,1.582,7,1.526,8,1.526,9,0.117,11,1.373,12,2.662,13,2.477,14,1.921,15,1.991,17,1.991,19,1.512,20,0.878,22,0.167,23,0.7,24,0.013,25,0.15,26,0.457,43,0.971,95,1.472,132,2.483,144,1.237,145,1.991,146,1.921,147,1.526,148,2.348,149,1.526,150,0.541,151,1.526,152,1.326,153,1.526,154,1.326,155,1.526,156,1.326,157,1.526,158,1.326,159,1.472,160,1.526,161,1.326,162,1.526,163,1.326,164,0.971,165,1.526,166,1.281,167,1.526,168,1.326,169,1.526,170,1.281,171,1.526,172,1.326,173,1.526,174,1.326,175,1.526,176,1.281,177,1.281,178,1.526,179,1.326,180,1.526,181,1.971,182,2.431,183,1.526,184,1.281,185,1.526,186,1.281,187,1.526,188,1.281,189,0.601,190,1.526,191,1.326,192,1.526,193,1.281,194,1.422,195,1.526,196,1.526,197,0.007,198,0.01,199,0.007,201,1.73,202,2.773,204,0.393,207,1.56,210,2.939,220,1.195,221,1.702,316,4.879,1357,5.879,1358,4.049,1359,7.153,1360,6.749,1361,6.064,1362,4.647,1363,4.647,1364,4.647]],["title/injectables/RandomColorService.html",[236,1.789,578,2.699]],["body/injectables/RandomColorService.html",[3,0.182,4,0.142,9,0.142,19,1.654,20,0.992,22,0.203,23,0.85,24,0.013,25,0.182,26,0.555,150,0.452,197,0.009,198,0.011,199,0.009,204,0.477,207,1.763,214,1.668,216,0.85,220,1.452,236,3.055,238,3.795,253,2.147,578,4.608,1365,5.803,1366,4.439,1367,6.854,1368,5.646,1369,6.854,1370,7.864,1371,7.864,1372,7.864,1373,6.851,1374,7.864,1375,5.646,1376,7.381,1377,5.779,1378,5.646,1379,4.955]],["title/interfaces/RenderedFilterBlock.html",[463,0.433,618,2.258]],["body/interfaces/RenderedFilterBlock.html",[3,0.112,4,0.087,9,0.087,20,0.837,22,0.124,24,0.014,25,0.225,38,2.645,61,3.253,62,3.436,67,1.568,112,1.625,125,2.645,134,0.889,150,0.574,164,1.035,189,0.515,197,0.006,198,0.008,199,0.006,204,0.292,205,0.898,215,0.72,216,0.745,223,0.92,234,1.135,235,1.365,258,1.176,372,3.552,382,2.195,402,1.426,408,1.531,463,0.827,464,1.365,465,0.952,467,2.191,476,1.42,477,2.595,480,2.474,481,2.034,482,1.865,485,2.748,490,1.478,494,1.478,496,3.1,510,2.69,511,2.578,513,3.563,516,2.69,540,1.608,549,2.195,556,1.54,572,1.608,602,1.608,603,2.053,604,3.871,605,2.784,606,2.323,607,2.053,610,2.945,612,4.493,613,3.646,614,3.328,615,3.328,616,4.768,617,3.9,618,2.784,619,3.979,620,3.119,621,4.246,622,4.131,623,3.328,624,2.323,625,3.328,626,1.608,627,2.323,628,2.323,629,2.941,630,2.941,631,2.053,632,2.178,633,3.07,634,3.119,635,2.323,636,2.323,637,2.323,638,2.645,639,2.178,640,1.847,641,4.815,642,2.941,643,3.119,644,2.323,645,3.328,646,3.328,647,3.119,648,2.323,649,3.119,650,3.644,651,3.979,652,3.979,653,2.941,654,2.323,655,2.941,656,3.119,657,3.119,658,2.323,659,2.323,660,2.323,661,2.323,662,2.323,663,2.178]],["title/components/ResourcesComponent.html",[0,0.494,184,1.106]],["body/components/ResourcesComponent.html",[0,0.797,1,1.22,2,1.818,3,0.138,4,0.108,5,1.404,6,1.455,7,1.404,8,1.404,9,0.108,11,1.263,12,2.644,13,2.459,14,1.818,15,1.884,17,1.884,19,0.958,20,1.045,22,0.249,23,0.644,24,0.014,25,0.138,26,0.42,43,0.894,59,4.549,95,1.355,112,1.884,144,1.138,145,1.884,146,1.818,147,1.404,148,2.272,149,1.404,150,0.555,151,1.404,152,1.22,153,1.404,154,1.22,155,1.404,156,1.22,157,1.404,158,1.22,159,1.355,160,1.404,161,1.22,162,1.404,163,1.22,164,0.894,165,1.404,166,1.178,167,1.404,168,1.22,169,1.404,170,1.178,171,1.404,172,1.22,173,1.404,174,1.22,175,1.404,176,1.178,177,1.178,178,1.404,179,1.22,180,1.404,181,1.178,182,1.308,183,1.404,184,1.907,185,1.404,186,1.178,187,1.404,188,1.178,189,0.577,190,1.404,191,1.22,192,1.404,193,1.178,194,1.308,195,1.404,196,1.404,197,0.007,198,0.009,199,0.007,201,1.637,202,2.661,204,0.362,205,1.041,207,1.476,210,2.844,214,1.263,215,0.637,216,0.644,220,1.476,221,2.535,228,1.757,229,1.829,844,1.989,857,3.847,858,3.362,1099,3.091,1100,4.653,1102,3.066,1104,3.091,1106,3.725,1217,4.512,1380,3.725,1381,5.642,1382,6.477,1383,5.738,1384,6.475,1385,6.03,1386,5.738,1387,4.276,1388,4.276,1389,4.276,1390,4.276,1391,4.276,1392,4.276,1393,5.738,1394,5.738,1395,5.738]],["title/guards/ResourcesResolver.html",[1159,2.699,1248,2.699]],["body/guards/ResourcesResolver.html",[3,0.182,4,0.142,9,0.142,19,1.26,20,0.99,22,0.283,23,0.847,24,0.013,25,0.182,26,0.553,150,0.548,197,0.009,198,0.011,199,0.009,201,1.605,204,0.476,207,1.759,214,2.02,215,0.672,216,1.029,220,1.447,228,2.311,229,2.406,236,3.048,253,2.139,576,3.883,803,3.938,844,2.616,857,3.341,858,4.423,1102,3.006,1161,3.782,1163,3.782,1164,4.83,1165,3.544,1167,4.944,1168,5.541,1169,4.954,1170,5.541,1172,3.544,1248,4.597,1396,6.419,1397,5.625,1398,5.625,1399,5.625]],["title/pipes/SetToArrayPipe.html",[892,2.258,1400,2.699]],["body/pipes/SetToArrayPipe.html",[3,0.195,4,0.151,9,0.151,11,1.778,20,0.871,22,0.217,23,0.906,24,0.013,25,0.195,26,0.592,150,0.608,197,0.01,198,0.011,199,0.01,201,1.717,207,1.548,214,1.778,215,0.592,216,0.906,220,1.548,253,2.288,408,1.258,475,3.116,892,4.005,1400,4.787,1401,4.35,1402,6.204,1403,5.243,1404,7.122,1405,4.732,1406,5.6,1407,6.018,1408,5.6,1409,6.018]],["title/modules/SharedModule.html",[260,1.527,274,2.385]],["body/modules/SharedModule.html",[3,0.134,4,0.105,9,0.105,22,0.294,23,0.626,24,0.013,25,0.134,26,0.409,43,0.87,95,1.318,144,1.108,156,2.28,158,2.28,159,1.318,161,2.104,168,2.28,172,2.28,174,2.28,181,2.202,182,1.273,197,0.007,198,0.009,199,0.007,228,1.71,260,1.582,262,1.935,263,2.34,264,3.794,265,2.622,266,3.55,267,3.252,274,5.027,275,3.55,276,2.622,277,2.223,279,3.011,283,3.011,313,4.073,316,3.008,317,3.625,390,3.008,411,2.472,429,3.272,582,4.617,732,3.008,1108,3.272,1160,3.787,1250,2.797,1274,5.372,1400,5.372,1410,3.625,1411,3.625,1412,3.625,1413,3.625,1414,5.372,1415,5.372,1416,4.161,1417,4.161,1418,4.161,1419,6.388,1420,6.388,1421,4.161,1422,4.161,1423,4.161,1424,4.161,1425,4.161,1426,4.161,1427,4.161,1428,4.161,1429,3.625,1430,4.161,1431,4.161]],["title/interfaces/SimpleDataSource.html",[463,0.433,1432,2.699]],["body/interfaces/SimpleDataSource.html",[3,0.091,4,0.071,9,0.071,20,0.618,22,0.242,24,0.014,25,0.166,26,0.278,112,2.02,119,2.287,189,0.576,197,0.011,198,0.007,199,0.005,201,0.806,204,0.239,207,1.098,208,3.267,220,1.098,221,2.533,223,1.723,234,1.689,235,1.687,253,2.954,258,1.751,318,2.918,342,1.679,402,1.254,408,0.591,446,1.51,448,1.753,449,1.781,463,0.461,465,0.779,549,1.689,598,3.086,602,2.862,605,2.401,610,3.295,633,1.374,714,4.857,733,2.918,761,2.87,796,3.458,803,3.458,842,2.043,844,1.315,848,2.043,851,2.043,894,2.043,997,3.719,1000,3.086,1004,3.086,1024,3.086,1150,1.9,1229,4.137,1313,2.043,1432,3.458,1433,2.043,1434,3.056,1435,4.838,1436,4.838,1437,2.826,1438,2.826,1439,2.222,1440,4.507,1441,2.222,1442,2.222,1443,3.357,1444,2.222,1445,4.851,1446,2.043,1447,2.222,1448,2.222,1449,3.086,1450,3.357,1451,1.51,1452,4.507,1453,2.222,1454,2.222,1455,2.222,1456,2.222,1457,2.222,1458,2.222,1459,2.222,1460,2.222,1461,2.222,1462,2.222,1463,2.222,1464,2.043,1465,2.222,1466,2.222,1467,2.222,1468,2.222,1469,2.222,1470,3.357,1471,2.222,1472,3.357,1473,2.222,1474,2.222,1475,2.222,1476,4.838,1477,2.222,1478,4.045,1479,2.222,1480,3.357,1481,2.222,1482,3.357,1483,2.222,1484,2.222,1485,2.222,1486,3.357,1487,4.045,1488,4.507,1489,3.357,1490,2.222,1491,2.222,1492,2.222,1493,3.357,1494,2.222,1495,2.222,1496,2.222,1497,2.222,1498,3.357,1499,2.222,1500,2.222,1501,2.222,1502,2.222,1503,2.222,1504,2.222,1505,2.222,1506,2.222,1507,2.222,1508,2.222,1509,2.222,1510,2.222,1511,2.222,1512,2.222,1513,4.045,1514,2.222,1515,2.222,1516,2.222,1517,2.222,1518,2.222,1519,2.222,1520,2.222,1521,4.045,1522,2.222,1523,2.222,1524,2.222,1525,2.222,1526,3.357,1527,3.357,1528,3.357,1529,3.357,1530,2.222,1531,5.841,1532,4.838,1533,4.045,1534,3.357,1535,4.045,1536,2.222,1537,4.045,1538,2.222,1539,2.222,1540,2.222,1541,2.222,1542,5.283,1543,3.357,1544,4.045,1545,3.357,1546,2.222,1547,2.222,1548,2.222,1549,2.222,1550,2.222,1551,2.222,1552,4.507,1553,2.222,1554,2.222,1555,3.357,1556,2.222,1557,2.222,1558,2.222,1559,2.222,1560,3.357,1561,3.357,1562,2.222,1563,3.357,1564,3.357,1565,2.222,1566,3.357,1567,2.222,1568,2.222,1569,2.043,1570,2.222]],["title/interfaces/Sort.html",[463,0.433,1445,2.699]],["body/interfaces/Sort.html",[3,0.092,4,0.071,9,0.071,22,0.242,24,0.014,25,0.167,26,0.279,112,2.024,119,2.289,189,0.577,197,0.011,198,0.007,199,0.005,201,0.809,204,0.24,205,0.776,208,3.27,215,0.279,221,2.464,223,1.725,234,1.693,235,1.691,253,2.955,258,1.755,318,2.924,342,1.685,402,1.256,408,0.593,446,1.516,448,1.756,449,1.787,463,0.462,465,0.782,549,1.693,598,2.05,602,2.867,605,2.408,610,3.299,633,1.379,714,4.863,733,2.924,761,2.878,796,3.466,803,3.294,842,2.05,844,1.319,848,2.05,851,2.05,894,2.05,997,3.727,1000,3.094,1004,3.094,1024,3.094,1150,3.86,1229,4.143,1313,2.05,1432,2.878,1433,2.05,1434,2.543,1435,3.366,1436,3.366,1439,2.23,1440,4.515,1441,2.23,1442,2.23,1443,3.366,1444,2.23,1445,4.932,1446,4.151,1447,2.23,1448,2.23,1449,4.151,1450,4.515,1451,1.516,1452,4.515,1453,2.23,1454,2.23,1455,2.23,1456,2.23,1457,2.23,1458,2.23,1459,2.23,1460,2.23,1461,2.23,1462,2.23,1463,2.23,1464,2.05,1465,2.23,1466,2.23,1467,2.23,1468,2.23,1469,2.23,1470,3.366,1471,2.23,1472,3.366,1473,2.23,1474,2.23,1475,2.23,1476,4.846,1477,2.23,1478,4.054,1479,2.23,1480,3.366,1481,2.23,1482,3.366,1483,2.23,1484,2.23,1485,2.23,1486,3.366,1487,4.054,1488,4.515,1489,3.366,1490,2.23,1491,2.23,1492,2.23,1493,3.366,1494,2.23,1495,2.23,1496,2.23,1497,2.23,1498,3.366,1499,2.23,1500,2.23,1501,2.23,1502,2.23,1503,2.23,1504,2.23,1505,2.23,1506,2.23,1507,2.23,1508,2.23,1509,2.23,1510,2.23,1511,2.23,1512,2.23,1513,4.054,1514,2.23,1515,2.23,1516,2.23,1517,2.23,1518,2.23,1519,2.23,1520,2.23,1521,4.054,1522,2.23,1523,2.23,1524,2.23,1525,2.23,1526,3.366,1527,3.366,1528,3.366,1529,3.366,1530,2.23,1531,5.846,1532,4.846,1533,4.054,1534,3.366,1535,4.054,1536,2.23,1537,4.054,1538,2.23,1539,2.23,1540,2.23,1541,2.23,1542,5.289,1543,3.366,1544,4.054,1545,3.366,1546,2.23,1547,2.23,1548,2.23,1549,2.23,1550,2.23,1551,2.23,1552,4.515,1553,2.23,1554,2.23,1555,3.366,1556,2.23,1557,2.23,1558,2.23,1559,2.23,1560,3.366,1561,3.366,1562,2.23,1563,3.366,1564,3.366,1565,2.23,1566,3.366,1567,2.23,1568,2.23,1569,2.05,1570,2.23]],["title/classes/TableColumn.html",[26,0.395,1571,2.902]],["body/classes/TableColumn.html",[0,0.699,3,0.136,4,0.106,9,0.106,12,1.333,13,1.242,15,1.381,17,1.381,19,0.942,20,0.996,22,0.258,23,0.633,24,0.014,25,0.183,26,0.558,43,0.879,112,1.381,119,2.443,126,4.208,150,0.455,189,0.572,193,1.159,194,1.287,197,0.007,198,0.009,199,0.007,201,1.2,202,2.332,204,0.581,205,1.029,208,1.875,210,1.728,215,0.676,216,1.035,221,1.54,299,2.828,402,1.394,410,3.836,422,3.04,442,2.332,474,2.357,497,1.931,548,3.033,549,1.863,626,2.64,631,4.265,707,2.65,731,2.65,853,2.141,900,3.307,920,3.307,1137,3.307,1283,3.04,1434,2.498,1451,3.033,1571,5.558,1572,4.524,1573,5.19,1574,3.307,1575,5.99,1576,4.206,1577,4.206,1578,4.206,1579,4.206,1580,4.944,1581,3.04,1582,3.04,1583,4.462,1584,3.664,1585,3.664,1586,3.307,1587,3.307,1588,3.664,1589,3.664,1590,3.664,1591,6.254,1592,3.664,1593,3.664,1594,3.664,1595,3.664,1596,3.664,1597,3.664,1598,3.664,1599,3.664,1600,3.664,1601,3.664,1602,3.664,1603,3.664,1604,4.944,1605,3.664,1606,4.944,1607,3.664,1608,3.664,1609,4.944,1610,5.99,1611,3.664,1612,3.664,1613,3.664,1614,3.664,1615,4.462,1616,3.664,1617,3.664,1618,3.307,1619,3.307,1620,3.664,1621,3.664,1622,4.944,1623,3.664]],["title/components/TechnologiesComponent.html",[0,0.494,186,1.106]],["body/components/TechnologiesComponent.html",[0,0.546,1,0.638,2,1.128,3,0.072,4,0.056,5,0.734,6,0.761,7,0.734,8,0.734,9,0.056,11,0.661,12,2.454,13,2.276,14,1.128,15,1.169,17,1.169,19,0.798,20,1.079,22,0.257,23,0.337,24,0.014,25,0.072,26,0.22,37,2.022,43,1.057,46,3.102,51,1.656,67,1.128,79,0.957,80,0.997,81,2.671,82,3.122,83,2.892,84,2.37,86,2.534,87,2.156,88,2.534,89,1.041,90,2.437,92,2.749,95,1.128,98,1.504,99,1.617,101,2.244,102,1.258,104,1.504,111,1.504,112,2.166,114,2.749,117,1.504,118,1.41,119,1.879,124,2.115,131,1.139,132,2.37,133,1.523,136,2.458,137,1.195,138,1.041,144,0.596,145,1.169,146,1.128,147,0.734,148,1.66,149,0.734,150,0.471,151,0.734,152,0.638,153,0.734,154,0.638,155,0.734,156,0.638,157,0.734,158,0.638,159,0.709,160,0.734,161,0.638,162,0.734,163,0.638,164,0.468,165,0.734,166,0.616,167,0.734,168,0.638,169,0.734,170,0.616,171,0.734,172,0.638,173,0.734,174,0.638,175,0.734,176,0.616,177,0.616,178,0.734,179,0.638,180,0.734,181,0.616,182,0.684,183,0.734,184,0.616,185,0.734,186,1.393,187,0.734,188,0.616,189,0.524,190,0.734,191,0.638,192,0.734,193,0.616,194,0.684,195,0.734,196,0.734,197,0.004,198,0.006,199,0.004,201,1.016,202,1.822,204,0.189,205,0.646,207,0.916,208,3.22,210,2.078,214,1.31,215,0.701,216,0.668,220,1.512,221,2.344,228,0.919,282,2.394,318,1.813,337,2.163,338,2.8,351,2.574,353,2.574,362,1.139,366,1.504,370,1.523,382,1.169,388,1.949,402,1.001,407,1.301,408,1.057,416,1.329,421,1.949,423,3.442,424,1.617,427,2.003,431,1.041,435,1.687,442,2.416,446,3.421,453,2.635,454,1.759,455,1.759,477,1.463,497,1.51,499,2.684,507,1.731,576,2.859,602,2.352,604,2.458,613,2.811,616,2.795,617,1.813,618,2.495,619,1.41,626,2.063,701,3.102,719,4.405,721,3.864,731,1.41,732,1.617,733,2.258,774,3.488,844,1.041,853,1.139,855,1.41,901,1.949,1016,1.617,1083,1.617,1093,2.495,1100,3.399,1102,2.37,1104,1.617,1105,1.759,1130,1.949,1131,1.759,1132,1.759,1139,1.949,1150,1.504,1152,1.759,1157,2.394,1165,1.41,1172,1.41,1178,1.759,1199,2.8,1236,1.759,1283,1.617,1377,1.617,1381,3.864,1384,3.864,1385,4.405,1434,2.635,1446,1.617,1449,1.617,1451,2.37,1581,1.617,1582,1.617,1583,3.488,1586,3.488,1587,4.341,1615,2.8,1618,1.759,1619,1.759,1624,1.949,1625,3.561,1626,3.561,1627,4.436,1628,3.561,1629,4.436,1630,4.436,1631,4.436,1632,4.436,1633,5.057,1634,5.057,1635,3.561,1636,3.561,1637,6.167,1638,5.057,1639,3.561,1640,2.237,1641,2.237,1642,2.237,1643,2.237,1644,3.561,1645,2.237,1646,1.617,1647,3.561,1648,5.057,1649,5.88,1650,5.057,1651,2.237,1652,2.237,1653,2.237,1654,2.237,1655,2.237,1656,2.237,1657,3.561,1658,2.237,1659,1.759,1660,3.561,1661,2.237,1662,2.237,1663,2.237,1664,2.237,1665,2.237,1666,2.237,1667,2.237,1668,2.237,1669,2.237,1670,2.237,1671,2.237,1672,2.237,1673,3.561,1674,2.237,1675,3.864,1676,2.237,1677,2.237,1678,2.237,1679,1.949,1680,2.237,1681,2.237,1682,1.759,1683,1.949,1684,2.237,1685,2.237,1686,2.237,1687,2.237,1688,2.237,1689,2.237,1690,2.237,1691,2.237,1692,3.561,1693,2.237,1694,2.237,1695,2.237,1696,3.561,1697,2.237,1698,2.237,1699,4.436,1700,3.561,1701,2.237,1702,2.237,1703,2.237,1704,2.237,1705,2.237,1706,2.237,1707,2.237,1708,2.237,1709,2.237,1710,3.561,1711,3.561,1712,3.561,1713,3.561,1714,3.561,1715,3.102,1716,3.102,1717,3.561,1718,3.561,1719,3.102,1720,3.561,1721,3.102,1722,1.949,1723,2.237,1724,4.436,1725,2.237,1726,2.237,1727,2.237,1728,3.561,1729,4.436,1730,4.436,1731,2.237,1732,2.237,1733,1.759,1734,1.949,1735,2.237]],["title/modules/TechnologiesModule.html",[260,1.527,1736,2.902]],["body/modules/TechnologiesModule.html",[3,0.165,4,0.129,9,0.129,22,0.295,23,0.77,24,0.013,25,0.165,26,0.503,144,1.362,163,2.226,164,1.069,186,2.15,188,2.15,189,0.66,191,2.226,193,2.15,197,0.008,198,0.01,199,0.008,260,1.945,262,2.379,263,2.877,264,4.194,265,3.223,266,4.063,267,2.604,274,4.635,275,4.063,276,3.223,277,2.733,279,3.446,283,3.446,291,4.022,293,4.022,411,3.038,499,3.135,582,4.661,709,4.022,1149,2.877,1250,4.335,1573,3.697,1736,6.066,1737,4.456,1738,4.456,1739,4.456,1740,5.246,1741,5.115,1742,4.456,1743,4.022,1744,5.115,1745,3.697,1746,4.456,1747,5.115,1748,4.335,1749,5.115,1750,4.335]],["title/guards/TechnologiesResolver.html",[1159,2.699,1748,2.699]],["body/guards/TechnologiesResolver.html",[3,0.171,4,0.133,9,0.133,19,1.183,20,0.952,22,0.29,23,0.795,24,0.013,25,0.171,26,0.519,43,1.375,150,0.527,189,0.47,197,0.008,198,0.011,199,0.008,201,1.506,204,0.447,207,1.692,208,2.354,214,1.943,215,0.647,216,0.99,220,1.358,228,2.17,229,2.258,234,1.734,236,2.932,237,4.218,253,2.008,318,3.648,497,1.797,499,2.567,556,2.354,576,3.824,593,3.817,604,3.198,626,2.456,731,3.327,803,3.829,844,2.456,853,2.688,855,3.327,1102,2.822,1157,4.816,1161,3.55,1163,3.55,1164,4.725,1165,3.327,1167,4.755,1168,5.421,1169,4.816,1170,5.421,1172,3.327,1173,4.152,1175,4.152,1748,4.422,1751,5.633,1752,5.281,1753,5.281,1754,4.6,1755,5.281,1756,4.6,1757,5.281,1758,5.281]],["title/modules/TechnologiesRoutingModule.html",[260,1.527,1740,2.699]],["body/modules/TechnologiesRoutingModule.html",[0,0.858,3,0.188,4,0.146,9,0.146,22,0.29,23,0.874,24,0.013,25,0.188,26,0.571,186,1.921,188,1.921,189,0.621,197,0.009,198,0.011,199,0.009,228,2.385,262,2.7,267,2.955,279,3.102,283,3.724,311,4.564,313,5.038,314,4.685,318,2.955,320,4.685,406,2.822,499,2.822,1149,3.264,1164,4.392,1250,4.685,1256,6.072,1740,4.685,1742,5.056,1745,4.196,1746,5.056,1748,4.685,1750,4.685,1751,4.564,1759,5.804,1760,5.804]],["title/interfaces/Technology.html",[189,0.358,463,0.433]],["body/interfaces/Technology.html",[3,0.127,4,0.099,9,0.099,22,0.142,24,0.014,25,0.201,35,2.419,36,2.767,37,1.443,42,1.498,55,3.112,73,2.648,134,1.976,150,0.435,189,0.734,197,0.006,198,0.009,199,0.006,204,0.333,205,0.984,215,0.745,216,1.14,258,2.468,320,3.648,323,3.923,337,1.685,402,1.495,406,1.915,408,1.134,446,2.9,448,2.046,463,0.757,465,1.085,467,2.046,470,2.9,474,2.196,476,2.749,480,2.861,481,2.551,482,2.073,484,2.105,485,2.643,487,1.832,490,2.321,494,3.178,498,2.105,529,2.005,538,2.105,543,2.144,545,1.556,556,3.128,570,2.105,577,3.763,607,2.34,638,2.9,640,2.9,798,4.836,852,5.26,854,5.09,952,5.26,963,5.26,1149,3.052,1221,2.847,1232,4.267,1682,5.26,1761,2.847,1762,4.728,1763,4.267,1764,5.828,1765,4.728,1766,5.828,1767,4.728,1768,4.728,1769,4.728,1770,4.267,1771,3.432,1772,3.432,1773,3.432,1774,3.432,1775,3.432,1776,3.432,1777,3.432,1778,3.432,1779,4.882,1780,3.432]],["title/classes/TechnologyDataSource.html",[26,0.395,1451,2.145]],["body/classes/TechnologyDataSource.html",[3,0.068,4,0.053,9,0.053,19,0.474,20,1.127,22,0.217,24,0.014,25,0.138,26,0.208,112,1.763,119,2.135,150,0.544,189,0.616,197,0.01,198,0.005,199,0.003,201,0.972,204,0.179,205,0.618,207,0.876,208,3.551,214,2.007,215,0.751,216,1.023,220,1.809,221,2.612,223,1.769,234,1.608,235,1.346,253,2.802,258,2.053,299,1.423,318,2.494,342,2.023,402,1.255,407,1.381,408,1.199,446,1.131,448,2.033,449,1.334,463,0.368,549,2.06,598,1.53,602,3.271,605,2.755,610,3.631,633,1.029,653,2.023,655,2.023,714,5.488,733,2.734,761,2.29,796,4.353,803,3.352,842,1.53,844,0.984,848,1.53,851,1.53,894,1.53,997,3.09,1000,2.462,1004,2.462,1024,2.462,1150,1.423,1229,4.853,1313,1.53,1432,2.874,1433,1.53,1434,2.023,1435,4.222,1436,4.222,1439,1.664,1440,4.743,1441,1.664,1442,1.664,1443,3.852,1444,1.664,1445,5.035,1446,1.53,1447,1.664,1448,1.664,1449,2.462,1450,2.678,1451,1.82,1452,4.933,1453,2.678,1454,3.361,1455,3.361,1456,3.361,1457,3.361,1458,2.678,1459,3.361,1460,3.361,1461,2.678,1462,3.361,1463,3.361,1464,3.881,1465,1.664,1466,1.664,1467,1.664,1468,1.664,1469,1.664,1470,2.678,1471,1.664,1472,2.678,1473,1.664,1474,1.664,1475,1.664,1476,4.743,1477,1.664,1478,4.222,1479,1.664,1480,2.678,1481,1.664,1482,2.678,1483,1.664,1484,1.664,1485,1.664,1486,2.678,1487,3.361,1488,3.852,1489,2.678,1490,1.664,1491,2.678,1492,3.361,1493,2.678,1494,1.664,1495,1.664,1496,1.664,1497,2.678,1498,2.678,1499,1.664,1500,2.678,1501,1.664,1502,1.664,1503,1.664,1504,1.664,1505,2.678,1506,1.664,1507,2.678,1508,1.664,1509,1.664,1510,1.664,1511,1.664,1512,3.852,1513,3.361,1514,2.678,1515,1.664,1516,1.664,1517,1.664,1518,1.664,1519,1.664,1520,1.664,1521,3.361,1522,1.664,1523,1.664,1524,1.664,1525,1.664,1526,2.678,1527,2.678,1528,2.678,1529,2.678,1530,2.678,1531,5.442,1532,4.222,1533,3.361,1534,2.678,1535,3.361,1536,1.664,1537,3.361,1538,2.678,1539,1.664,1540,1.664,1541,1.664,1542,4.743,1543,2.678,1544,3.361,1545,2.678,1546,1.664,1547,1.664,1548,1.664,1549,1.664,1550,1.664,1551,2.678,1552,5.226,1553,1.664,1554,1.664,1555,2.678,1556,1.664,1557,1.664,1558,1.664,1559,1.664,1560,2.678,1561,2.678,1562,2.678,1563,2.678,1564,2.678,1565,2.678,1566,2.678,1567,1.664,1568,1.664,1569,1.53,1570,1.664,1646,1.53,1781,3.406,1782,3.406,1783,3.406,1784,3.406,1785,3.406,1786,3.406,1787,3.406,1788,3.406,1789,3.406,1790,2.116,1791,2.116,1792,2.116,1793,2.116,1794,2.116,1795,2.116,1796,2.116,1797,2.116,1798,2.116,1799,2.116,1800,2.116,1801,2.116,1802,4.899,1803,2.116,1804,2.116,1805,2.116,1806,2.116,1807,2.116,1808,2.116,1809,2.116,1810,2.967,1811,2.116,1812,2.116,1813,2.116,1814,2.116,1815,2.116]],["title/components/TechnologyDetailsComponent.html",[0,0.494,188,1.106]],["body/components/TechnologyDetailsComponent.html",[0,0.717,1,0.998,2,1.582,3,0.113,4,0.088,5,1.149,6,1.191,7,1.149,8,1.149,9,0.088,11,1.033,12,2.595,13,2.412,14,2.213,15,1.64,17,1.64,19,0.784,20,1.041,22,0.259,23,0.527,24,0.014,25,0.113,26,0.344,37,1.829,43,1.327,79,1.496,80,1.56,81,2.214,82,2.84,83,2.491,86,2.393,88,2.393,90,1.382,92,1.56,94,2.831,95,1.109,96,2.965,101,2.205,102,1.968,103,1.701,112,1.149,114,2.596,119,1.982,126,1.87,131,1.781,132,1.87,133,1.496,144,0.932,145,1.64,146,1.582,147,1.149,148,2.085,149,1.149,150,0.509,151,1.149,152,0.998,153,1.149,154,0.998,155,1.149,156,1.812,157,1.149,158,0.998,159,1.109,160,1.149,161,0.998,162,1.149,163,0.998,164,0.731,165,1.149,166,0.964,167,1.149,168,0.998,169,1.149,170,0.964,171,1.149,172,0.998,173,1.149,174,0.998,175,1.149,176,0.964,177,0.964,178,1.149,179,0.998,180,1.149,181,0.964,182,1.07,183,1.149,184,0.964,185,1.149,186,0.964,187,1.149,188,1.75,189,0.71,190,1.149,191,0.998,192,1.149,193,0.964,194,1.07,195,1.149,196,1.149,197,0.006,198,0.008,199,0.006,201,1.425,202,2.393,204,0.296,205,0.906,207,1.285,210,2.609,214,1.033,215,0.66,216,0.527,220,0.9,221,1.829,228,1.438,229,1.496,235,1.382,337,2.491,352,4.351,362,1.781,366,2.352,370,2.136,390,2.529,416,2.078,423,2.965,427,1.968,458,2.352,459,2.352,486,2.709,497,1.982,507,2.428,613,1.781,702,3.147,706,2.352,853,1.781,855,2.205,1016,2.529,1093,2.809,1099,2.529,1100,4.27,1102,2.669,1104,2.529,1105,2.751,1117,5.073,1129,3.048,1131,2.751,1149,2.809,1236,2.751,1429,3.048,1572,4.631,1581,2.529,1646,3.61,1659,2.751,1675,4.351,1679,3.048,1683,3.048,1745,5.313,1816,3.048,1817,5.824,1818,4.994,1819,5.824,1820,4.994,1821,4.994,1822,4.994,1823,3.499,1824,3.499,1825,3.499,1826,3.499,1827,4.994,1828,3.499,1829,3.499,1830,3.499,1831,3.499,1832,3.499,1833,3.499,1834,3.499,1835,3.499,1836,3.499,1837,3.499,1838,3.499,1839,3.499,1840,4.994,1841,4.994,1842,4.994,1843,4.994,1844,3.499,1845,3.499,1846,3.499]],["title/guards/TechnologyDetailsResolverService.html",[1159,2.699,1750,2.699]],["body/guards/TechnologyDetailsResolverService.html",[3,0.172,4,0.134,9,0.134,19,1.195,20,0.959,22,0.288,23,0.803,24,0.013,25,0.172,26,0.525,150,0.531,189,0.475,197,0.009,198,0.011,199,0.009,201,1.522,204,0.451,207,1.703,208,2.378,214,1.955,215,0.651,216,0.997,220,1.372,228,2.192,229,2.282,234,1.752,236,2.951,237,4.233,253,2.029,318,3.37,474,1.752,497,1.816,556,2.378,576,3.834,593,3.856,803,3.846,844,2.481,853,2.716,855,3.362,1102,2.851,1149,4.048,1157,4.839,1161,3.586,1163,3.586,1164,4.742,1165,3.362,1167,4.785,1168,5.441,1169,4.839,1170,5.441,1171,4.648,1172,3.362,1173,4.195,1175,4.195,1572,4.535,1750,4.45,1754,5.767,1756,4.648,1847,5.335,1848,5.335,1849,5.335]],["title/interfaces/TechnologyDossier.html",[463,0.433,854,2.699]],["body/interfaces/TechnologyDossier.html",[3,0.138,4,0.108,9,0.108,22,0.154,24,0.014,25,0.209,35,2.56,36,2.889,37,1.568,42,1.628,55,3.221,73,3.861,134,1.781,150,0.343,189,0.723,197,0.007,198,0.009,199,0.007,204,0.362,205,1.041,215,0.637,216,0.865,258,2.531,320,2.878,323,3.095,337,1.831,402,1.433,406,3.367,408,0.895,446,3.86,448,2.274,463,0.78,465,1.18,467,2.118,470,2.288,474,1.406,476,2.845,480,3.089,481,2.663,482,1.914,484,3.069,485,2.736,487,1.992,490,1.831,494,3.302,498,2.288,529,2.924,538,2.288,543,2.854,545,2.736,556,1.908,570,3.701,577,3.23,607,3.412,638,3.069,640,2.288,798,3.095,852,4.516,854,4.856,952,3.367,963,3.367,1149,2.408,1221,3.095,1232,3.367,1682,3.367,1761,3.095,1762,3.73,1763,3.367,1764,3.73,1765,3.73,1766,5.003,1767,3.73,1768,3.73,1769,3.73,1770,3.367,1771,3.73,1772,3.73,1773,3.73,1774,3.73,1775,3.73,1776,3.73,1777,3.73,1778,5.003,1779,5.096,1780,3.73,1850,4.282]],["title/interfaces/TechnologyDossierResponse.html",[463,0.433,569,2.145]],["body/interfaces/TechnologyDossierResponse.html",[3,0.162,4,0.126,9,0.126,22,0.229,24,0.014,25,0.251,42,2.661,51,3.255,67,1.589,134,1.8,150,0.59,189,0.447,197,0.008,198,0.01,199,0.008,204,0.424,205,1.155,215,0.688,216,0.959,223,1.335,402,1.515,406,3.579,407,1.29,435,1.907,448,1.948,463,0.87,465,1.382,467,2.14,474,2.417,475,3.024,482,2.067,488,2.236,489,2.724,517,2.145,518,2.145,525,2.236,526,2.236,543,2.765,545,2.908,557,2.68,558,2.979,559,3.16,560,4.157,561,4.409,562,2.68,563,3.16,564,2.68,565,3.16,566,2.68,567,3.16,568,3.16,569,3.403,570,3.934,571,4.14,572,2.333]],["title/interfaces/TechnologyFilterConfiguration.html",[463,0.433,626,1.867]],["body/interfaces/TechnologyFilterConfiguration.html",[3,0.11,4,0.086,9,0.086,20,0.832,22,0.123,24,0.014,25,0.224,38,2.622,61,3.231,62,3.412,67,1.82,112,1.611,125,1.824,134,0.878,150,0.596,164,1.026,189,0.593,197,0.005,198,0.008,199,0.005,204,0.289,205,0.89,215,0.731,223,0.909,234,1.121,235,1.349,258,1.162,372,3.532,382,2.184,402,1.423,408,1.526,463,0.825,464,1.349,465,0.941,467,2.183,476,1.403,477,2.58,480,2.686,481,2.36,482,2.229,485,2.737,490,1.46,494,1.46,496,3.181,510,2.672,511,2.56,513,3.554,516,2.672,540,1.588,549,2.184,556,2.187,572,1.588,602,1.588,603,2.028,604,3.885,605,2.76,606,2.295,607,2.028,610,2.925,612,4.222,613,3.387,614,2.295,615,2.295,616,4.686,617,3.843,618,1.92,619,2.151,620,2.151,621,2.295,622,4.483,623,3.862,624,3.299,625,3.862,626,2.283,627,4.222,628,2.295,629,2.915,630,2.915,631,2.028,632,2.151,633,3.053,634,3.092,635,2.295,636,2.295,637,2.295,638,2.622,639,2.151,640,1.824,641,4.797,642,2.915,643,3.092,644,2.295,645,3.299,646,3.299,647,3.092,648,2.295,649,3.092,650,3.62,651,3.957,652,3.957,653,2.915,654,2.295,655,2.915,656,3.092,657,3.092,658,2.295,659,2.295,660,2.295,661,2.295,662,2.295,663,2.151]],["title/components/TechnologyListComponent.html",[0,0.494,191,1.145]],["body/components/TechnologyListComponent.html",[0,0.683,1,0.916,2,1.487,3,0.104,4,0.081,5,1.054,6,1.092,7,1.054,8,1.054,9,0.081,11,0.948,12,2.571,13,2.389,14,1.487,15,1.54,17,1.54,19,1.243,20,0.94,22,0.2,23,0.483,24,0.014,25,0.104,26,0.316,37,2.821,43,0.671,79,1.373,80,1.43,81,2.663,82,3.145,83,2.372,84,1.715,85,2.787,86,2.279,87,2.281,88,2.507,89,2.838,90,2.411,92,3.022,94,2.472,95,1.487,96,3.305,98,3.154,99,3.392,100,2.796,101,3.495,103,2.281,104,3.154,106,2.523,107,2.796,108,2.523,111,2.157,112,2.357,114,2.091,115,2.32,117,2.157,118,2.022,119,2.383,120,2.796,121,2.796,122,2.157,123,2.796,124,2.787,127,2.507,128,2.507,129,2.787,130,2.32,131,1.634,133,2.007,134,1.207,135,2.022,136,2.281,137,1.715,138,2.58,142,2.523,144,0.854,145,1.54,146,1.487,147,1.054,148,2.003,149,1.054,150,0.561,151,1.054,152,0.916,153,1.054,154,0.916,155,1.054,156,0.916,157,1.054,158,0.916,159,1.017,160,1.054,161,0.916,162,1.054,163,0.916,164,0.671,165,1.054,166,0.884,167,1.054,168,0.916,169,1.054,170,0.884,171,1.054,172,0.916,173,1.054,174,0.916,175,1.054,176,0.884,177,0.884,178,1.054,179,0.916,180,1.054,181,0.884,182,0.982,183,1.054,184,0.884,185,1.054,186,0.884,187,1.054,188,0.884,189,0.663,190,1.054,191,1.74,192,1.054,193,0.884,194,0.982,195,1.054,196,1.054,197,0.005,198,0.008,199,0.005,201,1.338,202,2.279,204,0.271,205,0.851,207,1.207,210,2.507,214,0.948,215,0.545,216,0.483,220,1.207,221,2.031,337,1.373,342,2.787,351,3.392,354,1.906,362,2.389,370,1.373,376,2.796,381,2.796,382,2.003,397,2.639,402,1.006,407,0.825,408,0.671,410,2.507,423,1.634,427,2.639,453,1.906,458,2.157,459,2.157,549,1.54,604,2.281,698,2.796,702,2.022,706,3.154,707,2.022,774,2.523,1093,3.119,1153,2.796,1154,2.796,1155,2.796,1199,2.523,1207,2.796,1297,2.796,1434,3.294,1451,2.964,1464,2.32,1572,4.272,1582,2.32,1722,2.796,1733,3.689,1734,2.796,1743,5.331,1851,2.796,1852,5.546,1853,4.692,1854,5.546,1855,4.692,1856,4.692,1857,3.209,1858,3.209,1859,4.692,1860,3.209,1861,4.692,1862,3.209,1863,3.209,1864,3.209,1865,3.209,1866,3.209,1867,4.692,1868,4.692,1869,4.692,1870,4.692,1871,4.692,1872,6.101,1873,3.209,1874,3.209,1875,3.209,1876,3.209]],["title/components/TechnologyTableComponent.html",[0,0.494,193,1.106]],["body/components/TechnologyTableComponent.html",[0,0.586,1,0.712,2,1.23,3,0.081,4,0.063,5,0.82,6,0.85,7,0.82,8,0.82,9,0.063,11,0.737,12,2.493,13,2.314,14,1.23,15,1.274,17,1.274,19,1.067,20,1.072,22,0.231,23,0.376,24,0.014,25,0.125,26,0.382,43,1.123,79,1.068,80,1.113,81,1.811,82,2.54,83,2.037,84,1.334,85,2.306,86,1.957,87,1.214,88,2.207,89,1.161,90,1.882,92,3.044,94,1.113,95,1.509,96,1.976,101,3.666,103,1.214,104,3.912,111,1.678,112,1.274,114,1.73,119,2.324,124,2.829,126,3.799,127,1.334,128,1.334,129,1.483,130,4.453,131,1.976,133,2.298,135,1.573,136,1.214,137,1.334,138,2.707,144,0.665,145,1.274,146,1.23,147,0.82,148,1.764,149,0.82,150,0.586,151,0.82,152,0.712,153,0.82,154,0.712,155,0.82,156,0.712,157,0.82,158,0.712,159,0.791,160,0.82,161,0.712,162,0.82,163,0.712,164,0.811,165,0.82,166,0.688,167,0.82,168,0.712,169,0.82,170,0.688,171,0.82,172,0.712,173,0.82,174,0.712,175,0.82,176,0.688,177,0.688,178,0.82,179,0.712,180,0.82,181,0.688,182,0.764,183,0.82,184,0.688,185,0.82,186,0.688,187,0.82,188,0.688,189,0.622,190,0.82,191,0.712,192,0.82,193,1.48,194,1.78,195,0.82,196,0.82,197,0.004,198,0.006,199,0.004,201,1.107,202,1.957,204,0.454,205,0.704,207,0.998,208,2.123,210,2.207,214,0.737,215,0.686,216,0.376,220,1.382,221,2.131,342,3.191,354,2.829,362,1.271,370,2.298,382,0.82,397,2.183,402,1.266,407,1.382,408,1.344,410,3.109,416,1.483,422,3.443,423,1.976,424,3.443,431,1.805,442,2.207,456,3.021,458,2.609,459,2.609,474,1.564,497,1.621,548,2.074,549,0.82,626,2.215,630,1.483,631,2.829,691,3.052,702,1.573,706,2.609,707,1.573,731,1.573,853,1.271,900,1.963,920,1.963,1093,2.183,1132,1.963,1137,1.963,1152,4.224,1178,3.745,1186,3.381,1283,1.805,1377,1.805,1434,2.829,1451,2.545,1569,2.806,1571,5.139,1572,4.712,1573,5.405,1574,1.963,1575,3.381,1580,4.149,1581,1.805,1582,1.805,1583,3.745,1584,3.381,1585,4.149,1586,3.745,1587,3.745,1588,3.381,1589,4.149,1590,4.149,1591,5.949,1592,4.149,1593,3.381,1594,4.149,1595,3.381,1596,2.175,1597,2.175,1598,2.175,1599,2.175,1600,2.175,1601,2.175,1602,2.175,1603,2.175,1604,3.381,1605,2.175,1606,3.381,1607,3.381,1608,2.175,1609,4.68,1610,4.68,1611,2.175,1612,2.175,1613,2.175,1614,2.175,1615,3.052,1616,2.175,1617,2.175,1618,1.963,1619,1.963,1620,2.175,1621,4.68,1622,3.381,1623,4.68,1659,1.963,1721,3.381,1733,1.963,1877,3.882,1878,3.882,1879,2.496,1880,2.496,1881,2.496,1882,2.496,1883,2.496,1884,2.496,1885,2.496,1886,2.496,1887,2.496,1888,2.496,1889,2.496,1890,2.496,1891,3.882,1892,5.372,1893,3.882,1894,6.161,1895,3.882,1896,2.496,1897,2.496,1898,2.496,1899,5.372,1900,6.829,1901,5.372,1902,4.763,1903,2.496,1904,3.882,1905,2.496,1906,2.496,1907,2.496]],["title/pipes/TruncatePipe.html",[892,2.258,1414,2.699]],["body/pipes/TruncatePipe.html",[3,0.181,4,0.141,9,0.141,11,1.649,20,0.809,22,0.201,23,0.841,24,0.014,25,0.181,26,0.549,150,0.589,197,0.009,198,0.011,199,0.009,201,1.593,207,1.436,214,1.649,215,0.549,216,0.841,220,1.436,235,2.69,253,2.124,402,1.446,407,1.436,408,1.535,549,2.235,892,3.829,1187,5.354,1401,4.037,1405,4.391,1406,5.354,1408,5.354,1414,4.577,1908,4.865,1909,6.809,1910,7.974,1911,7.647,1912,7.647,1913,5.585,1914,6.809,1915,5.585,1916,5.585]],["title/pipes/YesNoPipe.html",[892,2.258,1415,2.699]],["body/pipes/YesNoPipe.html",[3,0.192,4,0.149,9,0.149,11,1.75,20,0.858,22,0.213,23,0.892,24,0.014,25,0.192,26,0.583,150,0.604,197,0.009,198,0.011,199,0.009,201,1.691,207,1.524,214,1.75,215,0.583,216,0.892,220,1.524,223,1.578,253,2.683,408,1.63,691,5.549,761,3.984,892,3.969,1377,4.284,1401,4.284,1405,4.66,1406,5.549,1408,5.549,1415,4.744,1917,6.148,1918,5.163,1919,5.926]],["title/coverage.html",[1920,4.79]],["body/coverage.html",[0,0.994,1,0.928,9,0.082,10,2.834,24,0.014,26,0.604,50,1.656,119,2.88,152,0.928,154,0.928,156,0.928,158,0.928,161,0.928,163,0.928,166,0.896,168,0.928,170,0.896,172,0.928,174,0.928,176,0.896,177,0.896,179,0.928,181,0.896,184,0.896,186,0.896,188,0.896,189,0.29,191,0.928,193,0.896,194,0.995,197,0.005,198,0.008,199,0.005,200,2.834,215,0.32,236,2.737,237,1.83,239,2.834,240,2.834,260,1.237,298,2.558,300,2.834,316,2.352,331,2.834,389,2.834,390,2.352,391,2.834,419,2.834,428,2.834,429,2.558,430,2.834,442,1.337,448,0.995,456,4.379,463,0.88,464,1.285,466,3.955,481,1.337,486,1.513,497,1.107,509,1.656,541,1.656,557,1.738,558,4.047,562,1.738,564,1.738,566,1.738,569,1.738,571,1.83,576,1.582,577,1.83,578,2.187,583,2.352,585,2.558,602,1.513,603,3.877,610,1.656,617,1.656,618,1.83,626,1.513,665,2.834,708,2.834,709,2.558,710,2.834,733,1.656,776,5.87,854,2.187,857,1.932,859,2.558,861,2.558,863,2.558,865,2.558,868,2.558,870,2.558,872,2.558,874,2.558,876,2.558,892,3.144,1046,2.834,1047,2.834,1054,2.834,1061,2.834,1096,2.834,1107,2.834,1108,2.558,1109,2.834,1149,1.83,1159,4.128,1160,2.187,1162,2.834,1163,4.128,1177,2.834,1187,2.558,1208,2.834,1214,2.352,1215,3.726,1226,2.834,1248,2.187,1258,2.558,1259,2.558,1330,2.834,1357,2.834,1358,2.834,1365,3.726,1366,3.726,1379,2.352,1380,2.834,1396,2.834,1400,2.187,1402,2.834,1403,2.834,1414,2.187,1415,2.187,1432,2.187,1433,4.04,1445,2.187,1451,1.738,1571,2.352,1572,4.112,1573,3.425,1574,3.726,1624,2.834,1743,2.558,1745,2.352,1748,2.187,1750,2.187,1751,2.558,1761,3.425,1816,2.834,1851,2.834,1908,2.834,1917,2.834,1918,2.834,1920,2.834,1921,3.253,1922,7.722,1923,4.739,1924,6.141,1925,6.527,1926,3.253,1927,7.786,1928,7.976,1929,6.141,1930,5.589,1931,3.253,1932,3.253,1933,3.253,1934,6.141,1935,5.589,1936,6.141,1937,3.253,1938,3.253,1939,3.253,1940,5.589,1941,5.589,1942,3.253,1943,3.253,1944,3.253,1945,3.253,1946,2.834,1947,4.128,1948,2.834,1949,4.128,1950,2.834,1951,2.834,1952,3.253]],["title/dependencies.html",[263,2.719,1953,3.344]],["body/dependencies.html",[23,0.894,24,0.014,197,0.01,198,0.011,199,0.01,228,2.44,263,3.339,281,6.155,282,4.749,285,5.173,286,5.173,411,3.527,732,4.292,844,2.762,1379,4.292,1954,5.938,1955,8.33,1956,5.938,1957,5.938,1958,5.938,1959,5.938,1960,5.938,1961,5.938,1962,5.938,1963,5.938,1964,5.938,1965,5.938,1966,5.938,1967,5.938,1968,5.938,1969,5.938]],["title/miscellaneous/enumerations.html",[1970,2.417,1971,4.211]],["body/miscellaneous/enumerations.html",[24,0.013,38,2.99,55,3.171,62,3.323,189,0.498,197,0.009,198,0.011,199,0.009,204,0.473,215,0.55,408,1.748,467,2.085,482,2.013,487,2.602,496,2.494,603,3.323,604,2.72,617,2.848,629,3.323,630,3.323,633,3.314,638,3.642,639,3.525,640,2.99,643,4.295,647,4.295,649,4.295,653,4.049,655,4.049,656,4.295,657,4.295,1221,4.044,1258,4.399,1259,5.36,1269,5.938,1270,5.938,1271,5.938,1272,5.938,1273,5.36,1761,4.044,1779,5.36,1970,4.044,1971,4.874,1972,5.595,1973,5.595,1974,5.595]],["title/index.html",[204,0.283,1975,2.913,1976,2.913]],["body/index.html",[0,0.871,4,0.163,13,1.518,24,0.01,27,5.565,28,4.042,32,3.716,34,4.478,35,2.291,36,2.291,37,1.883,38,2.747,39,4.478,41,4.042,42,1.955,43,1.074,53,2.499,55,3.008,61,3.981,150,0.412,197,0.008,198,0.01,199,0.01,258,1.749,277,2.747,306,4.478,337,2.198,339,2.617,348,4.478,349,4.042,351,3.716,463,0.555,524,3.782,537,2.891,560,3.842,594,4.478,620,3.239,629,3.053,650,3.239,695,5.84,733,2.617,886,4.042,1719,4.478,1977,5.14,1978,5.14,1979,5.14,1980,5.14,1981,7.814,1982,7.427,1983,4.478,1984,5.14,1985,5.14,1986,5.14,1987,5.14,1988,5.14,1989,4.478,1990,5.14,1991,5.14,1992,5.14,1993,7.655,1994,7.932,1995,5.14,1996,5.14,1997,5.14,1998,5.14,1999,5.14,2000,5.14,2001,5.14,2002,4.478,2003,5.14,2004,7.078,2005,5.14,2006,5.14,2007,5.14,2008,5.14,2009,5.14,2010,5.14,2011,5.14,2012,5.14,2013,4.478,2014,6.468,2015,6.468,2016,7.427,2017,5.14,2018,6.468,2019,6.468,2020,5.14,2021,5.14,2022,5.14,2023,7.078,2024,6.468,2025,5.14,2026,5.14,2027,5.14]],["title/license.html",[1975,2.913,1976,2.913,2028,2.913]],["body/license.html",[4,0.177,9,0.162,20,0.329,22,0.082,24,0.007,26,0.223,31,1.786,32,1.642,36,1.012,38,1.214,40,4.373,45,1.979,49,7.011,50,2.281,51,1.057,53,1.104,54,1.431,58,2.832,61,1.278,64,1.979,81,1.37,90,0.897,91,1.786,109,3.14,112,0.746,113,1.527,132,1.214,134,0.584,136,1.104,150,0.359,182,0.695,197,0.006,198,0.006,199,0.004,277,1.214,336,1.979,339,1.156,372,2.869,414,1.642,453,2.661,465,0.626,469,1.926,476,0.933,485,0.897,487,1.057,505,1.214,511,2.273,524,3.629,529,1.156,542,1.156,543,0.897,554,1.278,555,1.278,622,1.349,632,1.431,640,1.926,651,1.431,663,1.431,695,1.786,886,3.523,1060,6.609,1068,1.979,1072,3.903,1073,3.14,1169,1.527,1218,6.562,1219,1.979,1220,1.979,1335,1.979,1336,1.979,1349,4.654,1373,1.979,1646,1.642,1715,3.14,1716,1.979,1763,5.628,1770,1.786,1983,3.14,1989,1.979,2002,3.903,2028,6.995,2029,5.1,2030,4.48,2031,4.48,2032,2.272,2033,2.272,2034,2.272,2035,6.629,2036,7.158,2037,5.1,2038,5.562,2039,2.272,2040,7.333,2041,6.792,2042,1.979,2043,2.272,2044,6.792,2045,7.158,2046,5.92,2047,6.792,2048,3.604,2049,2.272,2050,5.562,2051,2.272,2052,2.272,2053,2.272,2054,5.1,2055,2.272,2056,6.629,2057,2.272,2058,5.1,2059,3.604,2060,3.604,2061,2.272,2062,4.48,2063,3.604,2064,3.604,2065,2.272,2066,3.604,2067,5.92,2068,2.272,2069,3.604,2070,2.272,2071,2.272,2072,2.272,2073,2.272,2074,2.272,2075,2.272,2076,4.48,2077,2.272,2078,4.48,2079,3.604,2080,2.272,2081,2.272,2082,5.92,2083,6.629,2084,5.1,2085,2.272,2086,2.272,2087,2.272,2088,2.272,2089,2.272,2090,2.272,2091,4.48,2092,3.604,2093,2.272,2094,6.629,2095,3.604,2096,2.272,2097,3.604,2098,7.533,2099,2.272,2100,2.272,2101,2.272,2102,2.272,2103,3.604,2104,3.604,2105,2.272,2106,2.272,2107,2.272,2108,2.272,2109,5.1,2110,5.562,2111,2.272,2112,3.604,2113,5.1,2114,3.604,2115,2.272,2116,5.562,2117,3.604,2118,2.272,2119,2.272,2120,4.48,2121,2.272,2122,2.272,2123,2.272,2124,3.604,2125,2.272,2126,2.272,2127,2.272,2128,4.48,2129,2.272,2130,2.272,2131,4.48,2132,2.272,2133,2.272,2134,2.272,2135,5.1,2136,6.792,2137,2.272,2138,2.272,2139,3.604,2140,6.436,2141,4.48,2142,5.1,2143,3.604,2144,3.604,2145,3.604,2146,3.604,2147,4.48,2148,3.604,2149,4.48,2150,3.604,2151,3.604,2152,3.604,2153,3.604,2154,2.272,2155,3.604,2156,2.272,2157,5.562,2158,6.204,2159,4.48,2160,3.604,2161,2.272,2162,3.604,2163,3.604,2164,2.272,2165,2.272,2166,4.48,2167,3.604,2168,2.272,2169,2.272,2170,2.272,2171,4.48,2172,2.272,2173,2.272,2174,3.604,2175,3.604,2176,2.272,2177,2.272,2178,2.272,2179,2.272,2180,2.272,2181,2.272,2182,2.272,2183,3.604,2184,2.272,2185,2.272,2186,2.272,2187,2.272,2188,2.272,2189,2.272,2190,5.562,2191,2.272,2192,4.48,2193,2.272,2194,2.272,2195,4.48,2196,2.272,2197,2.272,2198,2.272,2199,2.272,2200,6.436,2201,2.272,2202,2.272,2203,2.272,2204,2.272,2205,2.272,2206,5.1,2207,3.604,2208,5.1,2209,2.272,2210,2.272,2211,2.272,2212,4.48,2213,2.272,2214,2.272,2215,3.604,2216,3.604,2217,2.272,2218,2.272,2219,2.272,2220,2.272,2221,3.604,2222,3.604,2223,2.272,2224,2.272,2225,2.272,2226,2.272,2227,2.272,2228,2.272,2229,2.272,2230,2.272,2231,4.48,2232,5.1,2233,2.272,2234,2.272,2235,2.272,2236,2.272,2237,2.272,2238,2.272,2239,2.272,2240,2.272,2241,2.272,2242,2.272,2243,3.604,2244,2.272,2245,2.272,2246,3.604,2247,2.272,2248,5.1,2249,2.272,2250,2.272,2251,2.272,2252,2.272,2253,2.272,2254,5.1,2255,4.48,2256,4.48,2257,4.48,2258,3.604,2259,3.604,2260,3.604,2261,2.272,2262,2.272,2263,2.272,2264,2.272,2265,2.272,2266,2.272,2267,3.604,2268,2.272,2269,2.272,2270,2.272,2271,2.272,2272,5.562,2273,2.272,2274,2.272,2275,2.272,2276,2.272,2277,2.272,2278,2.272,2279,2.272,2280,2.272,2281,5.562,2282,2.272,2283,2.272,2284,2.272,2285,2.272,2286,2.272,2287,2.272,2288,2.272,2289,2.272,2290,2.272,2291,2.272,2292,2.272,2293,2.272,2294,2.272,2295,2.272,2296,2.272,2297,2.272,2298,4.48,2299,2.272,2300,2.272,2301,2.272,2302,3.604,2303,2.272,2304,2.272,2305,2.272,2306,2.272,2307,2.272,2308,2.272,2309,2.272,2310,2.272,2311,2.272,2312,2.272,2313,2.272,2314,2.272,2315,2.272,2316,2.272,2317,3.604,2318,2.272,2319,2.272,2320,2.272,2321,3.604,2322,3.604,2323,2.272,2324,2.272,2325,2.272,2326,2.272,2327,2.272,2328,2.272,2329,2.272,2330,2.272,2331,2.272,2332,2.272,2333,2.272,2334,2.272,2335,2.272,2336,2.272,2337,2.272,2338,2.272,2339,2.272,2340,2.272,2341,2.272]],["title/modules.html",[262,2.557]],["body/modules.html",[24,0.011,32,5.799,51,3.658,197,0.01,198,0.011,199,0.01,261,4.085,262,2.827,272,4.085,273,4.085,274,3.61,282,5.393,353,6.013,1239,4.393,1243,4.085,1273,6.308,1274,4.085,1736,4.393,1740,4.085,2342,7.865]],["title/overview.html",[1331,4.323]],["body/overview.html",[1,1.762,2,1.236,24,0.014,119,1.327,144,1.038,152,2.114,154,1.762,156,2.114,158,2.114,161,1.762,163,1.762,166,1.702,168,2.114,170,1.702,172,2.114,174,2.114,176,1.702,177,1.702,179,1.762,181,2.042,184,1.702,186,1.702,188,1.702,191,1.762,193,1.702,197,0.006,198,0.009,199,0.006,237,3.473,238,2.621,260,1.483,261,5.504,262,1.814,263,2.193,264,2.316,265,2.457,266,2.457,267,1.985,268,3.397,269,3.397,270,3.397,271,3.397,272,4.151,273,5.27,274,5.013,275,3.396,276,2.457,277,2.084,299,2.621,425,3.066,465,1.075,574,3.397,575,3.397,576,3.002,577,3.473,578,4.151,1161,2.621,1239,5.792,1240,3.397,1241,3.397,1242,3.397,1243,4.151,1274,4.982,1331,3.066,1400,4.982,1401,2.819,1410,3.397,1411,3.397,1412,3.397,1413,3.397,1414,4.982,1415,4.982,1736,5.852,1737,3.397,1738,3.397,1739,3.397,1740,4.151,2042,3.397,2343,3.9,2344,6.176,2345,3.9]],["title/routes.html",[314,3.696]],["body/routes.html",[24,0.012,197,0.011,198,0.012,199,0.011,314,4.442]],["title/miscellaneous/variables.html",[1970,2.417,2346,4.211]],["body/miscellaneous/variables.html",[24,0.014,197,0.008,198,0.01,199,0.008,204,0.426,215,0.815,234,2.095,235,1.988,402,1.462,407,2.114,408,1.718,776,3.956,859,5.018,860,4.384,861,5.018,862,4.384,863,5.018,864,4.384,865,5.018,866,4.384,867,4.384,868,5.018,869,4.384,870,5.018,871,4.384,872,5.018,873,4.384,874,5.018,875,4.384,876,5.018,877,4.384,1349,5.018,1365,3.956,1366,5.018,1379,4.613,1810,4.384,1946,4.384,1947,6.42,1948,4.384,1949,4.384,1950,5.559,1951,5.559,1970,3.637,2013,5.559,2346,4.384,2347,6.382,2348,8.064,2349,5.032,2350,5.032,2351,5.032,2352,5.032,2353,5.032]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.10.3",{"_index":1969,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["0.22",{"_index":374,"title":{},"body":{"components/BannerComponent.html":{}}}],["0.2rem",{"_index":1873,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["0.6.2",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1928,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1931,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1933,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1945,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1944,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1924,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1926,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1932,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1922,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1925,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1923,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1929,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1930,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["1.1rem",{"_index":140,"title":{},"body":{"components/AboutComponent.html":{},"components/ChildGroupingComponent.html":{}}}],["1.2rem",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{}}}],["1.3rem",{"_index":386,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionComponent.html":{}}}],["1.5rem",{"_index":366,"title":{},"body":{"components/BannerComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["1.7rem",{"_index":371,"title":{},"body":{"components/BannerComponent.html":{}}}],["1.8rem",{"_index":385,"title":{},"body":{"components/BannerComponent.html":{}}}],["1/1",{"_index":1937,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1939,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1942,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1941,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":342,"title":{},"body":{"components/BannerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["100",{"_index":456,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":1236,"title":{},"body":{"components/InformationComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["10px",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["10rem",{"_index":1845,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["11",{"_index":1185,"title":{},"body":{"components/HeaderComponent.html":{}}}],["11.0.0",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["11.1.1",{"_index":1955,"title":{},"body":{"dependencies.html":{}}}],["11.1.2",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["1100px",{"_index":387,"title":{},"body":{"components/BannerComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{}}}],["1200px",{"_index":1095,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{}}}],["1400px",{"_index":1907,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["150",{"_index":548,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["16",{"_index":1940,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["18",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{}}}],["18px",{"_index":384,"title":{},"body":{"components/BannerComponent.html":{}}}],["1em",{"_index":1087,"title":{},"body":{"components/FooterComponent.html":{}}}],["1fr",{"_index":1343,"title":{},"body":{"components/OverviewComponent.html":{}}}],["1px",{"_index":424,"title":{},"body":{"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["1rem",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["2",{"_index":707,"title":{},"body":{"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["2.0",{"_index":2031,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":1967,"title":{},"body":{"dependencies.html":{}}}],["2.2rem",{"_index":772,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["2.5rem",{"_index":388,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologiesComponent.html":{}}}],["20",{"_index":419,"title":{},"body":{"components/BottomNavComponent.html":{},"coverage.html":{}}}],["200",{"_index":1839,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["2004",{"_index":2033,"title":{},"body":{"license.html":{}}}],["2021",{"_index":1067,"title":{},"body":{"components/FooterComponent.html":{}}}],["21",{"_index":2343,"title":{},"body":{"overview.html":{}}}],["212121",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{}}}],["24",{"_index":2345,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1187,"title":{},"body":{"components/HeaderComponent.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["2em",{"_index":1197,"title":{},"body":{"components/HeaderComponent.html":{}}}],["2px",{"_index":1186,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["2rem",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["3",{"_index":425,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{},"overview.html":{}}}],["3.5rem",{"_index":1902,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["3/3",{"_index":1938,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1727,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["30em",{"_index":1723,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["35",{"_index":1356,"title":{},"body":{"components/OverviewComponent.html":{}}}],["3rem",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["3s",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["4",{"_index":2344,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1936,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":376,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologyListComponent.html":{}}}],["40px",{"_index":383,"title":{},"body":{"components/BannerComponent.html":{}}}],["4em",{"_index":1089,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["4px",{"_index":373,"title":{},"body":{"components/BannerComponent.html":{}}}],["4rem",{"_index":1090,"title":{},"body":{"components/FooterComponent.html":{}}}],["5",{"_index":1861,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["5.5rem",{"_index":1193,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5/5",{"_index":1934,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":414,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"license.html":{}}}],["500",{"_index":1085,"title":{},"body":{"components/FooterComponent.html":{}}}],["510px",{"_index":426,"title":{},"body":{"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{}}}],["550px",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{}}}],["55em",{"_index":1205,"title":{},"body":{"components/HeaderComponent.html":{}}}],["57rem",{"_index":1094,"title":{},"body":{"components/FooterComponent.html":{}}}],["5rem",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["5s",{"_index":1354,"title":{},"body":{"components/OverviewComponent.html":{}}}],["6.6.3",{"_index":1965,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1935,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":459,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["620px",{"_index":1206,"title":{},"body":{"components/HeaderComponent.html":{}}}],["6em",{"_index":1202,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7",{"_index":1353,"title":{},"body":{"components/OverviewComponent.html":{}}}],["70",{"_index":1348,"title":{},"body":{"components/OverviewComponent.html":{}}}],["790px",{"_index":142,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/TechnologyListComponent.html":{}}}],["7rem",{"_index":773,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["80",{"_index":1722,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["850px",{"_index":1670,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["8rem",{"_index":135,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["9",{"_index":2042,"title":{},"body":{"license.html":{},"overview.html":{}}}],["9/9",{"_index":1943,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":701,"title":{},"body":{"components/CriterionComponent.html":{},"components/TechnologiesComponent.html":{}}}],["900",{"_index":368,"title":{},"body":{"components/BannerComponent.html":{},"components/FooterComponent.html":{}}}],["900px",{"_index":1733,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["910px",{"_index":1734,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["93vw",{"_index":1896,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["95",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{}}}],["95rem",{"_index":1207,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{}}}],["9rem",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{}}}],["_scss/global/variables",{"_index":416,"title":{},"body":{"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["_scss/shared",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["a[sort.property",{"_index":1528,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["about'},{'name",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["about.component.html",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["above",{"_index":2235,"title":{},"body":{"license.html":{}}}],["academic",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{}}}],["acceptance",{"_index":2300,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":2298,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":243,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["act",{"_index":2306,"title":{},"body":{"license.html":{}}}],["acting",{"_index":2052,"title":{},"body":{"license.html":{}}}],["activatedroute",{"_index":1100,"title":{},"body":{"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":1168,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["active",{"_index":1201,"title":{},"body":{"components/HeaderComponent.html":{}}}],["acts",{"_index":2279,"title":{},"body":{"license.html":{}}}],["actual",{"_index":660,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["actual_component",{"_index":196,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["add",{"_index":2222,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":2224,"title":{},"body":{"license.html":{}}}],["additional",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["additions",{"_index":2111,"title":{},"body":{"license.html":{}}}],["advised",{"_index":2296,"title":{},"body":{"license.html":{}}}],["against",{"_index":2175,"title":{},"body":{"license.html":{}}}],["agree",{"_index":2309,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":2257,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":2240,"title":{},"body":{"license.html":{}}}],["aims",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{}}}],["align",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["alleging",{"_index":2180,"title":{},"body":{"license.html":{}}}],["allvalues.includes(v",{"_index":1561,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["allvalues.push(v.value",{"_index":1557,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["alone",{"_index":2172,"title":{},"body":{"license.html":{}}}],["along",{"_index":2213,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":2223,"title":{},"body":{"license.html":{}}}],["alpha",{"_index":1374,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["already",{"_index":1053,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["and(b",{"_index":2196,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":2203,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":2209,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":2303,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1982,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1954,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1956,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":1439,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["angular/cdk/layout",{"_index":1667,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["angular/cli",{"_index":1957,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":411,"title":{},"body":{"components/BottomNavComponent.html":{},"modules/CoreModule.html":{},"components/FrameworkRendererComponent.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":252,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"injectables/DataService.html":{}}}],["angular/compiler",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"modules/CoreModule.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":732,"title":{},"body":{"components/CriterionFilterComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1301,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/bottom",{"_index":1324,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":1277,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":1290,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":1317,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":1305,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":1294,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":1296,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":1292,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1279,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":1299,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":1288,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":1311,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":1313,"title":{},"body":{"modules/MaterialModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["angular/material/progress",{"_index":1285,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":1329,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1303,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1283,"title":{},"body":{"modules/MaterialModule.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["angular/material/slide",{"_index":1319,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slider",{"_index":1327,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":1307,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tabs",{"_index":1315,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1281,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":1309,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tree",{"_index":1321,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"dependencies.html":{}}}],["annotations",{"_index":2101,"title":{},"body":{"license.html":{}}}],["answers",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{}}}],["apache",{"_index":2029,"title":{},"body":{"license.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"index.html":{}}}],["app.component",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["app_initializer",{"_index":580,"title":{},"body":{"modules/CoreModule.html":{}}}],["appcomponent",{"_index":152,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":241,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["appconfigservice",{"_index":237,"title":{"injectables/AppConfigService.html":{}},"body":{"injectables/AppConfigService.html":{},"modules/CoreModule.html":{},"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{},"overview.html":{}}}],["appconfigservice.loadappconfig",{"_index":597,"title":{},"body":{"modules/CoreModule.html":{}}}],["appear",{"_index":2218,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":2097,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":2255,"title":{},"body":{"license.html":{}}}],["applies",{"_index":2165,"title":{},"body":{"license.html":{}}}],["apply",{"_index":2317,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":261,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":298,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appropriate",{"_index":2326,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":2266,"title":{},"body":{"license.html":{}}}],["approutes",{"_index":319,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":272,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arbitrary",{"_index":654,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["archives",{"_index":2333,"title":{},"body":{"license.html":{}}}],["arguments",{"_index":1823,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["arising",{"_index":2286,"title":{},"body":{"license.html":{}}}],["around",{"_index":1190,"title":{},"body":{"components/HeaderComponent.html":{}}}],["array.from(criteriavalues.get(f.criterionid)).sort(((a",{"_index":999,"title":{},"body":{"injectables/DataService.html":{}}}],["array.from(criteriavalues.get(f.criterionid).values",{"_index":1005,"title":{},"body":{"injectables/DataService.html":{}}}],["array.from(filtervalue.value",{"_index":1559,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["array.from(placement.values",{"_index":1698,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["array.from(reviewedcriterion.values).length",{"_index":1564,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["array.from(this.criterioninstance.values",{"_index":684,"title":{},"body":{"components/CriterionComponent.html":{}}}],["array.from(value",{"_index":1409,"title":{},"body":{"pipes/SetToArrayPipe.html":{}}}],["array.from(view.groupings).foreach((grouping",{"_index":1599,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["array.isarray(value",{"_index":759,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["array.pipe",{"_index":1423,"title":{},"body":{"modules/SharedModule.html":{}}}],["array.pipe.ts",{"_index":1403,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"coverage.html":{}}}],["array.pipe.ts:7",{"_index":1407,"title":{},"body":{"pipes/SetToArrayPipe.html":{}}}],["arrow_back_ios",{"_index":1893,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["arrow_forward",{"_index":1869,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["arrow_forward_ios",{"_index":1895,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["arrow_upward",{"_index":415,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["artifacts",{"_index":2007,"title":{},"body":{"index.html":{}}}],["asc",{"_index":1449,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{}}}],["aspect",{"_index":530,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["asserted",{"_index":2315,"title":{},"body":{"license.html":{}}}],["assets/data/framework/criteria.json",{"_index":860,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/filters.json",{"_index":875,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/frameworks.json",{"_index":869,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/groupings.json",{"_index":862,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/view",{"_index":866,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/views.json",{"_index":864,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/info/resources.json",{"_index":877,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/platforms",{"_index":873,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/platforms/platforms.json",{"_index":871,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/images/vendor/logo",{"_index":1265,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["associated",{"_index":2270,"title":{},"body":{"license.html":{}}}],["assume",{"_index":2268,"title":{},"body":{"license.html":{}}}],["attach",{"_index":2318,"title":{},"body":{"license.html":{}}}],["attached",{"_index":2096,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":1990,"title":{},"body":{"index.html":{}}}],["attribution",{"_index":2206,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":2048,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":2091,"title":{},"body":{"license.html":{}}}],["auto",{"_index":362,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["automatically",{"_index":1999,"title":{},"body":{"index.html":{}}}],["available",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyDossierResponse.html":{},"license.html":{},"modules.html":{}}}],["aws",{"_index":538,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["aws.s3",{"_index":1774,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["azure",{"_index":1772,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["azure.functions",{"_index":1771,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["b",{"_index":1000,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["b5ca8f",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{}}}],["b[sort.property",{"_index":1529,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["baas",{"_index":1779,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{}}}],["backend",{"_index":884,"title":{},"body":{"injectables/DataService.html":{}}}],["background",{"_index":354,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["banner",{"_index":332,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner'},{'name",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["banner.component.html",{"_index":334,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner.component.scss",{"_index":333,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__description",{"_index":375,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__heading",{"_index":365,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__quick",{"_index":379,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__summary",{"_index":377,"title":{},"body":{"components/BannerComponent.html":{}}}],["bannercomponent",{"_index":154,"title":{"components/BannerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["based",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["basis",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["behalf",{"_index":2116,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":630,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["behaviorsubject",{"_index":1440,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject(0",{"_index":1453,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject(initialquery",{"_index":1469,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject(undefined",{"_index":1471,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject>(initialsort",{"_index":1467,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behind",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["belongs",{"_index":1765,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["below",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["beneficial",{"_index":2075,"title":{},"body":{"license.html":{}}}],["beta.33",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":493,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["bg",{"_index":454,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{}}}],["bind",{"_index":2108,"title":{},"body":{"license.html":{}}}],["block",{"_index":613,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"components/HeaderComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["block__filter",{"_index":769,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["blockchain",{"_index":1780,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["blockicon",{"_index":621,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["blockname",{"_index":619,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["blog",{"_index":1223,"title":{},"body":{"interfaces/InfoResourceSection.html":{}}}],["body",{"_index":771,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["boilerplate",{"_index":2319,"title":{},"body":{"license.html":{}}}],["bool",{"_index":643,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"pipes/YesNoPipe.html":{}}}],["bootstrap",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}],["border",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["bottom",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["bottomnav",{"_index":1819,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["bottomnavcomponent",{"_index":156,"title":{"components/BottomNavComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["box",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["brackets",{"_index":2322,"title":{},"body":{"license.html":{}}}],["breadcrumbs",{"_index":520,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["break",{"_index":1132,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["browse",{"_index":353,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"modules.html":{}}}],["browser",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"components/TechnologiesComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":307,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["browsing",{"_index":1980,"title":{},"body":{"index.html":{}}}],["browsingmode",{"_index":1629,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["build",{"_index":1981,"title":{},"body":{"index.html":{}}}],["buildgroupings",{"_index":777,"title":{},"body":{"injectables/DataService.html":{}}}],["buildgroupings(data",{"_index":800,"title":{},"body":{"injectables/DataService.html":{}}}],["button",{"_index":774,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["buttons",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{}}}],["c",{"_index":901,"title":{},"body":{"injectables/DataService.html":{},"components/TechnologiesComponent.html":{}}}],["c.colspan",{"_index":1606,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["c.criterionid",{"_index":1694,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["c.default",{"_index":922,"title":{},"body":{"injectables/DataService.html":{}}}],["c.description",{"_index":921,"title":{},"body":{"injectables/DataService.html":{}}}],["c.displayname",{"_index":1892,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["c.id",{"_index":900,"title":{},"body":{"injectables/DataService.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["c.name",{"_index":920,"title":{},"body":{"injectables/DataService.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["c.technologycategory.tolocalelowercase",{"_index":981,"title":{},"body":{"injectables/DataService.html":{}}}],["c.viewids.foreach(id",{"_index":923,"title":{},"body":{"injectables/DataService.html":{}}}],["canfilter",{"_index":1781,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["canfilter(filtervalue",{"_index":1530,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["card",{"_index":1151,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["carry",{"_index":2198,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":845,"title":{},"body":{"injectables/DataService.html":{}}}],["catcherror(dataservice.handleerror",{"_index":893,"title":{},"body":{"injectables/DataService.html":{}}}],["categories",{"_index":1221,"title":{},"body":{"interfaces/InfoResourceSection.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{}}}],["category",{"_index":556,"title":{},"body":{"interfaces/ClassificationFramework.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["category.tolocalelowercase",{"_index":948,"title":{},"body":{"injectables/DataService.html":{}}}],["category]{@link",{"_index":498,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["cause",{"_index":2064,"title":{},"body":{"license.html":{}}}],["ccc",{"_index":1600,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["cell",{"_index":1900,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["center",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["change",{"_index":2001,"title":{},"body":{"index.html":{}}}],["changed",{"_index":2202,"title":{},"body":{"license.html":{}}}],["changedetection",{"_index":1625,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectionstrategy",{"_index":1664,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1626,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectorref",{"_index":1637,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectorref.detectchanges",{"_index":1672,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["character",{"_index":2285,"title":{},"body":{"license.html":{}}}],["charge",{"_index":2149,"title":{},"body":{"license.html":{}}}],["check",{"_index":2026,"title":{},"body":{"index.html":{}}}],["check_circle",{"_index":341,"title":{},"body":{"components/BannerComponent.html":{}}}],["checkboxes",{"_index":652,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["checkrouterevent",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["checkrouterevent(e",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["child",{"_index":159,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["child(even",{"_index":1906,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["childgroupingcomponent",{"_index":158,"title":{"components/ChildGroupingComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["children",{"_index":1255,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["choose",{"_index":336,"title":{},"body":{"components/BannerComponent.html":{},"license.html":{}}}],["choosing",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{}}}],["chosenvalue",{"_index":1563,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["chosenvalues",{"_index":1566,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["chosenvalues.indexof(value",{"_index":1570,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["chosenvalues.length",{"_index":1567,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["claim",{"_index":2177,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2167,"title":{},"body":{"license.html":{}}}],["class",{"_index":26,"title":{"classes/AppPage.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"classes/TableColumn.html":{},"classes/TechnologyDataSource.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"modules/CoreModule.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"license.html":{}}}],["class=\"criterion__value",{"_index":692,"title":{},"body":{"components/CriterionComponent.html":{}}}],["class=\"sidenav__filter",{"_index":1712,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["classes",{"_index":299,"title":{},"body":{"classes/AppPage.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"classes/TableColumn.html":{},"classes/TechnologyDataSource.html":{},"overview.html":{}}}],["classification",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"index.html":{}}}],["classificationcriterion",{"_index":464,"title":{"interfaces/ClassificationCriterion.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["classificationframework",{"_index":497,"title":{"interfaces/ClassificationFramework.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["classificationframeworkresponse",{"_index":557,"title":{"interfaces/ClassificationFrameworkResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["classifications",{"_index":506,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["classificationview",{"_index":509,"title":{"interfaces/ClassificationView.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"coverage.html":{}}}],["classificationviewcombination",{"_index":486,"title":{"interfaces/ClassificationViewCombination.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["classificationviewcombinationresponse",{"_index":562,"title":{"interfaces/ClassificationViewCombinationResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["classificationviewresponse",{"_index":564,"title":{"interfaces/ClassificationViewResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["classificationviews",{"_index":573,"title":{},"body":{"interfaces/ClassificationViewCombination.html":{}}}],["classificationviews]{@link",{"_index":508,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["classified",{"_index":468,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["clear",{"_index":768,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["clearfilter",{"_index":715,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["cli",{"_index":2024,"title":{},"body":{"index.html":{}}}],["click",{"_index":1718,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["close",{"_index":1711,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["cloud",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{}}}],["cloud_done",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["cluster_appmodule",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":574,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":575,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_informationmodule",{"_index":1240,"title":{},"body":{"modules/InformationModule.html":{},"overview.html":{}}}],["cluster_informationmodule_declarations",{"_index":1242,"title":{},"body":{"modules/InformationModule.html":{},"overview.html":{}}}],["cluster_informationmodule_imports",{"_index":1241,"title":{},"body":{"modules/InformationModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1410,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1412,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1411,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":1413,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_technologiesmodule",{"_index":1737,"title":{},"body":{"modules/TechnologiesModule.html":{},"overview.html":{}}}],["cluster_technologiesmodule_declarations",{"_index":1738,"title":{},"body":{"modules/TechnologiesModule.html":{},"overview.html":{}}}],["cluster_technologiesmodule_imports",{"_index":1739,"title":{},"body":{"modules/TechnologiesModule.html":{},"overview.html":{}}}],["code",{"_index":886,"title":{},"body":{"injectables/DataService.html":{},"index.html":{},"license.html":{}}}],["collected",{"_index":537,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"index.html":{}}}],["color",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["color.service",{"_index":591,"title":{},"body":{"modules/CoreModule.html":{}}}],["color.service.ts",{"_index":1366,"title":{},"body":{"injectables/RandomColorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["color.service.ts:11",{"_index":1375,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["color.service.ts:6",{"_index":1368,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["color:string",{"_index":1608,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["colspan",{"_index":1575,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["column",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["columns",{"_index":1341,"title":{},"body":{"components/OverviewComponent.html":{}}}],["columnstodisplay",{"_index":1594,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["combination",{"_index":505,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"license.html":{}}}],["combination.views.add(view",{"_index":925,"title":{},"body":{"injectables/DataService.html":{}}}],["combinations",{"_index":488,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["combinations.json",{"_index":867,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["combinelatest",{"_index":842,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["combinelatest([this.criteriabasedquery",{"_index":1473,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["combinelatest([this.filtereddata",{"_index":1483,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["combining",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologiesComponent.html":{}}}],["combs.find(c",{"_index":1025,"title":{},"body":{"injectables/DataService.html":{}}}],["combs.find(v",{"_index":938,"title":{},"body":{"injectables/DataService.html":{}}}],["comment",{"_index":555,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"license.html":{}}}],["commercial",{"_index":1336,"title":{},"body":{"components/OverviewComponent.html":{},"license.html":{}}}],["common",{"_index":2057,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":582,"title":{},"body":{"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{}}}],["communication",{"_index":2120,"title":{},"body":{"license.html":{}}}],["community.github",{"_index":526,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["comparison",{"_index":1762,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["compiled",{"_index":2088,"title":{},"body":{"license.html":{}}}],["completewords",{"_index":1911,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["compliance",{"_index":2336,"title":{},"body":{"license.html":{}}}],["complies",{"_index":2229,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"overview.html":{}}}],["comprise",{"_index":614,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["comprises",{"_index":484,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["comprising",{"_index":503,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["computer",{"_index":2291,"title":{},"body":{"license.html":{}}}],["concat(extension.png",{"_index":1268,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["concat(grouping.name",{"_index":1705,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["concat(logolocator",{"_index":1267,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["concerning",{"_index":1074,"title":{},"body":{"components/FooterComponent.html":{}}}],["conditions",{"_index":2036,"title":{},"body":{"license.html":{}}}],["conducted",{"_index":544,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["conf.find(c",{"_index":980,"title":{},"body":{"injectables/DataService.html":{}}}],["config",{"_index":1157,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["config.service",{"_index":593,"title":{},"body":{"modules/CoreModule.html":{},"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["config.service.ts",{"_index":240,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["config.service.ts:11",{"_index":249,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:19",{"_index":251,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:6",{"_index":247,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configuration",{"_index":622,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["confirming",{"_index":552,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["connect",{"_index":1435,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["consequential",{"_index":2284,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":2305,"title":{},"body":{"license.html":{}}}],["console.error(err",{"_index":889,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log('found",{"_index":1525,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["console.log('new",{"_index":1501,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["console.log(nextquery",{"_index":1503,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["conspicuously",{"_index":2132,"title":{},"body":{"license.html":{}}}],["const",{"_index":318,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DataService.html":{},"modules/InformationRoutingModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["constitutes",{"_index":2181,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["constructor(@optional",{"_index":599,"title":{},"body":{"modules/CoreModule.html":{}}}],["constructor(data",{"_index":1461,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["constructor(dataservice",{"_index":1165,"title":{},"body":{"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["constructor(fb",{"_index":718,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["constructor(http",{"_index":245,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{}}}],["constructor(private",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["constructor(route",{"_index":1099,"title":{},"body":{"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["constructor(router",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(targetmodule",{"_index":1048,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["constructor(viewportscroller",{"_index":399,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["construed",{"_index":2225,"title":{},"body":{"license.html":{}}}],["contact",{"_index":1183,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contain",{"_index":470,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["contained",{"_index":651,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["container",{"_index":1721,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["containing",{"_index":536,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["containsall",{"_index":656,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["containsany",{"_index":655,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["containsany(filtervalue",{"_index":1562,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["containsone",{"_index":653,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["containsone(filtervalue",{"_index":1565,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["content",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["contents",{"_index":2219,"title":{},"body":{"license.html":{}}}],["context",{"_index":1950,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":2066,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":2110,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":2171,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":2231,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2136,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":2182,"title":{},"body":{"license.html":{}}}],["control",{"_index":2054,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":2055,"title":{},"body":{"license.html":{}}}],["controls",{"_index":740,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["controls.push(this.fb.control(false",{"_index":743,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["conversions",{"_index":2089,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2188,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2195,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2045,"title":{},"body":{"license.html":{}}}],["core/core.module",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/app",{"_index":1173,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["core/services/data.service",{"_index":1172,"title":{},"body":{"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["coremodule",{"_index":273,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["corresponding",{"_index":1719,"title":{},"body":{"components/TechnologiesComponent.html":{},"index.html":{}}}],["count",{"_index":1371,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["counter",{"_index":1610,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["counterclaim",{"_index":2178,"title":{},"body":{"license.html":{}}}],["cover",{"_index":359,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{}}}],["coverage",{"_index":1920,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["criteria",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["criteria.has(id",{"_index":1039,"title":{},"body":{"injectables/DataService.html":{}}}],["criteriabasedquery",{"_index":602,"title":{"interfaces/CriteriaBasedQuery.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["criteriacolumns",{"_index":1590,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["criteriafilterlookup",{"_index":1692,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["criteriagrouping",{"_index":442,"title":{"interfaces/CriteriaGrouping.html":{}},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["criteriagroupingresponse",{"_index":566,"title":{"interfaces/CriteriaGroupingResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["criteriagroupingspath",{"_index":861,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["criteriaids",{"_index":568,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["criterialookup",{"_index":898,"title":{},"body":{"injectables/DataService.html":{}}}],["criteriapath",{"_index":859,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["criteriaquery",{"_index":1478,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criteriareview",{"_index":571,"title":{"interfaces/CriteriaReview.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["criteriavalues",{"_index":985,"title":{},"body":{"injectables/DataService.html":{}}}],["criteriavalues.get(key",{"_index":990,"title":{},"body":{"injectables/DataService.html":{}}}],["criteriavalues.set(key",{"_index":993,"title":{},"body":{"injectables/DataService.html":{}}}],["criterion",{"_index":164,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["criterion'},{'name",{"_index":162,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["criterion.component.html",{"_index":667,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion.component.scss",{"_index":666,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion.description",{"_index":685,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion.examplevalues",{"_index":687,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion/criterion.component",{"_index":1424,"title":{},"body":{"modules/SharedModule.html":{}}}],["criterion__heading",{"_index":696,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__icon",{"_index":703,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__reference",{"_index":704,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__title",{"_index":697,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__value",{"_index":699,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterioncomponent",{"_index":161,"title":{"components/CriterionComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["criterionfiltercomponent",{"_index":163,"title":{"components/CriterionFilterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["criterionfilterconfiguration",{"_index":617,"title":{"interfaces/CriterionFilterConfiguration.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["criterionfiltertype",{"_index":633,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["criterionfiltertype.bool",{"_index":1004,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.containsall",{"_index":1533,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.containsany",{"_index":1537,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.containsone",{"_index":1534,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.excludesall",{"_index":1535,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.lte",{"_index":997,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltervalue",{"_index":610,"title":{"interfaces/CriterionFilterValue.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["criterionfiltervalues",{"_index":608,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{}}}],["criterionfiltervalues]{@link",{"_index":658,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["criterionid",{"_index":540,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["criterioninstance",{"_index":448,"title":{"interfaces/CriterionInstance.html":{}},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["criterioninstance.values.foreach(v",{"_index":991,"title":{},"body":{"injectables/DataService.html":{}}}],["criterioninstances",{"_index":1850,"title":{},"body":{"interfaces/TechnologyDossier.html":{}}}],["criterioninstances]{@link",{"_index":1777,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["criterionvalue",{"_index":541,"title":{"interfaces/CriterionValue.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"coverage.html":{}}}],["cross",{"_index":2176,"title":{},"body":{"license.html":{}}}],["current",{"_index":1699,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["current.filters.push(config",{"_index":1708,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["currentindex",{"_index":1457,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["cursor",{"_index":1153,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyListComponent.html":{}}}],["custom",{"_index":519,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["customary",{"_index":2250,"title":{},"body":{"license.html":{}}}],["d.reviewedcriteria.foreach((criterioninstance",{"_index":987,"title":{},"body":{"injectables/DataService.html":{}}}],["damages",{"_index":2281,"title":{},"body":{"license.html":{}}}],["data",{"_index":258,"title":{},"body":{"injectables/AppConfigService.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"index.html":{}}}],["data.filter(platform",{"_index":1515,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["data.foreach(g",{"_index":1035,"title":{},"body":{"injectables/DataService.html":{}}}],["data.length",{"_index":1489,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["data.slice(startindex",{"_index":1490,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["data['resolveddata",{"_index":1106,"title":{},"body":{"components/FrameworkComponent.html":{},"components/ResourcesComponent.html":{}}}],["data['resolveddata'][0",{"_index":1679,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["data['resolveddata'][1",{"_index":1683,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["data['resolveddata'][2",{"_index":1685,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["dataservice",{"_index":576,"title":{"injectables/DataService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{},"overview.html":{}}}],["datasource",{"_index":1434,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["date",{"_index":543,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"license.html":{}}}],["declarations",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}],["declare",{"_index":1378,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["decoration",{"_index":705,"title":{},"body":{"components/CriterionComponent.html":{}}}],["decorators",{"_index":1659,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["dedicated",{"_index":624,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["default",{"_index":407,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["defaultcategory",{"_index":1174,"title":{},"body":{"guards/FrameworkResolver.html":{}}}],["defaulttechcategory",{"_index":244,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["defend",{"_index":2311,"title":{},"body":{"license.html":{}}}],["defined",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"license.html":{}}}],["defines",{"_index":623,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["definition",{"_index":2059,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":2039,"title":{},"body":{"license.html":{}}}],["delete",{"_index":1549,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["deliberate",{"_index":2276,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":263,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depends",{"_index":661,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["deps",{"_index":595,"title":{},"body":{"modules/CoreModule.html":{}}}],["derivative",{"_index":2098,"title":{},"body":{"license.html":{}}}],["derived",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["desc",{"_index":1450,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["describe",{"_index":528,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["describing",{"_index":554,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"license.html":{}}}],["description",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"license.html":{}}}],["designated",{"_index":2134,"title":{},"body":{"license.html":{}}}],["desired",{"_index":628,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["detailed",{"_index":1717,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["details",{"_index":1149,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{}}}],["details'},{'name",{"_index":190,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["details.component",{"_index":1746,"title":{},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["details.component.html",{"_index":1818,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.scss",{"_index":1817,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts",{"_index":1816,"title":{},"body":{"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1828,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:15",{"_index":1830,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:16",{"_index":1829,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":1822,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":1826,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:32",{"_index":1825,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details/technology",{"_index":1745,"title":{},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["determining",{"_index":2265,"title":{},"body":{"license.html":{}}}],["dev",{"_index":1996,"title":{},"body":{"index.html":{}}}],["development",{"_index":1992,"title":{},"body":{"index.html":{}}}],["different",{"_index":487,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["direct",{"_index":2062,"title":{},"body":{"license.html":{}}}],["direction",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/FooterComponent.html":{},"components/OverviewComponent.html":{},"license.html":{}}}],["directive",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["directives",{"_index":195,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2005,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2010,"title":{},"body":{"index.html":{}}}],["disclaimer",{"_index":2253,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":1436,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["discussing",{"_index":2129,"title":{},"body":{"license.html":{}}}],["display",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["display:table",{"_index":1901,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["displayname",{"_index":631,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TableColumn.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyTableComponent.html":{}}}],["dist",{"_index":2009,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":635,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["distinctvalues",{"_index":988,"title":{},"body":{"injectables/DataService.html":{}}}],["distinctvalues.add(v.value",{"_index":992,"title":{},"body":{"injectables/DataService.html":{}}}],["distribute",{"_index":2157,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2212,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":2038,"title":{},"body":{"license.html":{}}}],["divider",{"_index":700,"title":{},"body":{"components/CriterionComponent.html":{}}}],["docs",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{}}}],["document",{"_index":2043,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["don't",{"_index":2325,"title":{},"body":{"license.html":{}}}],["dossier",{"_index":963,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["dossierpath",{"_index":967,"title":{},"body":{"injectables/DataService.html":{}}}],["dossiers",{"_index":984,"title":{},"body":{"injectables/DataService.html":{}}}],["dossiers.foreach(d",{"_index":986,"title":{},"body":{"injectables/DataService.html":{}}}],["dossierspath",{"_index":872,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dossierspath.concat(technologyid",{"_index":968,"title":{},"body":{"injectables/DataService.html":{}}}],["dynamic",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["e.g",{"_index":518,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["e2e",{"_index":2021,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":300,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":305,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":303,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":2142,"title":{},"body":{"license.html":{}}}],["ease",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{}}}],["easier",{"_index":2331,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":2099,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":2102,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":2117,"title":{},"body":{"license.html":{}}}],["element",{"_index":146,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["element(by.css('app",{"_index":308,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":1580,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["elements",{"_index":625,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["ellipsis",{"_index":1912,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["enclosed",{"_index":2321,"title":{},"body":{"license.html":{}}}],["encompassing",{"_index":1778,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["end",{"_index":695,"title":{},"body":{"components/CriterionComponent.html":{},"index.html":{},"license.html":{}}}],["endindex",{"_index":1488,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["ensure",{"_index":584,"title":{},"body":{"modules/CoreModule.html":{}}}],["ensuremoduleloadedonceguard",{"_index":583,"title":{"classes/EnsureModuleLoadedOnceGuard.html":{}},"body":{"modules/CoreModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["entities",{"_index":2053,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2047,"title":{},"body":{"license.html":{}}}],["entry",{"_index":1568,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["entry.value",{"_index":1569,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyTableComponent.html":{}}}],["enum",{"_index":638,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1971,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1947,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":645,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["err",{"_index":841,"title":{},"body":{"injectables/DataService.html":{}}}],["err.body?.error",{"_index":888,"title":{},"body":{"injectables/DataService.html":{}}}],["err.error",{"_index":879,"title":{},"body":{"injectables/DataService.html":{}}}],["err.error.message",{"_index":883,"title":{},"body":{"injectables/DataService.html":{}}}],["err.status",{"_index":887,"title":{},"body":{"injectables/DataService.html":{}}}],["error",{"_index":881,"title":{},"body":{"injectables/DataService.html":{}}}],["error(`${targetmodule.constructor.name",{"_index":1052,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["errorevent",{"_index":880,"title":{},"body":{"injectables/DataService.html":{}}}],["errormessage",{"_index":878,"title":{},"body":{"injectables/DataService.html":{}}}],["errors",{"_index":1081,"title":{},"body":{"components/FooterComponent.html":{}}}],["etc",{"_index":1225,"title":{},"body":{"interfaces/InfoResourceSection.html":{}}}],["even",{"_index":2295,"title":{},"body":{"license.html":{}}}],["evenly",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["event",{"_index":1646,"title":{},"body":{"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"license.html":{}}}],["event.pageindex",{"_index":1511,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["event.pagesize",{"_index":1508,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["eventemitter",{"_index":723,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["example",{"_index":476,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["examples",{"_index":686,"title":{},"body":{"components/CriterionComponent.html":{}}}],["examplevalues",{"_index":473,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["except",{"_index":2159,"title":{},"body":{"license.html":{}}}],["excludesall",{"_index":657,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["excluding",{"_index":2131,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2148,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2018,"title":{},"body":{"index.html":{}}}],["executed",{"_index":2241,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":2271,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":2077,"title":{},"body":{"license.html":{}}}],["existing",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{}}}],["explicitly",{"_index":2233,"title":{},"body":{"license.html":{}}}],["explore",{"_index":338,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{}}}],["export",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["exports",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":2258,"title":{},"body":{"license.html":{}}}],["extends",{"_index":598,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["extensible",{"_index":350,"title":{},"body":{"components/BannerComponent.html":{}}}],["extension",{"_index":1269,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["extracriteriontitle",{"_index":434,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["extractgroupings",{"_index":1633,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["extratitletext",{"_index":668,"title":{},"body":{"components/CriterionComponent.html":{}}}],["f",{"_index":941,"title":{},"body":{"injectables/DataService.html":{}}}],["f.description",{"_index":935,"title":{},"body":{"injectables/DataService.html":{}}}],["f.filtertype",{"_index":996,"title":{},"body":{"injectables/DataService.html":{}}}],["f.filtervalues",{"_index":1001,"title":{},"body":{"injectables/DataService.html":{}}}],["f.find(item",{"_index":946,"title":{},"body":{"injectables/DataService.html":{}}}],["f.id",{"_index":932,"title":{},"body":{"injectables/DataService.html":{}}}],["f.name",{"_index":934,"title":{},"body":{"injectables/DataService.html":{}}}],["f.technologycategory",{"_index":933,"title":{},"body":{"injectables/DataService.html":{}}}],["f.viewcombinationids.foreach(id",{"_index":936,"title":{},"body":{"injectables/DataService.html":{}}}],["faas",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["faastener",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["failure",{"_index":2292,"title":{},"body":{"license.html":{}}}],["false",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["faq",{"_index":1055,"title":{},"body":{"components/FaqComponent.html":{},"modules/InformationRoutingModule.html":{}}}],["faq'},{'name",{"_index":167,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["faq.component.html",{"_index":1057,"title":{},"body":{"components/FaqComponent.html":{}}}],["faq.component.scss",{"_index":1056,"title":{},"body":{"components/FaqComponent.html":{}}}],["faq/faq.component",{"_index":1246,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["faqcomponent",{"_index":166,"title":{"components/FaqComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["faults",{"_index":1069,"title":{},"body":{"components/FooterComponent.html":{}}}],["fb",{"_index":721,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{}}}],["features",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{}}}],["fee",{"_index":2299,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1782,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["fetch(event",{"_index":1507,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["fff",{"_index":1184,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ffffff",{"_index":363,"title":{},"body":{"components/BannerComponent.html":{},"components/FooterComponent.html":{}}}],["field",{"_index":1297,"title":{},"body":{"modules/MaterialModule.html":{},"components/TechnologyListComponent.html":{}}}],["fields",{"_index":2320,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":2070,"title":{},"body":{"license.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":2186,"title":{},"body":{"license.html":{}}}],["files",{"_index":2002,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":604,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filter'},{'name",{"_index":165,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["filter.component",{"_index":1749,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["filter.component.html",{"_index":712,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.scss",{"_index":711,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts",{"_index":710,"title":{},"body":{"components/CriterionFilterComponent.html":{},"coverage.html":{}}}],["filter.component.ts:11",{"_index":722,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:12",{"_index":724,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:14",{"_index":729,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:15",{"_index":720,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:20",{"_index":726,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:67",{"_index":725,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.displayname",{"_index":767,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.filters.foreach((f",{"_index":995,"title":{},"body":{"injectables/DataService.html":{}}}],["filter/criterion",{"_index":709,"title":{},"body":{"components/CriterionFilterComponent.html":{},"modules/TechnologiesModule.html":{},"coverage.html":{}}}],["filter_alt",{"_index":1720,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterblock.blockicon",{"_index":1713,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterblock.blockname",{"_index":1714,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterconfiguration",{"_index":1586,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["filterconfigurationspath",{"_index":874,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filtereddata",{"_index":1459,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filterelement",{"_index":713,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filterid",{"_index":627,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["filtering",{"_index":629,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["filteringresult",{"_index":1521,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filterlookup",{"_index":1648,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterlookup.get(c.id",{"_index":1707,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filters",{"_index":616,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["filtertype",{"_index":634,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["filtervalue",{"_index":1802,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["filtervalue.filtertype",{"_index":1531,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filtervalue.value",{"_index":1532,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filtervalues",{"_index":637,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["find",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{}}}],["first",{"_index":1158,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["fit",{"_index":1350,"title":{},"body":{"components/OverviewComponent.html":{}}}],["fitness",{"_index":2262,"title":{},"body":{"license.html":{}}}],["flag",{"_index":2012,"title":{},"body":{"index.html":{}}}],["flat",{"_index":1144,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["flex",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["flexibly",{"_index":491,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["flexlayoutmodule",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["flow",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["following",{"_index":2192,"title":{},"body":{"license.html":{}}}],["font",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["footer",{"_index":1062,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":169,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["footer.component.html",{"_index":1064,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1063,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":1426,"title":{},"body":{"modules/SharedModule.html":{}}}],["footer__heading",{"_index":1088,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer__section",{"_index":1086,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":168,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forkjoin",{"_index":1754,"title":{},"body":{"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["forkjoin([technologies",{"_index":1758,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["form",{"_index":1763,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"license.html":{}}}],["format",{"_index":1373,"title":{},"body":{"injectables/RandomColorService.html":{},"license.html":{}}}],["formbuilder",{"_index":719,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{}}}],["formcontrol",{"_index":727,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["formgroup",{"_index":728,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["forming",{"_index":471,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["formsmodule",{"_index":1419,"title":{},"body":{"modules/SharedModule.html":{}}}],["found",{"_index":1359,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":183,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["found.component",{"_index":317,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["found.component.css",{"_index":1360,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":1361,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1358,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":1363,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":1362,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":316,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["framework",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"index.html":{}}}],["framework'},{'name",{"_index":171,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["framework.component.html",{"_index":1098,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["framework.component.scss",{"_index":1097,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["framework.description",{"_index":1142,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework.name",{"_index":1141,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework.viewcombinationids",{"_index":1018,"title":{},"body":{"injectables/DataService.html":{}}}],["framework.viewcombinations.add(viewcombination",{"_index":939,"title":{},"body":{"injectables/DataService.html":{}}}],["framework/framework.component",{"_index":1251,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["framework__grouping",{"_index":1148,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework__info",{"_index":1146,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework__root",{"_index":1147,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework__view",{"_index":1156,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["frameworkcomponent",{"_index":170,"title":{"components/FrameworkComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["frameworkid",{"_index":806,"title":{},"body":{"injectables/DataService.html":{}}}],["frameworkrenderercomponent",{"_index":172,"title":{"components/FrameworkRendererComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["frameworkresolver",{"_index":1160,"title":{"guards/FrameworkResolver.html":{}},"body":{"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["frameworks",{"_index":930,"title":{},"body":{"injectables/DataService.html":{}}}],["frameworks.find(f",{"_index":942,"title":{},"body":{"injectables/DataService.html":{}}}],["frameworks.foreach(f",{"_index":931,"title":{},"body":{"injectables/DataService.html":{}}}],["frameworkspath",{"_index":868,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frameworkviewcombinationspath",{"_index":865,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frameworkviewspath",{"_index":863,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":2151,"title":{},"body":{"license.html":{}}}],["full",{"_index":323,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["function",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"index.html":{}}}],["functions",{"_index":1773,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["further",{"_index":2022,"title":{},"body":{"index.html":{}}}],["future",{"_index":523,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["fws",{"_index":1012,"title":{},"body":{"injectables/DataService.html":{}}}],["fws.find(f",{"_index":1017,"title":{},"body":{"injectables/DataService.html":{}}}],["g",{"_index":1030,"title":{},"body":{"injectables/DataService.html":{}}}],["g.criteriaids",{"_index":1037,"title":{},"body":{"injectables/DataService.html":{}}}],["g.criteriaids.foreach(id",{"_index":1038,"title":{},"body":{"injectables/DataService.html":{}}}],["g.id",{"_index":1029,"title":{},"body":{"injectables/DataService.html":{}}}],["g.locator",{"_index":1042,"title":{},"body":{"injectables/DataService.html":{}}}],["g.name",{"_index":450,"title":{},"body":{"components/ChildGroupingComponent.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{}}}],["g.parentid",{"_index":1043,"title":{},"body":{"injectables/DataService.html":{}}}],["gap",{"_index":1344,"title":{},"body":{"components/OverviewComponent.html":{}}}],["generate",{"_index":2004,"title":{},"body":{"index.html":{}}}],["generated",{"_index":640,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["generatefilterstructure",{"_index":1634,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["generategroupingcolumns",{"_index":1877,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["generategroupingcolumns(grouping",{"_index":1607,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["generation",{"_index":521,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["generic",{"_index":483,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["getcriteria",{"_index":778,"title":{},"body":{"injectables/DataService.html":{}}}],["getdefaulttechcategory",{"_index":250,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getdefaultviewcombinationdata",{"_index":779,"title":{},"body":{"injectables/DataService.html":{}}}],["getdefaultviewcombinationdata(frameworkid",{"_index":804,"title":{},"body":{"injectables/DataService.html":{}}}],["getdossier",{"_index":780,"title":{},"body":{"injectables/DataService.html":{}}}],["getdossier(technologyid",{"_index":807,"title":{},"body":{"injectables/DataService.html":{}}}],["getdossiersofcategory",{"_index":781,"title":{},"body":{"injectables/DataService.html":{}}}],["getdossiersofcategory(category",{"_index":810,"title":{},"body":{"injectables/DataService.html":{}}}],["getfilteringresult",{"_index":1783,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["getfilteringresult(filtervalue",{"_index":1551,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["getframeworkforcategory",{"_index":782,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkforcategory(techcategory",{"_index":812,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkfortechnologytype",{"_index":783,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkfortechnologytype(category",{"_index":815,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkgroupingsdata",{"_index":784,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkgroupingsdata(frameworkid",{"_index":817,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworks",{"_index":785,"title":{},"body":{"injectables/DataService.html":{}}}],["getgroupings",{"_index":786,"title":{},"body":{"injectables/DataService.html":{}}}],["getinforesources",{"_index":787,"title":{},"body":{"injectables/DataService.html":{}}}],["getlogopath",{"_index":1261,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["getlogopath(logolocator",{"_index":1263,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["getrandomcolor",{"_index":1367,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["getrandomcolor(hue",{"_index":1369,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["gettechnologies",{"_index":788,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologies(withdossier",{"_index":822,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologiesofcategory",{"_index":789,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologiesofcategory(category",{"_index":825,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnology",{"_index":790,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnology(id",{"_index":827,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologyfilter",{"_index":791,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologyfilter(category",{"_index":829,"title":{},"body":{"injectables/DataService.html":{}}}],["getting",{"_index":1975,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettitletext",{"_index":301,"title":{},"body":{"classes/AppPage.html":{}}}],["getviewcombinations",{"_index":792,"title":{},"body":{"injectables/DataService.html":{}}}],["getviewgroupingsdata",{"_index":793,"title":{},"body":{"injectables/DataService.html":{}}}],["getviewgroupingsdata(viewid",{"_index":832,"title":{},"body":{"injectables/DataService.html":{}}}],["getviews",{"_index":794,"title":{},"body":{"injectables/DataService.html":{}}}],["getviewsdata",{"_index":795,"title":{},"body":{"injectables/DataService.html":{}}}],["getviewsdata(viewcombinationid",{"_index":836,"title":{},"body":{"injectables/DataService.html":{}}}],["give",{"_index":2193,"title":{},"body":{"license.html":{}}}],["given",{"_index":496,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["go",{"_index":2025,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":2289,"title":{},"body":{"license.html":{}}}],["governing",{"_index":2340,"title":{},"body":{"license.html":{}}}],["grant",{"_index":2141,"title":{},"body":{"license.html":{}}}],["granted",{"_index":2079,"title":{},"body":{"license.html":{}}}],["granting",{"_index":2049,"title":{},"body":{"license.html":{}}}],["grants",{"_index":2144,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2342,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":1984,"title":{},"body":{"index.html":{}}}],["gray",{"_index":1152,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["greater",{"_index":648,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["grey",{"_index":455,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{}}}],["grid",{"_index":1340,"title":{},"body":{"components/OverviewComponent.html":{}}}],["grid__footer",{"_index":1084,"title":{},"body":{"components/FooterComponent.html":{}}}],["grossly",{"_index":2277,"title":{},"body":{"license.html":{}}}],["group",{"_index":516,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["grouping",{"_index":431,"title":{},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/InfoResourceSection.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping'},{'name",{"_index":160,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.component",{"_index":1421,"title":{},"body":{"modules/SharedModule.html":{}}}],["grouping.component.html",{"_index":433,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.scss",{"_index":432,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts",{"_index":430,"title":{},"body":{"components/ChildGroupingComponent.html":{},"coverage.html":{}}}],["grouping.component.ts:10",{"_index":443,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:11",{"_index":447,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:12",{"_index":444,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:13",{"_index":441,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:14",{"_index":445,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:15",{"_index":440,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.criteria",{"_index":1701,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["grouping.criteria.foreach((c",{"_index":1611,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.criteria.foreach(c",{"_index":1706,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["grouping.criteria.size",{"_index":1702,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["grouping.groupings",{"_index":1618,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.groupings.foreach(g",{"_index":1619,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.id",{"_index":1137,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.name",{"_index":1615,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping/child",{"_index":429,"title":{},"body":{"components/ChildGroupingComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["grouping__criterion",{"_index":461,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{}}}],["grouping__path",{"_index":460,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping__title",{"_index":457,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["groupingcolumnids",{"_index":1592,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns",{"_index":1591,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns.foreach(c",{"_index":1605,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns.length",{"_index":1602,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns.push",{"_index":1616,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingids",{"_index":565,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["groupings",{"_index":435,"title":{},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["groupings]{@link",{"_index":527,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["groupingslookup",{"_index":906,"title":{},"body":{"injectables/DataService.html":{}}}],["groupingslookup.has(id",{"_index":913,"title":{},"body":{"injectables/DataService.html":{}}}],["grow",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["gte",{"_index":649,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["guard",{"_index":1159,"title":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1161,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"overview.html":{}}}],["h.png",{"_index":1195,"title":{},"body":{"components/HeaderComponent.html":{}}}],["handleerror",{"_index":797,"title":{},"body":{"injectables/DataService.html":{}}}],["handleerror(err",{"_index":839,"title":{},"body":{"injectables/DataService.html":{}}}],["harmful",{"_index":1082,"title":{},"body":{"components/FooterComponent.html":{}}}],["harmless",{"_index":2313,"title":{},"body":{"license.html":{}}}],["header",{"_index":1178,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["header'},{'name",{"_index":175,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["header.component.html",{"_index":1180,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1179,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1425,"title":{},"body":{"modules/SharedModule.html":{}}}],["header__logo",{"_index":1192,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__menu",{"_index":1189,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__spacer",{"_index":1191,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__toolbar",{"_index":1188,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":174,"title":{"components/HeaderComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":370,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["help",{"_index":2023,"title":{},"body":{"index.html":{}}}],["helps",{"_index":500,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["hereby",{"_index":2143,"title":{},"body":{"license.html":{}}}],["herein",{"_index":2237,"title":{},"body":{"license.html":{}}}],["hierarchy",{"_index":472,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["high",{"_index":345,"title":{},"body":{"components/BannerComponent.html":{}}}],["hold",{"_index":2312,"title":{},"body":{"license.html":{}}}],["home",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["home.component.html",{"_index":1210,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1209,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/about/about.component",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["home/banner/banner.component",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["home/home.component",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home/overview/overview.component",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["homecomponent",{"_index":176,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["hostlistener",{"_index":1831,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["hostlistener('window:scroll",{"_index":1835,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["hostlisteners",{"_index":1820,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["hover",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{}}}],["html",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["http",{"_index":248,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{}}}],["http://localhost:4200",{"_index":1998,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses",{"_index":2034,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":2338,"title":{},"body":{"license.html":{}}}],["httpclient",{"_index":246,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{}}}],["httpclientmodule",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["hue",{"_index":1376,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["icon",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["id",{"_index":474,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"classes/TableColumn.html":{},"interfaces/Technology.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyTableComponent.html":{}}}],["identification",{"_index":2332,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":481,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["identifying",{"_index":2324,"title":{},"body":{"license.html":{}}}],["ids",{"_index":607,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["ii",{"_index":2068,"title":{},"body":{"license.html":{}}}],["iii",{"_index":2074,"title":{},"body":{"license.html":{}}}],["img",{"_index":1903,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["implements",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["implied",{"_index":2259,"title":{},"body":{"license.html":{}}}],["import",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"license.html":{}}}],["import(`src/app/information/information.module`).then(m",{"_index":325,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import(`src/app/technologies/technologies.module`).then(m",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["imports",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["improving",{"_index":2130,"title":{},"body":{"license.html":{}}}],["inability",{"_index":2287,"title":{},"body":{"license.html":{}}}],["inaccuracies",{"_index":1079,"title":{},"body":{"components/FooterComponent.html":{}}}],["incidental",{"_index":2283,"title":{},"body":{"license.html":{}}}],["include",{"_index":453,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"license.html":{}}}],["included",{"_index":2095,"title":{},"body":{"license.html":{}}}],["includeframeworkinfo",{"_index":1116,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["includes",{"_index":1335,"title":{},"body":{"components/OverviewComponent.html":{},"license.html":{}}}],["including",{"_index":2083,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":2114,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":2139,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":2314,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":2310,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":2301,"title":{},"body":{"license.html":{}}}],["index",{"_index":204,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":609,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaReview.html":{}}}],["indicated",{"_index":2093,"title":{},"body":{"license.html":{}}}],["indicates",{"_index":510,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["indirect",{"_index":2063,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2076,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["inforesource",{"_index":1214,"title":{"interfaces/InfoResource.html":{}},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"coverage.html":{}}}],["inforesourcesection",{"_index":857,"title":{"interfaces/InfoResourceSection.html":{}},"body":{"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"coverage.html":{}}}],["inforesourcespath",{"_index":876,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"license.html":{}}}],["information'},{'name",{"_index":178,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["information.component",{"_index":1247,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["information.component.html",{"_index":1228,"title":{},"body":{"components/InformationComponent.html":{}}}],["information.component.scss",{"_index":1227,"title":{},"body":{"components/InformationComponent.html":{}}}],["information/resolvers/framework",{"_index":1427,"title":{},"body":{"modules/SharedModule.html":{}}}],["informational",{"_index":2220,"title":{},"body":{"license.html":{}}}],["informationcomponent",{"_index":177,"title":{"components/InformationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["informationmodule",{"_index":1239,"title":{"modules/InformationModule.html":{}},"body":{"modules/InformationModule.html":{},"modules.html":{},"overview.html":{}}}],["informationroutingmodule",{"_index":1243,"title":{"modules/InformationRoutingModule.html":{}},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["inforoutes",{"_index":1254,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["infringed",{"_index":2170,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2183,"title":{},"body":{"license.html":{}}}],["initialize",{"_index":1133,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["initialquery",{"_index":1463,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["initialsort",{"_index":1462,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["initialvalues",{"_index":749,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["initialvalues.filter((x",{"_index":752,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["injectable",{"_index":236,"title":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["injectables",{"_index":238,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"overview.html":{}}}],["inline",{"_index":1735,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["input",{"_index":410,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["inputs",{"_index":397,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["instance",{"_index":478,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["instanceof",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{}}}],["institute",{"_index":2173,"title":{},"body":{"license.html":{}}}],["intended",{"_index":1978,"title":{},"body":{"index.html":{}}}],["intentionally",{"_index":2112,"title":{},"body":{"license.html":{}}}],["interacting",{"_index":1985,"title":{},"body":{"index.html":{}}}],["interface",{"_index":463,"title":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":465,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{},"overview.html":{}}}],["interfaces/classification",{"_index":449,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["interfaces/filtering",{"_index":1444,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["interfaces/technology",{"_index":1442,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["introduced",{"_index":1987,"title":{},"body":{"index.html":{}}}],["irrevocable",{"_index":2152,"title":{},"body":{"license.html":{}}}],["isarrayofstrings(value",{"_index":758,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["ispaginated",{"_index":1455,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["issue",{"_index":2125,"title":{},"body":{"license.html":{}}}],["item",{"_index":378,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/HeaderComponent.html":{}}}],["item.id",{"_index":965,"title":{},"body":{"injectables/DataService.html":{}}}],["item.technologycategory.tolocalelowercase",{"_index":947,"title":{},"body":{"injectables/DataService.html":{}}}],["items",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["items.find(item",{"_index":964,"title":{},"body":{"injectables/DataService.html":{}}}],["items.map",{"_index":951,"title":{},"body":{"injectables/DataService.html":{}}}],["january",{"_index":2032,"title":{},"body":{"license.html":{}}}],["java",{"_index":547,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["jpeg",{"_index":1272,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["jpg",{"_index":1271,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["json",{"_index":688,"title":{},"body":{"components/CriterionComponent.html":{},"injectables/DataService.html":{}}}],["justify",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["karma",{"_index":2020,"title":{},"body":{"index.html":{}}}],["key",{"_index":572,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["keyof",{"_index":1447,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["keystodelete",{"_index":1540,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["keystodelete.foreach(key",{"_index":1548,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["keystodelete.push(key",{"_index":1544,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["kind",{"_index":1073,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["label",{"_index":1233,"title":{},"body":{"components/InformationComponent.html":{}}}],["lack",{"_index":1077,"title":{},"body":{"components/FooterComponent.html":{}}}],["lambda",{"_index":539,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["language",{"_index":2339,"title":{},"body":{"license.html":{}}}],["lastquery",{"_index":1498,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["lastsort",{"_index":1493,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["law",{"_index":2256,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":2179,"title":{},"body":{"license.html":{}}}],["layout",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["learn",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{}}}],["left",{"_index":706,"title":{},"body":{"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["legal",{"_index":2050,"title":{},"body":{"license.html":{}}}],["legend",{"_index":144,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"modules/CoreModule.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"overview.html":{}}}],["length",{"_index":1864,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["less",{"_index":644,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["level",{"_index":347,"title":{},"body":{"components/BannerComponent.html":{}}}],["liability",{"_index":2272,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2280,"title":{},"body":{"license.html":{}}}],["library_books",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/InformationComponent.html":{}}}],["licensable",{"_index":2168,"title":{},"body":{"license.html":{}}}],["license",{"_index":2028,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":2227,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":2335,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":2184,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":525,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["licensor",{"_index":2044,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1910,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["limit).lastindexof",{"_index":1915,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["limitation",{"_index":2260,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":2341,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2084,"title":{},"body":{"license.html":{}}}],["line",{"_index":369,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionComponent.html":{}}}],["link",{"_index":485,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/InformationComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["link.label",{"_index":1235,"title":{},"body":{"components/InformationComponent.html":{}}}],["links",{"_index":380,"title":{},"body":{"components/BannerComponent.html":{}}}],["list",{"_index":382,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/HeaderComponent.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["list'},{'name",{"_index":192,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["list.component",{"_index":1744,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["list.component.html",{"_index":1853,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.scss",{"_index":1852,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts",{"_index":1851,"title":{},"body":{"components/TechnologyListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":1857,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts:11",{"_index":1856,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts:16",{"_index":1860,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts:21",{"_index":1858,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list/technology",{"_index":1743,"title":{},"body":{"modules/TechnologiesModule.html":{},"components/TechnologyListComponent.html":{},"coverage.html":{}}}],["list__card",{"_index":1872,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__cards",{"_index":1871,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__explore",{"_index":1875,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__logo",{"_index":1874,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__paginator",{"_index":1876,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__search",{"_index":1870,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["lists",{"_index":1770,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"license.html":{}}}],["literal",{"_index":1810,"title":{},"body":{"classes/TechnologyDataSource.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":2174,"title":{},"body":{"license.html":{}}}],["loadappconfig",{"_index":242,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["loadchildren",{"_index":324,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":585,"title":{},"body":{"modules/CoreModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["loading",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["locate",{"_index":1768,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["location",{"_index":1232,"title":{},"body":{"components/InformationComponent.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["locator",{"_index":517,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["locator.service",{"_index":589,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DataService.html":{}}}],["locator.service.ts",{"_index":1259,"title":{},"body":{"injectables/LogoLocatorService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["locator.service.ts:10",{"_index":1264,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["locator.service.ts:5",{"_index":1262,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["logo",{"_index":852,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["logolocation",{"_index":952,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["logolocator",{"_index":798,"title":{},"body":{"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["logolocatorservice",{"_index":577,"title":{"injectables/LogoLocatorService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{},"overview.html":{}}}],["logolocatorservice.platformlogodir",{"_index":1266,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["lookup",{"_index":1034,"title":{},"body":{"injectables/DataService.html":{}}}],["lookup.get(g.parentid).groupings.add(lookup.get(g.id",{"_index":1044,"title":{},"body":{"injectables/DataService.html":{}}}],["lookup.set(g.id",{"_index":1041,"title":{},"body":{"injectables/DataService.html":{}}}],["loss",{"_index":2288,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2294,"title":{},"body":{"license.html":{}}}],["low",{"_index":346,"title":{},"body":{"components/BannerComponent.html":{}}}],["lte",{"_index":647,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["luminosity",{"_index":1370,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["m.informationmodule",{"_index":326,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.technologiesmodule",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["made",{"_index":2092,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":2123,"title":{},"body":{"license.html":{}}}],["main",{"_index":1083,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologiesComponent.html":{}}}],["make",{"_index":2161,"title":{},"body":{"license.html":{}}}],["makes",{"_index":1071,"title":{},"body":{"components/FooterComponent.html":{}}}],["making",{"_index":2081,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":2293,"title":{},"body":{"license.html":{}}}],["managed",{"_index":2127,"title":{},"body":{"license.html":{}}}],["management",{"_index":2065,"title":{},"body":{"license.html":{}}}],["map",{"_index":446,"title":{},"body":{"components/ChildGroupingComponent.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{}}}],["map(([combs",{"_index":929,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([criteria",{"_index":897,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([data",{"_index":1485,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["map(([filter",{"_index":983,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([groupings",{"_index":905,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([items",{"_index":962,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([vcs",{"_index":1011,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([views",{"_index":918,"title":{},"body":{"injectables/DataService.html":{}}}],["map((conf",{"_index":979,"title":{},"body":{"injectables/DataService.html":{}}}],["map((f",{"_index":945,"title":{},"body":{"injectables/DataService.html":{}}}],["map((items",{"_index":950,"title":{},"body":{"injectables/DataService.html":{}}}],["map((techs",{"_index":958,"title":{},"body":{"injectables/DataService.html":{}}}],["map(criteria.map(c",{"_index":899,"title":{},"body":{"injectables/DataService.html":{}}}],["map(groupings.map(c",{"_index":907,"title":{},"body":{"injectables/DataService.html":{}}}],["map(groupings.map(g",{"_index":1028,"title":{},"body":{"injectables/DataService.html":{}}}],["map(object.entries(res.reviewedcriteria",{"_index":972,"title":{},"body":{"injectables/DataService.html":{}}}],["map(this.filterconfiguration.filters.map(c",{"_index":1693,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["map(vcs.map(vc",{"_index":1014,"title":{},"body":{"injectables/DataService.html":{}}}],["map(views.map(v",{"_index":1023,"title":{},"body":{"injectables/DataService.html":{}}}],["mapping",{"_index":606,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["margin",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["marked",{"_index":2133,"title":{},"body":{"license.html":{}}}],["marks",{"_index":2247,"title":{},"body":{"license.html":{}}}],["matautocompletemodule",{"_index":1300,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbottomsheetmodule",{"_index":1323,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":1276,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":1322,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":1289,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcheckboxmodule",{"_index":1316,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":198,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1304,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":620,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"index.html":{}}}],["material.module",{"_index":1417,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodule",{"_index":1274,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1293,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matformfieldmodule",{"_index":1295,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":1291,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":1278,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":1298,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":1287,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":1310,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":1312,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":1284,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":1328,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":1302,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":1583,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["matsidenavmodule",{"_index":1282,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":1326,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":1318,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":1306,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":1314,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":1280,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":1308,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattreemodule",{"_index":1320,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":1093,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["mean",{"_index":2041,"title":{},"body":{"license.html":{}}}],["means",{"_index":2060,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":2085,"title":{},"body":{"license.html":{}}}],["media",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["media.matchmedia('(max",{"_index":1669,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["mediamatcher",{"_index":1638,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["mediaquerylist",{"_index":1657,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["medium",{"_index":2189,"title":{},"body":{"license.html":{}}}],["meet",{"_index":2191,"title":{},"body":{"license.html":{}}}],["menu",{"_index":1182,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu__icon",{"_index":1203,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu__link",{"_index":1196,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu__text",{"_index":1198,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu_book",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"components/InformationComponent.html":{}}}],["merchantability",{"_index":2261,"title":{},"body":{"license.html":{}}}],["merely",{"_index":2107,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":846,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap",{"_index":847,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap((t",{"_index":976,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap((techs",{"_index":974,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap((vc",{"_index":1007,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap(v",{"_index":1009,"title":{},"body":{"injectables/DataService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"pipes/SetToArrayPipe.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["methods",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["min",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["miscellaneous",{"_index":1970,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mobilequery",{"_index":1630,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["mode",{"_index":1675,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["model",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["modifications",{"_index":2082,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2197,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2221,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":2226,"title":{},"body":{"license.html":{}}}],["module",{"_index":260,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"coverage.html":{},"overview.html":{}}}],["modules",{"_index":262,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"index.html":{},"license.html":{}}}],["moz",{"_index":360,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{}}}],["multi",{"_index":594,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["multiple",{"_index":615,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["n/a",{"_index":689,"title":{},"body":{"components/CriterionComponent.html":{}}}],["name",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"index.html":{},"license.html":{}}}],["namebasedquery",{"_index":1454,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["namequery",{"_index":1476,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["names",{"_index":2246,"title":{},"body":{"license.html":{}}}],["nav",{"_index":392,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav'},{'name",{"_index":157,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["nav.component",{"_index":1429,"title":{},"body":{"modules/SharedModule.html":{},"components/TechnologyDetailsComponent.html":{}}}],["nav.component.html",{"_index":394,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.scss",{"_index":393,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts",{"_index":391,"title":{},"body":{"components/BottomNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:10",{"_index":409,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts:11",{"_index":401,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts:16",{"_index":403,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts:19",{"_index":405,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav/bottom",{"_index":390,"title":{},"body":{"components/BottomNavComponent.html":{},"modules/SharedModule.html":{},"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["nav_item",{"_index":1199,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["navbar",{"_index":420,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["navigate",{"_index":1997,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":302,"title":{},"body":{"classes/AppPage.html":{}}}],["navigating",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{}}}],["navigationcancel",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationend",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationerror",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["navlinks",{"_index":1230,"title":{},"body":{"components/InformationComponent.html":{}}}],["necessarily",{"_index":2169,"title":{},"body":{"license.html":{}}}],["needs",{"_index":512,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["negligence",{"_index":2275,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":2278,"title":{},"body":{"license.html":{}}}],["nested",{"_index":462,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["new",{"_index":733,"title":{},"body":{"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":955,"title":{},"body":{"injectables/DataService.html":{}}}],["nextquery",{"_index":1500,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextquery[key",{"_index":1550,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextquery[key].filtertype",{"_index":1542,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextquery[key].value",{"_index":1545,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextsort",{"_index":1495,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["ng",{"_index":1994,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["ngondestroy",{"_index":1385,"title":{},"body":{"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{}}}],["ngoninit",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["no.pipe",{"_index":1431,"title":{},"body":{"modules/SharedModule.html":{}}}],["no.pipe.ts",{"_index":1918,"title":{},"body":{"pipes/YesNoPipe.html":{},"coverage.html":{}}}],["no.pipe.ts:7",{"_index":1919,"title":{},"body":{"pipes/YesNoPipe.html":{}}}],["non",{"_index":2147,"title":{},"body":{"license.html":{}}}],["none",{"_index":427,"title":{},"body":{"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{}}}],["normally",{"_index":2217,"title":{},"body":{"license.html":{}}}],["note",{"_index":553,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["nothing",{"_index":2236,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2094,"title":{},"body":{"license.html":{}}}],["notices",{"_index":2200,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2234,"title":{},"body":{"license.html":{}}}],["nowrap",{"_index":423,"title":{},"body":{"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["null",{"_index":1543,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["number",{"_index":549,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{}}}],["numeric",{"_index":534,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["o",{"_index":361,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{}}}],["obj",{"_index":747,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["obj[this.filter.criterionid",{"_index":748,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["object",{"_index":1349,"title":{},"body":{"components/OverviewComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.keys(criteriaquery).foreach(key",{"_index":1518,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["object.keys(criteriaquery).length",{"_index":1517,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["object.keys(nextquery).foreach(key",{"_index":1541,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["obligations",{"_index":2302,"title":{},"body":{"license.html":{}}}],["observable",{"_index":803,"title":{},"body":{"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"components/OverviewComponent.html":{},"guards/ResourcesResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["obtain",{"_index":2337,"title":{},"body":{"license.html":{}}}],["obtained",{"_index":636,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["occurred",{"_index":882,"title":{},"body":{"injectables/DataService.html":{}}}],["of(result",{"_index":1481,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["offer",{"_index":2162,"title":{},"body":{"license.html":{}}}],["official",{"_index":551,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["once.guard",{"_index":586,"title":{},"body":{"modules/CoreModule.html":{}}}],["once.guard.ts",{"_index":1047,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["once.guard.ts:3",{"_index":1049,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["onchanges",{"_index":1665,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["ondestroy",{"_index":1381,"title":{},"body":{"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{}}}],["one",{"_index":339,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"index.html":{},"license.html":{}}}],["ongroupingselected",{"_index":1115,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["ongroupingselected(viewid",{"_index":1126,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["oninit",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["onnamechange",{"_index":1855,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["onnamechange(name",{"_index":1859,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["onqueryupdate",{"_index":1635,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["onqueryupdate($event",{"_index":1644,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["onscrolltotop",{"_index":396,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["onscrolltotop(platformid",{"_index":404,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["onwindowscroll(e",{"_index":1836,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["opacity",{"_index":1352,"title":{},"body":{"components/OverviewComponent.html":{}}}],["open",{"_index":349,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{},"index.html":{}}}],["option.name",{"_index":1842,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["optional",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["order",{"_index":1150,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{}}}],["organize",{"_index":501,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["origin",{"_index":2251,"title":{},"body":{"license.html":{}}}],["original",{"_index":2104,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":2067,"title":{},"body":{"license.html":{}}}],["out",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1200,"title":{},"body":{"components/HeaderComponent.html":{}}}],["output",{"_index":730,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["outputs",{"_index":716,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["outstanding",{"_index":2072,"title":{},"body":{"license.html":{}}}],["overflow",{"_index":1897,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["overview",{"_index":1331,"title":{"overview.html":{}},"body":{"components/OverviewComponent.html":{},"overview.html":{}}}],["overview'},{'name",{"_index":180,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["overview.component.html",{"_index":1333,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.scss",{"_index":1332,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overviewcomponent",{"_index":179,"title":{"components/OverviewComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["owner",{"_index":2046,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2069,"title":{},"body":{"license.html":{}}}],["p",{"_index":1539,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["p.platformname",{"_index":1867,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["p.shortdescription",{"_index":1868,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["package",{"_index":1953,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["page",{"_index":182,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["pageevent",{"_index":1443,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["pagenotfoundcomponent",{"_index":181,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagenumber",{"_index":1452,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["pagesize",{"_index":1464,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{}}}],["pagesizeoptions",{"_index":1854,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["paginateddata",{"_index":1460,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["panel",{"_index":1710,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parameters",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["params['browsingmode",{"_index":1676,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parent",{"_index":436,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["parentgroup",{"_index":1650,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parentgroup.concat",{"_index":1704,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parentgroupingname",{"_index":1609,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["parentgroupingname.concat('.').concat(grouping.name",{"_index":1614,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["parentid",{"_index":567,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["parentmodule",{"_index":600,"title":{},"body":{"modules/CoreModule.html":{}}}],["part",{"_index":2208,"title":{},"body":{"license.html":{}}}],["partial",{"_index":1492,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["particular",{"_index":529,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"license.html":{}}}],["party",{"_index":2216,"title":{},"body":{"license.html":{}}}],["patent",{"_index":2158,"title":{},"body":{"license.html":{}}}],["path",{"_index":320,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["pathmatch",{"_index":322,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{}}}],["pattern.png",{"_index":356,"title":{},"body":{"components/BannerComponent.html":{}}}],["percent",{"_index":2071,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1989,"title":{},"body":{"index.html":{},"license.html":{}}}],["permission",{"_index":2244,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":2078,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":2145,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":2207,"title":{},"body":{"license.html":{}}}],["pink",{"_index":1091,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["pipe",{"_index":892,"title":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}},"body":{"injectables/DataService.html":{},"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{}}}],["pipes",{"_index":1401,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"overview.html":{}}}],["pipes/set",{"_index":1422,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/truncate.pipe",{"_index":1418,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/yes",{"_index":1430,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":1408,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["placement",{"_index":1649,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["placement.get(grouping.name",{"_index":1700,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["placement.set(grouping.name",{"_index":1703,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["places",{"_index":2211,"title":{},"body":{"license.html":{}}}],["platform",{"_index":337,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyDossier.html":{},"components/TechnologyListComponent.html":{},"index.html":{}}}],["platform.description",{"_index":1841,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["platform.platformname",{"_index":1840,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["platform.platformname.tolocalelowercase().includes(namequery",{"_index":1516,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["platformid",{"_index":406,"title":{},"body":{"components/BottomNavComponent.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["platformlogodir",{"_index":1260,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["platformname",{"_index":1682,"title":{},"body":{"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["platformroutes",{"_index":1759,"title":{},"body":{"modules/TechnologiesRoutingModule.html":{}}}],["platforms",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyDossier.html":{},"components/TechnologyListComponent.html":{},"index.html":{}}}],["platforms__button",{"_index":1346,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__container",{"_index":1338,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__controls",{"_index":1728,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__description",{"_index":1729,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__filter",{"_index":1730,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__header",{"_index":1731,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__item",{"_index":1345,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__logo",{"_index":1347,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__logos",{"_index":1339,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__settings",{"_index":1732,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platform’s",{"_index":1986,"title":{},"body":{"index.html":{}}}],["png",{"_index":1270,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["pointer",{"_index":1154,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyListComponent.html":{}}}],["populaterenderblocks",{"_index":1636,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["populaterenderblocks(grouping",{"_index":1647,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["position",{"_index":417,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["possibility",{"_index":2297,"title":{},"body":{"license.html":{}}}],["possible",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{}}}],["posts",{"_index":1224,"title":{},"body":{"interfaces/InfoResourceSection.html":{}}}],["power",{"_index":2061,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":2080,"title":{},"body":{"license.html":{}}}],["preloadallmodules",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":330,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prepare",{"_index":2154,"title":{},"body":{"license.html":{}}}],["previous",{"_index":989,"title":{},"body":{"injectables/DataService.html":{}}}],["primitive",{"_index":546,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["printed",{"_index":2330,"title":{},"body":{"license.html":{}}}],["private",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{}}}],["processdata",{"_index":1784,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["processdata(data",{"_index":1514,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["prod",{"_index":2011,"title":{},"body":{"index.html":{}}}],["product",{"_index":1068,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["production",{"_index":2013,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":1337,"title":{},"body":{"components/OverviewComponent.html":{}}}],["project",{"_index":2006,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":2199,"title":{},"body":{"license.html":{}}}],["promise",{"_index":304,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["property",{"_index":1446,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{}}}],["prototype",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{}}}],["protractor",{"_index":306,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"modules/CoreModule.html":{},"license.html":{}}}],["provided",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["provider",{"_index":1070,"title":{},"body":{"components/FooterComponent.html":{}}}],["providers",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}],["provides",{"_index":1983,"title":{},"body":{"index.html":{},"license.html":{}}}],["prunequery",{"_index":1785,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["prunequery(nextquery",{"_index":1538,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["public",{"_index":714,"title":{},"body":{"components/CriterionFilterComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["publication",{"_index":1988,"title":{},"body":{"index.html":{}}}],["publications",{"_index":1222,"title":{},"body":{"interfaces/InfoResourceSection.html":{}}}],["publicly",{"_index":2155,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2128,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2058,"title":{},"body":{"license.html":{}}}],["q&a",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{}}}],["query",{"_index":605,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["querybycriteria",{"_index":1786,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["querybycriteria(query",{"_index":1497,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["querybyname",{"_index":1787,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["querybyname(query",{"_index":1505,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["question_answer",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{}}}],["questions",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{}}}],["radius",{"_index":1726,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["randomcolor",{"_index":1379,"title":{},"body":{"injectables/RandomColorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["randomcolorservice",{"_index":578,"title":{"injectables/RandomColorService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/RandomColorService.html":{},"coverage.html":{},"overview.html":{}}}],["range",{"_index":998,"title":{},"body":{"injectables/DataService.html":{}}}],["range[0",{"_index":1002,"title":{},"body":{"injectables/DataService.html":{}}}],["range[range.length",{"_index":1003,"title":{},"body":{"injectables/DataService.html":{}}}],["reactiveformsmodule",{"_index":1420,"title":{},"body":{"modules/SharedModule.html":{}}}],["read",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{}}}],["readable",{"_index":2210,"title":{},"body":{"license.html":{}}}],["readme",{"_index":2027,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":1229,"title":{},"body":{"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reason",{"_index":2316,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":2249,"title":{},"body":{"license.html":{}}}],["received",{"_index":2137,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2194,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":2328,"title":{},"body":{"license.html":{}}}],["redirectto",{"_index":321,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{}}}],["redistributing",{"_index":2267,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":2187,"title":{},"body":{"license.html":{}}}],["reference",{"_index":1217,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/ResourcesComponent.html":{}}}],["references",{"_index":550,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["regarding",{"_index":2242,"title":{},"body":{"license.html":{}}}],["related",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["relatedcriteria",{"_index":1036,"title":{},"body":{"injectables/DataService.html":{}}}],["relatedcriteria.add(criteria.get(id",{"_index":1040,"title":{},"body":{"injectables/DataService.html":{}}}],["reload",{"_index":2000,"title":{},"body":{"index.html":{}}}],["remain",{"_index":2105,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":612,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["renderedfilter",{"_index":1631,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["renderedfilterblock",{"_index":618,"title":{"interfaces/RenderedFilterBlock.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["renderer",{"_index":1110,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer'},{'name",{"_index":173,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["renderer.component",{"_index":1428,"title":{},"body":{"modules/SharedModule.html":{}}}],["renderer.component.html",{"_index":1112,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.scss",{"_index":1111,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts",{"_index":1109,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"coverage.html":{}}}],["renderer.component.ts:12",{"_index":1120,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:13",{"_index":1121,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:14",{"_index":1124,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:15",{"_index":1119,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:16",{"_index":1122,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:17",{"_index":1123,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:19",{"_index":1128,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:20",{"_index":1118,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:25",{"_index":1125,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:38",{"_index":1127,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer/framework",{"_index":1108,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["rendering",{"_index":514,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["renderreviewdata",{"_index":437,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["renderreviewdata]=\"renderreviewdata",{"_index":451,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["repeat",{"_index":357,"title":{},"body":{"components/BannerComponent.html":{}}}],["repeat(4",{"_index":1342,"title":{},"body":{"components/OverviewComponent.html":{}}}],["repeat(5",{"_index":1355,"title":{},"body":{"components/OverviewComponent.html":{}}}],["replaced",{"_index":2323,"title":{},"body":{"license.html":{}}}],["represent",{"_index":1220,"title":{},"body":{"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["representation",{"_index":502,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["representations",{"_index":495,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FooterComponent.html":{}}}],["representatives",{"_index":2122,"title":{},"body":{"license.html":{}}}],["representing",{"_index":467,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["reproduce",{"_index":2153,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":2252,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":2037,"title":{},"body":{"license.html":{}}}],["require",{"_index":1951,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":2248,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"index.html":{}}}],["res",{"_index":970,"title":{},"body":{"injectables/DataService.html":{}}}],["res.resource",{"_index":1395,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["res.reviewdate",{"_index":971,"title":{},"body":{"injectables/DataService.html":{}}}],["research",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResourceSection.html":{},"index.html":{}}}],["reserved",{"_index":522,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["reset",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}],["resolve",{"_index":1164,"title":{},"body":{"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["resolve(route",{"_index":1167,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["resolveddata",{"_index":1256,"title":{},"body":{"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["resolver.service",{"_index":1250,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["resolver.service.ts",{"_index":1163,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:10",{"_index":1847,"title":{},"body":{"guards/TechnologyDetailsResolverService.html":{}}}],["resolver.service.ts:11",{"_index":1752,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["resolver.service.ts:13",{"_index":1398,"title":{},"body":{"guards/ResourcesResolver.html":{}}}],["resolver.service.ts:14",{"_index":1171,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["resolver.service.ts:15",{"_index":1753,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["resolver.service.ts:8",{"_index":1397,"title":{},"body":{"guards/ResourcesResolver.html":{}}}],["resolver.service.ts:9",{"_index":1166,"title":{},"body":{"guards/FrameworkResolver.html":{}}}],["resolvers/framework",{"_index":1253,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["resolvers/resources",{"_index":1249,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["resource",{"_index":1216,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{}}}],["resources",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationRoutingModule.html":{},"components/ResourcesComponent.html":{}}}],["resources'},{'name",{"_index":185,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["resources.component.html",{"_index":1383,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources.component.scss",{"_index":1382,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources/resources.component",{"_index":1245,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["resourcescomponent",{"_index":184,"title":{"components/ResourcesComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcesresolver",{"_index":1248,"title":{"guards/ResourcesResolver.html":{}},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"guards/ResourcesResolver.html":{},"coverage.html":{}}}],["respective",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["response",{"_index":561,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["responsibility",{"_index":2308,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":2264,"title":{},"body":{"license.html":{}}}],["result",{"_index":197,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.dossier",{"_index":956,"title":{},"body":{"injectables/DataService.html":{}}}],["result.filter(t",{"_index":1520,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["result.length",{"_index":1480,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["result.push(combination",{"_index":926,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(framework",{"_index":940,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(groupingslookup.get(id",{"_index":1032,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(lookup.get(g.id",{"_index":1045,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(view",{"_index":915,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(viewslookup.get(id",{"_index":1027,"title":{},"body":{"injectables/DataService.html":{}}}],["result.sort((a",{"_index":1527,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["result.viewcombinations.add(viewcombination",{"_index":943,"title":{},"body":{"injectables/DataService.html":{}}}],["resulting",{"_index":663,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["results",{"_index":199,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":2204,"title":{},"body":{"license.html":{}}}],["return",{"_index":253,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"modules/CoreModule.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["returned",{"_index":885,"title":{},"body":{"injectables/DataService.html":{}}}],["returns",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["review",{"_index":494,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["reviewdata",{"_index":438,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["reviewdata]=\"reviewdata",{"_index":452,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["reviewdate",{"_index":545,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["reviewed",{"_index":343,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/OverviewComponent.html":{}}}],["reviewedcriteria",{"_index":570,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["reviewedcriterion",{"_index":1552,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reviewedcriterion.values",{"_index":1555,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reviewedcriterion.values[0].value",{"_index":1556,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reviewmode",{"_index":669,"title":{},"body":{"components/CriterionComponent.html":{}}}],["reviewvalue",{"_index":1554,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["revisions",{"_index":2100,"title":{},"body":{"license.html":{}}}],["rgba(0",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{}}}],["right",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["rights",{"_index":2304,"title":{},"body":{"license.html":{}}}],["risks",{"_index":2269,"title":{},"body":{"license.html":{}}}],["root",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["root'},{'name",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["route",{"_index":1102,"title":{},"body":{"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["route.params['platformid",{"_index":1848,"title":{},"body":{"guards/TechnologyDetailsResolverService.html":{}}}],["router",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["router.events.subscribe((e",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["routermodule.forchild(inforoutes",{"_index":1257,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["routermodule.forchild(platformroutes",{"_index":1760,"title":{},"body":{"modules/TechnologiesRoutingModule.html":{}}}],["routermodule.forroot",{"_index":329,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1170,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["routes",{"_index":314,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"modules/InformationModule.html":{},"modules/TechnologiesModule.html":{}}}],["routing.module.ts",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["row",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["row:nth",{"_index":1905,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["royalty",{"_index":2150,"title":{},"body":{"license.html":{}}}],["run",{"_index":1993,"title":{},"body":{"index.html":{}}}],["running",{"_index":2014,"title":{},"body":{"index.html":{}}}],["runtimes",{"_index":531,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["rxjs",{"_index":844,"title":{},"body":{"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"components/OverviewComponent.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":851,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["s.unsubscribe",{"_index":1689,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["s3",{"_index":1775,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["safety",{"_index":1075,"title":{},"body":{"components/FooterComponent.html":{}}}],["salad",{"_index":1155,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyListComponent.html":{}}}],["same",{"_index":2329,"title":{},"body":{"license.html":{}}}],["scaffolding",{"_index":2003,"title":{},"body":{"index.html":{}}}],["screen",{"_index":137,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["scroll",{"_index":1894,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["scrollleft",{"_index":1621,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["scrollright",{"_index":1623,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["scrolltoanchor",{"_index":398,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["search",{"_index":351,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"index.html":{}}}],["section",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["section.description",{"_index":1394,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["section.title",{"_index":1393,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["section__card",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["section__cards",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{}}}],["section_disclaimer",{"_index":1092,"title":{},"body":{"components/FooterComponent.html":{}}}],["sections",{"_index":1219,"title":{},"body":{"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["see",{"_index":632,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["seed",{"_index":1372,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["selected",{"_index":662,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["selectedgrouping",{"_index":1113,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["selectedstrings",{"_index":751,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["selectedstrings.length",{"_index":755,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["selectedviewcombination",{"_index":1117,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["selection",{"_index":348,"title":{},"body":{"components/BannerComponent.html":{},"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["self",{"_index":702,"title":{},"body":{"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sell",{"_index":2163,"title":{},"body":{"license.html":{}}}],["sent",{"_index":2121,"title":{},"body":{"license.html":{}}}],["separable",{"_index":2106,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2239,"title":{},"body":{"license.html":{}}}],["serve",{"_index":1995,"title":{},"body":{"index.html":{}}}],["server",{"_index":560,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{},"index.html":{}}}],["service",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"index.html":{},"license.html":{}}}],["services/app",{"_index":592,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/data.service",{"_index":587,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/logo",{"_index":588,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/random",{"_index":590,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":475,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["set([...previous",{"_index":994,"title":{},"body":{"injectables/DataService.html":{}}}],["settimeout",{"_index":412,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["settings",{"_index":639,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["settoarray",{"_index":1404,"title":{},"body":{"pipes/SetToArrayPipe.html":{}}}],["settoarraypipe",{"_index":1400,"title":{"pipes/SetToArrayPipe.html":{}},"body":{"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["shadow",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["shall",{"_index":2040,"title":{},"body":{"license.html":{}}}],["shared/bottom",{"_index":1832,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["shared/datasource",{"_index":1582,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["shared/interfaces/classification",{"_index":853,"title":{},"body":{"injectables/DataService.html":{},"components/FrameworkComponent.html":{},"guards/FrameworkResolver.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{}}}],["shared/interfaces/filtering",{"_index":731,"title":{},"body":{"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyTableComponent.html":{}}}],["shared/interfaces/info",{"_index":858,"title":{},"body":{"injectables/DataService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{}}}],["shared/interfaces/responses",{"_index":856,"title":{},"body":{"injectables/DataService.html":{}}}],["shared/interfaces/technology",{"_index":855,"title":{},"body":{"injectables/DataService.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["shared/page",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/shared.module",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"modules/InformationModule.html":{},"modules/TechnologiesModule.html":{}}}],["sharedmodule",{"_index":274,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules.html":{},"overview.html":{}}}],["sharereplay",{"_index":848,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["sharereplay(1",{"_index":894,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["shares",{"_index":2073,"title":{},"body":{"license.html":{}}}],["sheet",{"_index":1325,"title":{},"body":{"modules/MaterialModule.html":{}}}],["short",{"_index":1769,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["shortdescription",{"_index":1764,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["shown",{"_index":1766,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["shrink",{"_index":421,"title":{},"body":{"components/BottomNavComponent.html":{},"components/TechnologiesComponent.html":{}}}],["sidenav",{"_index":1587,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sidenav__accordion",{"_index":1725,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["sidenav__filter",{"_index":1724,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["simplechanges",{"_index":1666,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["simpledatasource",{"_index":1432,"title":{"interfaces/SimpleDataSource.html":{}},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{}}}],["simplify",{"_index":1979,"title":{},"body":{"index.html":{}}}],["size",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["skipself",{"_index":581,"title":{},"body":{"modules/CoreModule.html":{}}}],["slider",{"_index":646,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["smooth",{"_index":1898,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["software",{"_index":469,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["sole",{"_index":2307,"title":{},"body":{"license.html":{}}}],["solely",{"_index":2263,"title":{},"body":{"license.html":{}}}],["solid",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sort",{"_index":1445,"title":{"interfaces/Sort.html":{}},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{}}}],["sort.order",{"_index":1526,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["sortby",{"_index":1788,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["sortby(sort",{"_index":1491,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["spacer",{"_index":381,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologyListComponent.html":{}}}],["span')).gettext",{"_index":309,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":2353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":2282,"title":{},"body":{"license.html":{}}}],["specific",{"_index":542,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["specified",{"_index":650,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"index.html":{}}}],["spinner",{"_index":1286,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../data.service.ts",{"_index":2348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filtering.ts",{"_index":1972,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logo",{"_index":1973,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../random",{"_index":2351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../technology.ts",{"_index":1974,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":2347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core.module.ts",{"_index":579,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/ensure",{"_index":1046,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["src/app/core/services/app",{"_index":239,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["src/app/core/services/data.service.ts",{"_index":776,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/data.service.ts:105",{"_index":831,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:138",{"_index":819,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:170",{"_index":813,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:201",{"_index":816,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:209",{"_index":823,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:234",{"_index":826,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:244",{"_index":828,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:267",{"_index":808,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:283",{"_index":811,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:293",{"_index":830,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:333",{"_index":818,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:34",{"_index":799,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:345",{"_index":805,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:367",{"_index":837,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:386",{"_index":833,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:39",{"_index":840,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:405",{"_index":821,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:413",{"_index":801,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:50",{"_index":802,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:58",{"_index":820,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:72",{"_index":835,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/logo",{"_index":1258,"title":{},"body":{"injectables/LogoLocatorService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/services/random",{"_index":1365,"title":{},"body":{"injectables/RandomColorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/home/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/home/about/about.component.ts:8",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/home/banner/banner.component.ts",{"_index":331,"title":{},"body":{"components/BannerComponent.html":{},"coverage.html":{}}}],["src/app/home/banner/banner.component.ts:8",{"_index":335,"title":{},"body":{"components/BannerComponent.html":{}}}],["src/app/home/home.component.ts",{"_index":1208,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:9",{"_index":1212,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/overview/overview.component.ts",{"_index":1330,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/home/overview/overview.component.ts:11",{"_index":1334,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/information/faq/faq.component.ts",{"_index":1054,"title":{},"body":{"components/FaqComponent.html":{},"coverage.html":{}}}],["src/app/information/faq/faq.component.ts:12",{"_index":1059,"title":{},"body":{"components/FaqComponent.html":{}}}],["src/app/information/faq/faq.component.ts:8",{"_index":1058,"title":{},"body":{"components/FaqComponent.html":{}}}],["src/app/information/framework/framework.component.ts",{"_index":1096,"title":{},"body":{"components/FrameworkComponent.html":{},"coverage.html":{}}}],["src/app/information/framework/framework.component.ts:11",{"_index":1101,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["src/app/information/framework/framework.component.ts:16",{"_index":1103,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["src/app/information/information",{"_index":1252,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["src/app/information/information.component.ts",{"_index":1226,"title":{},"body":{"components/InformationComponent.html":{},"coverage.html":{}}}],["src/app/information/information.component.ts:10",{"_index":1234,"title":{},"body":{"components/InformationComponent.html":{}}}],["src/app/information/information.component.ts:14",{"_index":1231,"title":{},"body":{"components/InformationComponent.html":{}}}],["src/app/information/information.module.ts",{"_index":1244,"title":{},"body":{"modules/InformationModule.html":{}}}],["src/app/information/resolvers/framework",{"_index":1162,"title":{},"body":{"guards/FrameworkResolver.html":{},"coverage.html":{}}}],["src/app/information/resolvers/resources",{"_index":1396,"title":{},"body":{"guards/ResourcesResolver.html":{},"coverage.html":{}}}],["src/app/information/resources/resources.component.ts",{"_index":1380,"title":{},"body":{"components/ResourcesComponent.html":{},"coverage.html":{}}}],["src/app/information/resources/resources.component.ts:12",{"_index":1389,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/information/resources/resources.component.ts:13",{"_index":1386,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/information/resources/resources.component.ts:18",{"_index":1388,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/information/resources/resources.component.ts:24",{"_index":1387,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/shared/bottom",{"_index":389,"title":{},"body":{"components/BottomNavComponent.html":{},"coverage.html":{}}}],["src/app/shared/child",{"_index":428,"title":{},"body":{"components/ChildGroupingComponent.html":{},"coverage.html":{}}}],["src/app/shared/criterion/criterion.component.ts",{"_index":665,"title":{},"body":{"components/CriterionComponent.html":{},"coverage.html":{}}}],["src/app/shared/criterion/criterion.component.ts:10",{"_index":671,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:11",{"_index":673,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:12",{"_index":672,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:13",{"_index":676,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:14",{"_index":675,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:15",{"_index":678,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:16",{"_index":670,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:21",{"_index":677,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/datasource.ts",{"_index":1433,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{}}}],["src/app/shared/datasource.ts:10",{"_index":1437,"title":{},"body":{"interfaces/SimpleDataSource.html":{}}}],["src/app/shared/datasource.ts:101",{"_index":1809,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:12",{"_index":1438,"title":{},"body":{"interfaces/SimpleDataSource.html":{}}}],["src/app/shared/datasource.ts:131",{"_index":1801,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:146",{"_index":1811,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:170",{"_index":1808,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:198",{"_index":1804,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:207",{"_index":1805,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:21",{"_index":1792,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:22",{"_index":1796,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:23",{"_index":1799,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:24",{"_index":1790,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:25",{"_index":1795,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:27",{"_index":1794,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:28",{"_index":1800,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:29",{"_index":1791,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:30",{"_index":1797,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:31",{"_index":1793,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:32",{"_index":1789,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:34",{"_index":1798,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:62",{"_index":1814,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:68",{"_index":1812,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:77",{"_index":1813,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:81",{"_index":1807,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:87",{"_index":1815,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:91",{"_index":1803,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:98",{"_index":1806,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":1061,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:12",{"_index":1066,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:8",{"_index":1065,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/framework",{"_index":1107,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":1177,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:8",{"_index":1181,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/interfaces/classification.ts",{"_index":466,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/filtering.ts",{"_index":603,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/interfaces/filtering.ts:119",{"_index":611,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{}}}],["src/app/shared/interfaces/info.ts",{"_index":1215,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/responses.ts",{"_index":558,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/responses.ts:53",{"_index":664,"title":{},"body":{"interfaces/CriteriaReview.html":{}}}],["src/app/shared/interfaces/technology.ts",{"_index":1761,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/material.module.ts",{"_index":1275,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/shared/page",{"_index":1357,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/pipes/set",{"_index":1402,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/truncate.pipe.ts",{"_index":1908,"title":{},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/truncate.pipe.ts:7",{"_index":1913,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["src/app/shared/pipes/yes",{"_index":1917,"title":{},"body":{"pipes/YesNoPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1416,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/technologies/criterion",{"_index":708,"title":{},"body":{"components/CriterionFilterComponent.html":{},"coverage.html":{}}}],["src/app/technologies/technologies",{"_index":1751,"title":{},"body":{"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"coverage.html":{}}}],["src/app/technologies/technologies.component.ts",{"_index":1624,"title":{},"body":{"components/TechnologiesComponent.html":{},"coverage.html":{}}}],["src/app/technologies/technologies.component.ts:114",{"_index":1645,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:25",{"_index":1662,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:26",{"_index":1663,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:27",{"_index":1655,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:28",{"_index":1654,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:29",{"_index":1656,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:31",{"_index":1653,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:32",{"_index":1652,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:34",{"_index":1658,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:36",{"_index":1661,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:37",{"_index":1639,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:51",{"_index":1643,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:74",{"_index":1642,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:78",{"_index":1640,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:87",{"_index":1641,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:94",{"_index":1651,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.module.ts",{"_index":1741,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["src/app/technologies/technology",{"_index":1572,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1946,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1948,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":698,"title":{},"body":{"components/CriterionComponent.html":{},"components/TechnologyListComponent.html":{}}}],["started",{"_index":1976,"title":{"index.html":{},"license.html":{}},"body":{}}],["startindex",{"_index":1486,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["state",{"_index":1169,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"license.html":{}}}],["stated",{"_index":2160,"title":{},"body":{"license.html":{}}}],["statement",{"_index":2228,"title":{},"body":{"license.html":{}}}],["statements",{"_index":1921,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":796,"title":{},"body":{"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["stating",{"_index":2201,"title":{},"body":{"license.html":{}}}],["sticky",{"_index":418,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["stoppage",{"_index":2290,"title":{},"body":{"license.html":{}}}],["store",{"_index":479,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["stored",{"_index":2008,"title":{},"body":{"index.html":{}}}],["storing",{"_index":1767,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["stretch",{"_index":775,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["string",{"_index":402,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":535,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["style",{"_index":770,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sub",{"_index":515,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["subgroups",{"_index":439,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["subject",{"_index":1715,"title":{},"body":{"components/TechnologiesComponent.html":{},"license.html":{}}}],["sublicense",{"_index":2156,"title":{},"body":{"license.html":{}}}],["submission",{"_index":2230,"title":{},"body":{"license.html":{}}}],["submit",{"_index":2115,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":2113,"title":{},"body":{"license.html":{}}}],["subscription",{"_index":1384,"title":{},"body":{"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{}}}],["subscriptions",{"_index":1632,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["subsequently",{"_index":2138,"title":{},"body":{"license.html":{}}}],["such",{"_index":1218,"title":{},"body":{"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["suitability",{"_index":1076,"title":{},"body":{"components/FooterComponent.html":{}}}],["suitable",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["suiting",{"_index":340,"title":{},"body":{"components/BannerComponent.html":{}}}],["super(parentmodule",{"_index":601,"title":{},"body":{"modules/CoreModule.html":{}}}],["supersede",{"_index":2238,"title":{},"body":{"license.html":{}}}],["support",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{},"license.html":{},"modules.html":{}}}],["supported",{"_index":532,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["supportedplatforms",{"_index":1211,"title":{},"body":{"components/HomeComponent.html":{},"components/OverviewComponent.html":{}}}],["supportedplatformspath",{"_index":870,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":1273,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["switch",{"_index":492,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["switchmap",{"_index":1441,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["switchmap(([criteriaquery",{"_index":1475,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["syntax",{"_index":2327,"title":{},"body":{"license.html":{}}}],["system",{"_index":1977,"title":{},"body":{"index.html":{}}}],["systems",{"_index":2124,"title":{},"body":{"license.html":{}}}],["t",{"_index":1448,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["t.category.tolocalelowercase",{"_index":960,"title":{},"body":{"injectables/DataService.html":{}}}],["t.dossier.reviewedcriteria.get(key",{"_index":1524,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["t.dossier.reviewedcriteria.has(key",{"_index":1522,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["table",{"_index":194,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["table.component",{"_index":1747,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["table.component.html",{"_index":1584,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["table.component.scss",{"_index":1585,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["table.component.ts",{"_index":1574,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:10",{"_index":1577,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:11",{"_index":1576,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:20",{"_index":1879,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:21",{"_index":1881,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:22",{"_index":1880,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:23",{"_index":1882,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:25",{"_index":1890,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:27",{"_index":1887,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:28",{"_index":1889,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:29",{"_index":1888,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:31",{"_index":1878,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:37",{"_index":1884,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:61",{"_index":1883,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:8",{"_index":1579,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:87",{"_index":1885,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:9",{"_index":1578,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:91",{"_index":1886,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table/technology",{"_index":1573,"title":{},"body":{"classes/TableColumn.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["tablecolumn",{"_index":1571,"title":{"classes/TableColumn.html":{}},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["tablecontainer",{"_index":1589,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1952,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1237,"title":{},"body":{"components/InformationComponent.html":{}}}],["tabs__links",{"_index":1238,"title":{},"body":{"components/InformationComponent.html":{}}}],["take",{"_index":849,"title":{},"body":{"injectables/DataService.html":{}}}],["target",{"_index":1558,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["target.every(v",{"_index":1560,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["targetmodule",{"_index":1050,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["tech",{"_index":1899,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["tech.platformname",{"_index":1891,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["techcategory",{"_index":814,"title":{},"body":{"injectables/DataService.html":{}}}],["techname",{"_index":1595,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["technameheader",{"_index":1593,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["technologies",{"_index":499,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["technologies'},{'name",{"_index":187,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["technologies.component",{"_index":1742,"title":{},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["technologies.component.html",{"_index":1628,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["technologies.component.scss",{"_index":1627,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["technologiescomponent",{"_index":186,"title":{"components/TechnologiesComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["technologiesmodule",{"_index":1736,"title":{"modules/TechnologiesModule.html":{}},"body":{"modules/TechnologiesModule.html":{},"modules.html":{},"overview.html":{}}}],["technologiesresolver",{"_index":1748,"title":{"guards/TechnologiesResolver.html":{}},"body":{"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"coverage.html":{}}}],["technologiesroutingmodule",{"_index":1740,"title":{"modules/TechnologiesRoutingModule.html":{}},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["technology",{"_index":189,"title":{"interfaces/Technology.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["technology__header",{"_index":1843,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["technology__logo",{"_index":1844,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["technology__view",{"_index":1846,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["technologycategory",{"_index":482,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["technologydatasource",{"_index":1451,"title":{"classes/TechnologyDataSource.html":{}},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["technologydatasource(this.technologies",{"_index":1681,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["technologydatasource.canfilter(criteriaquery[key",{"_index":1519,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["technologydatasource.containsany(filtervalue",{"_index":1553,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["technologydetailscomponent",{"_index":188,"title":{"components/TechnologyDetailsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["technologydetailsresolverservice",{"_index":1750,"title":{"guards/TechnologyDetailsResolverService.html":{}},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["technologydossier",{"_index":854,"title":{"interfaces/TechnologyDossier.html":{}},"body":{"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{}}}],["technologydossier]{@link",{"_index":1776,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["technologydossierresponse",{"_index":569,"title":{"interfaces/TechnologyDossierResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["technologyfilterconfiguration",{"_index":626,"title":{"interfaces/TechnologyFilterConfiguration.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["technologyid",{"_index":809,"title":{},"body":{"injectables/DataService.html":{}}}],["technologylistcomponent",{"_index":191,"title":{"components/TechnologyListComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["technologytablecomponent",{"_index":193,"title":{"components/TechnologyTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["techs",{"_index":975,"title":{},"body":{"injectables/DataService.html":{}}}],["techs.filter(t",{"_index":959,"title":{},"body":{"injectables/DataService.html":{}}}],["temp",{"_index":1019,"title":{},"body":{"injectables/DataService.html":{}}}],["temp.default",{"_index":1021,"title":{},"body":{"injectables/DataService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["terminate",{"_index":2185,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2035,"title":{},"body":{"license.html":{}}}],["test",{"_index":2017,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2016,"title":{},"body":{"index.html":{}}}],["text",{"_index":372,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["text_snippet",{"_index":674,"title":{},"body":{"components/CriterionComponent.html":{}}}],["then(data",{"_index":256,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["theory",{"_index":2273,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":2109,"title":{},"body":{"license.html":{}}}],["third",{"_index":2215,"title":{},"body":{"license.html":{}}}],["this.appconfig",{"_index":257,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.appconfig?.defaulttechcategory",{"_index":259,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.bottomnav.totop",{"_index":1837,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["this.browsingmode",{"_index":1677,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.buildgroupings(groupings",{"_index":902,"title":{},"body":{"injectables/DataService.html":{}}}],["this.checkrouterevent(e",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["this.columnstodisplay.push(c.id",{"_index":1613,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.config.defaulttechcategory",{"_index":1175,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["this.criteriabasedquery",{"_index":1468,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.criteriabasedquery.getvalue",{"_index":1499,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.criteriabasedquery.next(nextquery",{"_index":1504,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.criteriacolumns.push",{"_index":1612,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.criterion.name",{"_index":681,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.criterioninstance",{"_index":682,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.currentindex",{"_index":1510,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.data",{"_index":1465,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.dataservice.getframeworkforcategory(defaultcategory",{"_index":1176,"title":{},"body":{"guards/FrameworkResolver.html":{}}}],["this.dataservice.getframeworkfortechnologytype(category",{"_index":1756,"title":{},"body":{"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["this.dataservice.getinforesources",{"_index":1399,"title":{},"body":{"guards/ResourcesResolver.html":{}}}],["this.dataservice.gettechnologies",{"_index":1213,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.dataservice.gettechnologiesofcategory(category",{"_index":1755,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["this.dataservice.gettechnology(id",{"_index":1849,"title":{},"body":{"guards/TechnologyDetailsResolverService.html":{}}}],["this.dataservice.gettechnologyfilter(category",{"_index":1757,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["this.datasource",{"_index":1680,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.datasource.fetch({pageindex",{"_index":1863,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.datasource.pagesize",{"_index":1866,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.datasource.querybycriteria($event",{"_index":1709,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.datasource.querybyname(name",{"_index":1862,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.datasource.totalinputsize",{"_index":1865,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.extractgroupings",{"_index":1686,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.extratitletext",{"_index":679,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.fb.array",{"_index":741,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.fb.control(null",{"_index":739,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.fb.control(this.filter.filtertype",{"_index":745,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.fb.group",{"_index":744,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filter.filtertype",{"_index":734,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filter.filtervalues",{"_index":750,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filter.filtervalues.foreach(v",{"_index":742,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterconfiguration",{"_index":1684,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.filtereddata",{"_index":1472,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.filterelement",{"_index":738,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.get('filtertype').setvalue(this.filtertype.containsone",{"_index":766,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.markaspristine",{"_index":756,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.reset",{"_index":762,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.value.checkboxes[i",{"_index":753,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.value.filtertype",{"_index":754,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.valuechanges.subscribe(value",{"_index":746,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.bool",{"_index":735,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.containsall",{"_index":763,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.containsany",{"_index":736,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.containsone",{"_index":764,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.excludesall",{"_index":765,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.lte",{"_index":737,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.framework",{"_index":1105,"title":{},"body":{"components/FrameworkComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["this.framework.viewcombinations",{"_index":1130,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{}}}],["this.framework.viewcombinations.foreach(vc",{"_index":1834,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["this.framework.viewcombinations.foreach(viewcomb",{"_index":1596,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.generatefilterstructure",{"_index":1687,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.generategroupingcolumns(g",{"_index":1620,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.generategroupingcolumns(grouping",{"_index":1601,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.getcriteria",{"_index":895,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdefaultviewcombinationdata(frameworkid).pipe",{"_index":1006,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdossier(id",{"_index":961,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdossier(item.id).pipe(take(1)).subscribe",{"_index":954,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdossier(t.id",{"_index":977,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdossiersofcategory(category",{"_index":982,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getfilteringresult(criteriaquery[key",{"_index":1523,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.getframeworks().pipe",{"_index":944,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getgroupings",{"_index":903,"title":{},"body":{"injectables/DataService.html":{}}}],["this.gettechnologies(withdossier).pipe",{"_index":957,"title":{},"body":{"injectables/DataService.html":{}}}],["this.gettechnologiesofcategory(category).pipe",{"_index":973,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getviewcombinations",{"_index":927,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getviewgroupingsdata(v.id",{"_index":1010,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getviews",{"_index":916,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getviewsdata(vc.id",{"_index":1008,"title":{},"body":{"injectables/DataService.html":{}}}],["this.groupingcolumnids.push(grouping.id",{"_index":1617,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.groupingcolumns.push(...groupingcolumns",{"_index":1603,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.groupings.foreach(g",{"_index":1695,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.groupings.push(...array.from(v.groupings",{"_index":1691,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.http.get('/assets/config.json",{"_index":254,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.http.get(criteriagroupingspath",{"_index":896,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(criteriapath",{"_index":891,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(dossierpath",{"_index":969,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(filterconfigurationspath).pipe",{"_index":978,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(frameworkspath",{"_index":928,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(frameworkviewcombinationspath",{"_index":917,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(frameworkviewspath",{"_index":904,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(inforesourcespath",{"_index":1033,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(supportedplatformspath",{"_index":949,"title":{},"body":{"injectables/DataService.html":{}}}],["this.ispaginated",{"_index":1513,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.loading",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["this.logolocator.getlogopath(item.logolocator",{"_index":953,"title":{},"body":{"injectables/DataService.html":{}}}],["this.logolocator.getlogopath(technology.logolocator",{"_index":966,"title":{},"body":{"injectables/DataService.html":{}}}],["this.mobilequery",{"_index":1668,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.mobilequery.addeventlistener('change",{"_index":1671,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.namebasedquery",{"_index":1470,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.namebasedquery.next(query",{"_index":1506,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagenumber$]).pipe",{"_index":1484,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagenumber.asobservable",{"_index":1458,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagenumber.next(event.pageindex",{"_index":1509,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagesize",{"_index":1487,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.paginateddata",{"_index":1482,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.platform",{"_index":1833,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["this.populaterenderblocks(g",{"_index":1696,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.processdata(this.data",{"_index":1477,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.prunequery(nextquery",{"_index":1502,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.renderedfilter",{"_index":1697,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.resources",{"_index":1391,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.route.data.subscribe(data",{"_index":1104,"title":{},"body":{"components/FrameworkComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":1674,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.selectedgrouping.get(viewid)?.id",{"_index":1136,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.selectedgrouping.set(viewid",{"_index":1138,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.selectedviewcombination",{"_index":1129,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["this.selectedviewcombination.views.foreach(v",{"_index":1134,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.sort",{"_index":1466,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.sort.getvalue",{"_index":1494,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.sort.next(nextsort",{"_index":1496,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.sort]).pipe",{"_index":1474,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.subscription",{"_index":1390,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":1392,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.subscriptions.foreach(s",{"_index":1688,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.subscriptions.push",{"_index":1673,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.tablecontainer.nativeelement.scrollleft",{"_index":1622,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.technologies",{"_index":1678,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.title",{"_index":680,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.totalinputsize",{"_index":1479,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.updatequery.emit(obj",{"_index":757,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.values",{"_index":683,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.viewportscroller.scrolltoanchor(grouping.id",{"_index":1140,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.viewportscroller.scrolltoanchor(platformid",{"_index":413,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["this.viewtoggles.set(v.id",{"_index":1135,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["those",{"_index":2166,"title":{},"body":{"license.html":{}}}],["through",{"_index":1716,"title":{},"body":{"components/TechnologiesComponent.html":{},"license.html":{}}}],["throw",{"_index":1051,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["throwerror",{"_index":843,"title":{},"body":{"injectables/DataService.html":{}}}],["throwerror(errormessage",{"_index":890,"title":{},"body":{"injectables/DataService.html":{}}}],["title",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/PageNotFoundComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"license.html":{}}}],["titlepage",{"_index":1364,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["toarray",{"_index":850,"title":{},"body":{"injectables/DataService.html":{}}}],["toggle",{"_index":642,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"components/FrameworkRendererComponent.html":{},"modules/MaterialModule.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["togglepagination",{"_index":1512,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["top",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["topromise",{"_index":255,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["tort",{"_index":2274,"title":{},"body":{"license.html":{}}}],["totalinputsize",{"_index":1456,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["totop",{"_index":395,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["tracking",{"_index":2126,"title":{},"body":{"license.html":{}}}],["trade",{"_index":2245,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":2205,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2243,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":2164,"title":{},"body":{"license.html":{}}}],["transform",{"_index":1405,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["transform(value",{"_index":1406,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["transformation",{"_index":2086,"title":{},"body":{"license.html":{}}}],["transition",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{}}}],["translates",{"_index":641,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["translation",{"_index":2087,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["true",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":533,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["truncate",{"_index":1909,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["truncatepipe",{"_index":1414,"title":{"pipes/TruncatePipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["tslib",{"_index":1966,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":761,"title":{},"body":{"components/CriterionFilterComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"pipes/YesNoPipe.html":{}}}],["types",{"_index":2090,"title":{},"body":{"license.html":{}}}],["typographical",{"_index":1080,"title":{},"body":{"components/FooterComponent.html":{}}}],["ui",{"_index":513,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["undefined",{"_index":1139,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{}}}],["under",{"_index":2056,"title":{},"body":{"license.html":{}}}],["union",{"_index":2051,"title":{},"body":{"license.html":{}}}],["unique",{"_index":480,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["unit",{"_index":2015,"title":{},"body":{"index.html":{}}}],["unless",{"_index":2232,"title":{},"body":{"license.html":{}}}],["updatequery",{"_index":717,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["url(\"../../../assets/images/logo",{"_index":1194,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url(../../../assets/images/bg",{"_index":355,"title":{},"body":{"components/BannerComponent.html":{}}}],["use",{"_index":524,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":490,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["usefactory",{"_index":596,"title":{},"body":{"modules/CoreModule.html":{}}}],["user",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["user's",{"_index":659,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["using",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"index.html":{},"license.html":{}}}],["v",{"_index":1024,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["v.description",{"_index":911,"title":{},"body":{"injectables/DataService.html":{}}}],["v.groupingids.foreach(id",{"_index":912,"title":{},"body":{"injectables/DataService.html":{}}}],["v.id",{"_index":909,"title":{},"body":{"injectables/DataService.html":{}}}],["v.length",{"_index":1536,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["v.name",{"_index":910,"title":{},"body":{"injectables/DataService.html":{}}}],["v.png",{"_index":1204,"title":{},"body":{"components/HeaderComponent.html":{}}}],["v.value",{"_index":694,"title":{},"body":{"components/CriterionComponent.html":{}}}],["value",{"_index":408,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.every(item",{"_index":760,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["value.length",{"_index":1916,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value.substr(0",{"_index":1914,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["valueindex",{"_index":693,"title":{},"body":{"components/CriterionComponent.html":{}}}],["values",{"_index":477,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["values[0].value",{"_index":690,"title":{},"body":{"components/CriterionComponent.html":{}}}],["valuetocheck",{"_index":1546,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["valuetocheck.length",{"_index":1547,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["var",{"_index":148,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["variable",{"_index":1927,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2346,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vc",{"_index":1016,"title":{},"body":{"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["vc.default",{"_index":1131,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["vc.id",{"_index":1015,"title":{},"body":{"injectables/DataService.html":{}}}],["vc.viewids.foreach(id",{"_index":1026,"title":{},"body":{"injectables/DataService.html":{}}}],["vc.views.foreach(v",{"_index":1690,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["vclookup",{"_index":1013,"title":{},"body":{"injectables/DataService.html":{}}}],["vclookup.get(id",{"_index":1020,"title":{},"body":{"injectables/DataService.html":{}}}],["verbal",{"_index":2118,"title":{},"body":{"license.html":{}}}],["version",{"_index":2030,"title":{},"body":{"license.html":{}}}],["vertical",{"_index":1351,"title":{},"body":{"components/OverviewComponent.html":{}}}],["via",{"_index":2019,"title":{},"body":{"index.html":{}}}],["view",{"_index":507,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["view.description",{"_index":1145,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["view.groupingids.foreach(id",{"_index":1031,"title":{},"body":{"injectables/DataService.html":{}}}],["view.groupings.add(groupingslookup.get(id",{"_index":914,"title":{},"body":{"injectables/DataService.html":{}}}],["view.name",{"_index":1143,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["view_list",{"_index":352,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["viewchild",{"_index":1581,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["viewchild('bottomnavcomponent",{"_index":1827,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["viewchild('content",{"_index":1588,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewchild('sidenav",{"_index":1660,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["viewcolspan",{"_index":1604,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewcomb.default",{"_index":1597,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewcomb.views.foreach(view",{"_index":1598,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewcombination",{"_index":937,"title":{},"body":{"injectables/DataService.html":{}}}],["viewcombinationid",{"_index":838,"title":{},"body":{"injectables/DataService.html":{}}}],["viewcombinationids",{"_index":559,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["viewcombinations",{"_index":504,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{}}}],["viewcombinations.foreach(c",{"_index":919,"title":{},"body":{"injectables/DataService.html":{}}}],["viewid",{"_index":834,"title":{},"body":{"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{}}}],["viewids",{"_index":563,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["viewportscroller",{"_index":400,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["views",{"_index":489,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["views.find(v",{"_index":924,"title":{},"body":{"injectables/DataService.html":{}}}],["views.foreach(v",{"_index":908,"title":{},"body":{"injectables/DataService.html":{}}}],["viewslookup",{"_index":1022,"title":{},"body":{"injectables/DataService.html":{}}}],["viewtoggles",{"_index":1114,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["violet",{"_index":458,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FooterComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["viruses",{"_index":1078,"title":{},"body":{"components/FooterComponent.html":{}}}],["visualize",{"_index":1991,"title":{},"body":{"index.html":{}}}],["void",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["warranties",{"_index":1072,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["warranty",{"_index":2254,"title":{},"body":{"license.html":{}}}],["way",{"_index":344,"title":{},"body":{"components/BannerComponent.html":{}}}],["webkit",{"_index":358,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/OverviewComponent.html":{}}}],["weight",{"_index":367,"title":{},"body":{"components/BannerComponent.html":{}}}],["wherever",{"_index":2214,"title":{},"body":{"license.html":{}}}],["whether",{"_index":511,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["white",{"_index":422,"title":{},"body":{"components/BottomNavComponent.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["whole",{"_index":2103,"title":{},"body":{"license.html":{}}}],["width",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["window.pageyoffset",{"_index":1838,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["window:scroll",{"_index":1821,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["window:scroll(e",{"_index":1824,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["withdossier",{"_index":824,"title":{},"body":{"injectables/DataService.html":{}}}],["within",{"_index":2140,"title":{},"body":{"license.html":{}}}],["without",{"_index":2190,"title":{},"body":{"license.html":{}}}],["word",{"_index":1904,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["work",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["works",{"_index":1060,"title":{},"body":{"components/FaqComponent.html":{},"license.html":{}}}],["worldwide",{"_index":2146,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["writing",{"_index":2135,"title":{},"body":{"license.html":{}}}],["written",{"_index":2119,"title":{},"body":{"license.html":{}}}],["yes",{"_index":1377,"title":{},"body":{"injectables/RandomColorService.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/YesNoPipe.html":{}}}],["yesno",{"_index":691,"title":{},"body":{"components/CriterionComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/YesNoPipe.html":{}}}],["yesnopipe",{"_index":1415,"title":{"pipes/YesNoPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"overview.html":{}}}],["yyyy",{"_index":2334,"title":{},"body":{"license.html":{}}}],["z",{"_index":364,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{}}}],["zone.js",{"_index":1968,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/about/about.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/about/about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-home-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent {\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  About\n  \n    FaaStener is a research prototype which aims to provide support in choosing suitable Function-as-a-Service\n    platforms based on the user-provided requirements.\n    The classification framework behind FaaStener is derived by combining existing academic work and documentation\n    of available Function-as-a-Service platforms.\n    You can find more information about the classification framework, FaaStener, and FaaS cloud service model with\n    additional resources by navigating using the respective buttons below.\n  \n\n\n  \n    \n      menu_book\n       Framework\n       Learn about the classification framework and available\n        criteria.\n      READ MORE\n    \n\n    \n      cloud_done\n      Docs\n       Information on how to work with FaaStener and its features. \n      READ MORE\n    \n\n    \n      library_books\n      Resources\n       Additional resources related to Function-as-a-Service platforms. \n      READ MORE\n    \n\n    \n      question_answer\n      Q&A\n      Answers to some possible questions.\n      READ MORE\n    -->\n  \n\n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n}\n\n.about-section {\n  width: 95%;\n  margin-bottom: .5rem;\n}\n\n.about-section__cards {\n  display: flex;\n  flex-flow: wrap;\n  justify-content: space-evenly;\n}\n\n.about-section__card {\n  margin: .5rem;\n  border-top: .2rem solid #212121;\n  transition: all .3s ease;\n  flex-basis: 18%;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n\n  &:hover {\n    border-top: .2rem solid #b5ca8f;\n    box-shadow: 0 10px 16px rgba(0, 0, 0, 0.2) !important;\n\n    .about-section__card-icon {\n      color: #b5ca8f;\n    }\n  }\n}\n\n.about-section__card-icon {\n  font-size: 3rem !important;\n  transition: all .3s ease;\n  margin-right: 1rem;\n}\n\n.about-section__card-title {\n  padding-top: 1rem;\n  font-size: 1rem;\n}\n\n.about-section__card-description {\n  flex: 1;\n  font-size: .8rem;\n}\n\n@media screen and (min-width: 550px) {\n  .about-section__card-title {\n    font-size: 1.1rem;\n  }\n\n  .about-section__card-description {\n    flex: 1;\n    font-size: .9rem;\n  }\n}\n\n\n@media (min-width: 790px) {\n  .about-section__card-title {\n    font-size: 1.2rem;\n  }\n\n  .about-section__card-description {\n    flex: 1;\n    font-size: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  About      FaaStener is a research prototype which aims to provide support in choosing suitable Function-as-a-Service    platforms based on the user-provided requirements.    The classification framework behind FaaStener is derived by combining existing academic work and documentation    of available Function-as-a-Service platforms.    You can find more information about the classification framework, FaaStener, and FaaS cloud service model with    additional resources by navigating using the respective buttons below.              menu_book       Framework       Learn about the classification framework and available        criteria.      READ MORE              cloud_done      Docs       Information on how to work with FaaStener and its features.       READ MORE              library_books      Resources       Additional resources related to Function-as-a-Service platforms.       READ MORE              question_answer      Q&A      Answers to some possible questions.      READ MORE    -->  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                template\n                \n  \n    \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkRouterEvent\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkRouterEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRouterEvent(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    \n      \n        \n      \n      \n    \n  `\n})\nexport class AppComponent implements OnInit {\n  loading: boolean;\n\n  constructor(private router: Router) {\n    router.events.subscribe((e) => this.checkRouterEvent(e));\n  }\n\n  ngOnInit(): void {\n  }\n\n  private checkRouterEvent(e): void {\n    if (e instanceof NavigationStart) {\n      this.loading = true;\n    }\n\n    if (e instanceof NavigationCancel || e instanceof NavigationEnd || e instanceof NavigationError) {\n      this.loading = false;\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/app-config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                appConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadAppConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    defaultTechCategory\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/app-config.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAppConfig\n                        \n                        \n                    \n                \n            \n            \n                \nloadAppConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/app-config.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            appConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/app-config.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        defaultTechCategory\n                    \n                \n\n                \n                    \n                        getdefaultTechCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/app-config.service.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class AppConfigService {\n  private appConfig: any;\n\n  constructor(private http: HttpClient) {\n  }\n\n  loadAppConfig() {\n    return this.http.get('/assets/config.json')\n      .toPromise()\n      .then(data => {\n        this.appConfig = data;\n      });\n  }\n\n  get defaultTechCategory() {\n    return this.appConfig?.defaultTechCategory;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBannerComponent\n\nBannerComponent\n\nAppModule -->\n\nBannerComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nAppModule -->\n\nOverviewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            BannerComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            OverviewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {AppRoutingModule} from './app-routing.module';\nimport {CoreModule} from './core/core.module';\nimport {SharedModule} from './shared/shared.module';\nimport {HomeComponent} from './home/home.component';\nimport {AboutComponent} from './home/about/about.component';\nimport {BannerComponent} from './home/banner/banner.component';\nimport {OverviewComponent} from './home/overview/overview.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    CoreModule,\n    SharedModule,\n    AppRoutingModule\n  ],\n  declarations: [AppComponent, HomeComponent, AboutComponent, BannerComponent, OverviewComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\nimport {PageNotFoundComponent} from './shared/page-not-found/page-not-found.component';\nimport {HomeComponent} from './home/home.component';\n\nconst appRoutes: Routes = [\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\n  {path: 'home', component: HomeComponent},\n  {path: 'info', loadChildren: () => \"import(`src/app/information/information.module`).then(m => m.InformationModule)\"},\n  {path: 'platforms', loadChildren: () => \"import(`src/app/technologies/technologies.module`).then(m => m.TechnologiesModule)\"},\n  {path: '**', component: PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      {\n        preloadingStrategy: PreloadAllModules\n      }\n    )\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BannerComponent.html":{"url":"components/BannerComponent.html","title":"component - BannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/banner/banner.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-banner\n            \n\n            \n                styleUrls\n                ./banner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./banner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/banner/banner.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-home-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent {\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n  \n    Choose your Function-as-a-Service Platform\n  \n  \n    Explore available Function-as-a-Service platforms and find one suiting your requirements.\n  \n\n\n  \n    \n      check_circle\n       10 reviewed platforms, more on the way \n    \n    \n      check_circle\n       High- and low-level platform selection criteria\n    \n    \n      check_circle\n       Open source and extensible \n    \n  \n\n  \n    \n      search\n      Find a Platform\n    \n    \n    \n      view_list\n      Browse Platforms\n    \n  \n\n\n    \n\n    \n                \n                    ./banner.component.scss\n                \n                @import \"../../_scss/shared\";\n\n.banner {\n  background: url(../../../assets/images/bg-pattern.png) repeat;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: auto;\n  color: #ffffff;\n  z-index: -10;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n}\n\n.banner__heading {\n  margin: 1rem auto 0;\n  padding: 0 1rem;\n  font-size: 1.5rem !important;\n  font-weight: 900;\n  line-height: 1.7rem;\n  text-shadow: 0 4px 4px rgba(0, 0, 0, 0.22);\n}\n\n.banner__description {\n  margin: .8rem auto 0;\n  padding: 0 1rem;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5rem;\n}\n\n.banner__summary {\n  margin: 2rem 0;\n  display: flex;\n  flex-flow: column wrap;\n  align-content: center;\n}\n\n.banner__summary-item {\n  margin-bottom: .5rem;\n  display: flex;\n  align-content: center;\n}\n\n.banner__summary-item-text {\n  padding: .2rem 0 0 .5rem;\n  font-size: .9rem;\n}\n\n.banner__quick-links {\n  margin: 1rem 0;\n  display: flex;\n  justify-content: center;\n}\n\n.banner__quick-links-spacer {\n  margin: 0 .5rem;\n}\n\n.banner-description-list {\n  margin: 0 auto 40px;\n  font-size: 18px;\n}\n\n\n@media (min-width: 790px) {\n  .banner__heading {\n    font-size: 1.8rem !important;\n  }\n\n  .banner__description {\n    font-size: 1.3rem;\n  }\n\n  .banner__summary-item-text {\n    font-size: 1rem;\n  }\n\n}\n\n@media (min-width: 1100px) {\n  .banner__heading {\n    font-size: 2rem !important;\n    margin-top: 3rem;\n  }\n\n  .banner__quick-links {\n    margin: 1rem 0 3rem 0;\n  }\n\n  .banner__summary {\n    margin: 2.5rem 0;\n  }\n\n  .banner__summary-item {\n    margin: 0 2rem .5rem 0;\n    display: flex;\n    align-content: center;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Choose your Function-as-a-Service Platform        Explore available Function-as-a-Service platforms and find one suiting your requirements.              check_circle       10 reviewed platforms, more on the way               check_circle       High- and low-level platform selection criteria              check_circle       Open source and extensible                   search      Find a Platform                  view_list      Browse Platforms      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BottomNavComponent.html":{"url":"components/BottomNavComponent.html","title":"component - BottomNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BottomNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/bottom-nav/bottom-nav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-bottom-nav\n            \n\n            \n                styleUrls\n                ./bottom-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./bottom-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toTop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onScrollToTop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scrollToAnchor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewportScroller: ViewportScroller)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewportScroller\n                                                  \n                                                        \n                                                                        ViewportScroller\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scrollToAnchor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onScrollToTop\n                        \n                        \n                    \n                \n            \n            \n                \nonScrollToTop(platformId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    platformId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toTop\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ViewportScroller} from '@angular/common';\n\n@Component({\n  selector: 'app-bottom-nav',\n  templateUrl: './bottom-nav.component.html',\n  styleUrls: ['./bottom-nav.component.scss']\n})\nexport class BottomNavComponent implements OnInit {\n  toTop = false;\n  @Input() scrollToAnchor: string;\n\n  constructor(private viewportScroller: ViewportScroller) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onScrollToTop(platformId: string) {\n    setTimeout(() => {\n      this.viewportScroller.scrollToAnchor(platformId);\n    }, 50);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    arrow_upward\n    To Top\n  \n\n\n    \n\n    \n                \n                    ./bottom-nav.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  position: sticky;\n  position: -webkit-sticky;\n  bottom: 0;\n  z-index: 20;\n}\n\n.bottom-navbar {\n  flex-shrink: 0;\n  padding: 0;\n  height: 3rem !important;\n  background: white;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-evenly;\n  box-shadow: 0 0 1px rgba(0, 0, 0, .3);\n}\n\n@media screen and (min-width: 510px) {\n  .bottom-navbar {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        arrow_upward    To Top  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BottomNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChildGroupingComponent.html":{"url":"components/ChildGroupingComponent.html","title":"component - ChildGroupingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChildGroupingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/child-grouping/child-grouping.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-child-grouping\n            \n\n            \n                styleUrls\n                ./child-grouping.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./child-grouping.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraCriterionTitle\n                            \n                            \n                                groupings\n                            \n                            \n                                parent\n                            \n                            \n                                renderReviewData\n                            \n                            \n                                reviewData\n                            \n                            \n                                subGroups\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/child-grouping/child-grouping.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraCriterionTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupings\n                    \n                \n                \n                    \n                        Type :         CriteriaGrouping[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parent\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        renderReviewData\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewData\n                    \n                \n                \n                    \n                        Type :         Map\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subGroups\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {CriteriaGrouping, CriterionInstance} from '../interfaces/classification';\n\n@Component({\n  selector: 'app-child-grouping',\n  templateUrl: './child-grouping.component.html',\n  styleUrls: ['./child-grouping.component.scss']\n})\nexport class ChildGroupingComponent {\n  @Input() groupings: CriteriaGrouping[];\n  @Input() subGroups: boolean = false;\n  @Input() parent: string = '';\n  @Input() extraCriterionTitle: string;\n  @Input() renderReviewData = false;\n  @Input() reviewData: Map;\n\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Grouping: {{g.name}}\n      {{parent + ' > ' + g.name}}\n    \n\n\n    \n      \n        \n        \n      \n\n      \n        \n        \n      \n    \n\n\n     ' + g.name\"\n                        [renderReviewData]=\"renderReviewData\"\n                        [reviewData]=\"reviewData\">\n    \n  \n\n\n\n    \n\n    \n                \n                    ./child-grouping.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  @include bg-grey;\n  margin: 0 .2rem;\n}\n\n.child-grouping {\n  margin: 0;\n  height: 100%;\n}\n\n.child-grouping__title {\n  padding: 1rem 1rem .5rem 1rem;\n  font-size: 1.1rem;\n  color: $violet-600;\n}\n\n.child-grouping__path {\n  padding: 0 1rem 1rem 1rem;\n}\n\n.child-grouping__criterion {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-items: center;\n  margin: .5rem;\n}\n\n.child-grouping__criterion--nested {\n  @include bg-grey;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Grouping: {{g.name}}      {{parent + \\' > \\' + g.name}}                                                                         \\' + g.name\"                        [renderReviewData]=\"renderReviewData\"                        [reviewData]=\"reviewData\">      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChildGroupingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationCriterion.html":{"url":"interfaces/ClassificationCriterion.html","title":"interface - ClassificationCriterion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationCriterion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a classification criterion for a to-be-classified software.\nGroupings can also contain other groupings, forming a hierarchy for criteria.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        exampleValues\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Criterion description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exampleValues\n                                    \n                                \n                                \n                                    \n                                        exampleValues:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Example values which an instance of this criterion CriterionInstance can store.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique criterion identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Criterion name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationFramework.html":{"url":"interfaces/ClassificationFramework.html","title":"interface - ClassificationFramework","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationFramework\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a generic classification framework, which comprises one or more ClassificationViewCombination.\nDifferent combinations of classification views can be used to flexibly switch between different review representations for a given TechnologyCategory.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        technologyCategory\n                                \n                                \n                                        viewCombinations\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Framework description (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique framework identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Framework name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category of technologies this framework helps to review.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewCombinations\n                                    \n                                \n                                \n                                    \n                                        viewCombinations:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of ClassificationViewCombination which organize the representation of views comprising different criteria groupings.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationFrameworkResponse.html":{"url":"interfaces/ClassificationFrameworkResponse.html","title":"interface - ClassificationFrameworkResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationFrameworkResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        technologyCategory\n                                \n                                \n                                        viewCombinationIds\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewCombinationIds\n                                    \n                                \n                                \n                                    \n                                        viewCombinationIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationView.html":{"url":"interfaces/ClassificationView.html","title":"interface - ClassificationView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a classification view which comprises one or more CriteriaGrouping.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        groupings\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupings\n                                    \n                                \n                                \n                                    \n                                        groupings:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of CriteriaGrouping which organize the representation of criteria and optional sub-groupings.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique view identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationViewCombination.html":{"url":"interfaces/ClassificationViewCombination.html","title":"interface - ClassificationViewCombination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationViewCombination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a combination of classifications view which comprises one or more ClassificationViews.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        default\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        views\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates whether this combination needs to be used for default UI rendering (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View combination description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique view combination identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View combination name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                    \n                                \n                                \n                                    \n                                        views:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of ClassificationView which organize the representation of criteria groupings.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationViewCombinationResponse.html":{"url":"interfaces/ClassificationViewCombinationResponse.html","title":"interface - ClassificationViewCombinationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationViewCombinationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a server response with available combinations of classification views.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        default\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        viewIds\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewIds\n                                    \n                                \n                                \n                                    \n                                        viewIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationViewResponse.html":{"url":"interfaces/ClassificationViewResponse.html","title":"interface - ClassificationViewResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationViewResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a server response with available classification views.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        groupingIds\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupingIds\n                                    \n                                \n                                \n                                    \n                                        groupingIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAppConfigService\n\nAppConfigService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAppConfigService->CoreModule\n\n\n\n\n\nDataService\n\nDataService\n\nCoreModule -->\n\nDataService->CoreModule\n\n\n\n\n\nLogoLocatorService\n\nLogoLocatorService\n\nCoreModule -->\n\nLogoLocatorService->CoreModule\n\n\n\n\n\nRandomColorService\n\nRandomColorService\n\nCoreModule -->\n\nRandomColorService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            DataService\n                        \n                        \n                            LogoLocatorService\n                        \n                        \n                            RandomColorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {APP_INITIALIZER, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {EnsureModuleLoadedOnceGuard} from './ensure-module-loaded-once.guard';\nimport {DataService} from './services/data.service';\nimport {LogoLocatorService} from './services/logo-locator.service';\nimport {RandomColorService} from './services/random-color.service';\nimport {AppConfigService} from './services/app-config.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  providers: [\n    AppConfigService,\n    DataService,\n    LogoLocatorService,\n    RandomColorService,\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [AppConfigService],\n      useFactory: (appConfigService: AppConfigService) => {\n        return () => {\n          return appConfigService.loadAppConfig();\n        };\n      }\n    }]\n})\nexport class CoreModule extends EnsureModuleLoadedOnceGuard {\n\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    super(parentModule);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaBasedQuery.html":{"url":"interfaces/CriteriaBasedQuery.html","title":"interface - CriteriaBasedQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriteriaBasedQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a filter-based query mapping unique criteria IDs to respective CriterionFilterValues.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        CriterionFilterValue\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interfaces/filtering.ts:119\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a rendered filter block in the UI which may comprise multiple filters with {@link CriterionFilterConfiguration}.\n */\nexport interface RenderedFilterBlock {\n  /**\n   * Name of the filter block\n   */\n  blockName: string;\n\n  /**\n   * Material Icon name\n   */\n  blockIcon?: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  /**\n   * Unique filter configuration identifier\n   */\n  filterId: string;\n\n  /**\n   * Technology category\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * Configuration name\n   */\n  name: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  /**\n   * Unique criterion identifier\n   */\n  criterionId: string;\n\n  /**\n   * Filter name\n   */\n  displayName: string;\n\n  /**\n   * Filter type {@see CriterionFilterType}\n   */\n  filterType: CriterionFilterType;\n\n  /**\n   * Distinct filter values obtained from the review data\n   */\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n */\nexport enum CriterionFilterType {\n  /**\n   * Indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n   */\n  bool = 'bool',\n\n  /**\n   * Indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n   */\n  lte = 'lte',\n\n  /**\n   * Indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n   */\n  gte = 'gte',\n\n  /**\n   * At least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n   */\n  containsOne = 'containsOne',\n\n  /**\n   * At least 1 arbitrary text value must be contained, translates to a toggle in the UI\n   */\n  containsAny = 'containsAny',\n\n  /**\n   * All specified text values must be contained, translates to a group of checkboxes in the UI\n   */\n  containsAll = 'containsAll',\n\n  /**\n   * All specified text values must not be contained, translates to a group of checkboxes in the UI\n   */\n  excludesAll = 'excludesAll'\n}\n\n/**\n * An interface representing a filter-based query mapping unique criteria IDs to respective [CriterionFilterValues]{@link CriterionFilterValue}.\n */\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\n/**\n * An interface representing a filter value used in a user's query.\n */\nexport interface CriterionFilterValue {\n  /**\n   * Filter type\n   */\n  filterType?: CriterionFilterType;\n\n  /**\n   * Actual value, type depends on the filter type and respective UI elements.\n   *\n   * @example\n   * a list of selected checkboxes resulting in a list of string values   *\n   */\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaGrouping.html":{"url":"interfaces/CriteriaGrouping.html","title":"interface - CriteriaGrouping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriteriaGrouping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a group of ClassificationCriterion.\nGroupings can also contain other groupings, forming a hierarchy for criteria.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        criteria\n                                \n                                \n                                            Optional\n                                        groupings\n                                \n                                \n                                        id\n                                \n                                \n                                        locator\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                    \n                                \n                                \n                                    \n                                        criteria:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A set of ClassificationCriterion which describe a particular aspect of the reviewed technology.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupings\n                                    \n                                \n                                \n                                    \n                                        groupings:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A set of Sub-groupings which organize the representation of criteria and optional sub-groupings.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique grouping identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locator\n                                    \n                                \n                                \n                                    \n                                        locator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Grouping locator which can be used, e.g., for custom breadcrumbs generation.\nReserved for future use.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Grouping name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaGroupingResponse.html":{"url":"interfaces/CriteriaGroupingResponse.html","title":"interface - CriteriaGroupingResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriteriaGroupingResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a server response with available criteria groupings.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        criteriaIds\n                                \n                                \n                                        id\n                                \n                                \n                                        locator\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        parentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteriaIds\n                                    \n                                \n                                \n                                    \n                                        criteriaIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locator\n                                    \n                                \n                                \n                                    \n                                        locator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentId\n                                    \n                                \n                                \n                                    \n                                        parentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaReview.html":{"url":"interfaces/CriteriaReview.html","title":"interface - CriteriaReview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriteriaReview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        CriterionInstance\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interfaces/responses.ts:53\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CriterionComponent.html":{"url":"components/CriterionComponent.html","title":"component - CriterionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CriterionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/criterion/criterion.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-criterion\n            \n\n            \n                styleUrls\n                ./criterion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./criterion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                criterion\n                            \n                            \n                                criterionInstance\n                            \n                            \n                                extraTitleText\n                            \n                            \n                                icon\n                            \n                            \n                                reviewMode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/criterion/criterion.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        criterion\n                    \n                \n                \n                    \n                        Type :         ClassificationCriterion\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        criterionInstance\n                    \n                \n                \n                    \n                        Type :         CriterionInstance\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        extraTitleText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text_snippet'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/criterion/criterion.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CriterionValue[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ClassificationCriterion, CriterionInstance, CriterionValue} from '../interfaces/classification';\n\n@Component({\n  selector: 'app-criterion',\n  templateUrl: './criterion.component.html',\n  styleUrls: ['./criterion.component.scss']\n})\nexport class CriterionComponent implements OnInit {\n  @Input() criterion: ClassificationCriterion;\n  @Input() extraTitleText: string;\n  @Input() criterionInstance: CriterionInstance;\n  @Input() reviewMode: boolean;\n  @Input() icon: string = 'text_snippet';\n  title: string;\n  values: CriterionValue[];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.extraTitleText ? this.title = this.extraTitleText + this.criterion.name : this.title = this.criterion.name;\n    if (this.criterionInstance) {\n      this.values = Array.from(this.criterionInstance.values);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{icon}}\n      {{title}}\n    \n  \n   {{criterion.description }}\n  \n     Examples: {{criterion.exampleValues | json }} \n  \n\n\n\n  \n    \n      {{icon}}\n      {{title}}: \n    \n\n\n    \n      \n        N/A\n        block\n      \n    \n\n    \n      \n        {{values[0].value | yesNo }}\n        info\n        \n         [{{i + 1}}] \n      \n    \n  \n\n   1\" class=\"criterion__value-list-block\">\n    \n      \n        {{valueIndex + 1 + \". \" + v.value}}\n        info\n        \n        \n          [{{i + 1}}]\n        \n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./criterion.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  width: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: flex-end;\n}\n\n.criterion__heading-line {\n  width: 100%;\n  margin: .5rem 0;\n  display: flex;\n  flex-flow: row nowrap;\n}\n\n.criterion__title-block {\n  display: flex;\n  flex-flow: row nowrap;\n  align-content: center;\n  justify-content: flex-start;\n  flex: 1 1 min-content;\n}\n\n.criterion__value-block {\n  display: flex;\n  flex-flow: row nowrap;\n  align-content: center;\n  justify-content: flex-end;\n  flex: 1 1 min-content;\n}\n\n.criterion__value-list-item {\n  font-size: 1rem;\n  line-height: 1rem;\n  margin: .5rem 0;\n}\n\n.criterion__value-list-item-divider {\n  margin: .5rem 0;\n}\n\n.criterion__value-list-block {\n  margin-top: .5rem;\n  display: flex;\n  flex-flow: column nowrap;\n  width: 90%;\n  align-self: center;\n}\n\n.criterion__heading-line-block-item {\n  align-self: center;\n  font-size: 1rem;\n  line-height: 1rem;\n}\n\n.criterion__icon {\n  font-size: 1.3rem;\n}\n\n.criterion__reference {\n  font-size: 1rem;\n  text-decoration: none;\n  padding-left: .2rem;\n}\n\n.criterion__title {\n  flex: 1;\n}\n\n.child-grouping__criterion-description {\n  flex: 2 0 100%;\n}\n\n.child-grouping__criterion-examples {\n  flex: 2 0 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{icon}}      {{title}}         {{criterion.description }}       Examples: {{criterion.exampleValues | json }}               {{icon}}      {{title}}:                       N/A        block                            {{values[0].value | yesNo }}        info                 [{{i + 1}}]                1\" class=\"criterion__value-list-block\">                  {{valueIndex + 1 + \". \" + v.value}}        info                          [{{i + 1}}]                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CriterionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CriterionFilterComponent.html":{"url":"components/CriterionFilterComponent.html","title":"component - CriterionFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CriterionFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/criterion-filter/criterion-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-criterion-filter\n            \n\n            \n                styleUrls\n                ./criterion-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./criterion-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterElement\n                            \n                            \n                                    Public\n                                FilterType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearFilter\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateQuery\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         CriterionFilterConfiguration\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateQuery\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearFilter\n                        \n                        \n                    \n                \n            \n            \n                \nclearFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl | FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            FilterType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CriterionFilterType\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {CriteriaBasedQuery, CriterionFilterConfiguration, CriterionFilterType} from '../../shared/interfaces/filtering';\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-criterion-filter',\n  templateUrl: './criterion-filter.component.html',\n  styleUrls: ['./criterion-filter.component.scss']\n})\nexport class CriterionFilterComponent implements OnInit {\n  @Input() filter: CriterionFilterConfiguration;\n  @Output() updateQuery = new EventEmitter();\n\n  filterElement: FormControl | FormGroup;\n  public FilterType = CriterionFilterType;\n\n  constructor(private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    if (this.filter.filterType === this.FilterType.bool || this.filter.filterType === this.FilterType.containsAny || this.filter.filterType === this.FilterType.lte) {\n      this.filterElement = this.fb.control(null);\n    } else {\n      let controls = this.fb.array([]);\n      this.filter.filterValues.forEach(v => controls.push(this.fb.control(false)));\n      this.filterElement = this.fb.group({\n        checkboxes: controls,\n        filterType: this.fb.control(this.filter.filterType)\n      });\n    }\n\n    this.filterElement.valueChanges.subscribe(value => {\n      let obj = {};\n      if (this.filter.filterType === this.FilterType.bool || this.filter.filterType === this.FilterType.containsAny) {\n        obj[this.filter.criterionId] = {\n          filterType: this.filter.filterType,\n          value: value as boolean\n        };\n      } else if (this.filter.filterType === this.FilterType.lte) {\n        obj[this.filter.criterionId] = {\n          filterType: this.filter.filterType,\n          value: value as number\n        };\n      } else {\n        let initialValues = this.filter.filterValues as string[];\n        let selectedStrings = initialValues.filter((x, i) => !!this.filterElement.value.checkboxes[i]);\n\n        obj[this.filter.criterionId] = {\n          filterType: this.filterElement.value.filterType,\n          value: selectedStrings\n        };\n        if (selectedStrings.length === 0) {\n          this.filterElement.markAsPristine();\n        }\n      }\n\n      this.updateQuery.emit(obj);\n    });\n\n\n    function isArrayOfStrings(value: any): boolean {\n      return Array.isArray(value) && value.every(item => typeof item === 'string');\n    }\n\n  }\n\n  clearFilter() {\n    this.filterElement.reset();\n    if (\n      this.filter.filterType === this.FilterType.containsAll ||\n      this.filter.filterType === this.FilterType.containsOne ||\n      this.filter.filterType === this.FilterType.excludesAll\n    ) {\n      this.filterElement.get('filterType').setValue(this.FilterType.containsOne);\n    }\n    this.filterElement.markAsPristine();\n  }\n}\n\n    \n\n    \n        \n  \n    {{filter.displayName}}\n  \n  \n    \n      \n        \n          Available\n        \n      \n      \n        \n          Not Available\n        \n      \n    \n  \n\n\n\n  \n    {{filter.displayName}}\n  \n  \n    \n    \n  \n\n\n\n  \n    {{filter.displayName}}\n  \n  \n    \n      \n        \n          {{value}}\n        \n      \n\n      \n        OR\n        AND\n        NOT\n      \n    \n  \n\n\n\n\n  Clear Filter\n\n\n\n    \n\n    \n                \n                    ./criterion-filter.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.filter-block__filter-values {\n  @include list-style-none;\n  padding-left: .2rem;\n}\n\n.criterion-block {\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.criterion-block__filter-name {\n  margin-bottom: 0;\n}\n\n.criterion-block__filter-body {\n  margin-top: .3rem;\n}\n\n.filter-block__filter-type {\n  height: 2.2rem;\n  margin: 0 auto .7rem;\n  align-items: center;\n}\n\n.clear-filter-button {\n  align-self: stretch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{filter.displayName}}                                Available                                      Not Available                          {{filter.displayName}}                    {{filter.displayName}}                                {{value}}                            OR        AND        NOT              Clear Filter'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CriterionFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionFilterConfiguration.html":{"url":"interfaces/CriterionFilterConfiguration.html","title":"interface - CriterionFilterConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriterionFilterConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a filter configuration for a given ClassificationCriterion.\nThis configuration defines the desired filtering behavior.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        criterionId\n                                \n                                \n                                        displayName\n                                \n                                \n                                        filterType\n                                \n                                \n                                            Optional\n                                        filterValues\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criterionId\n                                    \n                                \n                                \n                                    \n                                        criterionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique criterion identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Filter name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterType\n                                    \n                                \n                                \n                                    \n                                        filterType:         CriterionFilterType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Filter type {@see CriterionFilterType}\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterValues\n                                    \n                                \n                                \n                                    \n                                        filterValues:      | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Distinct filter values obtained from the review data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a rendered filter block in the UI which may comprise multiple filters with {@link CriterionFilterConfiguration}.\n */\nexport interface RenderedFilterBlock {\n  /**\n   * Name of the filter block\n   */\n  blockName: string;\n\n  /**\n   * Material Icon name\n   */\n  blockIcon?: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  /**\n   * Unique filter configuration identifier\n   */\n  filterId: string;\n\n  /**\n   * Technology category\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * Configuration name\n   */\n  name: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  /**\n   * Unique criterion identifier\n   */\n  criterionId: string;\n\n  /**\n   * Filter name\n   */\n  displayName: string;\n\n  /**\n   * Filter type {@see CriterionFilterType}\n   */\n  filterType: CriterionFilterType;\n\n  /**\n   * Distinct filter values obtained from the review data\n   */\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n */\nexport enum CriterionFilterType {\n  /**\n   * Indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n   */\n  bool = 'bool',\n\n  /**\n   * Indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n   */\n  lte = 'lte',\n\n  /**\n   * Indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n   */\n  gte = 'gte',\n\n  /**\n   * At least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n   */\n  containsOne = 'containsOne',\n\n  /**\n   * At least 1 arbitrary text value must be contained, translates to a toggle in the UI\n   */\n  containsAny = 'containsAny',\n\n  /**\n   * All specified text values must be contained, translates to a group of checkboxes in the UI\n   */\n  containsAll = 'containsAll',\n\n  /**\n   * All specified text values must not be contained, translates to a group of checkboxes in the UI\n   */\n  excludesAll = 'excludesAll'\n}\n\n/**\n * An interface representing a filter-based query mapping unique criteria IDs to respective [CriterionFilterValues]{@link CriterionFilterValue}.\n */\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\n/**\n * An interface representing a filter value used in a user's query.\n */\nexport interface CriterionFilterValue {\n  /**\n   * Filter type\n   */\n  filterType?: CriterionFilterType;\n\n  /**\n   * Actual value, type depends on the filter type and respective UI elements.\n   *\n   * @example\n   * a list of selected checkboxes resulting in a list of string values   *\n   */\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionFilterValue.html":{"url":"interfaces/CriterionFilterValue.html","title":"interface - CriterionFilterValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriterionFilterValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a filter value used in a user's query.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        filterType\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterType\n                                    \n                                \n                                \n                                    \n                                        filterType:         CriterionFilterType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Filter type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     boolean | number | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | number | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Actual value, type depends on the filter type and respective UI elements.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a rendered filter block in the UI which may comprise multiple filters with {@link CriterionFilterConfiguration}.\n */\nexport interface RenderedFilterBlock {\n  /**\n   * Name of the filter block\n   */\n  blockName: string;\n\n  /**\n   * Material Icon name\n   */\n  blockIcon?: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  /**\n   * Unique filter configuration identifier\n   */\n  filterId: string;\n\n  /**\n   * Technology category\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * Configuration name\n   */\n  name: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  /**\n   * Unique criterion identifier\n   */\n  criterionId: string;\n\n  /**\n   * Filter name\n   */\n  displayName: string;\n\n  /**\n   * Filter type {@see CriterionFilterType}\n   */\n  filterType: CriterionFilterType;\n\n  /**\n   * Distinct filter values obtained from the review data\n   */\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n */\nexport enum CriterionFilterType {\n  /**\n   * Indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n   */\n  bool = 'bool',\n\n  /**\n   * Indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n   */\n  lte = 'lte',\n\n  /**\n   * Indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n   */\n  gte = 'gte',\n\n  /**\n   * At least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n   */\n  containsOne = 'containsOne',\n\n  /**\n   * At least 1 arbitrary text value must be contained, translates to a toggle in the UI\n   */\n  containsAny = 'containsAny',\n\n  /**\n   * All specified text values must be contained, translates to a group of checkboxes in the UI\n   */\n  containsAll = 'containsAll',\n\n  /**\n   * All specified text values must not be contained, translates to a group of checkboxes in the UI\n   */\n  excludesAll = 'excludesAll'\n}\n\n/**\n * An interface representing a filter-based query mapping unique criteria IDs to respective [CriterionFilterValues]{@link CriterionFilterValue}.\n */\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\n/**\n * An interface representing a filter value used in a user's query.\n */\nexport interface CriterionFilterValue {\n  /**\n   * Filter type\n   */\n  filterType?: CriterionFilterType;\n\n  /**\n   * Actual value, type depends on the filter type and respective UI elements.\n   *\n   * @example\n   * a list of selected checkboxes resulting in a list of string values   *\n   */\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionInstance.html":{"url":"interfaces/CriterionInstance.html","title":"interface - CriterionInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriterionInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        criterionId\n                                \n                                \n                                            Optional\n                                        reviewDate\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criterionId\n                                    \n                                \n                                \n                                    \n                                        criterionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique ClassificationCriterion identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewDate\n                                    \n                                \n                                \n                                    \n                                        reviewDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A date review was conducted (optional).\nReserved for future use.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of CriterionValue which store the criterion-specific review data for the reviewed technology.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionValue.html":{"url":"interfaces/CriterionValue.html","title":"interface - CriterionValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriterionValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a generic data value for the given CriterionInstance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        comment\n                                \n                                \n                                            Optional\n                                        references\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An additional note describing the review value (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                    \n                                \n                                \n                                    \n                                        references:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A list of references, e.g., to official documentation, confirming the review value (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string | number | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number | boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A value of primitive type representing criterion-specific review data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildGroupings\n                            \n                            \n                                getCriteria\n                            \n                            \n                                getDefaultViewCombinationData\n                            \n                            \n                                getDossier\n                            \n                            \n                                getDossiersOfCategory\n                            \n                            \n                                getFrameworkForCategory\n                            \n                            \n                                getFrameworkForTechnologyType\n                            \n                            \n                                getFrameworkGroupingsData\n                            \n                            \n                                getFrameworks\n                            \n                            \n                                getGroupings\n                            \n                            \n                                getInfoResources\n                            \n                            \n                                getTechnologies\n                            \n                            \n                                getTechnologiesOfCategory\n                            \n                            \n                                getTechnology\n                            \n                            \n                                getTechnologyFilter\n                            \n                            \n                                getViewCombinations\n                            \n                            \n                                getViewGroupingsData\n                            \n                            \n                                getViews\n                            \n                            \n                                getViewsData\n                            \n                            \n                                    Private\n                                    Static\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logoLocator: LogoLocatorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/data.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logoLocator\n                                                  \n                                                        \n                                                                        LogoLocatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildGroupings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildGroupings(data: CriteriaGroupingResponse[], criteria: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:413\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            CriteriaGroupingResponse[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    criteria\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CriteriaGrouping[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCriteria\n                        \n                        \n                    \n                \n            \n            \n                \ngetCriteria()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDefaultViewCombinationData\n                        \n                        \n                    \n                \n            \n            \n                \ngetDefaultViewCombinationData(frameworkId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:345\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    frameworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDossier\n                        \n                        \n                    \n                \n            \n            \n                \ngetDossier(technologyId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:267\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    technologyId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDossiersOfCategory\n                        \n                        \n                    \n                \n            \n            \n                \ngetDossiersOfCategory(category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFrameworkForCategory\n                        \n                        \n                    \n                \n            \n            \n                \ngetFrameworkForCategory(techCategory: TechnologyCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    techCategory\n                                    \n                                                TechnologyCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFrameworkForTechnologyType\n                        \n                        \n                    \n                \n            \n            \n                \ngetFrameworkForTechnologyType(category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFrameworkGroupingsData\n                        \n                        \n                    \n                \n            \n            \n                \ngetFrameworkGroupingsData(frameworkId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:333\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    frameworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFrameworks\n                        \n                        \n                    \n                \n            \n            \n                \ngetFrameworks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGroupings\n                        \n                        \n                    \n                \n            \n            \n                \ngetGroupings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInfoResources\n                        \n                        \n                    \n                \n            \n            \n                \ngetInfoResources()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:405\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTechnologies\n                        \n                        \n                    \n                \n            \n            \n                \ngetTechnologies(withDossier)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    withDossier\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTechnologiesOfCategory\n                        \n                        \n                    \n                \n            \n            \n                \ngetTechnologiesOfCategory(category: string, withDossier)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    withDossier\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTechnology\n                        \n                        \n                    \n                \n            \n            \n                \ngetTechnology(id: string, withDossier)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    withDossier\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTechnologyFilter\n                        \n                        \n                    \n                \n            \n            \n                \ngetTechnologyFilter(category: TechnologyCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                TechnologyCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getViewCombinations\n                        \n                        \n                    \n                \n            \n            \n                \ngetViewCombinations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getViewGroupingsData\n                        \n                        \n                    \n                \n            \n            \n                \ngetViewGroupingsData(viewId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:386\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getViews\n                        \n                        \n                    \n                \n            \n            \n                \ngetViews()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getViewsData\n                        \n                        \n                    \n                \n            \n            \n                \ngetViewsData(viewCombinationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:367\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewCombinationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(err: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {combineLatest, Observable, throwError} from 'rxjs';\nimport {catchError, map, mergeAll, mergeMap, shareReplay, take, toArray} from 'rxjs/operators';\nimport {LogoLocatorService} from './logo-locator.service';\nimport {\n  ClassificationCriterion,\n  ClassificationFramework,\n  ClassificationView,\n  ClassificationViewCombination,\n  CriteriaGrouping\n} from '../../shared/interfaces/classification';\nimport {Technology, TechnologyCategory, TechnologyDossier} from '../../shared/interfaces/technology';\nimport {\n  ClassificationFrameworkResponse,\n  ClassificationViewCombinationResponse,\n  ClassificationViewResponse,\n  CriteriaGroupingResponse, TechnologyDossierResponse\n} from '../../shared/interfaces/responses';\nimport {CriterionFilterType, TechnologyFilterConfiguration} from '../../shared/interfaces/filtering';\nimport {InfoResourceSection} from '../../shared/interfaces/info';\n\nconst criteriaPath = '/assets/data/framework/criteria.json';\nconst criteriaGroupingsPath = '/assets/data/framework/groupings.json';\nconst frameworkViewsPath = '/assets/data/framework/views.json';\nconst frameworkViewCombinationsPath = '/assets/data/framework/view-combinations.json';\nconst frameworksPath = '/assets/data/framework/frameworks.json';\nconst supportedPlatformsPath = '/assets/data/platforms/platforms.json';\nconst dossiersPath: string = '/assets/data/platforms/';\nconst filterConfigurationsPath = '/assets/data/framework/filters.json';\nconst infoResourcesPath = '/assets/data/info/resources.json';\n\n@Injectable()\nexport class DataService {\n\n  constructor(private http: HttpClient, private logoLocator: LogoLocatorService) {\n  }\n\n  private static handleError(err: any): Observable {\n    let errorMessage: string;\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      errorMessage = `Backend returned code ${err.status}: ${err.body?.error}`;\n    }\n    console.error(err);\n    return throwError(errorMessage);\n  }\n\n  getCriteria(): Observable {\n    return this.http.get(criteriaPath)\n      .pipe(\n        catchError(DataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  getGroupings(): Observable {\n    return combineLatest([\n      this.getCriteria(),\n      this.http.get(criteriaGroupingsPath)\n    ]).pipe(\n      map(([criteria, groupings]) => {\n        const criteriaLookup = new Map(criteria.map(c => [c.id, c] as [string, ClassificationCriterion]));\n        return this.buildGroupings(groupings, criteriaLookup);\n      }),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViews(): Observable {\n    return combineLatest([\n      this.getGroupings(),\n      this.http.get(frameworkViewsPath)\n    ]).pipe(\n      map(([groupings, views]) => {\n          const groupingsLookup = new Map(groupings.map(c => [c.id, c] as [string, CriteriaGrouping]));\n          let result: ClassificationView[] = [];\n\n          views.forEach(v => {\n            let view: ClassificationView = {\n              id: v.id,\n              name: v.name,\n              description: v.description,\n              groupings: new Set()\n            };\n\n            v.groupingIds.forEach(id => {\n              if (groupingsLookup.has(id)) {\n                view.groupings.add(groupingsLookup.get(id));\n              }\n            });\n            result.push(view);\n          });\n\n          return result;\n        }\n      ),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViewCombinations(): Observable {\n    return combineLatest([\n      this.getViews(),\n      this.http.get(frameworkViewCombinationsPath)\n    ]).pipe(\n      map(([views, viewCombinations]) => {\n          let result: ClassificationViewCombination[] = [];\n          viewCombinations.forEach(c => {\n            let combination: ClassificationViewCombination = {\n              id: c.id,\n              name: c.name,\n              description: c.description,\n              default: c.default,\n              views: new Set()\n            };\n\n            c.viewIds.forEach(id => {\n              let view = views.find(v => id === v.id);\n              if (view) {\n                combination.views.add(view);\n              }\n            });\n            result.push(combination);\n          });\n\n          return result;\n        }\n      ),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getFrameworks(): Observable {\n    return combineLatest([\n      this.getViewCombinations(),\n      this.http.get(frameworksPath)\n    ]).pipe(\n      map(([combs, frameworks]) => {\n        let result: ClassificationFramework[] = [];\n        frameworks.forEach(f => {\n          let framework: ClassificationFramework = {\n            id: f.id,\n            technologyCategory: f.technologyCategory,\n            name: f.name,\n            description: f.description,\n            viewCombinations: new Set()\n          };\n\n          f.viewCombinationIds.forEach(id => {\n            let viewCombination = combs.find(v => id === v.id);\n            if (viewCombination) {\n              framework.viewCombinations.add(viewCombination);\n            }\n          });\n          result.push(framework);\n        });\n\n        return result;\n      }),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getFrameworkForCategory(techCategory: TechnologyCategory): Observable {\n    return combineLatest([\n      this.getViewCombinations(),\n      this.http.get(frameworksPath)\n    ]).pipe(\n      map(([combs, frameworks]) => {\n        let result: ClassificationFramework;\n        let f = frameworks.find(f => f.technologyCategory === techCategory);\n\n        result = {\n          id: f.id,\n          technologyCategory: f.technologyCategory,\n          name: f.name,\n          description: f.description,\n          viewCombinations: new Set()\n        };\n\n        f.viewCombinationIds.forEach(id => {\n          let viewCombination = combs.find(v => id === v.id);\n          if (viewCombination) {\n            result.viewCombinations.add(viewCombination);\n          }\n        });\n\n        return result;\n      }),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getFrameworkForTechnologyType(category: string): Observable {\n    return this.getFrameworks().pipe(\n      map((f) => f.find(item => item.technologyCategory.toLocaleLowerCase() === category.toLocaleLowerCase())),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getTechnologies(withDossier = false): Observable {\n    return this.http.get(supportedPlatformsPath)\n      .pipe(\n        map((items) =>\n          items.map(\n            item => {\n              let result: Technology = {\n                ...item,\n                logoLocation: this.logoLocator.getLogoPath(item.logoLocator)\n              };\n              if (withDossier) {\n                this.getDossier(item.id).pipe(take(1)).subscribe({\n                  next: value => value ? result.dossier = value : false,\n                  error: catchError\n                });\n              }\n              return result;\n            }\n          )\n        ),\n        shareReplay(1),\n        catchError(DataService.handleError)\n      );\n  }\n\n  getTechnologiesOfCategory(category: string, withDossier = false): Observable {\n    return this.getTechnologies(withDossier).pipe(\n      map((techs) =>\n        techs.filter(t => t.category.toLocaleLowerCase() === category.toLocaleLowerCase())\n      ),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getTechnology(id: string, withDossier = false): Observable {\n    return combineLatest([\n      this.http.get(supportedPlatformsPath),\n      this.getDossier(id)\n    ]).pipe(\n      map(([items, dossier]) => {\n          let technology: Technology = items.find(item => item.id === id);\n          let result: Technology = {\n            ...technology,\n            logoLocation: this.logoLocator.getLogoPath(technology.logoLocator)\n          };\n          if (withDossier) {\n            result.dossier = dossier;\n          }\n          return result;\n        }\n      ),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n\n  }\n\n  getDossier(technologyId: string): Observable {\n    const dossierPath = dossiersPath.concat(technologyId, '.json');\n    return this.http.get(dossierPath)\n      .pipe(\n        map( (res) => {\n          return {\n            platformId: technologyId,\n            reviewDate: res.reviewDate,\n            reviewedCriteria: new Map(Object.entries(res.reviewedCriteria))\n          } as TechnologyDossier;\n        }),\n        catchError(DataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  getDossiersOfCategory(category: string): Observable {\n    return this.getTechnologiesOfCategory(category).pipe(\n      mergeMap((techs) => techs),\n      mergeMap((t) => this.getDossier(t.id)),\n      toArray(),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getTechnologyFilter(category: TechnologyCategory): Observable {\n    return combineLatest([\n      this.http.get(filterConfigurationsPath).pipe(\n        map((conf) => conf.find(c => c.technologyCategory.toLocaleLowerCase() === category.toLocaleLowerCase())),\n      ),\n      this.getDossiersOfCategory(category)\n    ]).pipe(\n      map(([filter, dossiers]) => {\n          const criteriaValues = new Map>();\n          dossiers.forEach(d => {\n\n            d.reviewedCriteria.forEach((criterionInstance, key) => {\n              const distinctValues = new Set();\n              const previous: Set = criteriaValues.get(key);\n\n              criterionInstance.values.forEach(v => distinctValues.add(v.value));\n              if (previous) {\n                criteriaValues.set(key, new Set([...previous, ...distinctValues]));\n              } else {\n                criteriaValues.set(key, distinctValues);\n              }\n            });\n          });\n\n          filter.filters.forEach((f) => {\n            if (f.filterType === CriterionFilterType.lte) {\n              const range: number[] = Array.from(criteriaValues.get(f.criterionId)).sort(((a, b) => a > b ? 1 : -1));\n              f.filterValues = [range[0], range[range.length - 1]];\n            } else if (f.filterType !== CriterionFilterType.bool) {\n              f.filterValues = Array.from(criteriaValues.get(f.criterionId).values());\n            }\n          });\n          return filter;\n        }\n      ),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getFrameworkGroupingsData(frameworkId: string): Observable {\n    return this.getDefaultViewCombinationData(frameworkId).pipe(\n      mergeMap((vc) => this.getViewsData(vc.id)),\n      mergeAll(),\n      mergeMap(v => this.getViewGroupingsData(v.id)),\n      mergeAll(),\n      toArray(),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getDefaultViewCombinationData(frameworkId: string): Observable {\n    return combineLatest([\n      this.http.get(frameworkViewCombinationsPath),\n      this.http.get(frameworksPath),\n    ]).pipe(\n      map(([vcs, fws]) => {\n        const vcLookup = new Map(vcs.map(vc => [vc.id, vc] as [string, ClassificationViewCombinationResponse]));\n        let framework = fws.find(f => f.id === frameworkId);\n        if (framework) {\n          for (let id of framework.viewCombinationIds) {\n            let temp = vcLookup.get(id);\n            if (temp && temp.default) {\n              return temp;\n            }\n          }\n        }\n      }),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViewsData(viewCombinationId: string): Observable {\n    return combineLatest([\n      this.http.get(frameworkViewCombinationsPath),\n      this.http.get(frameworkViewsPath)\n    ]).pipe(\n      map(([combs, views]) => {\n        const viewsLookup = new Map(views.map(v => [v.id, v] as [string, ClassificationViewResponse]));\n        let result = [];\n        let vc = combs.find(c => c.id === viewCombinationId);\n        if (vc) {\n          vc.viewIds.forEach(id => result.push(viewsLookup.get(id)));\n        }\n        return result;\n      }),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViewGroupingsData(viewId: string): Observable {\n    return combineLatest([\n      this.http.get(frameworkViewsPath),\n      this.http.get(criteriaGroupingsPath)])\n      .pipe(\n        map(([views, groupings]) => {\n          const groupingsLookup = new Map(groupings.map(g => [g.id, g] as [string, CriteriaGroupingResponse]));\n          let result = [];\n          let view = views.find(v => v.id === viewId);\n          if (view) {\n            view.groupingIds.forEach(id => result.push(groupingsLookup.get(id)));\n          }\n          return result;\n        }),\n        catchError(DataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  getInfoResources(): Observable {\n    return this.http.get(infoResourcesPath)\n      .pipe(\n        catchError(DataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  private buildGroupings(data: CriteriaGroupingResponse[], criteria: Map): CriteriaGrouping[] {\n    const result: CriteriaGrouping[] = [];\n    const lookup: Map = new Map();\n\n    data.forEach(g => {\n        let relatedCriteria: Set = new Set();\n        if (g.criteriaIds) {\n          g.criteriaIds.forEach(id => criteria.has(id) ? relatedCriteria.add(criteria.get(id)) : false);\n        }\n        lookup.set(g.id, ({\n          id: g.id,\n          name: g.name,\n          locator: g.locator,\n          groupings: new Set(),\n          criteria: relatedCriteria\n        } as CriteriaGrouping));\n      }\n    );\n\n    data.forEach(g => {\n      if (g.parentId) {\n        lookup.get(g.parentId).groupings.add(lookup.get(g.id));\n      } else {\n        result.push(lookup.get(g.id));\n      }\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnsureModuleLoadedOnceGuard.html":{"url":"classes/EnsureModuleLoadedOnceGuard.html","title":"class - EnsureModuleLoadedOnceGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnsureModuleLoadedOnceGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ensure-module-loaded-once.guard.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(targetModule: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/ensure-module-loaded-once.guard.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        targetModule\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EnsureModuleLoadedOnceGuard {\n  constructor(targetModule: any) {\n    if (targetModule) {\n      throw new Error(`${targetModule.constructor.name} has already been loaded. Import this module in the AppModule only.`);\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FaqComponent.html":{"url":"components/FaqComponent.html","title":"component - FaqComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FaqComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/faq/faq.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-faq\n            \n\n            \n                styleUrls\n                ./faq.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./faq.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/information/faq/faq.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/faq/faq.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.scss']\n})\nexport class FaqComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        faq works!\n\n    \n\n    \n                \n                    ./faq.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'faq works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FaqComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    © 2021 FaaStener\n    \n      This SOFTWARE PRODUCT is provided \"as is\" and \"with all faults.\"\n      THE PROVIDER makes no representations or warranties of any kind concerning the safety, suitability, lack\n      of viruses, inaccuracies, typographical errors, or other harmful components of this SOFTWARE PRODUCT.\n    \n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                @import \"../../_scss/global/variables\";\n\n.main-grid__footer {\n  height: 100%;\n  background-color: $violet-500;\n  color: #ffffff;\n  display: flex;\n  justify-content: center;\n}\n\n.footer__section {\n  margin: 0;\n  padding: 1em;\n  display: flex;\n  flex-direction: column;\n  justify-items: center;\n  align-items: center;\n}\n\n.footer__heading {\n  padding: 0 .4em .5rem .4rem;\n  border-bottom: .2rem solid $pink-900;\n}\n\n.section_disclaimer {\n  max-width: 57rem;\n}\n\n@media screen and (min-width: 1100px) {\n  .footer__section {\n    max-width: 1200px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      © 2021 FaaStener          This SOFTWARE PRODUCT is provided \"as is\" and \"with all faults.\"      THE PROVIDER makes no representations or warranties of any kind concerning the safety, suitability, lack      of viruses, inaccuracies, typographical errors, or other harmful components of this SOFTWARE PRODUCT.      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameworkComponent.html":{"url":"components/FrameworkComponent.html","title":"component - FrameworkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FrameworkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/framework/framework.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-framework\n            \n\n            \n                styleUrls\n                ./framework.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./framework.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                framework\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/framework/framework.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/framework/framework.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            framework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassificationFramework\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information/framework/framework.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ClassificationFramework} from '../../shared/interfaces/classification';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-framework',\n  templateUrl: './framework.component.html',\n  styleUrls: ['./framework.component.scss']\n})\nexport class FrameworkComponent implements OnInit {\n  framework: ClassificationFramework;\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.framework = data['resolvedData'];\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./framework.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FrameworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameworkRendererComponent.html":{"url":"components/FrameworkRendererComponent.html","title":"component - FrameworkRendererComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FrameworkRendererComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/framework-renderer/framework-renderer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-framework-renderer\n            \n\n            \n                styleUrls\n                ./framework-renderer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./framework-renderer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedGrouping\n                            \n                            \n                                viewToggles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onGroupingSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraCriterionTitle\n                            \n                            \n                                framework\n                            \n                            \n                                includeFrameworkInfo\n                            \n                            \n                                renderReviewData\n                            \n                            \n                                reviewData\n                            \n                            \n                                selectedViewCombination\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, viewportScroller: ViewportScroller)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewportScroller\n                                                  \n                                                        \n                                                                        ViewportScroller\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraCriterionTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        framework\n                    \n                \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        includeFrameworkInfo\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        renderReviewData\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewData\n                    \n                \n                \n                    \n                        Type :         Map\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedViewCombination\n                    \n                \n                \n                    \n                        Type :         ClassificationViewCombination\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onGroupingSelected\n                        \n                        \n                    \n                \n            \n            \n                \nonGroupingSelected(viewId: string, grouping: CriteriaGrouping)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    grouping\n                                    \n                                                CriteriaGrouping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedGrouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewToggles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ClassificationFramework, ClassificationViewCombination, CriteriaGrouping, CriterionInstance} from '../interfaces/classification';\nimport {ViewportScroller} from '@angular/common';\n\n@Component({\n  selector: 'app-framework-renderer',\n  templateUrl: './framework-renderer.component.html',\n  styleUrls: ['./framework-renderer.component.scss']\n})\nexport class FrameworkRendererComponent implements OnInit {\n  @Input() framework: ClassificationFramework;\n  @Input() includeFrameworkInfo = true;\n  @Input() selectedViewCombination: ClassificationViewCombination;\n  @Input() extraCriterionTitle: string;\n  @Input() renderReviewData: boolean = false;\n  @Input() reviewData: Map;\n\n  viewToggles: Map = new Map();\n  selectedGrouping: Map = new Map();\n\n  constructor(private route: ActivatedRoute, private viewportScroller: ViewportScroller) {\n  }\n\n  ngOnInit(): void {\n    if (!this.selectedViewCombination) {\n      for (let vc of this.framework.viewCombinations) {\n        if (vc.default) {\n          this.selectedViewCombination = vc;\n          break;\n        }\n      }\n    }\n    // Initialize default view configuration\n    this.selectedViewCombination.views.forEach(v => this.viewToggles.set(v.id, false));\n  }\n\n  onGroupingSelected(viewId: string, grouping: CriteriaGrouping) {\n    if (this.selectedGrouping.get(viewId)?.id === grouping.id) {\n      this.selectedGrouping.set(viewId, undefined);\n    } else {\n      this.selectedGrouping.set(viewId, grouping);\n      setTimeout(() => {\n        this.viewportScroller.scrollToAnchor(grouping.id);\n      }, 50);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{framework.name}}\n    {{framework.description}}\n  \n\n  \n    \n      \n        {{view.name}}\n        \n        Flat View\n        \n      \n      {{view.description}}\n\n      \n        \n          \n          \n          \n            \n              {{g.name}}\n            \n          \n        \n      \n\n      \n        \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./framework-renderer.component.scss\n                \n                @import \"../../_scss/shared\";\n\n.framework {\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 0 1rem;\n  align-items: center;\n  height: 100%;\n}\n\n.framework__info {\n}\n\n.framework__root-groupings {\n  display: flex;\n  flex-flow: row wrap;\n}\n\n.framework__grouping-details {\n  order: 2;\n  flex: 100% 0;\n  padding-bottom: 1rem;\n}\n\n.framework__root-grouping-card {\n  margin: .2rem;\n  background: $gray-card;\n  cursor: pointer;\n  flex: 1 1 min-content;\n  order: 3;\n\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: $salad-600;\n  }\n}\n\n\n.framework__view {\n  margin: 1.5rem 0;\n  display: flex;\n  flex-flow: column nowrap;\n  width: 100%;\n}\n\n.framework__view-config-row {\n  display: flex;\n  align-items: center;\n}\n\n.framework__view-title {\n  flex: 1 1 auto;\n}\n\n.framework__view-toggle {\n  flex: 0 0 auto;\n  font-size: .8rem;\n}\n\n.framework__root-grouping-card--first {\n  order: 1;\n  background: $salad-600;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{framework.name}}    {{framework.description}}                      {{view.name}}                Flat View                    {{view.description}}                                                                      {{g.name}}                                                                      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FrameworkRendererComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/FrameworkResolver.html":{"url":"guards/FrameworkResolver.html","title":"guard - FrameworkResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    FrameworkResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/information/resolvers/framework-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, config: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/resolvers/framework-resolver.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resolvers/framework-resolver.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {ClassificationFramework} from '../../shared/interfaces/classification';\nimport {Observable} from 'rxjs';\nimport {DataService} from '../../core/services/data.service';\nimport {AppConfigService} from '../../core/services/app-config.service';\n\n@Injectable()\nexport class FrameworkResolver implements Resolve {\n\n  constructor(private dataService: DataService, private config: AppConfigService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    let defaultCategory = this.config.defaultTechCategory;\n    return this.dataService.getFrameworkForCategory(defaultCategory);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/header/header.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n  \n    \n      menu\n      \n       Home \n       About \n       Platforms \n       Contact Us \n      \n      \n    \n\n    \n      \n         Home \n         About \n         Platforms \n         Contact Us \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  z-index: 10;\n  background: #fff;\n  box-shadow: 0 0 1px rgba(0, 0, 0, .11), 0 1px 2px rgba(0, 0, 0, .25);\n}\n\n.header__toolbar {\n  margin: 0;\n  height: 4em;\n  display: flex;\n  justify-content: center;\n}\n\n.header__menu {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  margin: 0;\n  padding: 0 !important;\n  justify-content: space-around;\n  align-items: center;\n  @include list-style-none;\n}\n\n.header__spacer {\n  display: none;\n  flex-grow: 2;\n}\n\n.header__logo {\n  width: 100%;\n  height: auto;\n  max-width: 5.5rem;\n  padding-top: .5rem;\n  content: url(\"../../../assets/images/logo-h.png\");\n}\n\n.menu__link {\n  display: block !important;\n  height: 100% !important;\n  width: 100% !important;\n  padding-top: 2em !important;\n}\n\n.menu__text {\n  display: none;\n}\n\n.menu__link, .menu__link-icon {\n  @include nav_item;\n  outline: 0;\n}\n\n.menu__link--active {\n  color: $pink-main !important;\n}\n\n@media screen and (min-width: 510px) {\n  .header__toolbar {\n    height: 6em;\n  }\n\n  .menu__icon {\n    display: none;\n  }\n\n  .header__logo {\n    content: url(\"../../../assets/images/logo-v.png\");\n    max-width: 3rem;\n  }\n\n  .menu__text {\n    display: flex;\n    height: 100%;\n    align-items: center;\n  }\n\n  .menu__link-icon {\n    margin-top: .55em !important;\n  }\n}\n\n@media screen and (min-width: 620px) {\n  .menu__link {\n    font-size: .95rem;\n  }\n\n  .header__spacer {\n    display: list-item;\n  }\n\n  .header__logo {\n    margin: 0 1rem 0 2rem;\n  }\n\n  .menu__link-icon {\n    margin-right: 2rem !important;\n  }\n}\n\n@media screen and (min-width: 1100px) {\n  .header__menu {\n    max-width: 1200px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu             Home        About        Platforms        Contact Us                                    Home          About          Platforms          Contact Us             '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                supportedPlatforms$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            supportedPlatforms$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.dataService.getTechnologies()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {DataService} from '../core/services/data.service';\n\n@Component({\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n  supportedPlatforms$ = this.dataService.getTechnologies();\n\n  constructor(private dataService: DataService) {\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                :host {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoResource.html":{"url":"interfaces/InfoResource.html","title":"interface - InfoResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InfoResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/info.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing an information resource related to a specific technology category.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        reference\n                                \n                                \n                                        resource\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference\n                                    \n                                \n                                \n                                    \n                                        reference:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource\n                                    \n                                \n                                \n                                    \n                                        resource:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface InfoResourceSection {\n  id: string;\n  title: string;\n  description: string;\n  technologyCategory: string;\n  resources: InfoResource[];\n}\n\n/**\n * An interface representing an information resource related to a specific technology category.\n */\nexport interface InfoResource {\n  id?: string;\n  resource: string;\n  reference: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoResourceSection.html":{"url":"interfaces/InfoResourceSection.html","title":"interface - InfoResourceSection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InfoResourceSection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/info.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a section grouping information resources.\nSuch sections represent different categories of additional information, e.g., research publications, blog posts, etc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        resources\n                                \n                                \n                                        technologyCategory\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resources\n                                    \n                                \n                                \n                                    \n                                        resources:         InfoResource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InfoResource[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface InfoResourceSection {\n  id: string;\n  title: string;\n  description: string;\n  technologyCategory: string;\n  resources: InfoResource[];\n}\n\n/**\n * An interface representing an information resource related to a specific technology category.\n */\nexport interface InfoResource {\n  id?: string;\n  resource: string;\n  reference: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationComponent.html":{"url":"components/InformationComponent.html","title":"component - InformationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InformationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/information.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-information\n            \n\n            \n                styleUrls\n                ./information.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                framework\n                            \n                            \n                                    Readonly\n                                navLinks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/information/information.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            framework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassificationFramework\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information/information.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            navLinks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {location: 'framework', label: 'Framework', icon: 'menu_book'},\n    {location: 'resources', label: 'Resources', icon: 'library_books'}\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information/information.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ClassificationFramework} from '../shared/interfaces/classification';\n\n@Component({\n  selector: 'app-information',\n  templateUrl: './information.component.html',\n  styleUrls: ['./information.component.scss']\n})\nexport class InformationComponent {\n  readonly navLinks = [\n    {location: 'framework', label: 'Framework', icon: 'menu_book'},\n    {location: 'resources', label: 'Resources', icon: 'library_books'}\n  ];\n  framework: ClassificationFramework;\n\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      {{ link.label }}\n    \n  \n\n\n\n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./information.component.scss\n                \n                @import \"../_scss/shared\";\n\n:host {\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.info-tabs {\n  width: 100%;\n  color: white;\n  display: flex;\n}\n\n.info-tabs__links {\n  width: 100%;\n  display: flex;\n  margin: 0 auto;\n}\n\n.info-tabs--link {\n  flex: 1 1 auto;\n  font-size: .8rem;\n}\n\n.info-main {\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  width: 100%;\n}\n\n@media screen and (min-width: 1100px) {\n  .info-tabs__links {\n    max-width: 1200px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ link.label }}              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InformationModule.html":{"url":"modules/InformationModule.html","title":"module - InformationModule","body":"\n                   \n\n\n\n\n    Modules\n    InformationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InformationModule\n\n\n\ncluster_InformationModule_imports\n\n\n\ncluster_InformationModule_declarations\n\n\n\n\nFaqComponent\n\nFaqComponent\n\n\n\nInformationModule\n\nInformationModule\n\nInformationModule -->\n\nFaqComponent->InformationModule\n\n\n\n\n\nFrameworkComponent\n\nFrameworkComponent\n\nInformationModule -->\n\nFrameworkComponent->InformationModule\n\n\n\n\n\nInformationComponent\n\nInformationComponent\n\nInformationModule -->\n\nInformationComponent->InformationModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nInformationModule -->\n\nResourcesComponent->InformationModule\n\n\n\n\n\nInformationRoutingModule\n\nInformationRoutingModule\n\nInformationModule -->\n\nInformationRoutingModule->InformationModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nInformationModule -->\n\nSharedModule->InformationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/information/information.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FaqComponent\n                        \n                        \n                            FrameworkComponent\n                        \n                        \n                            InformationComponent\n                        \n                        \n                            ResourcesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InformationRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ResourcesComponent} from './resources/resources.component';\nimport {FaqComponent} from './faq/faq.component';\nimport {InformationComponent} from './information.component';\nimport {InformationRoutingModule} from './information-routing.module';\nimport {SharedModule} from '../shared/shared.module';\nimport {ResourcesResolver} from './resolvers/resources-resolver.service';\nimport {FrameworkComponent} from './framework/framework.component';\n\n@NgModule({\n  declarations: [ResourcesComponent, FaqComponent, InformationComponent, FrameworkComponent],\n  imports: [CommonModule, SharedModule, InformationRoutingModule],\n  providers: [ResourcesResolver]\n})\nexport class InformationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InformationRoutingModule.html":{"url":"modules/InformationRoutingModule.html","title":"module - InformationRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    InformationRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/information/information-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ResourcesComponent} from './resources/resources.component';\nimport {FaqComponent} from './faq/faq.component';\nimport {InformationComponent} from './information.component';\nimport {FrameworkResolver} from './resolvers/framework-resolver.service';\nimport {ResourcesResolver} from './resolvers/resources-resolver.service';\nimport {FrameworkComponent} from './framework/framework.component';\n\nconst infoRoutes: Routes = [\n  {\n    path: '',\n    component: InformationComponent,\n    children: [\n      {path: '', pathMatch: 'full', redirectTo: 'framework'},\n      {path: 'framework', component: FrameworkComponent, resolve: {resolvedData: FrameworkResolver}},\n      {path: 'resources', component: ResourcesComponent, resolve: {resolvedData: ResourcesResolver}},\n      {path: 'faq', component: FaqComponent}\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(infoRoutes)],\n  exports: [RouterModule]\n})\nexport class InformationRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoLocatorService.html":{"url":"injectables/LogoLocatorService.html","title":"injectable - LogoLocatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogoLocatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/logo-locator.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                platformLogoDir\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLogoPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/logo-locator.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLogoPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetLogoPath(logoLocator: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/logo-locator.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logoLocator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            platformLogoDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/images/vendor/logo/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/logo-locator.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class LogoLocatorService {\n  static readonly platformLogoDir = '/assets/images/vendor/logo/';\n\n  constructor() {\n  }\n\n  getLogoPath(logoLocator: string) {\n    return LogoLocatorService.platformLogoDir\n      .concat(logoLocator)\n      .concat(Extension.png);\n  }\n}\n\nenum Extension {\n  png = '.png',\n  jpg = '.jpg',\n  jpeg = '.jpeg',\n  svg = '.svg'\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatListModule} from '@angular/material/list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatRadioModule} from '@angular/material/radio';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatProgressSpinnerModule,\n    MatListModule,\n    MatCardModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatTreeModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatSliderModule,\n    MatRadioModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatProgressSpinnerModule,\n    MatListModule,\n    MatCardModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatTreeModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatSliderModule,\n    MatRadioModule\n  ]\n})\nexport class MaterialModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/overview/overview.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                ./overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                supportedPlatforms$\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/overview/overview.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        supportedPlatforms$\n                    \n                \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/overview/overview.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Technology} from '../../shared/interfaces/technology';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent {\n  @Input() supportedPlatforms$: Observable;\n\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  Reviewed Platforms\n  \n    Explore the list of reviewed platforms which includes commercial and open source products.\n  \n\n  \n    \n      \n        \n          \n            \n          \n        \n      \n    \n\n    \n      Browse Platforms\n    \n  \n\n\n\n    \n\n    \n                \n                    ./overview.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n  @include bg-grey;\n}\n\n.platforms {\n  width: 95%;\n  margin-bottom: 1.5rem;\n}\n\n.platforms__container {\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n}\n\n\n.platforms__logos {\n  flex: 1 1 auto;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  justify-items: center;\n  grid-gap: .5rem;\n  list-style: none;\n  padding: .5rem;\n}\n\n.platforms__item {\n  margin: .5rem;\n\n  align-self: center;\n}\n\n.platforms__button {\n  width: 50%;\n}\n\n.platforms__logo {\n  max-width: 70%;\n  height: auto;\n  object-fit: cover;\n  vertical-align: bottom;\n  justify-self: center;\n  opacity: .7;\n  transition: opacity .5s ease-out;\n  -moz-transition: opacity .5s ease-out;\n  -webkit-transition: opacity .5s ease-out;\n  -o-transition: opacity .5s ease-out;\n\n  &:hover {\n    opacity: 1;\n  }\n}\n\n@media screen and (min-width: 550px) {\n  .platforms__logos {\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n  }\n\n  .platforms__button {\n    width: 35%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Reviewed Platforms      Explore the list of reviewed platforms which includes commercial and open source products.                                                                                  Browse Platforms      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/page-not-found/page-not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/page-not-found/page-not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/page-not-found/page-not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  Title\n\n\nPage not found\n\n\n\n    \n\n    \n                \n                    ./page-not-found.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    TitlePage not found'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RandomColorService.html":{"url":"injectables/RandomColorService.html","title":"injectable - RandomColorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RandomColorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/random-color.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRandomColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/random-color.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRandomColor\n                        \n                        \n                    \n                \n            \n            \n                \ngetRandomColor(hue?, luminosity?, count?, seed?, format?, alpha?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/random-color.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hue\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    luminosity\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    count\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    seed\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    format\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    alpha\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\ndeclare let randomColor: any;\n\n@Injectable()\nexport class RandomColorService {\n\n  constructor() {\n  }\n\n  getRandomColor(hue?, luminosity?, count?, seed?, format?, alpha?) {\n    return randomColor({\n      hue: hue, luminosity: luminosity, count: count, seed: seed, format: format, alpha: alpha\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RenderedFilterBlock.html":{"url":"interfaces/RenderedFilterBlock.html","title":"interface - RenderedFilterBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RenderedFilterBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a rendered filter block in the UI which may comprise multiple filters with CriterionFilterConfiguration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        blockIcon\n                                \n                                \n                                        blockName\n                                \n                                \n                                        filters\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockIcon\n                                    \n                                \n                                \n                                    \n                                        blockIcon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Material Icon name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockName\n                                    \n                                \n                                \n                                    \n                                        blockName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the filter block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         CriterionFilterConfiguration[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterConfiguration[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of filters to be rendered in this block defined using CriterionFilterConfiguration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a rendered filter block in the UI which may comprise multiple filters with {@link CriterionFilterConfiguration}.\n */\nexport interface RenderedFilterBlock {\n  /**\n   * Name of the filter block\n   */\n  blockName: string;\n\n  /**\n   * Material Icon name\n   */\n  blockIcon?: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  /**\n   * Unique filter configuration identifier\n   */\n  filterId: string;\n\n  /**\n   * Technology category\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * Configuration name\n   */\n  name: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  /**\n   * Unique criterion identifier\n   */\n  criterionId: string;\n\n  /**\n   * Filter name\n   */\n  displayName: string;\n\n  /**\n   * Filter type {@see CriterionFilterType}\n   */\n  filterType: CriterionFilterType;\n\n  /**\n   * Distinct filter values obtained from the review data\n   */\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n */\nexport enum CriterionFilterType {\n  /**\n   * Indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n   */\n  bool = 'bool',\n\n  /**\n   * Indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n   */\n  lte = 'lte',\n\n  /**\n   * Indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n   */\n  gte = 'gte',\n\n  /**\n   * At least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n   */\n  containsOne = 'containsOne',\n\n  /**\n   * At least 1 arbitrary text value must be contained, translates to a toggle in the UI\n   */\n  containsAny = 'containsAny',\n\n  /**\n   * All specified text values must be contained, translates to a group of checkboxes in the UI\n   */\n  containsAll = 'containsAll',\n\n  /**\n   * All specified text values must not be contained, translates to a group of checkboxes in the UI\n   */\n  excludesAll = 'excludesAll'\n}\n\n/**\n * An interface representing a filter-based query mapping unique criteria IDs to respective [CriterionFilterValues]{@link CriterionFilterValue}.\n */\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\n/**\n * An interface representing a filter value used in a user's query.\n */\nexport interface CriterionFilterValue {\n  /**\n   * Filter type\n   */\n  filterType?: CriterionFilterType;\n\n  /**\n   * Actual value, type depends on the filter type and respective UI elements.\n   *\n   * @example\n   * a list of selected checkboxes resulting in a list of string values   *\n   */\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourcesComponent.html":{"url":"components/ResourcesComponent.html","title":"component - ResourcesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourcesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/resources/resources.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-resources\n            \n\n            \n                styleUrls\n                ./resources.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./resources.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resources\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/resources/resources.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resources/resources.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resources/resources.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InfoResourceSection[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information/resources/resources.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information/resources/resources.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {InfoResourceSection} from '../../shared/interfaces/info';\n\n@Component({\n  selector: 'app-resources',\n  templateUrl: './resources.component.html',\n  styleUrls: ['./resources.component.scss']\n})\nexport class ResourcesComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n  resources: InfoResourceSection[];\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.route.data.subscribe(data => {\n      this.resources = data['resolvedData'];\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    {{section.title}}\n  \n  \n    {{section.description}}\n  \n\n  \n    [{{i + 1}}]\n    \n      {{res.resource}}\n      (reference)\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./resources.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{section.title}}        {{section.description}}        [{{i + 1}}]          {{res.resource}}      (reference)      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResourcesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ResourcesResolver.html":{"url":"guards/ResourcesResolver.html","title":"guard - ResourcesResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ResourcesResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/information/resolvers/resources-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/resolvers/resources-resolver.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resolvers/resources-resolver.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {DataService} from '../../core/services/data.service';\nimport {InfoResourceSection} from '../../shared/interfaces/info';\n\n@Injectable()\nexport class ResourcesResolver implements Resolve {\n\n  constructor(private dataService: DataService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    return this.dataService.getInfoResources();\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SetToArrayPipe.html":{"url":"pipes/SetToArrayPipe.html","title":"pipe - SetToArrayPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SetToArrayPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/set-to-array.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        setToArray\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: Set)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/set-to-array.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'setToArray'\n})\nexport class SetToArrayPipe implements PipeTransform {\n  transform(value: Set) {\n    return Array.from(value);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\n\nBottomNavComponent\n\nBottomNavComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nBottomNavComponent->SharedModule\n\n\n\n\n\nChildGroupingComponent\n\nChildGroupingComponent\n\nSharedModule -->\n\nChildGroupingComponent->SharedModule\n\n\n\n\n\nCriterionComponent\n\nCriterionComponent\n\nSharedModule -->\n\nCriterionComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nFrameworkRendererComponent\n\nFrameworkRendererComponent\n\nSharedModule -->\n\nFrameworkRendererComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nSharedModule -->\n\nPageNotFoundComponent->SharedModule\n\n\n\n\n\nSetToArrayPipe\n\nSetToArrayPipe\n\nSharedModule -->\n\nSetToArrayPipe->SharedModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nSharedModule -->\n\nTruncatePipe->SharedModule\n\n\n\n\n\nYesNoPipe\n\nYesNoPipe\n\nSharedModule -->\n\nYesNoPipe->SharedModule\n\n\n\n\n\nBottomNavComponent \n\nBottomNavComponent \n\nBottomNavComponent  -->\n\nSharedModule->BottomNavComponent \n\n\n\n\n\nChildGroupingComponent \n\nChildGroupingComponent \n\nChildGroupingComponent  -->\n\nSharedModule->ChildGroupingComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nFrameworkRendererComponent \n\nFrameworkRendererComponent \n\nFrameworkRendererComponent  -->\n\nSharedModule->FrameworkRendererComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nPageNotFoundComponent \n\nPageNotFoundComponent \n\nPageNotFoundComponent  -->\n\nSharedModule->PageNotFoundComponent \n\n\n\n\n\nSetToArrayPipe \n\nSetToArrayPipe \n\nSetToArrayPipe  -->\n\nSharedModule->SetToArrayPipe \n\n\n\n\n\nTruncatePipe \n\nTruncatePipe \n\nTruncatePipe  -->\n\nSharedModule->TruncatePipe \n\n\n\n\n\nYesNoPipe \n\nYesNoPipe \n\nYesNoPipe  -->\n\nSharedModule->YesNoPipe \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BottomNavComponent\n                        \n                        \n                            ChildGroupingComponent\n                        \n                        \n                            CriterionComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            FrameworkRendererComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            SetToArrayPipe\n                        \n                        \n                            TruncatePipe\n                        \n                        \n                            YesNoPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BottomNavComponent\n                        \n                        \n                            ChildGroupingComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            FrameworkRendererComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            SetToArrayPipe\n                        \n                        \n                            TruncatePipe\n                        \n                        \n                            YesNoPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MaterialModule} from './material.module';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\nimport {RouterModule} from '@angular/router';\nimport {TruncatePipe} from './pipes/truncate.pipe';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ChildGroupingComponent} from './child-grouping/child-grouping.component';\nimport {SetToArrayPipe} from './pipes/set-to-array.pipe';\nimport {CriterionComponent} from './criterion/criterion.component';\nimport {HeaderComponent} from './header/header.component';\nimport {FooterComponent} from './footer/footer.component';\nimport {FrameworkResolver} from '../information/resolvers/framework-resolver.service';\nimport {FrameworkRendererComponent} from './framework-renderer/framework-renderer.component';\nimport {BottomNavComponent} from './bottom-nav/bottom-nav.component';\nimport {YesNoPipe} from './pipes/yes-no.pipe';\n\n@NgModule({\n  declarations: [\n    PageNotFoundComponent,\n    TruncatePipe,\n    SetToArrayPipe,\n    YesNoPipe,\n    ChildGroupingComponent,\n    CriterionComponent,\n    HeaderComponent,\n    FooterComponent,\n    FrameworkRendererComponent,\n    BottomNavComponent\n  ],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MaterialModule, RouterModule],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    PageNotFoundComponent,\n    TruncatePipe,\n    SetToArrayPipe,\n    YesNoPipe,\n    ChildGroupingComponent,\n    HeaderComponent,\n    FooterComponent,\n    FrameworkRendererComponent,\n    BottomNavComponent\n  ],\n  providers: [FrameworkResolver]\n})\nexport class SharedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDataSource.html":{"url":"interfaces/SimpleDataSource.html","title":"interface - SimpleDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datasource.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DataSource\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connect\n                                \n                                \n                                    disconnect\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, combineLatest, Observable, of} from 'rxjs';\nimport {map, shareReplay, switchMap} from 'rxjs/operators';\nimport {Technology} from './interfaces/technology';\nimport {PageEvent} from '@angular/material/paginator';\nimport {CriteriaBasedQuery, CriterionFilterType, CriterionFilterValue} from './interfaces/filtering';\nimport {CriterionInstance} from './interfaces/classification';\n\nexport interface SimpleDataSource extends DataSource {\n  connect(): Observable;\n\n  disconnect(): void;\n}\n\nexport interface Sort {\n  property: keyof T\n  order: 'asc' | 'desc'\n}\n\nexport class TechnologyDataSource implements SimpleDataSource {\n  private readonly data: Technology[];\n  private readonly pageNumber = new BehaviorSubject(0);\n  private readonly sort: BehaviorSubject>;\n  private readonly criteriaBasedQuery: BehaviorSubject;\n  private readonly nameBasedQuery: BehaviorSubject;\n\n  public isPaginated = true;\n  public totalInputSize: number;\n  public currentIndex: number = 0;\n  public pageNumber$ = this.pageNumber.asObservable();\n  public filteredData$: Observable;\n  public paginatedData$: Observable;\n\n  constructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, public pageSize = 10) {\n    this.data = data;\n    this.sort = new BehaviorSubject>(initialSort);\n    this.criteriaBasedQuery = new BehaviorSubject(initialQuery);\n    this.nameBasedQuery = new BehaviorSubject(undefined);\n\n    this.filteredData$ = combineLatest([this.criteriaBasedQuery, this.nameBasedQuery, this.sort]).pipe(\n      switchMap(([criteriaQuery, nameQuery, sort]) => {\n          let result = this.processData(this.data, criteriaQuery, nameQuery, sort);\n          this.totalInputSize = result.length;\n          return of(result);\n        }\n      ),\n      shareReplay(1)\n    );\n\n    this.paginatedData$ = combineLatest([this.filteredData$, this.pageNumber$]).pipe(\n      map(([data, pageNumber]) => {\n        let startIndex = pageNumber * this.pageSize;\n        let endIndex = startIndex + this.pageSize;\n        if (endIndex > data.length) {\n          endIndex = data.length;\n        }\n        return data.slice(startIndex, endIndex);\n      })\n    );\n  }\n\n  sortBy(sort: Partial>): void {\n    const lastSort = this.sort.getValue();\n    const nextSort = {...lastSort, ...sort};\n    this.sort.next(nextSort);\n  }\n\n  queryByCriteria(query: CriteriaBasedQuery): void {\n    const lastQuery = this.criteriaBasedQuery.getValue();\n    const nextQuery = {...lastQuery, ...query};\n    console.log('new query:');\n    this.pruneQuery(nextQuery);\n    console.log(nextQuery);\n    this.criteriaBasedQuery.next(nextQuery);\n  }\n\n  queryByName(query: string): void {\n    this.nameBasedQuery.next(query);\n  }\n\n  fetch(event: PageEvent): void {\n    this.pageSize = event.pageSize;\n    this.pageNumber.next(event.pageIndex);\n    this.currentIndex = event.pageIndex;\n  }\n\n  togglePagination(): void {\n    this.isPaginated = !this.isPaginated;\n  }\n\n  connect(): Observable {\n    if (this.isPaginated) {\n      return this.paginatedData$;\n    }\n    return this.filteredData$;\n  }\n\n  disconnect(): void {\n  }\n\n  private processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort): Technology[] {\n    let result: Technology[] = data;\n    if (nameQuery) {\n      result = data.filter(platform => nameQuery ? platform.platformName.toLocaleLowerCase().includes(nameQuery) : true);\n    }\n\n    if (criteriaQuery && Object.keys(criteriaQuery).length !== 0) {\n      Object.keys(criteriaQuery).forEach(key => {\n        if (TechnologyDataSource.canFilter(criteriaQuery[key])) {\n          result = result.filter(t => {\n            let filteringResult = false;\n            if (t.dossier.reviewedCriteria.has(key)) {\n              filteringResult = this.getFilteringResult(criteriaQuery[key], t.dossier.reviewedCriteria.get(key));\n            }\n            return filteringResult;\n          });\n        }\n      });\n      console.log('found: ' + result.length);\n    }\n\n    if (sort && sort.order === 'asc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? 1 : -1);\n    } else if (sort && sort.order === 'desc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? -1 : 1);\n    }\n\n    return result;\n  }\n\n  private static canFilter(filterValue: CriterionFilterValue): boolean {\n    if (filterValue.filterType && filterValue.filterType === CriterionFilterType.lte) {\n      return typeof filterValue.value === 'number';\n    } else if (filterValue.filterType && filterValue.filterType === CriterionFilterType.containsAll ||\n      filterValue.filterType === CriterionFilterType.containsOne ||\n      filterValue.filterType === CriterionFilterType.excludesAll) {\n      let v = filterValue.value as string[];\n      return v && v.length > 0;\n    } else if (filterValue.filterType === CriterionFilterType.bool || filterValue.filterType === CriterionFilterType.containsAny) {\n      return typeof filterValue.value === 'boolean';\n    }\n\n    return false;\n  }\n\n  private pruneQuery(nextQuery: { [p: string]: CriterionFilterValue }) {\n    let keysToDelete = [];\n    Object.keys(nextQuery).forEach(key => {\n        if (nextQuery[key].filterType === null) {\n          keysToDelete.push(key);\n        } else if (nextQuery[key].filterType === CriterionFilterType.bool ||\n          nextQuery[key].filterType === CriterionFilterType.containsAny ||\n          nextQuery[key].filterType === CriterionFilterType.lte) {\n          if (nextQuery[key].value === null) {\n            keysToDelete.push(key);\n          }\n        } else if (nextQuery[key].filterType === CriterionFilterType.containsOne ||\n          nextQuery[key].filterType === CriterionFilterType.containsAll ||\n          nextQuery[key].filterType === CriterionFilterType.excludesAll) {\n          let valueToCheck = nextQuery[key].value as string[];\n          if (valueToCheck.length === 0) {\n            keysToDelete.push(key);\n          }\n        }\n      }\n    );\n    keysToDelete.forEach(key => delete nextQuery[key]);\n  }\n\n  private getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    if (filterValue.filterType === CriterionFilterType.containsAny) {\n      return TechnologyDataSource.containsAny(filterValue, reviewedCriterion);\n    }\n\n    for (let reviewValue of reviewedCriterion.values) {\n      if (filterValue.filterType === CriterionFilterType.lte) {\n        return reviewedCriterion.values[0].value  allValues.push(v.value));\n        let target = Array.from(filterValue.value as string[]);\n\n        if (filterValue.filterType === CriterionFilterType.containsAll) {\n          return target.every(v => allValues.includes(v));\n        } else if (filterValue.filterType === CriterionFilterType.excludesAll) {\n          return target.every(v => !allValues.includes(v));\n        }\n      }\n    }\n  }\n\n  private static containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValue = filterValue.value as boolean;\n    if (chosenValue) {\n      return Array.from(reviewedCriterion.values).length > 0;\n    } else {\n      return Array.from(reviewedCriterion.values).length === 0;\n    }\n  }\n\n  private static containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValues = filterValue.value as string[];\n    if (chosenValues && chosenValues.length > 0) {\n      for (let entry of reviewedCriterion.values) {\n        let value = entry.value as string;\n        if (chosenValues.indexOf(value) !== -1) {\n          return true;\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sort.html":{"url":"interfaces/Sort.html","title":"interface - Sort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Sort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datasource.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        order\n                                \n                                \n                                        property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:     \"asc\" | \"desc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"asc\" | \"desc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                    \n                                \n                                \n                                    \n                                        property:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, combineLatest, Observable, of} from 'rxjs';\nimport {map, shareReplay, switchMap} from 'rxjs/operators';\nimport {Technology} from './interfaces/technology';\nimport {PageEvent} from '@angular/material/paginator';\nimport {CriteriaBasedQuery, CriterionFilterType, CriterionFilterValue} from './interfaces/filtering';\nimport {CriterionInstance} from './interfaces/classification';\n\nexport interface SimpleDataSource extends DataSource {\n  connect(): Observable;\n\n  disconnect(): void;\n}\n\nexport interface Sort {\n  property: keyof T\n  order: 'asc' | 'desc'\n}\n\nexport class TechnologyDataSource implements SimpleDataSource {\n  private readonly data: Technology[];\n  private readonly pageNumber = new BehaviorSubject(0);\n  private readonly sort: BehaviorSubject>;\n  private readonly criteriaBasedQuery: BehaviorSubject;\n  private readonly nameBasedQuery: BehaviorSubject;\n\n  public isPaginated = true;\n  public totalInputSize: number;\n  public currentIndex: number = 0;\n  public pageNumber$ = this.pageNumber.asObservable();\n  public filteredData$: Observable;\n  public paginatedData$: Observable;\n\n  constructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, public pageSize = 10) {\n    this.data = data;\n    this.sort = new BehaviorSubject>(initialSort);\n    this.criteriaBasedQuery = new BehaviorSubject(initialQuery);\n    this.nameBasedQuery = new BehaviorSubject(undefined);\n\n    this.filteredData$ = combineLatest([this.criteriaBasedQuery, this.nameBasedQuery, this.sort]).pipe(\n      switchMap(([criteriaQuery, nameQuery, sort]) => {\n          let result = this.processData(this.data, criteriaQuery, nameQuery, sort);\n          this.totalInputSize = result.length;\n          return of(result);\n        }\n      ),\n      shareReplay(1)\n    );\n\n    this.paginatedData$ = combineLatest([this.filteredData$, this.pageNumber$]).pipe(\n      map(([data, pageNumber]) => {\n        let startIndex = pageNumber * this.pageSize;\n        let endIndex = startIndex + this.pageSize;\n        if (endIndex > data.length) {\n          endIndex = data.length;\n        }\n        return data.slice(startIndex, endIndex);\n      })\n    );\n  }\n\n  sortBy(sort: Partial>): void {\n    const lastSort = this.sort.getValue();\n    const nextSort = {...lastSort, ...sort};\n    this.sort.next(nextSort);\n  }\n\n  queryByCriteria(query: CriteriaBasedQuery): void {\n    const lastQuery = this.criteriaBasedQuery.getValue();\n    const nextQuery = {...lastQuery, ...query};\n    console.log('new query:');\n    this.pruneQuery(nextQuery);\n    console.log(nextQuery);\n    this.criteriaBasedQuery.next(nextQuery);\n  }\n\n  queryByName(query: string): void {\n    this.nameBasedQuery.next(query);\n  }\n\n  fetch(event: PageEvent): void {\n    this.pageSize = event.pageSize;\n    this.pageNumber.next(event.pageIndex);\n    this.currentIndex = event.pageIndex;\n  }\n\n  togglePagination(): void {\n    this.isPaginated = !this.isPaginated;\n  }\n\n  connect(): Observable {\n    if (this.isPaginated) {\n      return this.paginatedData$;\n    }\n    return this.filteredData$;\n  }\n\n  disconnect(): void {\n  }\n\n  private processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort): Technology[] {\n    let result: Technology[] = data;\n    if (nameQuery) {\n      result = data.filter(platform => nameQuery ? platform.platformName.toLocaleLowerCase().includes(nameQuery) : true);\n    }\n\n    if (criteriaQuery && Object.keys(criteriaQuery).length !== 0) {\n      Object.keys(criteriaQuery).forEach(key => {\n        if (TechnologyDataSource.canFilter(criteriaQuery[key])) {\n          result = result.filter(t => {\n            let filteringResult = false;\n            if (t.dossier.reviewedCriteria.has(key)) {\n              filteringResult = this.getFilteringResult(criteriaQuery[key], t.dossier.reviewedCriteria.get(key));\n            }\n            return filteringResult;\n          });\n        }\n      });\n      console.log('found: ' + result.length);\n    }\n\n    if (sort && sort.order === 'asc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? 1 : -1);\n    } else if (sort && sort.order === 'desc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? -1 : 1);\n    }\n\n    return result;\n  }\n\n  private static canFilter(filterValue: CriterionFilterValue): boolean {\n    if (filterValue.filterType && filterValue.filterType === CriterionFilterType.lte) {\n      return typeof filterValue.value === 'number';\n    } else if (filterValue.filterType && filterValue.filterType === CriterionFilterType.containsAll ||\n      filterValue.filterType === CriterionFilterType.containsOne ||\n      filterValue.filterType === CriterionFilterType.excludesAll) {\n      let v = filterValue.value as string[];\n      return v && v.length > 0;\n    } else if (filterValue.filterType === CriterionFilterType.bool || filterValue.filterType === CriterionFilterType.containsAny) {\n      return typeof filterValue.value === 'boolean';\n    }\n\n    return false;\n  }\n\n  private pruneQuery(nextQuery: { [p: string]: CriterionFilterValue }) {\n    let keysToDelete = [];\n    Object.keys(nextQuery).forEach(key => {\n        if (nextQuery[key].filterType === null) {\n          keysToDelete.push(key);\n        } else if (nextQuery[key].filterType === CriterionFilterType.bool ||\n          nextQuery[key].filterType === CriterionFilterType.containsAny ||\n          nextQuery[key].filterType === CriterionFilterType.lte) {\n          if (nextQuery[key].value === null) {\n            keysToDelete.push(key);\n          }\n        } else if (nextQuery[key].filterType === CriterionFilterType.containsOne ||\n          nextQuery[key].filterType === CriterionFilterType.containsAll ||\n          nextQuery[key].filterType === CriterionFilterType.excludesAll) {\n          let valueToCheck = nextQuery[key].value as string[];\n          if (valueToCheck.length === 0) {\n            keysToDelete.push(key);\n          }\n        }\n      }\n    );\n    keysToDelete.forEach(key => delete nextQuery[key]);\n  }\n\n  private getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    if (filterValue.filterType === CriterionFilterType.containsAny) {\n      return TechnologyDataSource.containsAny(filterValue, reviewedCriterion);\n    }\n\n    for (let reviewValue of reviewedCriterion.values) {\n      if (filterValue.filterType === CriterionFilterType.lte) {\n        return reviewedCriterion.values[0].value  allValues.push(v.value));\n        let target = Array.from(filterValue.value as string[]);\n\n        if (filterValue.filterType === CriterionFilterType.containsAll) {\n          return target.every(v => allValues.includes(v));\n        } else if (filterValue.filterType === CriterionFilterType.excludesAll) {\n          return target.every(v => !allValues.includes(v));\n        }\n      }\n    }\n  }\n\n  private static containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValue = filterValue.value as boolean;\n    if (chosenValue) {\n      return Array.from(reviewedCriterion.values).length > 0;\n    } else {\n      return Array.from(reviewedCriterion.values).length === 0;\n    }\n  }\n\n  private static containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValues = filterValue.value as string[];\n    if (chosenValues && chosenValues.length > 0) {\n      for (let entry of reviewedCriterion.values) {\n        let value = entry.value as string;\n        if (chosenValues.indexOf(value) !== -1) {\n          return true;\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableColumn.html":{"url":"classes/TableColumn.html","title":"class - TableColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/technologies/technology-table/technology-table.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                colSpan\n                            \n                            \n                                displayName\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            colSpan\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {TechnologyDataSource} from '../../shared/datasource';\nimport {ClassificationFramework, CriteriaGrouping} from '../../shared/interfaces/classification';\nimport {TechnologyFilterConfiguration} from '../../shared/interfaces/filtering';\nimport {MatSidenav} from '@angular/material/sidenav';\n\nexport class TableColumn {\n  id: string;\n  displayName: string;\n  colSpan?: number;\n  color?: string;\n}\n\n@Component({\n  selector: 'app-technology-table',\n  templateUrl: './technology-table.component.html',\n  styleUrls: ['./technology-table.component.scss']\n})\nexport class TechnologyTableComponent implements OnInit {\n  @Input() dataSource: TechnologyDataSource;\n  @Input() framework: ClassificationFramework;\n  @Input() filterConfiguration: TechnologyFilterConfiguration;\n  @Input() sidenav: MatSidenav;\n\n  @ViewChild('content') tableContainer: ElementRef;\n\n  criteriaColumns: TableColumn[] = [];\n  groupingColumns: TableColumn[] = [];\n  groupingColumnIds: string[] = ['techNameHeader'];\n\n  columnsToDisplay = ['techName'];\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n    this.framework.viewCombinations.forEach(viewComb => {\n      if (viewComb.default) {\n        viewComb.views.forEach(view => {\n          let groupingColumns: TableColumn[] = [];\n          Array.from(view.groupings).forEach((grouping, index) => {\n            let color = index % 2 === 0 ? '#ccc' : 'white';\n            this.generateGroupingColumns(grouping, groupingColumns, color);\n          });\n          if (groupingColumns.length > 0) {\n            this.groupingColumns.push(...groupingColumns);\n            let viewColspan = 0;\n            groupingColumns.forEach(c => {\n              if (c.colSpan) {\n                viewColspan += c.colSpan;\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  private generateGroupingColumns(grouping: CriteriaGrouping, groupingColumns: TableColumn[], color:string, parentGroupingName?: string) {\n    let counter = 0;\n    grouping.criteria.forEach((c, index) => {\n      this.criteriaColumns.push({\n        id: c.id,\n        displayName: c.name,\n        color: color\n      } as TableColumn);\n      this.columnsToDisplay.push(c.id);\n      counter += 1;\n    });\n    if (counter > 0) {\n      let name = parentGroupingName ? parentGroupingName.concat('.').concat(grouping.name) : grouping.name;\n      groupingColumns.push({\n        id: grouping.id,\n        displayName: name,\n        color: color,\n        colSpan: counter\n      } as TableColumn);\n      this.groupingColumnIds.push(grouping.id);\n    }\n    if (grouping.groupings) {\n      grouping.groupings.forEach(g => this.generateGroupingColumns(g, groupingColumns, color, grouping.name));\n    }\n  }\n\n  scrollLeft() {\n    this.tableContainer.nativeElement.scrollLeft -= 150;\n  }\n\n  scrollRight() {\n    this.tableContainer.nativeElement.scrollLeft += 150;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologiesComponent.html":{"url":"components/TechnologiesComponent.html","title":"component - TechnologiesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TechnologiesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technologies.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technologies\n            \n\n            \n                styleUrls\n                ./technologies.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technologies.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                browsingMode\n                            \n                            \n                                dataSource\n                            \n                            \n                                filterConfiguration\n                            \n                            \n                                framework\n                            \n                            \n                                groupings\n                            \n                            \n                                mobileQuery\n                            \n                            \n                                renderedFilter\n                            \n                            \n                                sidenav\n                            \n                            \n                                subscriptions\n                            \n                            \n                                technologies\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractGroupings\n                            \n                            \n                                    Private\n                                generateFilterStructure\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onQueryUpdate\n                            \n                            \n                                    Private\n                                populateRenderBlocks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, route: ActivatedRoute, fb: FormBuilder, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technologies.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                    MediaMatcher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractGroupings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractGroupings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateFilterStructure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateFilterStructure()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onQueryUpdate\n                        \n                        \n                    \n                \n            \n            \n                \nonQueryUpdate($event: CriteriaBasedQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                CriteriaBasedQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            populateRenderBlocks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populateRenderBlocks(grouping: CriteriaGrouping, filterLookup: Map, placement: Map, parentGroup?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grouping\n                                    \n                                                CriteriaGrouping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filterLookup\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    placement\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            browsingMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'explore'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TechnologyDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterConfiguration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TechnologyFilterConfiguration\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            framework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassificationFramework\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CriteriaGrouping[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobileQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MediaQueryList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderedFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RenderedFilterBlock[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('sidenav')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            technologies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Technology[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {DataService} from '../core/services/data.service';\nimport {Subscription} from 'rxjs';\nimport {Technology} from '../shared/interfaces/technology';\nimport {ActivatedRoute} from '@angular/router';\nimport {TechnologyDataSource} from '../shared/datasource';\nimport {ClassificationFramework, CriteriaGrouping} from '../shared/interfaces/classification';\nimport {\n  CriteriaBasedQuery,\n  CriterionFilterConfiguration,\n  RenderedFilterBlock,\n  TechnologyFilterConfiguration\n} from '../shared/interfaces/filtering';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {MediaMatcher} from '@angular/cdk/layout';\nimport {FormBuilder} from '@angular/forms';\n\n@Component({\n  selector: 'app-technologies',\n  templateUrl: './technologies.component.html',\n  styleUrls: ['./technologies.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TechnologiesComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  technologies: Technology[];\n  framework: ClassificationFramework;\n  filterConfiguration: TechnologyFilterConfiguration;\n  groupings: CriteriaGrouping[] = [];\n\n  dataSource: TechnologyDataSource;\n  browsingMode = 'explore';\n\n  renderedFilter: RenderedFilterBlock[] = [];\n\n  @ViewChild('sidenav') sidenav: MatSidenav;\n  mobileQuery: MediaQueryList;\n\n  constructor(\n    private dataService: DataService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private changeDetectorRef: ChangeDetectorRef,\n    private media: MediaMatcher\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 850px)');\n    this.mobileQuery.addEventListener('change', () => changeDetectorRef.detectChanges());\n  }\n\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.route.queryParams.subscribe(params => {\n        const mode = params['browsingMode'];\n        if (mode) {\n          this.browsingMode = mode;\n        }\n      })\n    );\n\n    this.subscriptions.push(\n      this.route.data.subscribe(data => {\n        this.technologies = data['resolvedData'][0];\n        this.dataSource = new TechnologyDataSource(this.technologies, {property: 'platformName', order: 'asc'}, {});\n        this.framework = data['resolvedData'][1];\n        this.filterConfiguration = data['resolvedData'][2];\n\n        this.extractGroupings();\n        this.generateFilterStructure();\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private extractGroupings() {\n    for (let vc of this.framework.viewCombinations) {\n      if (vc.default) {\n        vc.views.forEach(v => this.groupings.push(...Array.from(v.groupings)));\n        break;\n      }\n    }\n  }\n\n  private generateFilterStructure() {\n    const criteriaFilterLookup = new Map(this.filterConfiguration.filters.map(c => [c.criterionId, c] as [string, CriterionFilterConfiguration]));\n    let placement: Map = new Map();\n    this.groupings.forEach(g => this.populateRenderBlocks(g, criteriaFilterLookup, placement));\n    this.renderedFilter = Array.from(placement.values());\n  }\n\n  private populateRenderBlocks(grouping: CriteriaGrouping, filterLookup: Map, placement: Map, parentGroup?: string) {\n    let current = placement.get(grouping.name);\n\n    if (current === undefined && grouping.criteria && grouping.criteria.size > 0) {\n      placement.set(grouping.name, {blockName: parentGroup ? parentGroup.concat(' : ').concat(grouping.name) : grouping.name, filters: []});\n      current = placement.get(grouping.name);\n    }\n\n    grouping.criteria.forEach(c => {\n      let config = filterLookup.get(c.id);\n      if (config) {\n        current.filters.push(config);\n      }\n    });\n\n    if (grouping.groupings) {\n      grouping.groupings.forEach(g => this.populateRenderBlocks(g, filterLookup, placement, grouping.name));\n    }\n  }\n\n  onQueryUpdate($event: CriteriaBasedQuery) {\n    this.dataSource.queryByCriteria($event);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Filter Panel\n        \n        \n          close\n        \n      \n      \n        Filter platforms by combining criteria values.\n      \n\n    \n\n    \n      \n         0\"\n                             class=\"sidenav__filter-block\">\n          \n            \n              {{filterBlock.blockIcon}}\n              {{filterBlock.blockName}}\n            \n          \n          \n\n          \n          \n\n        \n\n      \n\n    \n  \n\n  \n    \n    \n      \n        Platform Browser\n        \n        \n          \n            subject\n          \n          \n            search\n          \n        \n      \n\n      \n        \n          Browse through the list of available platforms, for a detailed view click on the corresponding platform.\n        \n        \n          filter_alt\n          Filters\n        \n      \n\n      \n      \n\n      \n      \n    \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./technologies.component.scss\n                \n                @import \"../_scss/shared\";\n@import \"../_scss/global/variables\";\n\n:host {\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.sidenav-container {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n  flex: 1;\n}\n\n.sidenav {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n  flex: 1;\n  width: 80%;\n  max-width: 30em;\n}\n\n.sidenav__filter-header {\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 1rem;\n}\n\n.sidenav__filter-title {\n  display: flex;\n  flex-flow: row nowrap;\n}\n\n.sidenav__accordion {\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.sidenav__filter-block {\n  flex-grow: 1;\n  flex-shrink: 0;\n  box-shadow: none !important;\n  border-radius: 0 !important;\n  border-bottom: 1px solid $gray-30;\n}\n\n.content-container {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n  flex: 1;\n}\n\n.platforms-main {\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  @include bg-grey;\n  padding-top: 1.5rem;\n}\n\n.platforms__controls {\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: space-evenly;\n  width: 90%;\n}\n\n.platforms__description-block {\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  width: 90%;\n}\n\n.platforms__description {\n  flex: 1 1 max-content;\n}\n\n.platforms__filter-button {\n  height: 2.5rem;\n  @include nav_item;\n}\n\n.platforms__filter-button-title {\n  display: none;\n}\n\n.platforms__header {\n  flex: 1 1 auto;\n}\n\n.platforms__settings {\n  @include nav_item;\n}\n\n@media screen and (min-width: 900px) {\n  .platforms__controls, .platforms__description-block  {\n    max-width: 910px;\n  }\n\n  .platforms__filter-button-title {\n    display: inline;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Filter Panel                          close                            Filter platforms by combining criteria values.                             0\"                             class=\"sidenav__filter-block\">                                    {{filterBlock.blockIcon}}              {{filterBlock.blockName}}                                                                                                Platform Browser                                      subject                                search                                                Browse through the list of available platforms, for a detailed view click on the corresponding platform.                          filter_alt          Filters                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologiesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TechnologiesModule.html":{"url":"modules/TechnologiesModule.html","title":"module - TechnologiesModule","body":"\n                   \n\n\n\n\n    Modules\n    TechnologiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TechnologiesModule\n\n\n\ncluster_TechnologiesModule_declarations\n\n\n\ncluster_TechnologiesModule_imports\n\n\n\n\nCriterionFilterComponent\n\nCriterionFilterComponent\n\n\n\nTechnologiesModule\n\nTechnologiesModule\n\nTechnologiesModule -->\n\nCriterionFilterComponent->TechnologiesModule\n\n\n\n\n\nTechnologiesComponent\n\nTechnologiesComponent\n\nTechnologiesModule -->\n\nTechnologiesComponent->TechnologiesModule\n\n\n\n\n\nTechnologyDetailsComponent\n\nTechnologyDetailsComponent\n\nTechnologiesModule -->\n\nTechnologyDetailsComponent->TechnologiesModule\n\n\n\n\n\nTechnologyListComponent\n\nTechnologyListComponent\n\nTechnologiesModule -->\n\nTechnologyListComponent->TechnologiesModule\n\n\n\n\n\nTechnologyTableComponent\n\nTechnologyTableComponent\n\nTechnologiesModule -->\n\nTechnologyTableComponent->TechnologiesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTechnologiesModule -->\n\nSharedModule->TechnologiesModule\n\n\n\n\n\nTechnologiesRoutingModule\n\nTechnologiesRoutingModule\n\nTechnologiesModule -->\n\nTechnologiesRoutingModule->TechnologiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/technologies/technologies.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CriterionFilterComponent\n                        \n                        \n                            TechnologiesComponent\n                        \n                        \n                            TechnologyDetailsComponent\n                        \n                        \n                            TechnologyListComponent\n                        \n                        \n                            TechnologyTableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TechnologiesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TechnologiesComponent} from './technologies.component';\nimport {TechnologiesRoutingModule} from './technologies-routing.module';\nimport {SharedModule} from '../shared/shared.module';\nimport {TechnologyListComponent} from './technology-list/technology-list.component';\nimport {TechnologyDetailsComponent} from './technology-details/technology-details.component';\nimport {TechnologyTableComponent} from './technology-table/technology-table.component';\nimport {TechnologiesResolver} from './technologies-resolver.service';\nimport {CriterionFilterComponent} from './criterion-filter/criterion-filter.component';\nimport {TechnologyDetailsResolverService} from './technology-details-resolver.service';\n\n@NgModule({\n  declarations: [TechnologiesComponent, TechnologyListComponent, TechnologyDetailsComponent, TechnologyTableComponent, CriterionFilterComponent],\n  imports: [CommonModule, SharedModule, TechnologiesRoutingModule],\n  providers: [TechnologiesResolver, TechnologyDetailsResolverService]\n\n})\nexport class TechnologiesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TechnologiesResolver.html":{"url":"guards/TechnologiesResolver.html","title":"guard - TechnologiesResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TechnologiesResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/technologies/technologies-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, config: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technologies-resolver.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies-resolver.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {ClassificationFramework} from '../shared/interfaces/classification';\nimport {forkJoin, Observable} from 'rxjs';\nimport {DataService} from '../core/services/data.service';\nimport {Technology} from '../shared/interfaces/technology';\nimport {TechnologyFilterConfiguration} from '../shared/interfaces/filtering';\nimport {AppConfigService} from '../core/services/app-config.service';\n\n@Injectable()\nexport class TechnologiesResolver implements Resolve {\n  constructor(private dataService: DataService, private config: AppConfigService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    let category = this.config.defaultTechCategory;\n\n    const technologies = this.dataService.getTechnologiesOfCategory(category, true);\n    const framework = this.dataService.getFrameworkForTechnologyType(category);\n    const filter = this.dataService.getTechnologyFilter(category);\n\n    return forkJoin([technologies, framework, filter]);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TechnologiesRoutingModule.html":{"url":"modules/TechnologiesRoutingModule.html","title":"module - TechnologiesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TechnologiesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/technologies/technologies-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {TechnologiesComponent} from './technologies.component';\nimport {TechnologyDetailsComponent} from './technology-details/technology-details.component';\nimport {TechnologiesResolver} from './technologies-resolver.service';\nimport {TechnologyDetailsResolverService} from './technology-details-resolver.service';\n\nconst platformRoutes: Routes = [\n  {path: '', component: TechnologiesComponent, resolve: {resolvedData: TechnologiesResolver}},\n  {path: ':platformId', component: TechnologyDetailsComponent, resolve: {resolvedData: TechnologyDetailsResolverService}}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(platformRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class TechnologiesRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Technology.html":{"url":"interfaces/Technology.html","title":"interface - Technology","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Technology\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/technology.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a technology for comparison,\nwhich might contain the review data in a form of a TechnologyDossier.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        dossier\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        logoLocation\n                                \n                                \n                                        logoLocator\n                                \n                                \n                                        platformName\n                                \n                                \n                                            Optional\n                                        shortDescription\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category this technology belongs to.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Full description shown in technology details.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dossier\n                                    \n                                \n                                \n                                    \n                                        dossier:         TechnologyDossier\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyDossier\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A TechnologyDossier storing the review data.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique technology identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoLocation\n                                    \n                                \n                                \n                                    \n                                        logoLocation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Technology logo location path generated by the LogoLocatorService.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoLocator\n                                    \n                                \n                                \n                                    \n                                        logoLocator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A string value that can be used by the LogoLocatorService to locate the technology logo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformName\n                                    \n                                \n                                \n                                    \n                                        platformName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Technology name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortDescription\n                                    \n                                \n                                \n                                    \n                                        shortDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Short description shown in technology lists.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {CriterionInstance} from './classification';\n\n/**\n * An interface representing a technology for comparison,\n * which might contain the review data in a form of a {@link TechnologyDossier}.\n *\n * @example a FaaS platform\n */\nexport interface Technology {\n  /**\n   * Unique technology identifier.\n   */\n  id: string;\n\n  /**\n   * Technology name.\n   */\n  platformName: string;\n\n  /**\n   * [Category]{@link TechnologyCategory} this technology belongs to.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  category: TechnologyCategory;\n\n  /**\n   * A string value that can be used by the {@link LogoLocatorService} to locate the technology logo.\n   *\n   * @example\n   * azure.functions for Azure Functions,\n   * aws.s3 for AWS S3\n   */\n  logoLocator: string;\n\n  /**\n   * Technology logo location path generated by the {@link LogoLocatorService}.\n   */\n  logoLocation?: string;\n\n  /**\n   * Short description shown in technology lists.\n   */\n  shortDescription?: string;\n\n  /**\n   * Full description shown in technology details.\n   */\n  description?: string;\n\n  /**\n   * A [TechnologyDossier]{@link TechnologyDossier} storing the review data.\n   */\n  dossier?: TechnologyDossier;\n}\n\n/**\n * An interface representing the review data which comprises [CriterionInstances]{@link CriterionInstance} related to a particular technology.\n */\nexport interface TechnologyDossier {\n  /**\n   * Unique technology identifier.\n   */\n  platformId: string;\n\n  /**\n   * Date of review.\n   */\n  reviewDate?: Date;\n\n  /**\n   * A map of CriterionInstance unique IDs and {@link CriterionInstance} encompassing the review data.\n   */\n  reviewedCriteria: Map;\n}\n\n/**\n * An enum representing different technology categories.\n *\n * @example\n * faas for Function-as-a-Service\n * baas for Blockchain-as-a-Service\n */\nexport enum TechnologyCategory {\n  faas = 'faas', baas = 'baas'\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TechnologyDataSource.html":{"url":"classes/TechnologyDataSource.html","title":"class - TechnologyDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TechnologyDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datasource.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            SimpleDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                criteriaBasedQuery\n                            \n                            \n                                    Public\n                                currentIndex\n                            \n                            \n                                    Private\n                                    Readonly\n                                data\n                            \n                            \n                                    Public\n                                filteredData$\n                            \n                            \n                                    Public\n                                isPaginated\n                            \n                            \n                                    Private\n                                    Readonly\n                                nameBasedQuery\n                            \n                            \n                                    Private\n                                    Readonly\n                                pageNumber\n                            \n                            \n                                    Public\n                                pageNumber$\n                            \n                            \n                                    Public\n                                pageSize\n                            \n                            \n                                    Public\n                                paginatedData$\n                            \n                            \n                                    Private\n                                    Readonly\n                                sort\n                            \n                            \n                                    Public\n                                totalInputSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                canFilter\n                            \n                            \n                                connect\n                            \n                            \n                                    Private\n                                    Static\n                                containsAny\n                            \n                            \n                                    Private\n                                    Static\n                                containsOne\n                            \n                            \n                                disconnect\n                            \n                            \n                                fetch\n                            \n                            \n                                    Private\n                                getFilteringResult\n                            \n                            \n                                    Private\n                                processData\n                            \n                            \n                                    Private\n                                pruneQuery\n                            \n                            \n                                queryByCriteria\n                            \n                            \n                                queryByName\n                            \n                            \n                                sortBy\n                            \n                            \n                                togglePagination\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, pageSize: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/datasource.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Technology[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialSort\n                                                  \n                                                        \n                                                                    Sort\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialQuery\n                                                  \n                                                        \n                                                                        CriteriaBasedQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pageSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            criteriaBasedQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Technology[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isPaginated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nameBasedQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            pageNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(0)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageNumber$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.pageNumber.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            paginatedData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            totalInputSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            canFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canFilter(filterValue: CriterionFilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            containsAny\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewedCriterion\n                                    \n                                                CriterionInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            containsOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewedCriterion\n                                    \n                                                CriterionInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \nfetch(event: PageEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            PageEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFilteringResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewedCriterion\n                                    \n                                                CriterionInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            processData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Technology[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    criteriaQuery\n                                    \n                                                CriteriaBasedQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameQuery\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sort\n                                    \n                                            Sort\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Technology[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            pruneQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pruneQuery(nextQuery: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nextQuery\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryByCriteria\n                        \n                        \n                    \n                \n            \n            \n                \nqueryByCriteria(query: CriteriaBasedQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                CriteriaBasedQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryByName\n                        \n                        \n                    \n                \n            \n            \n                \nqueryByName(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortBy\n                        \n                        \n                    \n                \n            \n            \n                \nsortBy(sort: Partial>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sort\n                                    \n                                            Partial>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            togglePagination\n                        \n                        \n                    \n                \n            \n            \n                \ntogglePagination()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, combineLatest, Observable, of} from 'rxjs';\nimport {map, shareReplay, switchMap} from 'rxjs/operators';\nimport {Technology} from './interfaces/technology';\nimport {PageEvent} from '@angular/material/paginator';\nimport {CriteriaBasedQuery, CriterionFilterType, CriterionFilterValue} from './interfaces/filtering';\nimport {CriterionInstance} from './interfaces/classification';\n\nexport interface SimpleDataSource extends DataSource {\n  connect(): Observable;\n\n  disconnect(): void;\n}\n\nexport interface Sort {\n  property: keyof T\n  order: 'asc' | 'desc'\n}\n\nexport class TechnologyDataSource implements SimpleDataSource {\n  private readonly data: Technology[];\n  private readonly pageNumber = new BehaviorSubject(0);\n  private readonly sort: BehaviorSubject>;\n  private readonly criteriaBasedQuery: BehaviorSubject;\n  private readonly nameBasedQuery: BehaviorSubject;\n\n  public isPaginated = true;\n  public totalInputSize: number;\n  public currentIndex: number = 0;\n  public pageNumber$ = this.pageNumber.asObservable();\n  public filteredData$: Observable;\n  public paginatedData$: Observable;\n\n  constructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, public pageSize = 10) {\n    this.data = data;\n    this.sort = new BehaviorSubject>(initialSort);\n    this.criteriaBasedQuery = new BehaviorSubject(initialQuery);\n    this.nameBasedQuery = new BehaviorSubject(undefined);\n\n    this.filteredData$ = combineLatest([this.criteriaBasedQuery, this.nameBasedQuery, this.sort]).pipe(\n      switchMap(([criteriaQuery, nameQuery, sort]) => {\n          let result = this.processData(this.data, criteriaQuery, nameQuery, sort);\n          this.totalInputSize = result.length;\n          return of(result);\n        }\n      ),\n      shareReplay(1)\n    );\n\n    this.paginatedData$ = combineLatest([this.filteredData$, this.pageNumber$]).pipe(\n      map(([data, pageNumber]) => {\n        let startIndex = pageNumber * this.pageSize;\n        let endIndex = startIndex + this.pageSize;\n        if (endIndex > data.length) {\n          endIndex = data.length;\n        }\n        return data.slice(startIndex, endIndex);\n      })\n    );\n  }\n\n  sortBy(sort: Partial>): void {\n    const lastSort = this.sort.getValue();\n    const nextSort = {...lastSort, ...sort};\n    this.sort.next(nextSort);\n  }\n\n  queryByCriteria(query: CriteriaBasedQuery): void {\n    const lastQuery = this.criteriaBasedQuery.getValue();\n    const nextQuery = {...lastQuery, ...query};\n    console.log('new query:');\n    this.pruneQuery(nextQuery);\n    console.log(nextQuery);\n    this.criteriaBasedQuery.next(nextQuery);\n  }\n\n  queryByName(query: string): void {\n    this.nameBasedQuery.next(query);\n  }\n\n  fetch(event: PageEvent): void {\n    this.pageSize = event.pageSize;\n    this.pageNumber.next(event.pageIndex);\n    this.currentIndex = event.pageIndex;\n  }\n\n  togglePagination(): void {\n    this.isPaginated = !this.isPaginated;\n  }\n\n  connect(): Observable {\n    if (this.isPaginated) {\n      return this.paginatedData$;\n    }\n    return this.filteredData$;\n  }\n\n  disconnect(): void {\n  }\n\n  private processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort): Technology[] {\n    let result: Technology[] = data;\n    if (nameQuery) {\n      result = data.filter(platform => nameQuery ? platform.platformName.toLocaleLowerCase().includes(nameQuery) : true);\n    }\n\n    if (criteriaQuery && Object.keys(criteriaQuery).length !== 0) {\n      Object.keys(criteriaQuery).forEach(key => {\n        if (TechnologyDataSource.canFilter(criteriaQuery[key])) {\n          result = result.filter(t => {\n            let filteringResult = false;\n            if (t.dossier.reviewedCriteria.has(key)) {\n              filteringResult = this.getFilteringResult(criteriaQuery[key], t.dossier.reviewedCriteria.get(key));\n            }\n            return filteringResult;\n          });\n        }\n      });\n      console.log('found: ' + result.length);\n    }\n\n    if (sort && sort.order === 'asc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? 1 : -1);\n    } else if (sort && sort.order === 'desc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? -1 : 1);\n    }\n\n    return result;\n  }\n\n  private static canFilter(filterValue: CriterionFilterValue): boolean {\n    if (filterValue.filterType && filterValue.filterType === CriterionFilterType.lte) {\n      return typeof filterValue.value === 'number';\n    } else if (filterValue.filterType && filterValue.filterType === CriterionFilterType.containsAll ||\n      filterValue.filterType === CriterionFilterType.containsOne ||\n      filterValue.filterType === CriterionFilterType.excludesAll) {\n      let v = filterValue.value as string[];\n      return v && v.length > 0;\n    } else if (filterValue.filterType === CriterionFilterType.bool || filterValue.filterType === CriterionFilterType.containsAny) {\n      return typeof filterValue.value === 'boolean';\n    }\n\n    return false;\n  }\n\n  private pruneQuery(nextQuery: { [p: string]: CriterionFilterValue }) {\n    let keysToDelete = [];\n    Object.keys(nextQuery).forEach(key => {\n        if (nextQuery[key].filterType === null) {\n          keysToDelete.push(key);\n        } else if (nextQuery[key].filterType === CriterionFilterType.bool ||\n          nextQuery[key].filterType === CriterionFilterType.containsAny ||\n          nextQuery[key].filterType === CriterionFilterType.lte) {\n          if (nextQuery[key].value === null) {\n            keysToDelete.push(key);\n          }\n        } else if (nextQuery[key].filterType === CriterionFilterType.containsOne ||\n          nextQuery[key].filterType === CriterionFilterType.containsAll ||\n          nextQuery[key].filterType === CriterionFilterType.excludesAll) {\n          let valueToCheck = nextQuery[key].value as string[];\n          if (valueToCheck.length === 0) {\n            keysToDelete.push(key);\n          }\n        }\n      }\n    );\n    keysToDelete.forEach(key => delete nextQuery[key]);\n  }\n\n  private getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    if (filterValue.filterType === CriterionFilterType.containsAny) {\n      return TechnologyDataSource.containsAny(filterValue, reviewedCriterion);\n    }\n\n    for (let reviewValue of reviewedCriterion.values) {\n      if (filterValue.filterType === CriterionFilterType.lte) {\n        return reviewedCriterion.values[0].value  allValues.push(v.value));\n        let target = Array.from(filterValue.value as string[]);\n\n        if (filterValue.filterType === CriterionFilterType.containsAll) {\n          return target.every(v => allValues.includes(v));\n        } else if (filterValue.filterType === CriterionFilterType.excludesAll) {\n          return target.every(v => !allValues.includes(v));\n        }\n      }\n    }\n  }\n\n  private static containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValue = filterValue.value as boolean;\n    if (chosenValue) {\n      return Array.from(reviewedCriterion.values).length > 0;\n    } else {\n      return Array.from(reviewedCriterion.values).length === 0;\n    }\n  }\n\n  private static containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValues = filterValue.value as string[];\n    if (chosenValues && chosenValues.length > 0) {\n      for (let entry of reviewedCriterion.values) {\n        let value = entry.value as string;\n        if (chosenValues.indexOf(value) !== -1) {\n          return true;\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologyDetailsComponent.html":{"url":"components/TechnologyDetailsComponent.html","title":"component - TechnologyDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TechnologyDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technology-details/technology-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technology-details\n            \n\n            \n                styleUrls\n                ./technology-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technology-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bottomNav\n                            \n                            \n                                framework\n                            \n                            \n                                platform\n                            \n                            \n                                selectedViewCombination\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-details/technology-details.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:scroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:scroll(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-details/technology-details.component.ts:32\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-details/technology-details.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bottomNav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BottomNavComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('bottomNavComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-details/technology-details.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            framework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassificationFramework\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-details/technology-details.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Technology\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-details/technology-details.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedViewCombination\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassificationViewCombination\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-details/technology-details.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, HostListener, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Technology} from '../../shared/interfaces/technology';\nimport {ClassificationFramework, ClassificationViewCombination} from '../../shared/interfaces/classification';\nimport {BottomNavComponent} from '../../shared/bottom-nav/bottom-nav.component';\n\n@Component({\n  selector: 'app-technology-details',\n  templateUrl: './technology-details.component.html',\n  styleUrls: ['./technology-details.component.scss']\n})\nexport class TechnologyDetailsComponent implements OnInit {\n  @ViewChild('bottomNavComponent') bottomNav: BottomNavComponent;\n\n  platform: Technology;\n  framework: ClassificationFramework;\n  selectedViewCombination: ClassificationViewCombination;\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.platform = data['resolvedData'][0];\n      this.framework = data['resolvedData'][1];\n\n      this.framework.viewCombinations.forEach(vc => vc.default ? this.selectedViewCombination = vc : false);\n    });\n  }\n\n  @HostListener('window:scroll', ['$event'])\n  onWindowScroll(e) {\n    this.bottomNav.toTop = window.pageYOffset > 200;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    {{platform.platformName}}\n    {{platform.description}}\n\n    \n      Technology View Mode\n      \n        {{ option.name }}\n      \n    \n  \n  \n  \n\n\n\n  \n    home Home\n  \n  \n    view_list Platforms\n  \n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./technology-details.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.technology {\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  margin: 0 auto;\n}\n\n.technology__header-block {\n  padding: 0 1rem;\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.technology__logo {\n  max-height: 5rem;\n  max-width: 10rem;\n  margin: 1.5rem .5rem 0;\n  border: none;\n  align-self: center;\n}\n\n.technology__header {\n  margin-top: 2rem;\n  align-self: center;\n  //color: $violet-600;\n}\n\n.technology__view-title {\n  margin-left: .5rem;\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{platform.platformName}}    {{platform.description}}          Technology View Mode              {{ option.name }}                      home Home        view_list Platforms  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologyDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TechnologyDetailsResolverService.html":{"url":"guards/TechnologyDetailsResolverService.html","title":"guard - TechnologyDetailsResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TechnologyDetailsResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/technologies/technology-details-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, config: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-details-resolver.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-details-resolver.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {ClassificationFramework} from '../shared/interfaces/classification';\nimport {forkJoin, Observable} from 'rxjs';\nimport {DataService} from '../core/services/data.service';\nimport {Technology} from '../shared/interfaces/technology';\nimport {AppConfigService} from '../core/services/app-config.service';\n\n@Injectable()\nexport class TechnologyDetailsResolverService implements Resolve {\n  constructor(private dataService: DataService, private config: AppConfigService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    const id = route.params['platformId'];\n    const category = this.config.defaultTechCategory;\n\n    return forkJoin([\n      this.dataService.getTechnology(id, true),\n      this.dataService.getFrameworkForTechnologyType(category)\n    ]);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TechnologyDossier.html":{"url":"interfaces/TechnologyDossier.html","title":"interface - TechnologyDossier","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TechnologyDossier\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/technology.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing the review data which comprises CriterionInstances related to a particular technology.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        platformId\n                                \n                                \n                                            Optional\n                                        reviewDate\n                                \n                                \n                                        reviewedCriteria\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique technology identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewDate\n                                    \n                                \n                                \n                                    \n                                        reviewDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Date of review.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewedCriteria\n                                    \n                                \n                                \n                                    \n                                        reviewedCriteria:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A map of CriterionInstance unique IDs and CriterionInstance encompassing the review data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {CriterionInstance} from './classification';\n\n/**\n * An interface representing a technology for comparison,\n * which might contain the review data in a form of a {@link TechnologyDossier}.\n *\n * @example a FaaS platform\n */\nexport interface Technology {\n  /**\n   * Unique technology identifier.\n   */\n  id: string;\n\n  /**\n   * Technology name.\n   */\n  platformName: string;\n\n  /**\n   * [Category]{@link TechnologyCategory} this technology belongs to.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  category: TechnologyCategory;\n\n  /**\n   * A string value that can be used by the {@link LogoLocatorService} to locate the technology logo.\n   *\n   * @example\n   * azure.functions for Azure Functions,\n   * aws.s3 for AWS S3\n   */\n  logoLocator: string;\n\n  /**\n   * Technology logo location path generated by the {@link LogoLocatorService}.\n   */\n  logoLocation?: string;\n\n  /**\n   * Short description shown in technology lists.\n   */\n  shortDescription?: string;\n\n  /**\n   * Full description shown in technology details.\n   */\n  description?: string;\n\n  /**\n   * A [TechnologyDossier]{@link TechnologyDossier} storing the review data.\n   */\n  dossier?: TechnologyDossier;\n}\n\n/**\n * An interface representing the review data which comprises [CriterionInstances]{@link CriterionInstance} related to a particular technology.\n */\nexport interface TechnologyDossier {\n  /**\n   * Unique technology identifier.\n   */\n  platformId: string;\n\n  /**\n   * Date of review.\n   */\n  reviewDate?: Date;\n\n  /**\n   * A map of CriterionInstance unique IDs and {@link CriterionInstance} encompassing the review data.\n   */\n  reviewedCriteria: Map;\n}\n\n/**\n * An enum representing different technology categories.\n *\n * @example\n * faas for Function-as-a-Service\n * baas for Blockchain-as-a-Service\n */\nexport enum TechnologyCategory {\n  faas = 'faas', baas = 'baas'\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TechnologyDossierResponse.html":{"url":"interfaces/TechnologyDossierResponse.html","title":"interface - TechnologyDossierResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TechnologyDossierResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        platformId\n                                \n                                \n                                            Optional\n                                        reviewDate\n                                \n                                \n                                        reviewedCriteria\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewDate\n                                    \n                                \n                                \n                                    \n                                        reviewDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewedCriteria\n                                    \n                                \n                                \n                                    \n                                        reviewedCriteria:         CriteriaReview\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriteriaReview\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TechnologyFilterConfiguration.html":{"url":"interfaces/TechnologyFilterConfiguration.html","title":"interface - TechnologyFilterConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TechnologyFilterConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a filter configuration for a given technology TechnologyCategory.\nThis configuration defines which criteria have dedicated filter elements in the UI.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filterId\n                                \n                                \n                                        filters\n                                \n                                \n                                        name\n                                \n                                \n                                        technologyCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterId\n                                    \n                                \n                                \n                                    \n                                        filterId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique filter configuration identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         CriterionFilterConfiguration[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterConfiguration[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of filters to be rendered in this block defined using CriterionFilterConfiguration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Technology category\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a rendered filter block in the UI which may comprise multiple filters with {@link CriterionFilterConfiguration}.\n */\nexport interface RenderedFilterBlock {\n  /**\n   * Name of the filter block\n   */\n  blockName: string;\n\n  /**\n   * Material Icon name\n   */\n  blockIcon?: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  /**\n   * Unique filter configuration identifier\n   */\n  filterId: string;\n\n  /**\n   * Technology category\n   */\n  technologyCategory: TechnologyCategory;\n\n  /**\n   * Configuration name\n   */\n  name: string;\n\n  /**\n   * List of filters to be rendered in this block defined using {@link CriterionFilterConfiguration}\n   */\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  /**\n   * Unique criterion identifier\n   */\n  criterionId: string;\n\n  /**\n   * Filter name\n   */\n  displayName: string;\n\n  /**\n   * Filter type {@see CriterionFilterType}\n   */\n  filterType: CriterionFilterType;\n\n  /**\n   * Distinct filter values obtained from the review data\n   */\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n */\nexport enum CriterionFilterType {\n  /**\n   * Indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n   */\n  bool = 'bool',\n\n  /**\n   * Indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n   */\n  lte = 'lte',\n\n  /**\n   * Indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n   */\n  gte = 'gte',\n\n  /**\n   * At least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n   */\n  containsOne = 'containsOne',\n\n  /**\n   * At least 1 arbitrary text value must be contained, translates to a toggle in the UI\n   */\n  containsAny = 'containsAny',\n\n  /**\n   * All specified text values must be contained, translates to a group of checkboxes in the UI\n   */\n  containsAll = 'containsAll',\n\n  /**\n   * All specified text values must not be contained, translates to a group of checkboxes in the UI\n   */\n  excludesAll = 'excludesAll'\n}\n\n/**\n * An interface representing a filter-based query mapping unique criteria IDs to respective [CriterionFilterValues]{@link CriterionFilterValue}.\n */\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\n/**\n * An interface representing a filter value used in a user's query.\n */\nexport interface CriterionFilterValue {\n  /**\n   * Filter type\n   */\n  filterType?: CriterionFilterType;\n\n  /**\n   * Actual value, type depends on the filter type and respective UI elements.\n   *\n   * @example\n   * a list of selected checkboxes resulting in a list of string values   *\n   */\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologyListComponent.html":{"url":"components/TechnologyListComponent.html","title":"component - TechnologyListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TechnologyListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technology-list/technology-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technology-list\n            \n\n            \n                styleUrls\n                ./technology-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technology-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageSizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNameChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-list/technology-list.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :         TechnologyDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-list/technology-list.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-list/technology-list.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNameChange\n                        \n                        \n                    \n                \n            \n            \n                \nonNameChange(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-list/technology-list.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSizeOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [5, 10]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-list/technology-list.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {TechnologyDataSource} from '../../shared/datasource';\n\n@Component({\n  selector: 'app-technology-list',\n  templateUrl: './technology-list.component.html',\n  styleUrls: ['./technology-list.component.scss']\n})\nexport class TechnologyListComponent implements OnInit {\n  @Input() dataSource: TechnologyDataSource;\n  pageSizeOptions: number[] = [5, 10];\n\n  constructor() {\n  }\n\n  onNameChange(name: string) {\n    this.dataSource.queryByName(name);\n    this.dataSource.fetch({pageIndex: 0, length: this.dataSource.totalInputSize, pageSize: this.dataSource.pageSize});\n  }\n\n  ngOnInit(): void {\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n      Filter by name\n      \n      search\n    \n  \n\n  \n    \n      \n        \n         {{p.platformName}} -->\n\n        \n          \n            {{p.shortDescription}}\n          \n\n        \n\n        \n          arrow_forward\n        \n\n      \n    \n  \n\n  \n  \n\n\n\n\n    \n\n    \n                \n                    ./technology-list.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  flex: 1;\n}\n\n.platforms-list {\n  margin-bottom: 1rem;\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.platforms-list__search {\n  display: flex;\n  justify-content: center;\n}\n\n.platforms-list__search-field {\n  width: 80%;\n}\n\n.platforms-list__cards {\n  flex: 1;\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: flex-start;\n}\n\n.platforms-list__card {\n  margin: 0.2rem .5rem 0 .5rem;\n  padding: 0 .5rem !important;\n  border-left: .2rem solid $violet-400;\n  transition: all .3s ease;\n  flex: 1 1 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n\n  &:hover {\n    border-left: .2rem solid $salad-600;\n    box-shadow: 0 10px 16px rgba(0, 0, 0, 0.2) !important;\n    cursor: pointer;\n  }\n}\n\n.platforms-list__logo {\n  max-height: 3rem;\n  max-width: 3rem;\n  margin: 0 .5rem;\n  border: none;\n  align-self: center;\n}\n\n.platforms-list__card-spacer {\n  flex-grow: 2;\n}\n\n.platforms-list__card-description {\n  flex: 1;\n  font-size: .8rem;\n  padding-right: .5rem;\n}\n\n.platforms-list__explore-button {\n  @include nav_item;\n}\n\n.platforms-list__paginator {\n  background: none;\n}\n\n@media (min-width: 790px) {\n  .platform-section__card-description {\n    display: flex;\n    flex: 1;\n    font-size: .95rem;\n  }\n\n  .platforms-list__cards {\n    display: flex;\n    flex-flow: row wrap;\n  }\n\n  .platforms-list__card {\n    flex: 1 1 auto;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n  }\n\n}\n\n@media screen and (min-width: 900px) {\n  .platforms-list {\n    max-width: 910px;\n    min-width: 900px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Filter by name            search                                   {{p.platformName}} -->                              {{p.shortDescription}}                                    arrow_forward                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologyListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologyTableComponent.html":{"url":"components/TechnologyTableComponent.html","title":"component - TechnologyTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TechnologyTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technology-table/technology-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technology-table\n            \n\n            \n                styleUrls\n                ./technology-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technology-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnsToDisplay\n                            \n                            \n                                criteriaColumns\n                            \n                            \n                                groupingColumnIds\n                            \n                            \n                                groupingColumns\n                            \n                            \n                                tableContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateGroupingColumns\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                scrollLeft\n                            \n                            \n                                scrollRight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                filterConfiguration\n                            \n                            \n                                framework\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :         TechnologyDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filterConfiguration\n                    \n                \n                \n                    \n                        Type :         TechnologyFilterConfiguration\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        framework\n                    \n                \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sidenav\n                    \n                \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateGroupingColumns\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateGroupingColumns(grouping: CriteriaGrouping, groupingColumns: TableColumn[], color: string, parentGroupingName?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grouping\n                                    \n                                                CriteriaGrouping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupingColumns\n                                    \n                                                TableColumn[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentGroupingName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollLeft\n                        \n                        \n                    \n                \n            \n            \n                \nscrollLeft()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollRight\n                        \n                        \n                    \n                \n            \n            \n                \nscrollRight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnsToDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['techName']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            criteriaColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TableColumn[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupingColumnIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['techNameHeader']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupingColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TableColumn[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('content')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {TechnologyDataSource} from '../../shared/datasource';\nimport {ClassificationFramework, CriteriaGrouping} from '../../shared/interfaces/classification';\nimport {TechnologyFilterConfiguration} from '../../shared/interfaces/filtering';\nimport {MatSidenav} from '@angular/material/sidenav';\n\nexport class TableColumn {\n  id: string;\n  displayName: string;\n  colSpan?: number;\n  color?: string;\n}\n\n@Component({\n  selector: 'app-technology-table',\n  templateUrl: './technology-table.component.html',\n  styleUrls: ['./technology-table.component.scss']\n})\nexport class TechnologyTableComponent implements OnInit {\n  @Input() dataSource: TechnologyDataSource;\n  @Input() framework: ClassificationFramework;\n  @Input() filterConfiguration: TechnologyFilterConfiguration;\n  @Input() sidenav: MatSidenav;\n\n  @ViewChild('content') tableContainer: ElementRef;\n\n  criteriaColumns: TableColumn[] = [];\n  groupingColumns: TableColumn[] = [];\n  groupingColumnIds: string[] = ['techNameHeader'];\n\n  columnsToDisplay = ['techName'];\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n    this.framework.viewCombinations.forEach(viewComb => {\n      if (viewComb.default) {\n        viewComb.views.forEach(view => {\n          let groupingColumns: TableColumn[] = [];\n          Array.from(view.groupings).forEach((grouping, index) => {\n            let color = index % 2 === 0 ? '#ccc' : 'white';\n            this.generateGroupingColumns(grouping, groupingColumns, color);\n          });\n          if (groupingColumns.length > 0) {\n            this.groupingColumns.push(...groupingColumns);\n            let viewColspan = 0;\n            groupingColumns.forEach(c => {\n              if (c.colSpan) {\n                viewColspan += c.colSpan;\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  private generateGroupingColumns(grouping: CriteriaGrouping, groupingColumns: TableColumn[], color:string, parentGroupingName?: string) {\n    let counter = 0;\n    grouping.criteria.forEach((c, index) => {\n      this.criteriaColumns.push({\n        id: c.id,\n        displayName: c.name,\n        color: color\n      } as TableColumn);\n      this.columnsToDisplay.push(c.id);\n      counter += 1;\n    });\n    if (counter > 0) {\n      let name = parentGroupingName ? parentGroupingName.concat('.').concat(grouping.name) : grouping.name;\n      groupingColumns.push({\n        id: grouping.id,\n        displayName: name,\n        color: color,\n        colSpan: counter\n      } as TableColumn);\n      this.groupingColumnIds.push(grouping.id);\n    }\n    if (grouping.groupings) {\n      grouping.groupings.forEach(g => this.generateGroupingColumns(g, groupingColumns, color, grouping.name));\n    }\n  }\n\n  scrollLeft() {\n    this.tableContainer.nativeElement.scrollLeft -= 150;\n  }\n\n  scrollRight() {\n    this.tableContainer.nativeElement.scrollLeft += 150;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Name\n    \n\n    \n      Name\n      \n        \n          \n           {{tech.platformName}}\n        \n      \n    \n\n    \n      \n         {{c.displayName}}\n      \n    \n\n    \n      \n         {{c.displayName}}\n        \n          \n            \n              {{entry.value | yesNo }}\n            \n          \n        \n      \n    \n\n    \n    \n    \n  \n\n\n  \n    arrow_back_ios Scroll Left\n  \n  \n    arrow_forward_ios Scroll Right\n  \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./technology-table.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.table-container {\n  align-self: center;\n  flex-grow: 1;\n  height: auto;\n  width: 93vw;\n  margin-bottom: 3rem;\n  overflow: scroll;\n  scroll-behavior: smooth;\n}\n\n.tech-name-header-cell {\n  display:table-cell;\n  background: white;\n  min-width: 3.5rem;\n  border-right: 2px solid $violet-600;\n}\n\n.grouping-header-cell {\n  display:table-cell;\n  min-width: 3.5rem;\n  padding: 0 .5rem;\n  border-right: 1px solid $gray-10;\n}\n\n.criterion-header-cell {\n  display:table-cell;\n  min-width: 5rem;\n  padding: 0 1rem;\n  border-right: 1px solid $gray-10;\n  border-bottom: 1px solid $gray-10;\n}\n\n.tech-name-cell {\n  height: 100%;\n  padding: 0 !important;\n  display:table-cell;\n  background: white;\n  min-width: 3.5rem;\n  border-right: 2px solid $violet-600;\n\n  img {\n    max-width: 2rem;\n  }\n}\n\n.tech-name-content {\n  height: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n}\n\n.value-cell {\n  padding: 0 1rem !important;\n  word-wrap: break-word !important;\n}\n\n.value-list {\n  display: flex;\n  flex-flow: row wrap;\n}\n\n.value {\n  font-size: .8rem;\n}\n\n/*.tech-row:nth-child(even) {\n  background-color: $gray-10;\n}*/\n\n@media screen and (min-width: 900px) {\n  .table-container {\n    max-width: 1400px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Name              Name                                   {{tech.platformName}}                                     {{c.displayName}}                             {{c.displayName}}                                            {{entry.value | yesNo }}                                                            arrow_back_ios Scroll Left        arrow_forward_ios Scroll Right  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologyTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TruncatePipe.html":{"url":"pipes/TruncatePipe.html","title":"pipe - TruncatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TruncatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/truncate.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        truncate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, limit: number, completeWords, ellipsis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/truncate.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        25\n                                    \n\n                                \n                                \n                                    completeWords\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    ellipsis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '...'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = '...') {\n    if (completeWords) {\n      limit = value.substr(0, limit).lastIndexOf(' ');\n    }\n    return value.length > limit ? value.substr(0, limit) + ellipsis : value;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/YesNoPipe.html":{"url":"pipes/YesNoPipe.html","title":"pipe - YesNoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  YesNoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/yes-no.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        yesNo\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/yes-no.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'yesNo'\n})\nexport class YesNoPipe implements PipeTransform {\n  transform(value: any) {\n    if (typeof value === 'boolean') {\n      return value ? 'yes' : 'no';\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/ensure-module-loaded-once.guard.ts\n            \n            class\n            EnsureModuleLoadedOnceGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/app-config.service.ts\n            \n            injectable\n            AppConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            criteriaGroupingsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            criteriaPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            dossiersPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            filterConfigurationsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            frameworksPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            frameworkViewCombinationsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            frameworkViewsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            infoResourcesPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            supportedPlatformsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/logo-locator.service.ts\n            \n            injectable\n            LogoLocatorService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/random-color.service.ts\n            \n            injectable\n            RandomColorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/random-color.service.ts\n            \n            variable\n            randomColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/home/banner/banner.component.ts\n            \n            component\n            BannerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/overview/overview.component.ts\n            \n            component\n            OverviewComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/faq/faq.component.ts\n            \n            component\n            FaqComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/framework/framework.component.ts\n            \n            component\n            FrameworkComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/information/information.component.ts\n            \n            component\n            InformationComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/information/resolvers/framework-resolver.service.ts\n            \n            guard\n            FrameworkResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/resolvers/resources-resolver.service.ts\n            \n            guard\n            ResourcesResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/resources/resources.component.ts\n            \n            component\n            ResourcesComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/bottom-nav/bottom-nav.component.ts\n            \n            component\n            BottomNavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/child-grouping/child-grouping.component.ts\n            \n            component\n            ChildGroupingComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/criterion/criterion.component.ts\n            \n            component\n            CriterionComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/datasource.ts\n            \n            class\n            TechnologyDataSource\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/shared/datasource.ts\n            \n            interface\n            SimpleDataSource\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/datasource.ts\n            \n            interface\n            Sort\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/framework-renderer/framework-renderer.component.ts\n            \n            component\n            FrameworkRendererComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationCriterion\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationFramework\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationView\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationViewCombination\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            CriteriaGrouping\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            CriterionInstance\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            CriterionValue\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            CriteriaBasedQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            CriterionFilterConfiguration\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            CriterionFilterValue\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            RenderedFilterBlock\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            TechnologyFilterConfiguration\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/info.ts\n            \n            interface\n            InfoResource\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/info.ts\n            \n            interface\n            InfoResourceSection\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            ClassificationFrameworkResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            ClassificationViewCombinationResponse\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            ClassificationViewResponse\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            CriteriaGroupingResponse\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            CriteriaReview\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            TechnologyDossierResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/technology.ts\n            \n            interface\n            Technology\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/technology.ts\n            \n            interface\n            TechnologyDossier\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/set-to-array.pipe.ts\n            \n            pipe\n            SetToArrayPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/truncate.pipe.ts\n            \n            pipe\n            TruncatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/yes-no.pipe.ts\n            \n            pipe\n            YesNoPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/technologies/criterion-filter/criterion-filter.component.ts\n            \n            component\n            CriterionFilterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/technologies/technologies-resolver.service.ts\n            \n            guard\n            TechnologiesResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/technologies/technologies.component.ts\n            \n            component\n            TechnologiesComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-details-resolver.service.ts\n            \n            guard\n            TechnologyDetailsResolverService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-details/technology-details.component.ts\n            \n            component\n            TechnologyDetailsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-list/technology-list.component.ts\n            \n            component\n            TechnologyListComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-table/technology-table.component.ts\n            \n            component\n            TechnologyTableComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-table/technology-table.component.ts\n            \n            class\n            TableColumn\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.1.1\n        \n            @angular/cdk : ^11.1.1\n        \n            @angular/cli : ^11.1.2\n        \n            @angular/common : ^11.1.1\n        \n            @angular/compiler : ^11.1.1\n        \n            @angular/core : ^11.1.1\n        \n            @angular/flex-layout : ^11.0.0-beta.33\n        \n            @angular/forms : ^11.1.1\n        \n            @angular/material : ^11.1.1\n        \n            @angular/platform-browser : ^11.1.1\n        \n            @angular/platform-browser-dynamic : ^11.1.1\n        \n            @angular/router : ^11.1.1\n        \n            randomcolor : ^0.6.2\n        \n            rxjs : ^6.6.3\n        \n            tslib : ^2.0.0\n        \n            zone.js : ^0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CriterionFilterType   (src/.../filtering.ts)\n                        \n                        \n                            Extension   (src/.../logo-locator.service.ts)\n                        \n                        \n                            TechnologyCategory   (src/.../technology.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/interfaces/filtering.ts\n    \n        \n            \n                \n                    \n                        \n                        CriterionFilterType\n                    \n                \n                    \n                        \n                            An enum representing a filter type for a given CriterionFilterConfiguration.\nBased on these settings the respective filtering behavior is generated.\n\n                        \n                    \n                        \n                            \n                                 bool\n                            \n                        \n                        \n                            \n                                Value : bool\n                            \n                        \n                        \n                            \n                                 lte\n                            \n                        \n                        \n                            \n                                Value : lte\n                            \n                        \n                        \n                            \n                                 gte\n                            \n                        \n                        \n                            \n                                Value : gte\n                            \n                        \n                        \n                            \n                                 containsOne\n                            \n                        \n                        \n                            \n                                Value : containsOne\n                            \n                        \n                        \n                            \n                                 containsAny\n                            \n                        \n                        \n                            \n                                Value : containsAny\n                            \n                        \n                        \n                            \n                                 containsAll\n                            \n                        \n                        \n                            \n                                Value : containsAll\n                            \n                        \n                        \n                            \n                                 excludesAll\n                            \n                        \n                        \n                            \n                                Value : excludesAll\n                            \n                        \n            \n        \n\n    src/app/core/services/logo-locator.service.ts\n    \n        \n            \n                \n                    \n                        \n                        Extension\n                    \n                \n                        \n                            \n                                 png\n                            \n                        \n                        \n                            \n                                Value : .png\n                            \n                        \n                        \n                            \n                                 jpg\n                            \n                        \n                        \n                            \n                                Value : .jpg\n                            \n                        \n                        \n                            \n                                 jpeg\n                            \n                        \n                        \n                            \n                                Value : .jpeg\n                            \n                        \n                        \n                            \n                                 svg\n                            \n                        \n                        \n                            \n                                Value : .svg\n                            \n                        \n            \n        \n\n    src/app/shared/interfaces/technology.ts\n    \n        \n            \n                \n                    \n                        \n                        TechnologyCategory\n                    \n                \n                    \n                        \n                            An enum representing different technology categories.\n\n                        \n                    \n                        \n                            \n                                 faas\n                            \n                        \n                        \n                            \n                                Value : faas\n                            \n                        \n                        \n                            \n                                 baas\n                            \n                        \n                        \n                            \n                                Value : baas\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFaaStener\n\nFaaStener is an open source selection support system intended to simplify browsing and filtering Function-as-a-Service (FaaS) platforms.\nIt is build using Angular and Angular Material and provides a graphical user interface for interacting with the platform’s data collected using the classification framework introduced in this research publication.\nUsing FaaStener, one can perform multi-attribute search for suitable FaaS platform based on the specified requirements and to visualize the corresponding results.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InformationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InformationRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TechnologiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TechnologiesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_InformationModule\n\n\n\ncluster_InformationModule_declarations\n\n\n\ncluster_InformationModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TechnologiesModule\n\n\n\ncluster_TechnologiesModule_declarations\n\n\n\ncluster_TechnologiesModule_imports\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBannerComponent\n\nBannerComponent\n\nAppModule -->\n\nBannerComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nAppModule -->\n\nOverviewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nInformationModule\n\nInformationModule\n\nInformationModule -->\n\nSharedModule->InformationModule\n\n\n\n\n\nBottomNavComponent \n\nBottomNavComponent \n\nBottomNavComponent  -->\n\nSharedModule->BottomNavComponent \n\n\n\n\n\nChildGroupingComponent \n\nChildGroupingComponent \n\nChildGroupingComponent  -->\n\nSharedModule->ChildGroupingComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nFrameworkRendererComponent \n\nFrameworkRendererComponent \n\nFrameworkRendererComponent  -->\n\nSharedModule->FrameworkRendererComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nPageNotFoundComponent \n\nPageNotFoundComponent \n\nPageNotFoundComponent  -->\n\nSharedModule->PageNotFoundComponent \n\n\n\n\n\nSetToArrayPipe \n\nSetToArrayPipe \n\nSetToArrayPipe  -->\n\nSharedModule->SetToArrayPipe \n\n\n\n\n\nTruncatePipe \n\nTruncatePipe \n\nTruncatePipe  -->\n\nSharedModule->TruncatePipe \n\n\n\n\n\nYesNoPipe \n\nYesNoPipe \n\nYesNoPipe  -->\n\nSharedModule->YesNoPipe \n\n\n\n\n\nTechnologiesModule\n\nTechnologiesModule\n\nTechnologiesModule -->\n\nSharedModule->TechnologiesModule\n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nCoreModule -->\n\nAppConfigService->CoreModule\n\n\n\n\n\nDataService\n\nDataService\n\nCoreModule -->\n\nDataService->CoreModule\n\n\n\n\n\nLogoLocatorService\n\nLogoLocatorService\n\nCoreModule -->\n\nLogoLocatorService->CoreModule\n\n\n\n\n\nRandomColorService\n\nRandomColorService\n\nCoreModule -->\n\nRandomColorService->CoreModule\n\n\n\n\n\nFaqComponent\n\nFaqComponent\n\nInformationModule -->\n\nFaqComponent->InformationModule\n\n\n\n\n\nFrameworkComponent\n\nFrameworkComponent\n\nInformationModule -->\n\nFrameworkComponent->InformationModule\n\n\n\n\n\nInformationComponent\n\nInformationComponent\n\nInformationModule -->\n\nInformationComponent->InformationModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nInformationModule -->\n\nResourcesComponent->InformationModule\n\n\n\n\n\nInformationRoutingModule\n\nInformationRoutingModule\n\nInformationModule -->\n\nInformationRoutingModule->InformationModule\n\n\n\n\n\nBottomNavComponent\n\nBottomNavComponent\n\nSharedModule -->\n\nBottomNavComponent->SharedModule\n\n\n\n\n\nChildGroupingComponent\n\nChildGroupingComponent\n\nSharedModule -->\n\nChildGroupingComponent->SharedModule\n\n\n\n\n\nCriterionComponent\n\nCriterionComponent\n\nSharedModule -->\n\nCriterionComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nFrameworkRendererComponent\n\nFrameworkRendererComponent\n\nSharedModule -->\n\nFrameworkRendererComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nSharedModule -->\n\nPageNotFoundComponent->SharedModule\n\n\n\n\n\nSetToArrayPipe\n\nSetToArrayPipe\n\nSharedModule -->\n\nSetToArrayPipe->SharedModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nSharedModule -->\n\nTruncatePipe->SharedModule\n\n\n\n\n\nYesNoPipe\n\nYesNoPipe\n\nSharedModule -->\n\nYesNoPipe->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nCriterionFilterComponent\n\nCriterionFilterComponent\n\nTechnologiesModule -->\n\nCriterionFilterComponent->TechnologiesModule\n\n\n\n\n\nTechnologiesComponent\n\nTechnologiesComponent\n\nTechnologiesModule -->\n\nTechnologiesComponent->TechnologiesModule\n\n\n\n\n\nTechnologyDetailsComponent\n\nTechnologyDetailsComponent\n\nTechnologiesModule -->\n\nTechnologyDetailsComponent->TechnologiesModule\n\n\n\n\n\nTechnologyListComponent\n\nTechnologyListComponent\n\nTechnologiesModule -->\n\nTechnologyListComponent->TechnologiesModule\n\n\n\n\n\nTechnologyTableComponent\n\nTechnologyTableComponent\n\nTechnologiesModule -->\n\nTechnologyTableComponent->TechnologiesModule\n\n\n\n\n\nTechnologiesRoutingModule\n\nTechnologiesRoutingModule\n\nTechnologiesModule -->\n\nTechnologiesRoutingModule->TechnologiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    21 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    24 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            criteriaGroupingsPath   (src/.../data.service.ts)\n                        \n                        \n                            criteriaPath   (src/.../data.service.ts)\n                        \n                        \n                            dossiersPath   (src/.../data.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            filterConfigurationsPath   (src/.../data.service.ts)\n                        \n                        \n                            frameworksPath   (src/.../data.service.ts)\n                        \n                        \n                            frameworkViewCombinationsPath   (src/.../data.service.ts)\n                        \n                        \n                            frameworkViewsPath   (src/.../data.service.ts)\n                        \n                        \n                            infoResourcesPath   (src/.../data.service.ts)\n                        \n                        \n                            randomColor   (src/.../random-color.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            supportedPlatformsPath   (src/.../data.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/data.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            criteriaGroupingsPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/groupings.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            criteriaPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/criteria.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dossiersPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/platforms/'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterConfigurationsPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/filters.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frameworksPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/frameworks.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frameworkViewCombinationsPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/view-combinations.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frameworkViewsPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/views.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            infoResourcesPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/info/resources.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            supportedPlatformsPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/platforms/platforms.json'\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/random-color.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            randomColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
