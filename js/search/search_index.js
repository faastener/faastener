var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.494,1,1.145]],["body/components/AboutComponent.html",[0,0.678,1,1.73,2,1.473,3,0.102,4,0.08,5,1.041,6,1.079,7,1.041,8,1.041,9,0.08,10,2.762,11,0.936,12,2.568,13,2.386,14,1.922,15,1.527,16,5.507,17,1.527,18,4.65,19,1.234,20,0.534,21,3.171,22,0.256,23,0.477,24,0.013,25,0.102,26,0.312,27,5.626,28,3.656,29,4.65,30,4.65,31,3.656,32,3.362,33,4.65,34,4.051,35,3.009,36,3.189,37,2.472,38,2.485,39,4.051,40,3.656,41,3.656,42,2.567,43,1.526,44,4.65,45,4.051,46,4.051,47,4.65,48,4.65,49,5.284,50,2.368,51,2.307,52,4.051,53,3.608,54,3.822,55,2.163,56,4.65,57,4.65,58,3.088,59,4.254,60,4.65,61,3.656,62,2.762,63,4.65,64,4.051,65,4.051,66,4.65,67,1.473,68,7.155,69,4.65,70,4.65,71,4.65,72,4.051,73,3.126,74,4.65,75,4.65,76,4.65,77,4.65,78,4.65,79,1.356,80,1.413,81,2.094,82,2.972,83,1.989,84,1.694,85,2.762,86,1.911,87,2.261,88,2.263,89,2.561,90,2.176,91,2.493,92,2.455,93,2.762,94,2.455,95,1.473,96,2.368,97,3.171,98,3.126,99,3.362,100,6.36,101,2.93,102,3.097,103,2.261,104,3.126,105,3.171,106,3.656,107,4.051,108,3.656,109,2.762,110,3.171,111,2.131,112,1.992,113,2.131,114,1.413,115,2.292,116,4.65,117,2.131,118,1.998,119,1.874,120,2.762,121,2.762,122,2.131,123,2.762,124,2.762,125,3.362,126,1.694,127,3.728,128,3.728,129,1.883,130,2.292,131,3.088,132,2.943,133,1.356,134,1.571,135,1.998,136,2.261,137,1.694,138,2.163,139,2.762,140,2.762,141,2.762,142,2.493,143,3.171,144,0.844,145,1.527,146,1.473,147,1.041,148,1.992,149,1.041,150,0.441,151,1.041,152,0.904,153,1.041,154,0.904,155,1.041,156,0.904,157,1.041,158,0.904,159,1.005,160,1.041,161,0.904,162,1.041,163,0.904,164,0.663,165,1.041,166,0.874,167,1.041,168,0.904,169,1.041,170,0.874,171,1.041,172,0.904,173,1.041,174,0.904,175,1.041,176,0.874,177,0.874,178,1.041,179,0.904,180,1.041,181,0.874,182,0.97,183,1.041,184,0.874,185,1.041,186,0.874,187,1.041,188,0.874,189,0.491,190,1.041,191,0.904,192,1.041,193,0.874,194,0.97,195,1.041,196,1.041,197,0.005,198,0.007,199,0.005]],["title/components/AppComponent.html",[0,0.494,152,1.145]],["body/components/AppComponent.html",[0,0.797,1,1.219,2,1.817,3,0.138,4,0.108,5,1.883,7,1.403,8,1.403,9,0.108,11,1.262,12,2.643,13,2.459,14,1.817,19,0.957,20,1.166,22,0.316,23,0.643,24,0.014,25,0.138,26,0.42,43,0.893,95,1.354,144,1.137,145,1.883,146,1.817,147,1.403,148,2.272,149,1.403,150,0.578,151,1.403,152,1.974,153,1.403,154,1.219,155,1.403,156,1.219,157,1.403,158,1.219,159,1.354,160,1.403,161,1.219,162,1.403,163,1.219,164,0.893,165,1.403,166,1.177,167,1.403,168,1.219,169,1.403,170,1.177,171,1.403,172,1.219,173,1.403,174,1.219,175,1.403,176,1.177,177,1.177,178,1.403,179,1.219,180,1.403,181,1.177,182,1.307,183,1.403,184,1.177,185,1.403,186,1.177,187,1.403,188,1.177,189,0.577,190,1.403,191,1.219,192,1.403,193,1.177,194,1.307,195,1.403,196,1.403,197,0.007,198,0.009,199,0.007,200,3.722,201,1.636,202,2.66,203,4.996,204,0.361,205,1.04,206,6.474,207,1.475,208,2.885,209,5.735,210,2.843,211,4.272,212,7.431,213,5.735,214,1.694,215,0.564,216,0.863,217,5.735,218,4.272,219,7.218,220,1.475,221,2.534,222,4.272,223,1.527,224,5.735,225,5.735,226,5.735,227,5.735,228,1.755,229,1.827,230,4.272,231,4.272,232,6.028,233,5.735,234,1.403,235,1.688]],["title/injectables/AppConfigService.html",[236,1.789,237,2.258]],["body/injectables/AppConfigService.html",[3,0.179,4,0.14,9,0.14,19,1.244,20,1.286,22,0.374,23,0.836,24,0.014,25,0.179,26,0.546,150,0.445,197,0.009,198,0.011,199,0.009,204,0.47,205,1.23,207,1.745,208,3.266,214,1.64,215,0.667,216,0.836,220,1.428,229,2.375,236,3.024,237,3.816,238,3.733,239,6.819,240,4.838,241,7.328,242,7.632,243,6.786,244,7.328,245,4.838,246,6.649,247,6.786,248,5.911,249,5.553,250,5.553,251,5.553,252,4.366,253,2.58,254,5.553,255,5.553,256,5.553,257,5.553,258,2.282,259,5.553]],["title/modules/AppModule.html",[260,1.527,261,2.699]],["body/modules/AppModule.html",[1,2.204,3,0.159,4,0.124,9,0.124,13,1.452,22,0.454,23,0.74,24,0.013,25,0.159,26,0.483,144,1.309,152,2.337,154,2.204,176,2.129,179,2.204,197,0.008,198,0.01,199,0.008,252,3.865,260,1.869,261,5.654,262,2.287,263,2.765,264,4.118,265,4.368,266,3.098,267,2.503,268,4.283,269,4.283,270,4.283,271,4.283,272,5.193,273,5.193,274,4.588,275,3.962,276,3.098,277,2.627,278,4.916,279,3.36,280,6.288,281,5.478,282,3.305,283,3.36,284,6.288,285,4.283,286,4.283,287,6.288,288,4.916,289,6.288,290,4.916,291,3.865,292,4.916,293,3.865,294,4.283,295,4.916,296,4.916,297,4.916]],["title/classes/AppPage.html",[26,0.395,298,3.157]],["body/classes/AppPage.html",[3,0.192,4,0.149,9,0.149,20,1.189,22,0.327,24,0.013,25,0.192,26,0.583,90,2.341,146,1.878,197,0.009,198,0.011,199,0.009,203,5.163,204,0.501,207,1.815,220,1.815,253,2.683,282,3.984,298,5.549,299,3.984,300,5.163,301,7.801,302,7.801,303,5.926,304,8.085,305,5.926,306,5.163,307,5.926,308,5.926,309,5.926]],["title/modules/AppRoutingModule.html",[260,1.527,272,2.699]],["body/modules/AppRoutingModule.html",[0,0.844,3,0.222,4,0.142,9,0.142,14,2.172,22,0.423,23,0.85,24,0.014,25,0.183,26,0.555,37,2.068,176,1.889,181,1.889,197,0.009,198,0.011,199,0.009,228,2.32,262,2.627,267,2.875,272,4.608,279,3.018,283,3.663,294,4.92,310,5.647,311,4.44,312,6.855,313,4.955,314,4.608,315,5.647,316,4.082,317,4.92,318,2.875,319,6.855,320,5.287,321,4.92,322,4.92,323,4.082,324,6.855,325,5.647,326,5.647,327,5.647,328,5.647,329,5.647,330,5.647]],["title/components/BannerComponent.html",[0,0.494,154,1.145]],["body/components/BannerComponent.html",[0,0.69,1,0.933,2,1.507,3,0.106,4,0.141,5,1.074,6,1.113,7,1.074,8,1.074,9,0.082,11,0.966,12,2.576,13,2.394,14,1.951,15,1.562,17,1.562,19,1.256,20,0.551,22,0.262,23,0.492,24,0.014,25,0.106,26,0.322,35,2.744,36,2.744,37,2.5,41,3.74,43,0.684,51,1.809,52,5.363,53,2.313,67,1.507,79,1.399,81,2.487,82,2.783,83,1.399,85,1.943,86,2.529,88,2.687,89,1.521,90,2.584,92,2.12,94,3.376,95,1.507,96,3.134,102,1.84,103,2.993,113,2.199,114,2.12,118,2.061,119,2.716,122,2.199,124,3.33,126,1.748,127,3.994,128,4.092,129,2.826,131,3.586,133,2.398,134,0.933,135,2.061,136,2.313,138,2.213,141,2.849,142,2.572,144,0.871,145,1.562,146,1.507,147,1.074,148,2.021,149,1.074,150,0.449,151,1.074,152,0.933,153,1.074,154,1.756,155,1.074,156,0.933,157,1.074,158,0.933,159,1.036,160,1.074,161,0.933,162,1.074,163,0.933,164,0.684,165,1.074,166,0.901,167,1.074,168,0.933,169,1.074,170,0.901,171,1.074,172,0.933,173,1.074,174,0.933,175,1.074,176,0.901,177,0.901,178,1.074,179,0.933,180,1.074,181,0.901,182,1,183,1.074,184,0.901,185,1.074,186,0.901,187,1.074,188,0.901,189,0.499,190,1.074,191,0.933,192,1.074,193,0.901,194,1,195,1.074,196,1.074,197,0.005,198,0.008,199,0.005,204,0.277,331,2.849,332,6.156,333,5.607,334,4.757,335,3.271,336,4.144,337,2.919,338,3.74,339,2.422,340,4.757,341,6.825,342,3.33,343,2.542,344,4.757,345,4.757,346,4.757,347,4.757,348,4.144,349,3.74,350,4.757,351,3.439,352,4.144,353,3.439,354,3.885,355,3.271,356,3.271,357,3.271,358,2.572,359,4.884,360,2.849,361,2.849,362,3.134,363,2.849,364,2.572,365,5.607,366,3.198,367,4.757,368,2.849,369,4.144,370,2.035,371,3.271,372,3.153,373,4.757,374,3.271,375,4.757,376,2.849,377,6.825,378,4.138,379,5.607,380,5.607,381,2.849,382,1.292,383,3.271,384,3.271,385,3.271,386,2.849,387,2.364,388,2.849]],["title/components/BottomNavComponent.html",[0,0.494,156,1.145]],["body/components/BottomNavComponent.html",[0,0.752,1,1.09,2,1.683,3,0.123,4,0.096,5,1.254,6,1.3,7,1.254,8,1.254,9,0.096,11,1.128,12,2.617,13,2.434,14,1.683,15,1.744,17,1.744,19,0.856,20,1.17,22,0.364,23,0.575,24,0.013,25,0.123,26,0.376,43,0.799,79,1.634,80,1.703,81,2.02,82,2.414,83,1.634,84,2.042,89,1.777,90,1.509,92,1.703,95,2.475,98,2.568,99,2.762,102,2.988,117,2.568,118,2.407,119,2.508,122,2.568,124,2.269,129,2.269,133,1.634,136,1.857,137,2.042,138,1.777,144,1.017,145,1.744,146,1.683,147,1.254,148,2.168,149,1.254,150,0.556,151,1.254,152,1.09,153,1.254,154,1.09,155,1.254,156,1.884,157,1.254,158,1.09,159,1.211,160,1.254,161,1.09,162,1.254,163,1.09,164,0.799,165,1.254,166,1.053,167,1.254,168,1.09,169,1.254,170,1.053,171,1.254,172,1.09,173,1.254,174,1.09,175,1.254,176,1.053,177,1.053,178,1.254,179,1.09,180,1.254,181,1.053,182,1.169,183,1.254,184,1.053,185,1.254,186,1.053,187,1.254,188,1.053,189,0.544,190,1.254,191,1.09,192,1.254,193,1.053,194,1.169,195,1.254,196,1.254,197,0.006,198,0.009,199,0.006,201,1.516,202,2.51,204,0.449,205,0.963,207,1.367,210,2.713,214,1.569,215,0.601,216,0.8,220,1.367,221,2.237,229,1.634,235,2.099,354,2.269,358,3.004,364,3.004,370,1.634,389,6.259,390,5.194,391,3.328,392,5.313,393,6.109,394,5.313,395,6.109,396,5.313,397,2.988,398,6.109,399,3.821,400,6.259,401,5.313,402,1.259,403,3.821,404,5.313,405,3.821,406,1.857,407,0.983,408,0.799,409,3.821,410,2.839,411,2.269,412,3.328,413,3.821,414,2.762,415,5.313,416,2.269,417,5.313,418,5.313,419,3.328,420,5.313,421,3.328,422,2.762,423,1.945,424,2.762,425,3.004,426,3.328,427,2.149]],["title/components/ChildGroupingComponent.html",[0,0.494,158,1.145]],["body/components/ChildGroupingComponent.html",[0,0.736,1,1.048,2,1.638,3,0.119,4,0.092,5,1.207,6,1.251,7,1.207,8,1.207,9,0.092,11,1.086,12,2.607,13,2.424,14,1.638,15,1.698,17,1.698,19,1.341,20,1.229,22,0.33,23,0.553,24,0.014,25,0.119,26,0.361,43,0.768,79,1.572,80,1.638,81,1.398,82,2.043,83,1.572,84,1.964,85,2.183,86,1.51,87,2.514,88,2.125,89,1.71,94,2.667,95,1.165,96,2.633,103,1.787,119,2.036,126,1.964,127,1.964,128,1.964,131,3.613,133,2.212,140,3.202,144,0.978,145,1.698,146,1.638,147,1.207,148,2.132,149,1.207,150,0.479,151,1.207,152,1.048,153,1.207,154,1.048,155,1.207,156,1.048,157,1.207,158,1.852,159,2.499,160,1.207,161,1.048,162,1.207,163,1.048,164,0.768,165,1.207,166,1.013,167,1.207,168,1.048,169,1.207,170,1.013,171,1.207,172,1.048,173,1.207,174,1.048,175,1.207,176,1.013,177,1.013,178,1.207,179,1.048,180,1.207,181,1.013,182,1.124,183,1.207,184,1.013,185,1.207,186,1.013,187,1.207,188,1.013,189,0.533,190,1.207,191,1.048,192,1.207,193,1.013,194,1.124,195,1.207,196,1.207,197,0.006,198,0.008,199,0.006,204,0.311,215,0.673,223,1.377,235,2.565,370,1.572,397,2.908,402,1.177,407,1.539,408,1.251,410,3.896,428,6.484,429,5.853,430,3.202,431,3.182,432,5.983,433,5.171,434,5.212,435,2.275,436,6.842,437,5.212,438,5.212,439,5.983,440,5.171,441,3.676,442,2.458,443,3.676,444,3.676,445,3.676,446,2.763,447,3.676,448,1.124,449,2.316,450,5.58,451,5.171,452,5.171,453,3.072,454,4.066,455,4.066,456,2.067,457,3.676,458,2.471,459,2.471,460,3.676,461,4.505,462,3.676]],["title/interfaces/ClassificationCriterion.html",[463,0.433,464,1.586]],["body/interfaces/ClassificationCriterion.html",[3,0.095,4,0.074,9,0.074,22,0.162,24,0.014,25,0.22,35,1.309,36,1.309,37,1.076,42,2.588,43,1.308,50,1.496,53,2.56,55,1.366,58,1.496,67,2.217,134,2.161,150,0.613,164,1.598,189,0.521,197,0.005,198,0.007,199,0.005,204,0.248,205,0.797,215,0.615,216,1.077,223,1.17,234,0.964,258,2.401,337,1.256,339,2.681,343,2.348,382,1.736,402,1.466,407,1.13,408,1.372,431,2.449,435,2.849,442,2.401,448,1.788,463,0.832,464,2.472,465,0.809,466,1.652,467,2.229,468,2.61,469,2.348,470,2.814,471,3.128,472,3.128,473,3.472,474,2.298,475,3.068,476,3.563,477,2.401,478,3.128,479,3.128,480,3.637,481,3.465,482,1.848,483,2.61,484,2.814,485,2.96,486,2.449,487,2.449,488,1.309,489,2.252,490,2.814,491,1.745,492,1.745,493,1.745,494,3.637,495,1.652,496,1.959,497,1,498,1.57,499,1.428,500,1.745,501,3.472,502,3.472,503,1.745,504,1.652,505,3.344,506,1.745,507,3.402,508,1.745,509,2.681,510,1.366,511,1.309,512,1.745,513,1.366,514,1.745,515,3.128,516,1.366,517,1.88,518,1.88,519,1.745,520,1.745,521,1.745,522,2.61,523,2.61,524,2.348,525,1.309,526,1.309,527,1.745,528,1.745,529,2.237,530,1.745,531,2.61,532,3.128,533,1.745,534,1.745,535,1.745,536,1.745,537,1.652,538,1.57,539,1.745,540,1.366,541,2.237,542,2.237,543,1.736,544,1.745,545,1.161,546,1.745,547,1.745,548,1.57,549,0.964,550,2.61,551,1.745,552,1.745,553,1.745,554,1.652,555,1.652]],["title/interfaces/ClassificationFramework.html",[463,0.433,497,1.366]],["body/interfaces/ClassificationFramework.html",[3,0.093,4,0.072,9,0.072,22,0.158,24,0.014,25,0.218,35,1.277,36,1.277,37,1.049,42,2.641,43,1.513,50,1.458,53,2.806,55,1.332,58,1.458,67,2.201,134,2.15,150,0.61,164,1.485,189,0.514,197,0.005,198,0.007,199,0.005,204,0.242,205,0.782,215,0.64,216,1.09,223,1.148,234,0.941,258,2.371,337,1.225,339,2.938,343,2.305,382,1.704,402,1.462,407,1.109,408,1.359,431,2.412,435,2.796,442,2.371,448,1.586,463,0.828,464,2.28,465,0.789,466,1.611,467,2.215,468,1.702,469,1.531,470,2.305,471,2.562,472,2.562,473,1.702,474,2.28,475,3.076,476,3.436,477,2.131,478,2.562,479,2.562,480,3.607,481,3.436,482,2.172,483,3.081,484,3.084,485,2.944,486,2.879,487,3.025,488,1.922,489,2.647,490,3.084,491,2.562,492,2.562,493,2.562,494,3.797,495,2.426,496,2.312,497,1.468,498,1.531,499,2.097,500,2.562,501,3.677,502,3.677,503,2.562,504,3.246,505,3.308,506,1.702,507,3.377,508,1.702,509,2.641,510,1.332,511,1.277,512,1.702,513,1.332,514,1.702,515,3.081,516,1.332,517,1.844,518,1.844,519,1.702,520,1.702,521,1.702,522,2.562,523,2.562,524,2.305,525,1.277,526,1.277,527,1.702,528,1.702,529,2.196,530,1.702,531,2.562,532,3.081,533,1.702,534,1.702,535,1.702,536,1.702,537,1.611,538,1.531,539,1.702,540,1.332,541,2.196,542,2.196,543,1.704,544,1.702,545,1.132,546,1.702,547,1.702,548,1.531,549,0.941,550,2.562,551,1.702,552,1.702,553,1.702,554,1.611,555,1.611,556,1.611]],["title/interfaces/ClassificationFrameworkResponse.html",[463,0.433,557,2.145]],["body/interfaces/ClassificationFrameworkResponse.html",[3,0.157,4,0.122,9,0.122,22,0.344,24,0.014,25,0.249,42,2.622,51,2.622,67,1.54,134,2.197,150,0.628,189,0.433,197,0.008,198,0.01,199,0.008,204,0.411,205,1.132,215,0.74,216,0.94,223,1.294,402,1.524,406,2.363,407,1.25,435,1.848,448,1.909,463,0.865,465,1.339,467,2.109,474,2.571,475,3.043,482,2.343,488,2.166,489,2.67,517,2.079,518,2.079,525,2.166,526,2.166,543,1.92,545,1.92,557,3.335,558,2.887,559,4.585,560,4.096,561,4.345,562,2.597,563,3.063,564,2.597,565,3.063,566,2.597,567,3.063,568,3.063,569,2.597,570,2.597,571,3.511,572,2.261]],["title/interfaces/ClassificationView.html",[463,0.433,509,2.044]],["body/interfaces/ClassificationView.html",[3,0.095,4,0.074,9,0.074,22,0.162,24,0.014,25,0.22,35,1.314,36,1.314,37,1.08,42,2.591,43,1.31,50,1.501,53,2.847,55,1.372,58,1.501,67,2.22,134,2.162,150,0.613,164,1.497,189,0.522,197,0.005,198,0.007,199,0.005,204,0.249,205,0.799,215,0.616,216,1.055,223,1.173,234,0.968,258,2.406,337,1.261,339,2.981,343,2.355,382,1.741,402,1.467,407,1.134,408,1.374,431,2.455,435,2.909,442,2.702,448,1.614,463,0.833,464,2.314,465,0.813,466,1.659,467,2.231,468,1.752,469,1.576,470,2.355,471,2.618,472,2.618,473,1.752,474,2.3,475,3.09,476,3.47,477,2.168,478,2.618,479,2.618,480,3.642,481,3.47,482,1.851,483,2.618,484,3.129,485,2.962,486,2.455,487,2.455,488,1.314,489,2.257,490,2.82,491,1.752,492,1.752,493,1.752,494,3.642,495,1.659,496,1.965,497,1.004,498,1.576,499,1.434,500,1.752,501,3.723,502,3.723,503,1.752,504,1.659,505,3.349,506,1.752,507,3.645,508,1.752,509,2.981,510,1.372,511,1.314,512,1.752,513,1.372,514,1.752,515,3.478,516,1.372,517,1.885,518,1.885,519,1.752,520,1.752,521,1.752,522,2.618,523,2.618,524,2.355,525,1.314,526,1.314,527,1.752,528,1.752,529,2.244,530,1.752,531,2.618,532,3.135,533,1.752,534,1.752,535,1.752,536,1.752,537,1.659,538,1.576,539,1.752,540,1.372,541,2.244,542,2.244,543,1.741,544,1.752,545,1.165,546,1.752,547,1.752,548,1.576,549,0.968,550,2.618,551,1.752,552,1.752,553,1.752,554,1.659,555,1.659]],["title/interfaces/ClassificationViewCombination.html",[463,0.433,486,1.867]],["body/interfaces/ClassificationViewCombination.html",[3,0.093,4,0.073,9,0.073,22,0.159,24,0.014,25,0.219,35,1.289,36,1.289,37,1.059,42,2.482,43,1.299,50,1.473,53,2.819,55,1.345,58,1.473,67,2.207,134,2.154,150,0.611,164,1.489,189,0.517,197,0.005,198,0.007,199,0.005,204,0.245,205,0.788,215,0.642,216,1.093,223,1.544,234,0.95,258,2.383,337,1.237,339,2.952,343,2.321,382,1.716,402,1.463,407,1.679,408,1.364,431,2.426,435,2.803,442,2.383,448,1.596,463,0.83,464,2.291,465,0.797,466,1.627,467,2.22,468,1.718,469,1.546,470,2.321,471,2.58,472,2.58,473,1.718,474,2.287,475,3.08,476,3.447,477,2.143,478,2.58,479,2.58,480,3.618,481,3.447,482,1.836,483,2.58,484,3.099,485,2.95,486,2.697,487,2.426,488,1.289,489,2.792,490,3.099,491,1.718,492,1.718,493,1.718,494,3.618,495,1.627,496,1.936,497,0.984,498,1.546,499,1.406,500,1.718,501,3.692,502,3.692,503,1.718,504,1.627,505,3.878,506,2.58,507,3.63,508,1.718,509,2.952,510,2.02,511,1.936,512,2.58,513,2.02,514,2.58,515,3.099,516,1.345,517,1.858,518,1.858,519,1.718,520,1.718,521,1.718,522,2.58,523,2.58,524,2.321,525,1.289,526,1.289,527,1.718,528,1.718,529,2.212,530,1.718,531,2.58,532,3.099,533,1.718,534,1.718,535,1.718,536,1.718,537,1.627,538,1.546,539,1.718,540,1.345,541,2.212,542,2.212,543,1.716,544,1.718,545,1.143,546,1.718,547,1.718,548,1.546,549,0.95,550,2.58,551,1.718,552,1.718,553,1.718,554,1.627,555,1.627,573,2.892]],["title/interfaces/ClassificationViewCombinationResponse.html",[463,0.433,562,2.145]],["body/interfaces/ClassificationViewCombinationResponse.html",[3,0.155,4,0.121,9,0.121,22,0.341,24,0.014,25,0.248,42,2.752,51,2.752,67,1.518,134,2.227,150,0.626,189,0.427,197,0.008,198,0.01,199,0.008,204,0.405,205,1.121,215,0.737,216,0.931,223,1.823,402,1.522,406,2.329,407,1.861,435,1.822,448,1.892,463,0.87,465,1.32,467,2.213,474,2.563,475,3.031,482,2.023,488,2.756,489,2.929,517,2.049,518,2.049,525,2.135,526,2.135,543,1.893,545,1.893,557,2.56,558,2.846,559,3.019,560,4.298,561,4.56,562,3.305,563,4.56,564,2.56,565,3.019,566,2.56,567,3.019,568,3.019,569,2.56,570,2.56,571,3.478,572,2.228]],["title/interfaces/ClassificationViewResponse.html",[463,0.433,564,2.145]],["body/interfaces/ClassificationViewResponse.html",[3,0.157,4,0.123,9,0.123,22,0.344,24,0.014,25,0.249,42,2.768,51,2.768,67,1.543,134,2.235,150,0.628,189,0.434,197,0.008,198,0.01,199,0.008,204,0.412,205,1.133,215,0.716,223,1.296,402,1.524,406,2.367,407,1.252,435,1.851,448,1.911,463,0.872,465,1.342,467,2.227,474,2.572,475,3.044,482,2.038,488,2.17,489,2.951,517,2.082,518,2.082,525,2.17,526,2.17,543,1.923,545,1.923,557,2.601,558,2.892,559,3.068,560,4.325,561,4.587,562,2.601,563,3.068,564,3.339,565,4.587,566,2.601,567,3.068,568,3.068,569,2.601,570,2.601,571,3.514,572,2.264]],["title/modules/CoreModule.html",[260,1.527,273,2.699]],["body/modules/CoreModule.html",[3,0.167,4,0.13,9,0.13,22,0.438,23,0.778,24,0.014,25,0.167,26,0.508,31,4.065,144,1.376,197,0.008,198,0.01,199,0.008,216,0.778,234,1.698,237,4.557,253,2.468,260,2.468,262,2.405,263,2.908,264,3.856,265,3.258,266,4.471,267,2.632,273,5.568,275,4.091,276,3.258,277,2.763,279,2.763,283,3.469,411,3.071,574,4.504,575,4.504,576,3.804,577,4.401,578,5.26,579,5.171,580,6.492,581,6.492,582,4.693,583,4.693,584,5.171,585,4.065,586,5.171,587,5.171,588,5.171,589,4.504,590,5.171,591,5.171,592,5.171,593,3.738,594,4.504,595,5.171,596,5.171,597,5.171,598,3.738,599,5.171,600,5.171,601,5.171]],["title/interfaces/CriteriaBasedQuery.html",[463,0.433,602,1.867]],["body/interfaces/CriteriaBasedQuery.html",[3,0.141,4,0.11,9,0.11,20,0.735,24,0.014,25,0.242,38,2.329,51,1.657,62,2.589,67,1.381,112,1.908,150,0.349,164,0.911,189,0.388,197,0.007,198,0.009,199,0.007,215,0.429,223,1.16,234,1.431,235,1.722,372,3.923,402,1.449,408,1.562,463,0.824,464,1.722,465,1.201,467,2,477,2.388,482,1.717,485,2.584,496,3.331,510,3.042,511,2.915,513,3.605,516,3.042,540,2.028,549,2.386,572,2.704,602,2.704,603,2.589,604,3.797,605,3.329,606,4.359,607,2.452,608,2.747,609,2.93,610,3.663,611,3.551,612,3.391,613,4.144,614,3.907,615,2.93,616,2.93,617,2.028,618,2.93,619,2.93,620,3.453,621,3.453,622,2.589,623,3.663,624,3.179,625,2.93,626,3.106,627,2.747,628,2.329,629,2.93,630,2.93,631,4.121,632,5.129,633,3.453,634,4.121,635,2.93,636,3.907,637,3.907,638,4.121,639,2.93,640,3.884,641,4.121,642,4.395,643,4.121,644,3.884,645,2.93,646,4.121,647,4.121]],["title/interfaces/CriteriaGrouping.html",[442,1.65,463,0.433]],["body/interfaces/CriteriaGrouping.html",[3,0.093,4,0.072,9,0.072,22,0.158,24,0.014,25,0.218,35,1.278,36,1.278,37,1.05,42,2.474,43,1.294,50,1.46,53,2.523,55,1.334,58,1.46,67,2.361,134,2.028,150,0.61,164,1.486,189,0.552,197,0.005,198,0.007,199,0.005,204,0.242,205,0.783,215,0.64,216,1.122,223,1.149,234,0.941,258,2.372,337,1.226,339,2.642,343,2.773,382,1.705,402,1.462,407,1.11,408,1.36,431,3.027,435,2.96,442,2.544,448,1.587,463,0.829,464,2.571,465,0.79,466,1.613,467,2.215,468,1.703,469,1.532,470,2.773,471,3.083,472,3.083,473,1.703,474,2.281,475,3.126,476,3.437,477,2.132,478,2.564,479,2.564,480,3.608,481,3.437,482,1.829,483,2.564,484,2.773,485,2.945,486,2.414,487,2.414,488,1.278,489,2.219,490,3.085,491,1.703,492,1.703,493,1.703,494,3.608,495,1.613,496,1.924,497,0.976,498,1.532,499,1.394,500,1.703,501,3.678,502,3.678,503,1.703,504,1.613,505,3.309,506,1.703,507,3.378,508,1.703,509,2.642,510,1.334,511,1.278,512,1.703,513,1.334,514,1.703,515,3.678,516,2.007,517,2.783,518,2.219,519,2.564,520,2.564,521,2.564,522,3.083,523,3.083,524,2.773,525,1.278,526,1.278,527,1.703,528,2.564,529,2.642,530,2.564,531,2.564,532,3.083,533,1.703,534,1.703,535,1.703,536,1.703,537,1.613,538,1.532,539,1.703,540,1.334,541,2.197,542,2.197,543,1.705,544,1.703,545,1.133,546,1.703,547,1.703,548,1.532,549,0.941,550,2.564,551,1.703,552,1.703,553,1.703,554,1.613,555,1.613]],["title/interfaces/CriteriaGroupingResponse.html",[463,0.433,566,2.145]],["body/interfaces/CriteriaGroupingResponse.html",[3,0.155,4,0.12,9,0.12,22,0.34,24,0.014,25,0.248,42,2.602,51,2.75,67,1.957,134,2.063,150,0.625,189,0.426,197,0.008,198,0.01,199,0.008,204,0.404,205,1.12,215,0.736,216,1.089,223,1.273,402,1.527,406,2.325,407,1.23,435,2.349,448,1.89,463,0.87,465,1.318,467,2.212,474,2.562,475,3.03,482,2.021,488,2.132,489,2.642,517,3.093,518,2.046,525,2.132,526,2.132,543,1.89,545,1.89,557,2.556,558,2.841,559,3.014,560,4.296,561,4.557,562,2.556,563,3.014,564,2.556,565,3.014,566,3.301,567,4.557,568,4.557,569,2.556,570,2.556,571,3.474,572,2.225]],["title/interfaces/CriteriaReview.html",[463,0.433,571,2.258]],["body/interfaces/CriteriaReview.html",[3,0.166,4,0.129,9,0.129,20,0.867,22,0.357,24,0.014,25,0.253,42,2.692,51,2.692,67,1.63,134,2.02,150,0.595,189,0.458,197,0.008,198,0.01,199,0.008,223,1.369,402,1.515,406,2.501,407,1.323,435,1.956,448,2.165,463,0.874,465,1.417,467,2.165,474,2.439,475,2.935,482,2.091,488,2.293,489,2.767,517,2.2,518,2.2,525,2.293,526,2.293,543,2.032,545,2.032,557,2.749,558,3.055,559,3.241,560,4.205,561,4.461,562,2.749,563,3.241,564,2.749,565,3.241,566,2.749,567,3.241,568,3.241,569,2.749,570,2.749,571,3.982,572,3.01,604,4.481,648,5.144]],["title/components/CriterionComponent.html",[0,0.494,161,1.145]],["body/components/CriterionComponent.html",[0,0.664,1,0.872,2,1.434,3,0.206,4,0.077,5,1.004,6,1.041,7,1.004,8,1.004,9,0.077,11,0.903,12,2.557,13,2.376,14,1.434,15,1.486,17,1.486,19,1.208,20,1.219,22,0.328,23,0.46,24,0.014,25,0.099,26,0.301,43,0.639,79,1.308,80,1.363,81,2.42,82,3.124,83,2.721,84,2.881,86,2.614,88,2.449,89,2.106,90,2.724,92,2.403,94,2.657,95,0.969,96,3.035,102,1.72,103,1.486,112,2.506,114,2.018,119,2.166,125,4.985,127,3.185,128,3.185,131,3.24,132,3.685,133,1.308,134,0.872,138,2.106,144,0.814,145,1.486,146,1.434,147,1.004,148,1.957,149,1.004,150,0.432,151,1.004,152,0.872,153,1.004,154,0.872,155,1.004,156,0.872,157,1.004,158,0.872,159,1.708,160,1.004,161,1.7,162,1.004,163,0.872,164,1.393,165,1.004,166,0.842,167,1.004,168,0.872,169,1.004,170,0.842,171,1.004,172,0.872,173,1.004,174,0.872,175,1.004,176,0.842,177,0.842,178,1.004,179,0.872,180,1.004,181,0.842,182,0.935,183,1.004,184,0.842,185,1.004,186,0.842,187,1.004,188,0.842,189,0.48,190,1.004,191,0.872,192,1.004,193,0.842,194,0.935,195,1.004,196,1.004,197,0.005,198,0.007,199,0.005,201,1.292,202,2.215,204,0.259,205,0.821,207,1.164,210,2.449,215,0.678,220,0.786,221,1.658,223,1.205,369,5.192,370,1.936,372,1.72,378,3.624,382,2.514,386,2.663,397,2.546,402,1.208,407,0.786,408,0.639,410,3.561,416,1.816,423,3.24,427,1.72,448,2.038,449,1.926,456,3.352,461,3.944,464,2.13,477,2.215,541,2.745,649,2.663,650,5.392,651,4.528,652,5.392,653,5.392,654,4.528,655,3.057,656,3.057,657,3.057,658,4.528,659,3.057,660,3.057,661,3.057,662,3.057,663,4.528,664,4.528,665,4.528,666,3.057,667,3.057,668,3.057,669,4.528,670,5.392,671,4.528,672,3.944,673,4.528,674,4.76,675,4.528,676,3.56,677,4.528,678,4.528,679,4.528,680,3.56,681,4.528,682,4.528,683,2.663,684,5.961,685,3.057,686,2.663,687,2.853,688,3.057,689,3.057,690,3.057,691,2.055,692,2.853]],["title/components/CriterionFilterComponent.html",[0,0.494,163,1.145]],["body/components/CriterionFilterComponent.html",[0,0.672,1,0.89,2,1.456,3,0.101,4,0.079,5,1.025,6,1.062,7,1.025,8,1.025,9,0.079,11,0.922,12,2.563,13,2.381,14,1.456,15,1.509,17,1.509,19,0.699,20,1.17,22,0.332,23,0.47,24,0.014,25,0.101,26,0.307,35,1.391,43,0.652,51,2.289,79,1.335,80,1.391,81,1.748,82,2.379,83,1.966,86,1.889,87,1.517,88,1.282,94,2.432,95,1.456,102,1.755,103,1.517,114,2.049,119,1.857,129,1.854,133,1.335,144,0.831,145,1.509,146,1.456,147,1.025,148,1.977,149,1.025,150,0.514,151,1.025,152,0.89,153,1.025,154,0.89,155,1.025,156,0.89,157,1.025,158,0.89,159,0.989,160,1.025,161,0.89,162,1.025,163,1.717,164,1.567,165,1.025,166,0.86,167,1.025,168,0.89,169,1.025,170,0.86,171,1.025,172,0.89,173,1.025,174,0.89,175,1.025,176,0.86,177,0.86,178,1.025,179,0.89,180,1.025,181,0.86,182,0.955,183,1.025,184,0.86,185,1.025,186,0.86,187,1.025,188,0.86,189,0.486,190,1.025,191,0.89,192,1.025,193,0.86,194,0.955,195,1.025,196,1.025,197,0.005,198,0.007,199,0.005,201,1.311,202,2.242,204,0.264,205,0.834,207,1.182,210,2.473,214,0.922,215,0.631,216,0.47,220,1.182,221,1.998,223,1.224,229,1.335,253,1.187,362,1.589,370,1.335,378,2.098,382,1.233,397,2.585,402,0.834,407,0.803,408,1.489,410,2.456,423,2.34,427,1.755,453,1.854,477,1.282,549,1.025,602,1.452,611,2.778,612,3.595,623,4.374,624,2.653,643,1.967,674,2.098,687,1.967,691,2.098,693,6.205,694,5.601,695,2.719,696,5.457,697,4.597,698,5.457,699,3.945,700,6.02,701,4.597,702,5.457,703,3.121,704,5.245,705,4.597,706,4.005,707,3.121,708,5.457,709,3.121,710,3.121,711,3.121,712,5.457,713,5.457,714,3.121,715,4.597,716,1.967,717,2.256,718,1.589,719,7.498,720,4.597,721,4.597,722,4.597,723,4.597,724,3.121,725,4.597,726,3.121,727,3.121,728,3.121,729,3.121,730,3.121,731,3.121,732,3.121,733,5.457,734,3.121,735,3.121,736,4.597,737,3.121,738,3.121,739,3.121,740,3.121,741,4.597,742,3.121,743,3.121,744,3.121,745,3.121,746,2.098,747,3.121,748,3.121,749,3.121,750,3.121,751,3.121,752,6.713,753,5.457,754,6.02,755,2.454,756,3.121,757,3.121,758,3.121,759,2.454,760,3.121]],["title/interfaces/CriterionFilterConfiguration.html",[463,0.433,611,2.044]],["body/interfaces/CriterionFilterConfiguration.html",[3,0.133,4,0.104,9,0.104,24,0.014,25,0.238,38,2.198,51,1.564,62,2.444,67,1.303,112,1.835,134,1.174,150,0.33,164,0.86,189,0.366,197,0.007,198,0.009,199,0.007,204,0.348,205,1.014,215,0.701,216,0.842,223,1.095,234,1.351,235,1.625,372,3.832,402,1.478,408,1.536,463,0.826,464,2.209,465,1.134,467,2.084,477,2.297,482,1.651,485,2.509,496,3.351,510,2.954,511,2.83,513,3.558,516,2.954,540,3.169,549,2.339,572,1.914,602,1.914,603,2.444,605,2.846,607,2.314,608,2.592,609,2.766,610,3.523,611,3.627,612,3.464,613,4.365,614,4.269,615,2.766,616,2.766,617,1.914,618,2.766,619,3.758,620,3.772,621,3.772,622,4.047,623,4.489,624,3.464,625,4.58,626,2.987,627,2.592,628,2.198,629,2.766,630,2.766,631,4.001,632,5.054,633,3.321,634,4.001,635,2.766,636,3.758,637,3.758,638,4.001,639,2.766,640,3.772,641,4.001,642,4.293,643,4.001,644,3.772,645,2.766,646,4.001,647,4.001]],["title/interfaces/CriterionFilterValue.html",[463,0.433,605,2.044]],["body/interfaces/CriterionFilterValue.html",[3,0.137,4,0.106,9,0.106,24,0.014,25,0.239,38,2.26,51,1.608,62,2.513,67,1.34,112,1.87,150,0.339,164,0.884,189,0.377,197,0.007,198,0.009,199,0.007,204,0.358,205,1.033,215,0.633,216,0.858,223,1.715,234,1.389,235,1.671,372,3.876,402,1.453,408,1.63,463,0.817,464,1.671,465,1.166,467,1.97,477,2.341,482,1.683,485,2.545,496,3.303,510,2.996,511,2.871,513,3.581,516,2.996,540,1.967,549,2.486,572,1.967,602,1.967,603,2.513,605,3.279,607,2.379,608,2.665,609,2.844,610,3.589,611,3.509,612,3.35,613,4.094,614,3.83,615,2.844,616,2.844,617,1.967,618,2.844,619,2.844,620,3.384,621,3.384,622,2.513,623,4.532,624,3.497,625,2.844,626,3.044,627,2.665,628,2.26,629,2.844,630,2.844,631,4.059,632,5.09,633,3.384,634,4.059,635,2.844,636,3.83,637,3.83,638,4.059,639,2.844,640,3.826,641,4.059,642,4.342,643,4.059,644,3.826,645,2.844,646,4.059,647,4.059]],["title/interfaces/CriterionInstance.html",[448,1.228,463,0.433]],["body/interfaces/CriterionInstance.html",[3,0.095,4,0.074,9,0.074,22,0.162,24,0.014,25,0.22,35,1.313,36,1.313,37,1.079,42,2.591,43,1.309,50,1.5,53,2.564,55,1.37,58,1.5,67,2.159,134,2.043,150,0.584,164,1.547,189,0.585,197,0.005,198,0.007,199,0.005,204,0.249,205,0.799,215,0.576,216,1.098,223,1.173,234,0.967,258,2.701,337,1.26,339,2.685,343,2.819,382,1.74,402,1.446,407,1.133,408,1.374,431,2.453,435,2.773,442,2.405,448,1.79,463,0.833,464,2.475,465,0.812,466,1.657,467,2.23,468,1.75,469,1.574,470,2.354,471,2.616,472,2.616,473,1.75,474,2.057,475,3.089,476,3.469,477,2.701,478,3.133,479,3.133,480,3.641,481,3.469,482,1.85,483,2.616,484,2.819,485,2.962,486,2.453,487,2.453,488,1.313,489,2.256,490,2.819,491,1.75,492,1.75,493,1.75,494,3.827,495,1.657,496,1.963,497,1.003,498,1.574,499,1.432,500,1.75,501,3.477,502,3.477,503,1.75,504,1.657,505,3.348,506,1.75,507,3.405,508,1.75,509,2.685,510,1.37,511,1.313,512,1.75,513,1.37,514,1.75,515,3.133,516,1.37,517,1.884,518,1.884,519,1.75,520,1.75,521,1.75,522,3.133,523,3.133,524,2.819,525,1.313,526,1.313,527,1.75,528,1.75,529,2.685,530,1.75,531,2.616,532,3.133,533,1.75,534,1.75,535,1.75,536,2.616,537,2.477,538,1.574,539,1.75,540,2.722,541,2.685,542,2.685,543,2.475,544,2.616,545,2.312,546,1.75,547,1.75,548,1.574,549,0.967,550,2.616,551,1.75,552,1.75,553,1.75,554,1.657,555,1.657]],["title/interfaces/CriterionValue.html",[463,0.433,541,2.044]],["body/interfaces/CriterionValue.html",[3,0.094,4,0.073,9,0.073,22,0.161,24,0.014,25,0.219,35,1.299,36,1.299,37,1.067,42,2.489,43,1.303,50,2.224,53,2.548,55,1.356,58,2.224,67,2.151,134,2.037,150,0.583,164,1.52,189,0.519,197,0.005,198,0.007,199,0.005,204,0.246,205,0.792,215,0.613,216,1.138,223,1.55,234,0.957,258,2.69,337,1.247,339,2.668,343,2.335,382,2.071,402,1.465,407,1.124,408,1.581,431,2.438,435,2.765,442,2.392,448,1.781,463,0.831,464,2.3,465,0.803,466,1.639,467,2.258,468,1.731,469,1.558,470,2.335,471,2.595,472,2.595,473,1.731,474,2.047,475,3.016,476,3.456,477,2.153,478,2.595,479,2.595,480,3.499,481,3.333,482,1.842,483,3.113,484,2.801,485,2.955,486,2.438,487,2.438,488,1.299,489,2.241,490,2.801,491,1.731,492,1.731,493,1.731,494,3.886,495,1.639,496,2.336,497,0.992,498,1.558,499,1.417,500,1.731,501,3.458,502,3.458,503,1.731,504,1.639,505,3.332,506,1.731,507,3.394,508,1.731,509,2.668,510,1.356,511,1.299,512,1.731,513,1.356,514,1.731,515,3.113,516,1.356,517,1.869,518,2.241,519,1.731,520,1.731,521,1.731,522,2.595,523,2.595,524,2.335,525,1.299,526,1.299,527,1.731,528,1.731,529,2.224,530,1.731,531,2.595,532,3.113,533,1.731,534,1.731,535,1.731,536,1.731,537,1.639,538,1.558,539,1.731,540,1.356,541,2.668,542,2.668,543,1.726,544,1.731,545,1.152,546,2.595,547,1.731,548,1.558,549,1.721,550,3.889,551,2.595,552,2.595,553,2.595,554,2.457,555,3.274]],["title/injectables/DataService.html",[236,1.789,576,1.952]],["body/injectables/DataService.html",[3,0.057,4,0.044,9,0.044,19,0.394,20,1.237,22,0.344,23,0.265,24,0.014,25,0.057,26,0.173,43,0.786,67,1.388,112,1.234,134,1.25,150,0.583,189,0.468,197,0.012,198,0.005,199,0.003,204,0.149,207,0.753,208,2.483,214,2.038,215,0.668,216,1.039,220,1.872,229,0.752,232,1.532,235,2.305,236,1.304,238,1.182,245,1.532,246,3.818,248,2.549,252,1.382,253,2.951,258,0.722,318,3.735,378,1.967,402,1.416,406,0.855,407,1.127,408,1.098,435,1.666,442,2.158,446,3.117,450,1.382,464,1.156,474,2.105,475,2.393,482,1.789,486,1.748,489,1.608,497,1.491,504,2.114,505,0.94,507,2.366,509,1.914,517,0.752,545,0.695,549,0.577,556,2.465,557,0.94,562,1.564,564,1.564,566,2.6,569,0.94,570,0.94,572,0.818,576,1.423,577,2.465,589,1.532,612,0.855,617,0.818,624,0.855,672,1.532,716,1.108,718,3.559,761,1.382,762,2.927,763,4.382,764,2.927,765,2.927,766,2.927,767,2.927,768,2.927,769,2.927,770,4.382,771,4.382,772,4.382,773,2.927,774,2.927,775,2.927,776,2.927,777,4.382,778,2.927,779,4.382,780,2.927,781,2.527,782,2.927,783,2.717,784,1.758,785,2.927,786,1.758,787,1.758,788,4.23,789,2.927,790,1.758,791,3.759,792,2.927,793,1.758,794,2.927,795,2.927,796,1.758,797,2.927,798,1.758,799,2.927,800,2.927,801,1.758,802,2.927,803,1.758,804,1.758,805,1.758,806,1.758,807,2.927,808,1.758,809,6.056,810,2.927,811,1.758,812,2.927,813,1.758,814,2.927,815,1.758,816,1.758,817,2.927,818,1.758,819,2.549,820,1.758,821,2.927,822,1.758,823,2.927,824,2.927,825,1.758,826,1.758,827,4.635,828,1.758,829,0.818,830,2.927,831,3.759,832,1.758,833,1.271,834,1.758,835,3.759,836,1.271,837,1.382,838,0.895,839,1.967,840,1.108,841,1.758,842,1.044,843,1.382,844,1.382,845,1.532,846,1.382,847,1.532,848,1.382,849,1.532,850,1.382,851,1.532,852,1.532,853,1.382,854,1.532,855,1.382,856,1.532,857,1.382,858,1.532,859,1.382,860,1.532,861,1.382,862,1.532,863,3.759,864,1.758,865,1.758,866,2.927,867,1.758,868,1.758,869,1.758,870,1.758,871,1.382,872,1.758,873,1.758,874,1.758,875,1.758,876,1.758,877,3.823,878,7.148,879,5.167,880,1.758,881,2.927,882,1.758,883,2.927,884,1.758,885,3.446,886,2.549,887,1.758,888,1.758,889,3.759,890,1.758,891,2.927,892,1.758,893,1.758,894,5.254,895,1.758,896,1.758,897,1.758,898,1.758,899,1.758,900,1.758,901,1.758,902,3.759,903,2.927,904,1.758,905,1.382,906,1.758,907,1.758,908,1.758,909,2.927,910,1.758,911,1.758,912,2.927,913,3.759,914,3.759,915,2.927,916,1.758,917,3.759,918,3.759,919,2.927,920,2.927,921,2.927,922,4.382,923,2.927,924,1.758,925,1.758,926,1.758,927,1.758,928,1.758,929,1.758,930,1.758,931,1.758,932,1.758,933,3.759,934,2.927,935,1.758,936,1.758,937,2.301,938,1.758,939,1.758,940,1.758,941,2.927,942,1.758,943,1.758,944,1.758,945,1.758,946,1.758,947,1.758,948,2.301,949,1.758,950,1.758,951,1.758,952,1.758,953,1.758,954,1.758,955,1.758,956,1.758,957,1.758,958,1.758,959,1.758,960,1.758,961,1.758,962,1.758,963,1.758,964,1.758,965,1.758,966,1.758,967,1.758,968,1.758,969,1.758,970,1.758,971,1.758,972,1.758,973,3.759,974,2.927,975,1.758,976,1.758,977,1.758,978,2.927,979,1.758,980,1.758,981,2.927,982,1.271,983,1.758,984,1.758,985,2.115,986,2.927,987,1.758,988,1.758,989,1.271,990,1.758,991,1.758,992,1.758,993,1.758,994,1.758,995,1.758,996,1.758,997,1.758,998,1.758,999,1.758,1000,1.758,1001,2.717,1002,1.758,1003,1.758,1004,3.759,1005,1.758,1006,1.758,1007,1.758,1008,1.758,1009,1.271,1010,1.758,1011,1.758,1012,1.758,1013,1.758,1014,2.927,1015,1.758,1016,1.758,1017,1.758,1018,1.758,1019,1.758,1020,2.927,1021,2.927,1022,1.758,1023,1.758,1024,1.758,1025,1.758,1026,1.758,1027,1.758,1028,1.758,1029,1.758,1030,1.758]],["title/classes/EnsureModuleLoadedOnceGuard.html",[26,0.395,583,2.902]],["body/classes/EnsureModuleLoadedOnceGuard.html",[3,0.196,4,0.153,9,0.153,19,1.36,20,1.023,22,0.334,24,0.013,25,0.196,26,0.597,150,0.486,197,0.01,198,0.011,199,0.01,214,1.793,215,0.597,216,0.914,260,2.895,261,4.081,299,4.081,583,5.174,585,5.986,718,3.09,1031,6.236,1032,5.288,1033,7.158,1034,6.07,1035,7.158,1036,6.07,1037,6.07,1038,6.07]],["title/components/FaqComponent.html",[0,0.494,166,1.106]],["body/components/FaqComponent.html",[0,0.835,1,1.341,2,1.935,3,0.152,4,0.118,5,1.543,6,1.6,7,1.543,8,1.543,9,0.118,11,1.388,12,2.664,13,2.479,14,1.935,15,2.005,17,2.005,19,1.521,20,1.03,22,0.259,23,0.708,24,0.013,25,0.152,26,0.462,43,0.982,95,1.489,144,1.251,145,2.005,146,1.935,147,1.543,148,2.359,149,1.543,150,0.544,151,1.543,152,1.341,153,1.543,154,1.341,155,1.543,156,1.341,157,1.543,158,1.341,159,1.489,160,1.543,161,1.341,162,1.543,163,1.341,164,0.982,165,1.543,166,1.98,167,1.543,168,1.341,169,1.543,170,1.295,171,1.543,172,1.341,173,1.543,174,1.341,175,1.543,176,1.295,177,1.295,178,1.543,179,1.341,180,1.543,181,1.295,182,1.438,183,1.543,184,1.295,185,1.543,186,1.295,187,1.543,188,1.295,189,0.604,190,1.543,191,1.341,192,1.543,193,1.295,194,1.438,195,1.543,196,1.543,197,0.008,198,0.01,199,0.008,201,1.743,202,2.788,204,0.398,207,1.571,210,2.952,220,1.209,221,2.237,1039,4.095,1040,6.259,1041,6.786,1042,6.109,1043,4.701,1044,4.701,1045,5.321]],["title/components/FooterComponent.html",[0,0.494,168,1.145]],["body/components/FooterComponent.html",[0,0.768,1,1.135,2,2.129,3,0.129,4,0.1,5,1.306,6,1.354,7,1.306,8,1.306,9,0.1,11,1.175,12,2.627,13,2.443,14,1.731,15,1.794,17,1.794,19,1.398,20,0.921,22,0.301,23,0.599,24,0.013,25,0.129,26,0.391,27,4.296,40,4.296,43,0.831,81,2.077,82,2.465,86,1.634,87,2.656,88,2.564,89,2.541,90,1.571,92,2.781,94,1.773,95,1.731,96,2.025,101,2.506,103,1.934,104,2.674,113,2.674,114,1.773,119,1.859,126,2.919,133,2.337,136,1.934,137,2.125,138,1.85,144,1.059,145,1.794,146,1.731,147,1.306,148,2.206,149,1.306,150,0.5,151,1.306,152,1.135,153,1.306,154,1.135,155,1.306,156,1.135,157,1.306,158,1.135,159,1.26,160,1.306,161,1.135,162,1.306,163,1.135,164,0.831,165,1.306,166,1.096,167,1.306,168,1.916,169,1.306,170,1.096,171,1.306,172,1.135,173,1.306,174,1.135,175,1.306,176,1.096,177,1.096,178,1.306,179,1.135,180,1.306,181,1.096,182,1.217,183,1.306,184,1.096,185,1.306,186,1.096,187,1.306,188,1.096,189,0.556,190,1.306,191,1.135,192,1.306,193,1.096,194,1.217,195,1.306,196,1.306,197,0.006,198,0.009,199,0.006,201,1.558,202,2.564,204,0.336,207,1.405,210,2.76,220,1.023,221,2.001,354,2.363,363,3.465,368,3.465,370,1.701,387,2.875,416,2.363,456,2.237,458,2.674,469,3.59,495,3.073,1046,3.465,1047,5.463,1048,6.24,1049,5.463,1050,3.978,1051,3.978,1052,5.463,1053,5.852,1054,5.463,1055,5.463,1056,5.463,1057,4.759,1058,4.759,1059,5.463,1060,5.463,1061,5.463,1062,5.463,1063,5.463,1064,5.463,1065,5.463,1066,5.463,1067,5.463,1068,2.875,1069,3.978,1070,3.978,1071,5.463,1072,3.978,1073,3.978,1074,3.465,1075,3.978,1076,3.465,1077,3.978,1078,3.073,1079,3.978,1080,3.127]],["title/components/FrameworkComponent.html",[0,0.494,170,1.106]],["body/components/FrameworkComponent.html",[0,0.817,1,1.283,2,1.88,3,0.145,4,0.113,5,1.476,6,1.53,7,1.476,8,1.476,9,0.113,11,1.328,12,2.655,13,2.47,14,1.88,15,1.948,17,1.948,19,1.007,20,1.119,22,0.366,23,0.677,24,0.013,25,0.145,26,0.442,43,1.576,95,1.425,144,1.197,145,1.948,146,1.88,147,1.476,148,2.318,149,1.476,150,0.566,151,1.476,152,1.283,153,1.476,154,1.283,155,1.476,156,1.283,157,1.476,158,1.283,159,1.425,160,1.476,161,1.283,162,1.476,163,1.283,164,0.94,165,1.476,166,1.239,167,1.476,168,1.283,169,1.476,170,1.946,171,1.476,172,1.283,173,1.476,174,1.283,175,1.476,176,1.239,177,1.239,178,1.476,179,1.283,180,1.476,181,1.239,182,1.375,183,1.476,184,1.239,185,1.476,186,1.239,187,1.476,188,1.239,189,0.591,190,1.476,191,1.283,192,1.476,193,1.239,194,1.375,195,1.476,196,1.476,197,0.007,198,0.01,199,0.007,201,1.693,202,2.728,204,0.38,205,1.076,207,1.526,210,2.901,214,1.328,215,0.583,216,0.677,220,1.156,221,2.173,228,1.847,229,1.923,497,2.26,838,2.289,1081,3.917,1082,6.641,1083,5.933,1084,3.25,1085,4.747,1086,5.933,1087,3.171,1088,4.496,1089,3.25,1090,3.535,1091,3.917]],["title/components/FrameworkRendererComponent.html",[0,0.494,172,1.145]],["body/components/FrameworkRendererComponent.html",[0,0.65,1,0.842,2,1.398,3,0.095,4,0.074,5,0.969,6,1.005,7,0.969,8,0.969,9,0.074,11,0.872,12,2.547,13,2.366,14,1.398,15,1.448,17,1.448,19,0.661,20,1.248,22,0.345,23,0.444,24,0.014,25,0.095,26,0.29,43,1.567,79,1.263,81,2.384,82,2.995,83,2.506,84,2.357,85,1.754,86,2.17,87,2.567,88,2.407,89,1.373,90,1.743,92,1.316,94,1.966,95,1.398,103,1.435,112,2.059,114,2.354,115,2.134,119,2.134,127,1.577,128,1.577,131,2.246,132,1.577,133,1.886,135,1.86,138,1.373,144,0.786,145,1.448,146,1.398,147,0.969,148,1.923,149,0.969,150,0.502,151,0.969,152,0.842,153,0.969,154,0.842,155,0.969,156,0.842,157,0.969,158,0.842,159,0.935,160,0.969,161,0.842,162,0.969,163,0.842,164,0.617,165,0.969,166,0.813,167,0.969,168,0.842,169,0.969,170,0.813,171,0.969,172,1.671,173,0.969,174,0.842,175,0.969,176,0.813,177,0.813,178,0.969,179,0.842,180,0.969,181,0.813,182,0.903,183,0.969,184,0.813,185,0.969,186,0.813,187,0.969,188,0.813,189,0.47,190,0.969,191,0.842,192,0.969,193,0.813,194,0.903,195,0.969,196,0.969,197,0.005,198,0.007,199,0.005,201,1.258,202,2.17,204,0.25,205,0.8,207,1.135,208,1.316,210,2.407,214,1.303,215,0.705,216,0.664,220,1.135,221,1.934,223,1.174,228,1.213,229,1.263,234,1.448,235,2.086,354,3.137,362,2.246,366,1.985,370,1.263,397,2.481,400,5.939,402,1.137,407,1.613,408,1.224,410,3.643,411,1.754,412,2.572,414,2.134,423,2.689,425,2.321,431,3.06,434,4.6,435,1.123,437,4.6,438,4.6,442,2.407,446,3.898,448,0.903,449,1.86,450,3.468,456,2.97,459,2.965,486,2.456,497,1.797,507,2.567,613,1.754,633,1.754,692,1.86,718,2.983,819,2.572,1001,3.189,1084,2.134,1085,3.938,1087,2.357,1092,6.533,1093,5.897,1094,2.572,1095,4.411,1096,5.281,1097,4.411,1098,5.281,1099,5.281,1100,4.411,1101,5.281,1102,4.6,1103,4.411,1104,2.952,1105,2.952,1106,2.952,1107,2.952,1108,2.952,1109,2.952,1110,2.952,1111,4.411,1112,2.952,1113,2.952,1114,3.843,1115,2.572,1116,2.321,1117,2.321,1118,2.952,1119,2.952,1120,2.952,1121,2.952,1122,2.321,1123,4.411,1124,2.572,1125,2.952,1126,4.411,1127,4.411,1128,4.411,1129,4.411,1130,4.411,1131,2.952,1132,5.281,1133,2.952,1134,1.66,1135,3.55,1136,5.281,1137,2.321,1138,2.572,1139,2.572,1140,3.843,1141,5.859,1142,1.985,1143,2.952]],["title/guards/FrameworkResolver.html",[1144,2.699,1145,2.699]],["body/guards/FrameworkResolver.html",[3,0.176,4,0.137,9,0.137,19,1.222,20,1.131,22,0.437,23,0.821,24,0.013,25,0.176,26,0.536,150,0.538,197,0.009,198,0.011,199,0.009,201,1.555,204,0.461,207,1.726,208,2.43,214,1.982,215,0.66,216,1.01,220,1.402,228,2.24,229,2.332,236,2.991,237,4.265,253,2.073,497,1.856,576,3.855,593,3.941,788,3.884,829,2.536,838,2.776,1087,2.914,1142,4.886,1145,4.511,1146,3.665,1147,6.332,1148,3.665,1149,4.779,1150,3.436,1151,5.452,1152,4.85,1153,5.482,1154,4.886,1155,5.482,1156,4.75,1157,3.436,1158,4.287,1159,5.452,1160,4.287,1161,5.452]],["title/components/HeaderComponent.html",[0,0.494,174,1.145]],["body/components/HeaderComponent.html",[0,0.722,1,1.01,2,1.596,3,0.114,4,0.089,5,1.163,6,1.205,7,1.163,8,1.163,9,0.089,11,1.046,12,2.598,13,2.415,14,2.221,15,1.654,17,1.654,19,1.314,20,0.597,22,0.323,23,0.533,24,0.014,25,0.114,26,0.348,37,2.339,43,0.74,79,1.514,80,1.578,81,2.803,82,2.523,86,2.069,87,2.449,88,2.409,89,2.343,90,2.523,92,3.343,94,3.007,95,1.122,96,1.803,98,2.38,102,3.297,103,2.449,111,2.38,117,2.38,118,2.231,119,2.668,122,3.386,124,4.379,125,4.238,126,1.892,127,1.892,128,1.892,129,2.103,130,2.56,131,1.803,133,2.507,136,2.85,137,3.133,138,2.727,144,0.943,145,1.654,146,1.596,147,1.163,148,2.096,149,1.163,150,0.47,151,1.163,152,1.01,153,1.163,154,1.01,155,1.163,156,1.01,157,1.163,158,1.01,159,1.122,160,1.163,161,1.01,162,1.163,163,1.01,164,0.74,165,1.163,166,0.976,167,1.163,168,1.01,169,1.163,170,0.976,171,1.163,172,1.01,173,1.163,174,1.822,175,1.163,176,0.976,177,0.976,178,1.163,179,1.01,180,1.163,181,0.976,182,1.083,183,1.163,184,0.976,185,1.163,186,0.976,187,1.163,188,0.976,189,0.522,190,1.163,191,1.01,192,1.163,193,0.976,194,1.083,195,1.163,196,1.163,197,0.006,198,0.008,199,0.006,204,0.299,342,2.103,354,2.103,362,1.803,364,2.784,370,2.999,378,2.38,382,1.99,387,2.56,416,2.103,424,3.641,426,3.085,427,3.591,453,2.992,456,3.943,674,2.38,692,2.231,755,2.784,1068,2.56,1074,3.085,1076,3.085,1078,3.297,1080,2.784,1162,3.085,1163,3.96,1164,5.862,1165,5.037,1166,3.541,1167,5.037,1168,6.386,1169,3.541,1170,3.541,1171,3.085,1172,2.784,1173,5.037,1174,5.037,1175,3.541,1176,5.037,1177,5.862,1178,3.541,1179,5.037,1180,3.541,1181,7.213,1182,3.541,1183,5.037,1184,2.784,1185,3.541,1186,3.541,1187,3.541,1188,3.541,1189,3.541,1190,3.541,1191,3.541,1192,3.085]],["title/components/HomeComponent.html",[0,0.494,176,1.106]],["body/components/HomeComponent.html",[0,0.83,1,1.324,2,1.92,3,0.15,4,0.117,5,1.524,6,1.58,7,1.524,8,1.524,9,0.117,11,1.371,12,2.652,13,2.467,14,1.92,15,1.989,17,1.989,19,1.04,20,1.021,22,0.334,23,0.699,24,0.013,25,0.15,26,0.456,43,0.97,80,2.069,81,1.765,82,2.394,83,1.985,86,1.907,88,1.907,90,1.834,95,1.471,114,2.069,144,1.236,145,1.989,146,1.92,147,1.524,148,2.348,149,1.524,150,0.573,151,1.524,152,1.324,153,1.524,154,1.324,155,1.524,156,1.324,157,1.524,158,1.324,159,1.471,160,1.524,161,1.324,162,1.524,163,1.324,164,0.97,165,1.524,166,1.279,167,1.524,168,1.324,169,1.524,170,1.279,171,1.524,172,1.324,173,1.524,174,1.324,175,1.524,176,1.97,177,1.279,178,1.524,179,1.324,180,1.524,181,1.279,182,1.42,183,1.524,184,1.279,185,1.524,186,1.279,187,1.524,188,1.279,189,0.601,190,1.524,191,1.324,192,1.524,193,1.279,194,1.42,195,1.524,196,1.524,197,0.007,198,0.01,199,0.007,204,0.393,205,1.099,214,1.371,215,0.456,216,0.699,229,1.985,407,1.194,408,0.97,423,2.363,576,3.698,1150,2.925,1157,2.925,1193,4.044,1194,6.745,1195,6.059,1196,5.876,1197,6.059,1198,6.059]],["title/interfaces/InfoResource.html",[463,0.433,1199,2.902]],["body/interfaces/InfoResource.html",[3,0.183,4,0.142,9,0.142,24,0.013,25,0.222,54,4.32,59,3.558,73,4.608,132,3.018,134,1.956,189,0.611,197,0.009,198,0.011,199,0.009,204,0.478,205,1.243,215,0.726,216,1.032,402,1.518,463,0.829,465,1.556,467,2.097,474,2.582,482,1.668,542,3.49,556,3.856,842,3.355,1199,5.336,1200,4.44,1201,6.965,1202,6.036]],["title/interfaces/InfoResourceSection.html",[463,0.433,842,2.385]],["body/interfaces/InfoResourceSection.html",[3,0.175,4,0.136,9,0.136,24,0.013,25,0.216,28,4.256,54,4.565,58,2.756,59,4.896,73,3.639,91,4.256,132,4.042,134,2.217,189,0.482,197,0.009,198,0.011,199,0.009,204,0.458,205,1.211,215,0.764,402,1.519,431,2.518,463,0.817,465,1.492,467,2.043,474,2.551,482,2.234,487,2.518,518,2.315,542,2.756,556,3.044,842,3.968,1199,5.468,1200,4.256,1201,5.819,1202,4.256,1203,4.716,1204,4.716,1205,4.716,1206,3.913,1207,5.413,1208,5.413,1209,5.413,1210,5.413]],["title/components/InformationComponent.html",[0,0.494,177,1.106]],["body/components/InformationComponent.html",[0,0.766,1,1.129,2,1.725,3,0.235,4,0.1,5,1.299,6,1.347,7,1.299,8,1.299,9,0.1,11,1.169,12,2.626,13,2.442,14,1.725,15,1.787,17,1.787,19,1.394,20,1.049,22,0.343,23,0.596,24,0.014,25,0.128,26,0.389,43,1.584,54,3.43,59,4.223,65,4.742,72,4.742,79,1.692,80,1.764,81,2.549,82,2.995,83,2.328,86,2.236,87,1.924,88,2.236,90,1.563,92,3.133,94,1.764,95,1.254,112,2.043,114,2.426,119,1.347,125,4.845,126,2.114,127,2.114,128,2.114,135,2.493,136,1.924,137,2.114,138,1.84,144,1.053,145,1.787,146,1.725,147,1.299,148,2.201,149,1.299,150,0.499,151,1.299,152,1.129,153,1.299,154,1.129,155,1.299,156,1.129,157,1.299,158,1.129,159,1.254,160,1.299,161,1.129,162,1.299,163,1.129,164,0.827,165,1.299,166,1.09,167,1.299,168,1.129,169,1.299,170,1.09,171,1.299,172,1.129,173,1.299,174,1.129,175,1.299,176,1.09,177,1.847,178,1.299,179,1.129,180,1.299,181,1.09,182,1.21,183,1.299,184,1.09,185,1.299,186,1.09,187,1.299,188,1.09,189,0.554,190,1.299,191,1.129,192,1.299,193,1.09,194,1.21,195,1.299,196,1.299,197,0.006,198,0.009,199,0.006,204,0.335,205,0.987,215,0.535,362,2.771,370,1.692,387,2.86,407,1.018,408,0.827,422,2.86,423,2.771,456,3.5,485,1.563,497,2.118,838,2.014,1068,2.86,1078,2.225,1080,3.111,1211,3.447,1212,6.223,1213,5.444,1214,4.183,1215,6.223,1216,5.444,1217,5.27,1218,6.703,1219,3.957,1220,5.444,1221,3.111,1222,5.444,1223,5.444]],["title/modules/InformationModule.html",[260,1.527,1224,2.902]],["body/modules/InformationModule.html",[3,0.171,4,0.133,9,0.133,22,0.448,23,0.798,24,0.013,25,0.171,26,0.521,54,3.338,144,1.41,166,2.17,170,2.17,177,2.17,184,2.17,197,0.008,198,0.011,199,0.008,260,2.015,262,2.464,263,2.98,264,4.262,265,3.338,266,4.153,267,2.697,274,4.677,275,4.153,276,3.338,277,2.831,279,3.522,283,3.522,291,4.166,293,4.166,411,3.147,582,4.765,1224,6.059,1225,4.616,1226,4.616,1227,4.616,1228,5.293,1229,5.298,1230,4.616,1231,4.616,1232,4.616,1233,4.431,1234,4.616,1235,3.562,1236,4.616]],["title/modules/InformationRoutingModule.html",[260,1.527,1228,2.699]],["body/modules/InformationRoutingModule.html",[0,0.94,3,0.18,4,0.14,9,0.14,22,0.449,23,0.837,24,0.013,25,0.18,26,0.547,43,1.42,59,3.506,166,1.872,170,1.872,177,1.872,184,1.872,197,0.009,198,0.011,199,0.009,228,2.286,262,2.588,264,3.305,267,2.832,279,2.973,283,3.63,311,4.374,313,4.911,314,4.567,318,2.832,320,5.265,321,4.847,322,4.847,323,4.022,1040,4.847,1145,4.567,1149,4.28,1228,4.567,1230,4.847,1231,4.847,1232,4.847,1233,4.567,1234,4.847,1235,4.567,1236,4.847,1237,5.564,1238,5.564,1239,5.564,1240,5.564,1241,5.918,1242,5.564]],["title/injectables/LogoLocatorService.html",[236,1.789,577,2.258]],["body/injectables/LogoLocatorService.html",[3,0.179,4,0.139,9,0.139,19,1.638,20,1.232,22,0.304,23,0.831,24,0.014,25,0.179,26,0.543,150,0.443,197,0.009,198,0.011,199,0.009,204,0.467,205,1.226,207,1.739,214,1.631,215,0.665,216,0.831,220,1.42,236,3.014,238,3.713,253,2.1,402,1.381,407,1.42,408,1.154,577,3.803,626,2.951,781,4.914,783,3.992,1214,4.914,1243,5.99,1244,4.342,1245,7.31,1246,6.763,1247,6.763,1248,6.763,1249,5.523,1250,6.763,1251,5.523,1252,5.523,1253,5.523,1254,4.811,1255,5.891,1256,5.891,1257,5.891,1258,5.317]],["title/modules/MaterialModule.html",[260,1.527,1259,2.699]],["body/modules/MaterialModule.html",[3,0.159,4,0.124,9,0.124,22,0.467,23,0.739,24,0.013,25,0.159,26,0.483,197,0.008,198,0.01,199,0.008,262,2.283,267,2.499,279,2.623,283,3.356,382,1.939,633,3.731,1259,4.222,1260,4.908,1261,6.927,1262,6.281,1263,6.927,1264,4.908,1265,6.927,1266,4.908,1267,6.927,1268,3.548,1269,6.927,1270,4.908,1271,4.908,1272,6.927,1273,4.908,1274,6.927,1275,4.908,1276,6.927,1277,4.908,1278,6.927,1279,4.908,1280,6.927,1281,4.908,1282,4.276,1283,6.927,1284,4.908,1285,6.927,1286,4.908,1287,6.927,1288,4.908,1289,6.927,1290,4.908,1291,6.927,1292,4.908,1293,6.927,1294,4.908,1295,6.927,1296,4.908,1297,6.927,1298,3.548,1299,6.927,1300,4.908,1301,6.927,1302,4.908,1303,6.927,1304,4.908,1305,6.927,1306,4.908,1307,6.927,1308,6.927,1309,4.908,1310,4.908,1311,6.927,1312,4.908,1313,6.927,1314,4.908]],["title/components/OverviewComponent.html",[0,0.494,179,1.145]],["body/components/OverviewComponent.html",[0,0.74,1,1.058,2,1.648,3,0.12,4,0.151,5,1.973,6,1.262,7,1.217,8,1.217,9,0.093,11,1.095,12,2.61,13,2.427,14,1.648,15,1.708,17,1.708,19,1.347,20,0.877,22,0.359,23,0.558,24,0.013,25,0.12,26,0.365,37,2.677,43,0.775,79,1.586,80,1.652,81,2.478,82,2.712,83,1.586,84,1.981,85,2.202,86,2.82,87,2.922,88,3.003,89,2.796,90,2.056,92,3.059,93,3.23,94,2.319,95,1.905,96,3.06,106,5.124,108,5.124,112,1.973,113,2.492,114,1.652,115,2.68,133,1.586,136,1.802,137,1.981,138,1.724,139,3.23,144,0.987,145,1.708,146,1.648,147,1.217,148,2.14,149,1.217,150,0.482,151,1.217,152,1.058,153,1.217,154,1.058,155,1.217,156,1.058,157,1.217,158,1.058,159,1.175,160,1.217,161,1.058,162,1.217,163,1.058,164,0.775,165,1.217,166,1.022,167,1.217,168,1.058,169,1.217,170,1.022,171,1.217,172,1.058,173,1.217,174,1.058,175,1.217,176,1.022,177,1.022,178,1.217,179,1.859,180,1.217,181,1.022,182,1.134,183,1.217,184,1.022,185,1.217,186,1.022,187,1.217,188,1.022,189,0.58,190,1.217,191,1.058,192,1.217,193,1.022,194,1.134,195,1.217,196,1.217,197,0.006,198,0.008,199,0.006,204,0.314,215,0.365,277,3.483,338,4.091,343,3.483,349,4.091,353,3.761,358,2.915,359,3.23,360,3.23,361,3.23,362,2.649,366,2.492,370,1.586,382,2.375,397,2.926,410,2.78,414,2.68,427,2.085,453,2.202,454,2.915,455,2.915,687,3.278,755,2.915,788,3.212,829,1.724,840,2.336,1078,2.085,1196,5.236,1315,3.23,1316,4.091,1317,6.011,1318,5.203,1319,5.203,1320,4.532,1321,4.532,1322,5.203,1323,3.707,1324,5.203,1325,6.864,1326,5.203,1327,3.707,1328,5.203,1329,3.707,1330,3.707,1331,5.203,1332,3.707,1333,3.707,1334,2.915,1335,3.707,1336,3.707,1337,7.117,1338,3.707,1339,6.517,1340,3.707,1341,3.707]],["title/components/PageNotFoundComponent.html",[0,0.494,181,1.106]],["body/components/PageNotFoundComponent.html",[0,0.827,1,1.312,2,1.908,3,0.149,4,0.116,5,1.51,6,1.565,7,1.51,8,1.51,9,0.116,11,1.359,12,2.659,13,2.475,14,1.908,15,1.977,17,1.977,19,1.505,20,1.015,22,0.253,23,0.692,24,0.013,25,0.149,26,0.452,43,0.961,95,1.457,132,2.458,144,1.225,145,1.977,146,1.908,147,1.51,148,2.339,149,1.51,150,0.538,151,1.51,152,1.312,153,1.51,154,1.312,155,1.51,156,1.312,157,1.51,158,1.312,159,1.457,160,1.51,161,1.312,162,1.51,163,1.312,164,0.961,165,1.51,166,1.267,167,1.51,168,1.312,169,1.51,170,1.267,171,1.51,172,1.312,173,1.51,174,1.312,175,1.51,176,1.267,177,1.267,178,1.51,179,1.312,180,1.51,181,1.963,182,2.426,183,1.51,184,1.267,185,1.51,186,1.267,187,1.51,188,1.267,189,0.598,190,1.51,191,1.312,192,1.51,193,1.267,194,1.407,195,1.51,196,1.51,197,0.007,198,0.01,199,0.007,201,1.718,202,2.759,204,0.389,207,1.549,210,2.927,220,1.183,221,1.685,316,4.854,1342,5.85,1343,4.007,1344,7.125,1345,6.715,1346,6.023,1347,4.6,1348,4.6,1349,4.6]],["title/injectables/RandomColorService.html",[236,1.789,578,2.699]],["body/injectables/RandomColorService.html",[3,0.182,4,0.141,9,0.141,19,1.65,20,1.152,22,0.309,23,0.845,24,0.013,25,0.182,26,0.552,150,0.45,197,0.009,198,0.011,199,0.009,204,0.475,207,1.757,214,1.659,216,0.845,220,1.444,236,3.045,238,3.775,253,2.135,578,4.593,1350,5.79,1351,4.415,1352,6.832,1353,5.616,1354,6.832,1355,7.852,1356,7.852,1357,7.852,1358,6.841,1359,7.852,1360,5.616,1361,7.364,1362,5.368,1363,5.616,1364,4.939]],["title/interfaces/RenderedFilterBlock.html",[463,0.433,607,2.258]],["body/interfaces/RenderedFilterBlock.html",[3,0.137,4,0.107,9,0.107,24,0.014,25,0.24,38,2.264,51,1.611,62,2.516,67,1.342,112,1.872,150,0.339,164,0.885,189,0.377,197,0.007,198,0.009,199,0.007,204,0.358,205,1.034,215,0.678,216,0.858,223,1.128,234,1.391,235,1.674,372,3.878,402,1.47,408,1.549,463,0.818,464,1.674,465,1.167,467,1.972,477,2.343,482,1.684,485,2.547,496,3.304,510,2.998,511,2.873,513,3.582,516,2.998,540,1.97,549,2.363,572,1.97,602,1.97,603,2.516,605,2.903,607,3.207,608,4.345,609,4.635,610,4.535,611,3.774,612,3.352,613,4.096,614,3.833,615,2.848,616,2.848,617,1.97,618,2.848,619,2.848,620,3.387,621,3.387,622,2.516,623,3.593,624,3.134,625,2.848,626,3.047,627,2.669,628,2.264,629,2.848,630,2.848,631,4.061,632,5.092,633,3.387,634,4.061,635,2.848,636,3.833,637,3.833,638,4.061,639,2.848,640,3.829,641,4.061,642,4.345,643,4.061,644,3.829,645,2.848,646,4.061,647,4.061]],["title/components/ResourcesComponent.html",[0,0.494,184,1.106]],["body/components/ResourcesComponent.html",[0,0.792,1,1.205,2,1.803,3,0.137,4,0.106,5,1.387,6,1.438,7,1.387,8,1.387,9,0.106,11,1.248,12,2.641,13,2.457,14,1.803,15,1.869,17,1.869,19,0.946,20,1.212,22,0.38,23,0.636,24,0.013,25,0.137,26,0.415,43,0.883,59,4.53,95,1.338,112,1.869,144,1.125,145,1.869,146,1.803,147,1.387,148,2.261,149,1.387,150,0.552,151,1.387,152,1.205,153,1.387,154,1.205,155,1.387,156,1.205,157,1.387,158,1.205,159,1.338,160,1.387,161,1.205,162,1.387,163,1.205,164,0.883,165,1.387,166,1.164,167,1.387,168,1.205,169,1.387,170,1.164,171,1.387,172,1.205,173,1.387,174,1.205,175,1.387,176,1.164,177,1.164,178,1.387,179,1.205,180,1.387,181,1.164,182,1.292,183,1.387,184,1.898,185,1.387,186,1.164,187,1.387,188,1.164,189,0.573,190,1.387,191,1.205,192,1.387,193,1.164,194,1.292,195,1.387,196,1.387,197,0.007,198,0.009,199,0.007,201,1.624,202,2.645,204,0.357,205,1.032,207,1.464,210,2.83,214,1.248,215,0.633,216,0.636,220,1.464,221,2.522,228,1.735,229,1.807,829,1.965,842,3.823,843,3.321,1084,3.053,1085,4.63,1087,3.041,1089,3.053,1091,3.68,1202,4.475,1365,3.68,1366,5.607,1367,6.437,1368,5.691,1369,6.452,1370,6,1371,5.691,1372,4.224,1373,4.224,1374,4.224,1375,4.224,1376,4.224,1377,4.224,1378,5.691,1379,5.691,1380,5.691]],["title/guards/ResourcesResolver.html",[1144,2.699,1233,2.699]],["body/guards/ResourcesResolver.html",[3,0.181,4,0.141,9,0.141,19,1.254,20,1.149,22,0.432,23,0.842,24,0.013,25,0.181,26,0.55,150,0.546,197,0.009,198,0.011,199,0.009,201,1.596,204,0.473,207,1.753,214,2.013,215,0.67,216,1.026,220,1.439,228,2.299,229,2.393,236,3.038,253,2.127,576,3.878,788,3.928,829,2.602,842,3.323,843,4.399,1087,2.99,1146,3.761,1148,3.761,1149,4.821,1150,3.525,1152,4.927,1153,5.531,1154,4.942,1155,5.531,1157,3.525,1233,4.582,1381,6.404,1382,5.595,1383,5.595,1384,5.595]],["title/pipes/SetToArrayPipe.html",[877,2.258,1385,2.699]],["body/pipes/SetToArrayPipe.html",[3,0.194,4,0.151,9,0.151,11,1.771,20,1.011,22,0.33,23,0.903,24,0.013,25,0.194,26,0.59,150,0.607,197,0.01,198,0.011,199,0.01,201,1.711,207,1.543,214,1.771,215,0.59,216,0.903,220,1.543,253,2.28,408,1.253,475,2.992,877,3.997,1385,4.778,1386,4.335,1387,6.191,1388,5.225,1389,7.107,1390,4.716,1391,5.588,1392,5.997,1393,5.588,1394,5.997]],["title/modules/SharedModule.html",[260,1.527,274,2.385]],["body/modules/SharedModule.html",[3,0.133,4,0.103,9,0.103,22,0.449,23,0.618,24,0.013,25,0.133,26,0.404,43,0.859,95,1.302,144,1.094,156,2.275,158,2.275,159,1.302,161,2.096,168,2.275,172,2.275,174,2.275,181,2.197,182,1.257,197,0.007,198,0.009,199,0.007,228,1.688,260,1.562,262,1.911,263,2.311,264,3.769,265,2.589,266,3.519,267,3.231,274,5.023,275,3.519,276,2.589,277,2.195,279,2.985,283,2.985,313,4.037,316,2.97,317,3.579,390,2.97,411,2.44,429,3.23,475,1.623,582,4.587,717,2.97,1093,3.23,1145,3.755,1235,2.762,1259,5.361,1362,2.762,1385,5.361,1395,3.579,1396,3.579,1397,3.579,1398,3.579,1399,5.361,1400,5.361,1401,4.108,1402,4.108,1403,4.108,1404,6.346,1405,6.346,1406,4.108,1407,4.108,1408,4.108,1409,4.108,1410,4.108,1411,4.108,1412,4.108,1413,3.579,1414,4.108]],["title/interfaces/SimpleDataSource.html",[463,0.433,1415,2.699]],["body/interfaces/SimpleDataSource.html",[3,0.09,4,0.07,9,0.07,20,0.709,22,0.368,24,0.014,25,0.164,26,0.273,112,2.003,119,2.272,189,0.572,197,0.011,198,0.007,199,0.004,201,0.791,204,0.234,207,1.082,208,3.252,220,1.082,221,2.518,223,1.71,234,1.669,235,1.662,253,2.944,258,2.089,318,2.89,342,1.647,402,1.247,408,0.579,446,1.481,448,1.736,449,1.747,463,0.454,465,0.764,549,1.669,598,3.041,602,2.838,605,3.27,624,1.348,699,4.825,718,2.89,746,2.828,781,3.418,788,3.432,827,2.004,829,1.289,833,2.004,836,2.004,879,2.004,982,3.675,985,3.041,989,3.041,1009,3.041,1135,1.863,1214,4.102,1298,2.004,1415,3.418,1416,2.004,1417,3.02,1418,4.798,1419,4.798,1420,2.772,1421,2.772,1422,2.18,1423,4.463,1424,2.18,1425,2.18,1426,3.308,1427,2.18,1428,4.827,1429,2.004,1430,2.18,1431,2.18,1432,3.041,1433,3.308,1434,1.481,1435,4.463,1436,2.18,1437,2.18,1438,2.18,1439,2.18,1440,2.18,1441,2.18,1442,2.18,1443,2.18,1444,2.18,1445,2.18,1446,2.18,1447,2.004,1448,2.18,1449,2.18,1450,2.18,1451,2.18,1452,2.18,1453,3.308,1454,2.18,1455,3.308,1456,2.18,1457,2.18,1458,2.18,1459,4.798,1460,2.18,1461,3.997,1462,2.18,1463,3.308,1464,2.18,1465,3.308,1466,2.18,1467,2.18,1468,2.18,1469,3.308,1470,3.997,1471,4.463,1472,3.308,1473,2.18,1474,2.18,1475,2.18,1476,3.308,1477,2.18,1478,2.18,1479,2.18,1480,2.18,1481,3.308,1482,2.18,1483,2.18,1484,3.308,1485,2.18,1486,2.18,1487,2.18,1488,2.18,1489,2.18,1490,2.18,1491,2.18,1492,2.18,1493,2.18,1494,2.18,1495,2.18,1496,2.18,1497,3.997,1498,2.18,1499,2.18,1500,2.18,1501,2.18,1502,2.18,1503,2.18,1504,2.18,1505,3.997,1506,2.18,1507,2.18,1508,2.18,1509,2.18,1510,3.308,1511,3.308,1512,3.308,1513,3.308,1514,2.18,1515,5.817,1516,4.798,1517,3.997,1518,3.308,1519,3.997,1520,2.18,1521,3.997,1522,2.18,1523,2.18,1524,2.18,1525,2.18,1526,5.248,1527,3.308,1528,3.997,1529,3.308,1530,2.18,1531,2.18,1532,2.18,1533,2.18,1534,2.18,1535,2.18,1536,4.463,1537,2.18,1538,2.18,1539,3.308,1540,2.18,1541,2.18,1542,2.18,1543,2.18,1544,3.308,1545,3.308,1546,2.18,1547,3.308,1548,3.308,1549,2.18,1550,3.308,1551,2.18,1552,2.18,1553,2.004,1554,2.18]],["title/interfaces/Sort.html",[463,0.433,1428,2.699]],["body/interfaces/Sort.html",[3,0.09,4,0.07,9,0.07,22,0.368,24,0.014,25,0.165,26,0.274,112,2.007,119,2.274,189,0.573,197,0.011,198,0.007,199,0.004,201,0.794,204,0.235,205,0.765,208,3.255,215,0.274,221,2.447,223,1.712,234,1.673,235,1.667,253,2.946,258,2.094,318,2.895,342,1.653,402,1.248,408,0.582,446,1.487,448,1.739,449,1.753,463,0.455,465,0.767,549,1.673,598,2.011,602,2.843,605,3.275,624,1.353,699,4.831,718,2.895,746,2.836,781,3.425,788,3.266,827,2.011,829,1.294,833,2.011,836,2.011,879,2.011,982,3.683,985,3.05,989,3.05,1009,3.05,1135,3.823,1214,4.109,1298,2.011,1415,2.836,1416,2.011,1417,2.506,1418,3.317,1419,3.317,1422,2.188,1423,4.471,1424,2.188,1425,2.188,1426,3.317,1427,2.188,1428,4.91,1429,4.111,1430,2.188,1431,2.188,1432,4.111,1433,4.471,1434,1.487,1435,4.471,1436,2.188,1437,2.188,1438,2.188,1439,2.188,1440,2.188,1441,2.188,1442,2.188,1443,2.188,1444,2.188,1445,2.188,1446,2.188,1447,2.011,1448,2.188,1449,2.188,1450,2.188,1451,2.188,1452,2.188,1453,3.317,1454,2.188,1455,3.317,1456,2.188,1457,2.188,1458,2.188,1459,4.805,1460,2.188,1461,4.006,1462,2.188,1463,3.317,1464,2.188,1465,3.317,1466,2.188,1467,2.188,1468,2.188,1469,3.317,1470,4.006,1471,4.471,1472,3.317,1473,2.188,1474,2.188,1475,2.188,1476,3.317,1477,2.188,1478,2.188,1479,2.188,1480,2.188,1481,3.317,1482,2.188,1483,2.188,1484,3.317,1485,2.188,1486,2.188,1487,2.188,1488,2.188,1489,2.188,1490,2.188,1491,2.188,1492,2.188,1493,2.188,1494,2.188,1495,2.188,1496,2.188,1497,4.006,1498,2.188,1499,2.188,1500,2.188,1501,2.188,1502,2.188,1503,2.188,1504,2.188,1505,4.006,1506,2.188,1507,2.188,1508,2.188,1509,2.188,1510,3.317,1511,3.317,1512,3.317,1513,3.317,1514,2.188,1515,5.821,1516,4.805,1517,4.006,1518,3.317,1519,4.006,1520,2.188,1521,4.006,1522,2.188,1523,2.188,1524,2.188,1525,2.188,1526,5.255,1527,3.317,1528,4.006,1529,3.317,1530,2.188,1531,2.188,1532,2.188,1533,2.188,1534,2.188,1535,2.188,1536,4.471,1537,2.188,1538,2.188,1539,3.317,1540,2.188,1541,2.188,1542,2.188,1543,2.188,1544,3.317,1545,3.317,1546,2.188,1547,3.317,1548,3.317,1549,2.188,1550,3.317,1551,2.188,1552,2.188,1553,2.011,1554,2.188]],["title/classes/TableColumn.html",[26,0.395,1555,2.902]],["body/classes/TableColumn.html",[0,0.693,3,0.134,4,0.105,9,0.105,12,1.316,13,1.227,15,1.364,17,1.364,19,0.931,20,1.153,22,0.394,23,0.625,24,0.014,25,0.182,26,0.553,43,0.868,112,1.364,119,2.433,126,4.198,150,0.451,189,0.568,193,1.145,194,1.271,197,0.007,198,0.009,199,0.007,201,1.185,202,2.312,204,0.578,205,1.02,208,1.851,210,1.707,215,0.673,216,1.03,221,1.521,299,2.792,402,1.39,410,3.82,422,3.003,442,2.312,474,2.347,497,1.915,548,3.007,549,1.847,617,2.617,622,4.246,692,2.617,716,2.617,838,2.115,885,3.266,905,3.266,1122,3.266,1268,3.003,1417,2.467,1434,3.007,1555,5.542,1556,4.504,1557,5.168,1558,3.266,1559,5.959,1560,4.154,1561,4.154,1562,4.154,1563,4.154,1564,4.902,1565,3.003,1566,3.003,1567,4.425,1568,3.619,1569,3.619,1570,3.266,1571,3.266,1572,3.619,1573,3.619,1574,3.619,1575,6.228,1576,3.619,1577,3.619,1578,3.619,1579,3.619,1580,3.619,1581,3.619,1582,3.619,1583,3.619,1584,3.619,1585,3.619,1586,3.619,1587,3.619,1588,4.902,1589,3.619,1590,4.902,1591,3.619,1592,3.619,1593,4.902,1594,5.959,1595,3.619,1596,3.619,1597,3.619,1598,3.619,1599,4.425,1600,3.619,1601,3.619,1602,3.266,1603,3.266,1604,3.619,1605,3.619,1606,4.902,1607,3.619]],["title/components/TechnologiesComponent.html",[0,0.494,186,1.106]],["body/components/TechnologiesComponent.html",[0,0.538,1,0.624,2,1.108,3,0.071,4,0.055,5,0.718,6,0.745,7,0.718,8,0.718,9,0.055,11,0.646,12,2.446,13,2.268,14,1.108,15,1.148,17,1.148,19,0.784,20,1.25,22,0.391,23,0.329,24,0.014,25,0.071,26,0.215,37,2,43,1.044,46,3.047,51,1.33,67,1.108,79,0.936,80,0.975,81,2.655,82,3.113,83,2.872,84,2.335,86,2.512,87,2.125,88,2.512,89,1.018,90,2.415,92,2.725,95,1.108,98,1.471,99,1.581,101,2.204,102,1.23,104,1.471,111,1.471,112,2.15,114,2.725,117,1.471,118,1.379,119,1.858,124,2.078,131,1.114,132,2.335,133,1.496,136,2.427,137,1.169,138,1.018,144,0.582,145,1.148,146,1.108,147,0.718,148,1.639,149,0.718,150,0.467,151,0.718,152,0.624,153,0.718,154,0.624,155,0.718,156,0.624,157,0.718,158,0.624,159,0.693,160,0.718,161,0.624,162,0.718,163,0.624,164,0.457,165,0.718,166,0.603,167,0.718,168,0.624,169,0.718,170,0.603,171,0.718,172,0.624,173,0.718,174,0.624,175,0.718,176,0.603,177,0.603,178,0.718,179,0.624,180,0.718,181,0.603,182,0.669,183,0.718,184,0.603,185,0.718,186,1.376,187,0.718,188,0.603,189,0.519,190,0.718,191,0.624,192,0.718,193,0.603,194,0.669,195,0.718,196,0.718,197,0.004,198,0.006,199,0.004,201,0.998,202,1.796,204,0.185,205,0.634,207,0.9,208,3.204,210,2.051,214,1.291,215,0.697,216,0.658,220,1.498,221,2.326,228,0.899,282,2.352,318,1.781,337,2.135,338,2.75,351,2.529,353,2.529,362,1.114,366,1.471,370,1.496,382,1.382,388,1.906,402,0.99,407,1.284,408,1.044,416,1.3,421,1.906,423,3.419,424,1.581,427,1.967,431,1.018,435,1.662,442,2.392,446,3.393,453,2.596,454,1.72,455,1.72,477,1.437,497,1.487,499,2.654,507,1.701,576,2.831,602,2.322,607,2.458,608,1.379,610,2.754,611,1.781,612,2.427,617,2.033,674,3.67,686,3.047,704,4.35,706,3.807,716,1.379,717,1.581,718,2.225,759,3.436,829,1.018,838,1.114,840,1.379,886,1.906,1001,1.581,1068,1.581,1078,2.458,1085,3.357,1087,2.335,1089,1.581,1090,1.72,1115,1.906,1116,1.72,1117,1.72,1124,1.906,1135,1.471,1137,1.72,1142,2.352,1150,1.379,1157,1.379,1163,1.72,1184,2.75,1221,1.72,1268,1.581,1362,1.471,1366,3.807,1369,3.807,1370,4.35,1417,2.596,1429,1.581,1432,1.581,1434,2.335,1565,1.581,1566,1.581,1567,3.436,1570,3.436,1571,4.293,1599,2.75,1602,1.72,1603,1.72,1608,1.906,1609,3.498,1610,3.498,1611,4.371,1612,3.498,1613,4.371,1614,4.371,1615,4.371,1616,4.371,1617,4.993,1618,4.993,1619,3.498,1620,3.498,1621,6.113,1622,4.993,1623,3.498,1624,2.188,1625,2.188,1626,2.188,1627,2.188,1628,3.498,1629,2.188,1630,1.581,1631,3.498,1632,4.993,1633,5.823,1634,4.993,1635,2.188,1636,2.188,1637,2.188,1638,2.188,1639,2.188,1640,2.188,1641,3.498,1642,2.188,1643,1.72,1644,3.498,1645,2.188,1646,2.188,1647,2.188,1648,2.188,1649,2.188,1650,2.188,1651,2.188,1652,2.188,1653,2.188,1654,2.188,1655,2.188,1656,2.188,1657,3.498,1658,2.188,1659,3.807,1660,2.188,1661,2.188,1662,2.188,1663,1.906,1664,2.188,1665,2.188,1666,1.72,1667,1.906,1668,2.188,1669,2.188,1670,2.188,1671,2.188,1672,2.188,1673,2.188,1674,2.188,1675,2.188,1676,3.498,1677,2.188,1678,2.188,1679,2.188,1680,3.498,1681,2.188,1682,2.188,1683,4.371,1684,3.498,1685,2.188,1686,2.188,1687,2.188,1688,2.188,1689,2.188,1690,2.188,1691,2.188,1692,2.188,1693,2.188,1694,3.498,1695,3.498,1696,3.498,1697,3.498,1698,3.498,1699,3.047,1700,3.047,1701,3.498,1702,3.498,1703,3.047,1704,3.498,1705,3.047,1706,1.906,1707,2.188,1708,4.371,1709,2.188,1710,2.188,1711,2.188,1712,3.498,1713,4.371,1714,4.371,1715,2.188,1716,2.188,1717,1.72,1718,1.906,1719,2.188]],["title/modules/TechnologiesModule.html",[260,1.527,1720,2.902]],["body/modules/TechnologiesModule.html",[3,0.164,4,0.128,9,0.128,22,0.451,23,0.764,24,0.013,25,0.164,26,0.499,144,1.351,163,2.222,164,1.061,186,2.146,188,2.146,189,0.658,191,2.222,193,2.146,197,0.008,198,0.01,199,0.008,260,1.929,262,2.36,263,2.854,264,4.179,265,3.197,266,4.042,267,2.583,274,4.626,275,4.042,276,3.197,277,2.711,279,3.428,283,3.428,291,3.99,293,3.99,411,3.014,499,3.119,582,4.638,694,3.99,1134,2.854,1235,4.313,1557,3.668,1720,6.062,1721,4.42,1722,4.42,1723,4.42,1724,5.235,1725,5.074,1726,4.42,1727,3.99,1728,5.074,1729,3.668,1730,4.42,1731,5.074,1732,4.313,1733,5.074,1734,4.313]],["title/guards/TechnologiesResolver.html",[1144,2.699,1732,2.699]],["body/guards/TechnologiesResolver.html",[3,0.169,4,0.132,9,0.132,19,1.175,20,1.104,22,0.444,23,0.789,24,0.013,25,0.169,26,0.516,43,1.369,150,0.525,189,0.467,197,0.008,198,0.01,199,0.008,201,1.496,204,0.443,207,1.684,208,2.337,214,1.934,215,0.644,216,0.986,220,1.348,228,2.154,229,2.242,234,1.721,236,2.919,237,4.207,253,1.994,318,3.636,497,1.784,499,2.549,556,2.949,576,3.818,593,3.79,612,3.184,617,2.439,716,3.303,788,3.816,829,2.439,838,2.669,840,3.303,1087,2.802,1142,4.801,1146,3.524,1148,3.524,1149,4.713,1150,3.303,1152,4.734,1153,5.407,1154,4.801,1155,5.407,1157,3.303,1158,4.122,1160,4.122,1732,4.402,1735,5.615,1736,5.243,1737,5.243,1738,4.567,1739,5.243,1740,4.567,1741,5.243,1742,5.243]],["title/modules/TechnologiesRoutingModule.html",[260,1.527,1724,2.699]],["body/modules/TechnologiesRoutingModule.html",[0,0.855,3,0.187,4,0.145,9,0.145,22,0.443,23,0.87,24,0.013,25,0.187,26,0.568,186,1.915,188,1.915,189,0.619,197,0.009,198,0.011,199,0.009,228,2.374,262,2.687,267,2.942,279,3.087,283,3.714,311,4.543,313,5.024,314,4.672,318,2.942,320,4.672,406,2.809,499,2.809,1134,3.25,1149,4.38,1235,4.672,1241,6.055,1724,4.672,1726,5.033,1729,4.177,1730,5.033,1732,4.672,1734,4.672,1735,4.543,1743,5.778,1744,5.778]],["title/interfaces/Technology.html",[189,0.358,463,0.433]],["body/interfaces/Technology.html",[3,0.126,4,0.098,9,0.098,22,0.214,24,0.014,25,0.199,35,2.396,36,2.747,37,1.423,42,1.477,55,3.094,73,2.612,134,2.185,150,0.431,189,0.733,197,0.006,198,0.009,199,0.006,204,0.329,205,0.975,215,0.742,216,1.136,258,2.967,320,3.613,323,3.886,337,1.661,402,1.493,406,1.889,408,1.123,446,2.872,448,2.034,463,0.754,465,1.071,467,2.034,470,2.872,474,2.184,476,3.386,480,3.554,481,3.138,482,2.062,484,2.076,485,2.628,487,1.807,490,2.872,494,3.956,498,2.076,529,1.978,538,2.076,543,2.124,545,1.535,556,3.927,570,2.076,577,3.741,626,2.872,628,2.872,783,4.808,837,5.229,839,5.073,937,5.229,948,5.229,1134,3.023,1206,2.808,1217,4.226,1666,5.229,1745,2.808,1746,4.683,1747,4.226,1748,5.794,1749,4.683,1750,5.794,1751,4.683,1752,4.683,1753,4.683,1754,4.226,1755,3.384,1756,3.384,1757,3.384,1758,3.384,1759,3.384,1760,3.384,1761,3.384,1762,3.384,1763,3.384,1764,4.846,1765,3.384]],["title/classes/TechnologyDataSource.html",[26,0.395,1434,2.145]],["body/classes/TechnologyDataSource.html",[3,0.067,4,0.052,9,0.052,19,0.464,20,1.308,22,0.329,24,0.014,25,0.136,26,0.203,112,1.742,119,2.117,150,0.541,189,0.613,197,0.01,198,0.005,199,0.003,201,0.954,204,0.175,205,0.606,207,0.86,208,3.542,214,1.993,215,0.748,216,1.016,220,1.798,221,2.597,223,1.757,234,1.587,235,1.321,253,2.788,258,2.455,299,1.391,318,2.461,342,1.986,402,1.247,407,1.365,408,1.187,446,1.105,448,2.018,449,1.303,463,0.361,549,2.042,598,1.495,602,3.252,605,3.61,624,1.006,640,1.986,644,1.986,699,5.467,718,2.702,746,2.248,781,4.319,788,3.324,827,1.495,829,0.962,833,1.495,836,1.495,879,1.495,982,3.043,985,2.417,989,2.417,1009,2.417,1135,1.391,1214,4.827,1298,1.495,1415,2.829,1416,1.495,1417,1.986,1418,4.173,1419,4.173,1422,1.626,1423,4.698,1424,1.626,1425,1.626,1426,3.801,1427,1.626,1428,5.014,1429,1.495,1430,1.626,1431,1.626,1432,2.417,1433,2.629,1434,1.787,1435,4.891,1436,2.629,1437,3.309,1438,3.309,1439,3.309,1440,3.309,1441,2.629,1442,3.309,1443,3.309,1444,2.629,1445,3.309,1446,3.309,1447,3.836,1448,1.626,1449,1.626,1450,1.626,1451,1.626,1452,1.626,1453,2.629,1454,1.626,1455,2.629,1456,1.626,1457,1.626,1458,1.626,1459,4.698,1460,1.626,1461,4.173,1462,1.626,1463,2.629,1464,1.626,1465,2.629,1466,1.626,1467,1.626,1468,1.626,1469,2.629,1470,3.309,1471,3.801,1472,2.629,1473,1.626,1474,2.629,1475,3.309,1476,2.629,1477,1.626,1478,1.626,1479,1.626,1480,2.629,1481,2.629,1482,1.626,1483,2.629,1484,3.801,1485,1.626,1486,1.626,1487,1.626,1488,1.626,1489,2.629,1490,1.626,1491,2.629,1492,1.626,1493,1.626,1494,1.626,1495,1.626,1496,3.801,1497,3.309,1498,2.629,1499,1.626,1500,1.626,1501,1.626,1502,1.626,1503,1.626,1504,1.626,1505,3.309,1506,1.626,1507,1.626,1508,1.626,1509,1.626,1510,2.629,1511,2.629,1512,2.629,1513,2.629,1514,2.629,1515,5.408,1516,4.173,1517,3.309,1518,2.629,1519,3.309,1520,1.626,1521,3.309,1522,2.629,1523,1.626,1524,1.626,1525,1.626,1526,4.698,1527,2.629,1528,3.309,1529,2.629,1530,1.626,1531,1.626,1532,1.626,1533,1.626,1534,1.626,1535,2.629,1536,5.188,1537,1.626,1538,1.626,1539,2.629,1540,1.626,1541,1.626,1542,1.626,1543,1.626,1544,2.629,1545,2.629,1546,2.629,1547,2.629,1548,2.629,1549,2.629,1550,2.629,1551,1.626,1552,1.626,1553,1.495,1554,1.626,1630,1.495,1766,3.344,1767,3.344,1768,3.344,1769,3.344,1770,3.344,1771,3.344,1772,3.344,1773,3.344,1774,3.344,1775,2.069,1776,2.069,1777,2.069,1778,2.069,1779,2.069,1780,2.069,1781,2.069,1782,2.069,1783,2.069,1784,2.069,1785,2.069,1786,2.069,1787,4.834,1788,2.069,1789,2.069,1790,2.069,1791,2.069,1792,2.069,1793,2.069,1794,2.069,1795,2.913,1796,2.069,1797,2.069,1798,2.069,1799,2.069,1800,2.069]],["title/components/TechnologyDetailsComponent.html",[0,0.494,188,1.106]],["body/components/TechnologyDetailsComponent.html",[0,0.71,1,0.982,2,1.564,3,0.111,4,0.087,5,1.131,6,1.172,7,1.131,8,1.131,9,0.087,11,1.017,12,2.59,13,2.408,14,2.201,15,1.621,17,1.621,19,0.772,20,1.206,22,0.394,23,0.518,24,0.014,25,0.111,26,0.339,37,1.808,43,1.318,79,1.473,80,1.535,81,2.195,82,2.827,83,2.469,86,2.371,88,2.371,90,1.36,92,1.535,94,2.81,95,1.091,96,2.939,101,2.17,102,1.937,103,1.674,112,1.131,114,2.573,119,1.964,126,1.84,131,1.753,132,1.84,133,1.473,144,0.917,145,1.621,146,1.564,147,1.131,148,2.07,149,1.131,150,0.505,151,1.131,152,0.982,153,1.131,154,0.982,155,1.131,156,1.799,157,1.131,158,0.982,159,1.091,160,1.131,161,0.982,162,1.131,163,0.982,164,0.72,165,1.131,166,0.949,167,1.131,168,0.982,169,1.131,170,0.949,171,1.131,172,0.982,173,1.131,174,0.982,175,1.131,176,0.949,177,0.949,178,1.131,179,0.982,180,1.131,181,0.949,182,1.053,183,1.131,184,0.949,185,1.131,186,0.949,187,1.131,188,1.737,189,0.709,190,1.131,191,0.982,192,1.131,193,0.949,194,1.053,195,1.131,196,1.131,197,0.006,198,0.008,199,0.006,201,1.408,202,2.371,204,0.291,205,0.895,207,1.27,210,2.59,214,1.017,215,0.656,216,0.518,220,0.886,221,1.808,228,1.415,229,1.473,235,1.36,337,2.469,352,4.301,362,1.753,366,2.315,370,2.112,390,2.489,416,2.045,423,2.939,427,1.937,458,2.315,459,2.315,486,2.685,497,1.964,507,2.4,674,2.315,687,3.111,691,2.315,838,1.753,840,2.17,1001,2.489,1078,2.777,1084,2.489,1085,4.238,1087,2.638,1089,2.489,1090,2.707,1102,5.028,1114,3,1116,2.707,1134,2.777,1221,2.707,1413,3,1556,4.611,1565,2.489,1630,3.569,1643,2.707,1659,4.301,1663,3,1667,3,1729,5.29,1801,3,1802,5.772,1803,4.937,1804,5.772,1805,4.937,1806,4.937,1807,4.937,1808,3.443,1809,3.443,1810,3.443,1811,3.443,1812,4.937,1813,3.443,1814,3.443,1815,3.443,1816,3.443,1817,3.443,1818,3.443,1819,3.443,1820,3.443,1821,3.443,1822,3.443,1823,3.443,1824,3.443,1825,4.937,1826,4.937,1827,4.937,1828,4.937,1829,3.443,1830,3.443,1831,3.443]],["title/guards/TechnologyDetailsResolverService.html",[1144,2.699,1734,2.699]],["body/guards/TechnologyDetailsResolverService.html",[3,0.171,4,0.133,9,0.133,19,1.187,20,1.111,22,0.44,23,0.798,24,0.013,25,0.171,26,0.521,150,0.528,189,0.472,197,0.008,198,0.011,199,0.008,201,1.511,204,0.448,207,1.695,208,2.362,214,1.947,215,0.648,216,0.992,220,1.363,228,2.177,229,2.266,234,1.739,236,2.938,237,4.223,253,2.015,318,3.356,474,1.739,497,1.803,556,2.98,576,3.828,593,3.83,788,3.834,829,2.464,838,2.697,840,3.338,1087,2.831,1134,4.036,1142,4.824,1146,3.562,1148,3.562,1149,4.731,1150,3.338,1152,4.765,1153,5.427,1154,4.824,1155,5.427,1156,4.616,1157,3.338,1158,4.166,1160,4.166,1556,4.521,1734,4.431,1738,5.742,1740,4.616,1832,5.298,1833,5.298,1834,5.298]],["title/interfaces/TechnologyDossier.html",[463,0.433,839,2.699]],["body/interfaces/TechnologyDossier.html",[3,0.137,4,0.106,9,0.106,22,0.233,24,0.014,25,0.208,35,2.539,36,2.871,37,1.549,42,1.608,55,3.205,73,3.83,134,1.966,150,0.339,189,0.722,197,0.007,198,0.009,199,0.007,204,0.358,205,1.033,215,0.633,216,0.858,258,3.044,320,2.844,323,3.058,337,1.809,402,1.43,406,3.35,408,0.884,446,3.844,448,2.266,463,0.776,465,1.166,467,2.108,470,2.26,474,1.389,476,3.509,480,3.844,481,3.279,482,1.902,484,3.044,485,2.723,487,1.967,490,2.26,494,4.114,498,2.26,529,2.9,538,2.26,543,2.842,545,2.723,556,2.379,570,3.683,577,3.204,626,3.044,628,2.26,783,3.058,837,4.479,839,4.836,937,3.326,948,3.326,1134,2.379,1206,3.058,1217,3.326,1666,3.326,1745,3.058,1746,3.685,1747,3.326,1748,3.685,1749,3.685,1750,4.963,1751,3.685,1752,3.685,1753,3.685,1754,3.326,1755,3.685,1756,3.685,1757,3.685,1758,3.685,1759,3.685,1760,3.685,1761,3.685,1762,4.963,1763,4.963,1764,5.065,1765,3.685,1835,4.23]],["title/interfaces/TechnologyDossierResponse.html",[463,0.433,569,2.145]],["body/interfaces/TechnologyDossierResponse.html",[3,0.161,4,0.125,9,0.125,22,0.349,24,0.014,25,0.25,42,2.65,51,2.65,67,1.576,134,1.988,150,0.588,189,0.443,197,0.008,198,0.01,199,0.008,204,0.421,205,1.149,215,0.685,216,0.953,223,1.324,402,1.514,406,3.568,407,1.279,435,1.891,448,1.937,463,0.869,465,1.37,467,2.132,474,2.409,475,2.899,482,2.059,488,2.217,489,2.709,517,2.127,518,2.127,525,2.217,526,2.217,543,2.754,545,2.899,557,2.658,558,2.954,559,3.134,560,4.14,561,4.392,562,2.658,563,3.134,564,2.658,565,3.134,566,2.658,567,3.134,568,3.134,569,3.385,570,3.921,571,4.127,572,2.313]],["title/interfaces/TechnologyFilterConfiguration.html",[463,0.433,617,1.867]],["body/interfaces/TechnologyFilterConfiguration.html",[3,0.133,4,0.104,9,0.104,24,0.014,25,0.238,38,2.201,51,1.566,62,2.447,67,1.773,112,1.837,134,1.175,150,0.546,164,0.861,189,0.498,197,0.007,198,0.009,199,0.007,204,0.348,205,1.015,215,0.701,223,1.097,234,1.353,235,1.628,372,3.834,402,1.478,408,1.537,463,0.826,464,1.628,465,1.135,467,2.085,477,2.299,482,2.171,485,2.511,496,3.352,510,2.956,511,2.832,513,3.608,516,2.956,540,1.916,549,2.34,572,1.916,602,1.916,603,2.447,605,2.849,607,2.317,608,2.596,609,2.769,610,4.492,611,3.743,612,3.574,613,4.367,614,4.272,615,3.762,616,3.762,617,2.603,618,4.583,619,2.769,620,3.324,621,3.324,622,2.447,623,3.526,624,3.089,625,2.769,626,2.99,627,2.596,628,2.201,629,2.769,630,2.769,631,4.004,632,5.056,633,3.324,634,4.004,635,2.769,636,3.762,637,3.762,638,4.004,639,2.769,640,3.775,641,4.004,642,4.295,643,4.004,644,3.775,645,2.769,646,4.004,647,4.004]],["title/components/TechnologyListComponent.html",[0,0.494,191,1.145]],["body/components/TechnologyListComponent.html",[0,0.676,1,0.9,2,1.468,3,0.102,4,0.079,5,1.035,6,1.073,7,1.035,8,1.035,9,0.079,11,0.932,12,2.566,13,2.384,14,1.468,15,1.521,17,1.521,19,1.23,20,1.086,22,0.303,23,0.475,24,0.014,25,0.102,26,0.31,37,2.812,43,0.659,79,1.349,80,1.406,81,2.648,82,3.138,83,2.348,84,1.685,85,2.752,86,2.256,87,2.252,88,2.486,89,2.814,90,2.391,92,3.003,94,2.447,95,1.468,96,3.281,98,3.114,99,3.349,100,2.747,101,3.459,103,2.252,104,3.114,106,2.48,107,2.747,108,2.48,111,2.12,112,2.346,114,2.065,115,2.28,117,2.12,118,1.987,119,2.37,120,2.747,121,2.747,122,2.12,123,2.747,124,2.752,127,2.475,128,2.475,129,2.752,130,2.28,131,1.606,133,1.981,134,1.321,135,1.987,136,2.252,137,1.685,138,2.554,142,2.48,144,0.84,145,1.521,146,1.468,147,1.035,148,1.986,149,1.035,150,0.558,151,1.035,152,0.9,153,1.035,154,0.9,155,1.035,156,0.9,157,1.035,158,0.9,159,0.999,160,1.035,161,0.9,162,1.035,163,0.9,164,0.659,165,1.035,166,0.869,167,1.035,168,0.9,169,1.035,170,0.869,171,1.035,172,0.9,173,1.035,174,0.9,175,1.035,176,0.869,177,0.869,178,1.035,179,0.9,180,1.035,181,0.869,182,0.965,183,1.035,184,0.869,185,1.035,186,0.869,187,1.035,188,0.869,189,0.66,190,1.035,191,1.726,192,1.035,193,0.869,194,0.965,195,1.035,196,1.035,197,0.005,198,0.007,199,0.005,201,1.321,202,2.256,204,0.267,205,0.84,207,1.191,210,2.486,214,0.932,215,0.54,216,0.475,220,1.191,221,2.011,337,1.349,342,2.752,351,3.349,354,1.873,362,2.358,370,1.349,376,2.747,381,2.747,382,2.391,397,2.605,402,0.996,407,0.811,408,0.659,410,2.475,423,1.606,427,2.605,453,1.873,458,2.12,459,2.12,549,1.521,612,2.252,683,2.747,687,1.987,691,3.114,692,1.987,759,2.48,1078,3.088,1138,2.747,1139,2.747,1140,2.747,1184,2.48,1192,2.747,1282,2.747,1417,3.261,1434,2.934,1447,2.28,1556,4.246,1566,2.28,1706,2.747,1717,3.642,1718,2.747,1727,5.298,1836,2.747,1837,5.49,1838,4.632,1839,5.49,1840,4.632,1841,4.632,1842,3.154,1843,3.154,1844,4.632,1845,3.154,1846,4.632,1847,3.154,1848,3.154,1849,3.154,1850,3.154,1851,3.154,1852,4.632,1853,4.632,1854,4.632,1855,4.632,1856,4.632,1857,6.051,1858,3.154,1859,3.154,1860,3.154,1861,3.154]],["title/components/TechnologyTableComponent.html",[0,0.494,193,1.106]],["body/components/TechnologyTableComponent.html",[0,0.578,1,0.697,2,1.21,3,0.079,4,0.062,5,0.803,6,0.832,7,0.803,8,0.803,9,0.062,11,0.722,12,2.486,13,2.307,14,1.21,15,1.254,17,1.254,19,1.053,20,1.242,22,0.352,23,0.368,24,0.014,25,0.123,26,0.375,43,1.11,79,1.045,80,1.09,81,1.787,82,2.521,83,2.01,84,1.306,85,2.268,86,1.931,87,1.188,88,2.182,89,1.137,90,1.857,92,3.024,94,1.09,95,1.489,96,1.944,101,3.631,103,1.188,104,3.873,111,1.643,112,1.254,114,1.702,119,2.309,124,2.791,126,3.778,127,1.306,128,1.306,129,1.452,130,4.415,131,1.944,133,2.272,135,1.54,136,1.188,137,1.306,138,2.68,144,0.651,145,1.254,146,1.21,147,0.803,148,1.744,149,0.803,150,0.584,151,0.803,152,0.697,153,0.803,154,0.697,155,0.803,156,0.697,157,0.803,158,0.697,159,0.775,160,0.803,161,0.697,162,0.803,163,0.697,164,0.798,165,0.803,166,0.674,167,0.803,168,0.697,169,0.803,170,0.674,171,0.803,172,0.697,173,0.803,174,0.697,175,0.803,176,0.674,177,0.674,178,0.803,179,0.697,180,0.803,181,0.674,182,0.748,183,0.803,184,0.674,185,0.803,186,0.674,187,0.803,188,0.674,189,0.618,190,0.803,191,0.697,192,0.803,193,1.464,194,1.762,195,0.803,196,0.803,197,0.004,198,0.006,199,0.004,201,1.089,202,1.931,204,0.449,205,0.692,207,0.982,208,2.094,210,2.182,214,0.722,215,0.682,216,0.368,220,1.366,221,2.11,342,3.155,354,2.791,362,1.245,370,2.272,382,0.966,397,2.148,402,1.258,407,1.366,408,1.334,410,3.079,416,1.452,422,3.397,423,1.944,424,3.397,431,1.776,442,2.182,456,2.987,458,2.567,459,2.567,474,1.543,497,1.599,548,2.041,549,0.803,617,2.186,621,1.452,622,2.791,676,3.002,687,1.54,691,2.567,692,1.54,716,1.54,838,1.245,885,1.922,905,1.922,1078,2.148,1117,1.922,1122,1.922,1137,4.176,1163,3.695,1171,3.327,1268,1.767,1362,1.643,1417,2.791,1434,2.511,1553,2.76,1555,5.111,1556,4.692,1557,5.383,1558,1.922,1559,3.327,1564,4.094,1565,1.767,1566,1.767,1567,3.695,1568,3.327,1569,4.094,1570,3.695,1571,3.695,1572,3.327,1573,4.094,1574,4.094,1575,5.911,1576,4.094,1577,3.327,1578,4.094,1579,3.327,1580,2.13,1581,2.13,1582,2.13,1583,2.13,1584,2.13,1585,2.13,1586,2.13,1587,2.13,1588,3.327,1589,2.13,1590,3.327,1591,3.327,1592,2.13,1593,4.627,1594,4.627,1595,2.13,1596,2.13,1597,2.13,1598,2.13,1599,3.002,1600,2.13,1601,2.13,1602,1.922,1603,1.922,1604,2.13,1605,4.627,1606,3.327,1607,4.627,1643,1.922,1705,3.327,1717,1.922,1862,3.819,1863,3.819,1864,2.445,1865,2.445,1866,2.445,1867,2.445,1868,2.445,1869,2.445,1870,2.445,1871,2.445,1872,2.445,1873,2.445,1874,2.445,1875,2.445,1876,3.819,1877,5.312,1878,3.819,1879,6.107,1880,3.819,1881,2.445,1882,2.445,1883,2.445,1884,5.312,1885,6.785,1886,5.312,1887,4.699,1888,2.445,1889,3.819,1890,2.445,1891,2.445,1892,2.445]],["title/pipes/TruncatePipe.html",[877,2.258,1399,2.699]],["body/pipes/TruncatePipe.html",[3,0.173,4,0.135,9,0.135,11,1.584,20,0.904,22,0.296,23,0.808,24,0.014,25,0.173,26,0.527,150,0.578,197,0.009,198,0.011,199,0.009,201,1.53,207,1.38,214,1.584,215,0.527,216,0.808,220,1.38,235,2.979,253,2.526,402,1.405,407,1.38,408,1.576,549,2.181,877,3.736,1172,5.223,1386,3.878,1390,4.218,1391,5.223,1393,5.223,1399,4.466,1893,4.673,1894,6.643,1895,8.005,1896,7.541,1897,7.541,1898,7.541,1899,5.365,1900,6.643,1901,5.365,1902,7.216,1903,5.365]],["title/pipes/YesNoPipe.html",[877,2.258,1400,2.699]],["body/pipes/YesNoPipe.html",[3,0.191,4,0.149,9,0.149,11,1.743,20,0.995,22,0.325,23,0.889,24,0.014,25,0.191,26,0.58,150,0.603,197,0.009,198,0.011,199,0.009,201,1.684,207,1.518,214,1.743,215,0.58,216,0.889,220,1.518,223,1.571,253,2.677,408,1.628,676,5.536,746,3.968,877,3.96,1362,3.968,1386,4.267,1390,4.641,1391,5.536,1393,5.536,1400,4.733,1904,6.133,1905,5.142,1906,5.903]],["title/coverage.html",[1907,4.79]],["body/coverage.html",[0,0.992,1,0.912,9,0.08,10,2.786,24,0.014,26,0.599,50,1.628,119,2.882,152,0.912,154,0.912,156,0.912,158,0.912,161,0.912,163,0.912,166,0.881,168,0.912,170,0.881,172,0.912,174,0.912,176,0.881,177,0.881,179,0.912,181,0.881,184,0.881,186,0.881,188,0.881,189,0.285,191,0.912,193,0.881,194,0.978,197,0.005,198,0.007,199,0.005,200,2.786,215,0.314,236,2.715,237,1.798,239,2.786,240,2.786,260,1.216,298,2.514,300,2.786,316,2.311,331,2.786,389,2.786,390,2.311,391,2.786,419,4.821,428,2.786,429,2.514,430,2.786,442,1.314,448,0.978,456,4.115,463,0.878,464,1.263,466,3.934,481,1.628,486,1.487,497,1.088,509,1.628,541,1.628,557,1.709,558,4.022,562,1.709,564,1.709,566,1.709,569,1.709,571,1.798,576,1.555,577,1.798,578,2.149,583,2.311,585,2.514,602,1.487,603,3.85,605,1.628,607,1.798,611,1.628,617,1.487,649,2.786,693,2.786,694,2.514,695,2.786,718,1.628,761,5.847,839,2.149,842,1.899,844,2.514,846,2.514,848,2.514,850,2.514,853,2.514,855,2.514,857,2.514,859,2.514,861,2.514,877,3.113,1031,2.786,1032,2.786,1039,2.786,1046,2.786,1081,2.786,1092,2.786,1093,2.514,1094,2.786,1134,1.798,1144,4.094,1145,2.149,1147,2.786,1148,4.094,1162,2.786,1172,2.514,1193,2.786,1199,2.311,1200,3.679,1211,2.786,1233,2.149,1243,2.514,1244,2.514,1315,2.786,1342,2.786,1343,2.786,1350,3.679,1351,3.679,1364,2.311,1365,2.786,1381,2.786,1385,2.149,1387,2.786,1388,2.786,1399,2.149,1400,2.149,1415,2.149,1416,4,1428,2.149,1434,1.709,1555,2.311,1556,4.084,1557,3.382,1558,3.679,1608,2.786,1727,2.514,1729,2.311,1732,2.149,1734,2.149,1735,2.514,1745,3.382,1801,2.786,1836,2.786,1893,2.786,1904,2.786,1905,2.786,1907,2.786,1908,3.198,1909,7.763,1910,4.679,1911,6.091,1912,6.771,1913,3.198,1914,7.763,1915,7.994,1916,6.091,1917,5.534,1918,3.198,1919,3.198,1920,3.198,1921,4.679,1922,5.534,1923,5.534,1924,5.534,1925,3.198,1926,5.534,1927,5.534,1928,3.198,1929,3.198,1930,3.198,1931,2.786,1932,4.076,1933,2.786,1934,4.076,1935,2.786,1936,2.786,1937,3.198]],["title/dependencies.html",[263,2.719,1938,3.344]],["body/dependencies.html",[23,0.89,24,0.014,197,0.009,198,0.011,199,0.009,228,2.43,263,3.326,281,6.14,282,4.738,285,5.153,286,5.153,411,3.513,717,4.275,829,2.751,1364,4.275,1939,5.915,1940,8.326,1941,5.915,1942,5.915,1943,5.915,1944,5.915,1945,5.915,1946,5.915,1947,5.915,1948,5.915,1949,5.915,1950,5.915,1951,5.915,1952,5.915,1953,5.915,1954,5.915]],["title/miscellaneous/enumerations.html",[1955,2.417,1956,4.211]],["body/miscellaneous/enumerations.html",[24,0.013,38,2.973,55,3.16,62,3.305,189,0.496,197,0.009,198,0.011,199,0.009,204,0.47,215,0.547,408,1.746,467,2.078,482,2.006,487,2.588,496,2.48,603,3.305,611,2.832,612,2.705,620,3.305,621,3.305,624,3.303,626,3.63,627,3.506,628,2.973,631,4.28,634,4.28,638,4.28,640,4.035,644,4.035,646,4.28,647,4.28,1206,4.022,1243,4.374,1244,5.341,1254,5.918,1255,5.918,1256,5.918,1257,5.918,1258,5.341,1745,4.022,1764,5.341,1955,4.022,1956,4.847,1957,5.564,1958,5.564,1959,5.564]],["title/index.html",[204,0.283,1960,2.913,1961,2.913]],["body/index.html",[0,0.868,4,0.162,13,1.506,24,0.01,27,5.545,28,4.01,32,3.687,34,4.443,35,2.273,36,2.273,37,1.868,38,2.725,39,4.443,41,4.01,42,1.939,43,1.066,53,2.479,55,2.994,61,5.545,150,0.409,197,0.008,198,0.01,199,0.01,258,2.095,277,2.725,306,4.443,337,2.181,339,2.597,348,4.443,349,4.01,351,3.687,463,0.551,524,3.768,537,2.868,560,3.823,594,4.443,620,3.029,641,3.214,680,5.823,718,2.597,871,4.01,1703,4.443,1962,5.1,1963,5.1,1964,5.1,1965,5.1,1966,7.798,1967,7.406,1968,5.1,1969,4.443,1970,5.1,1971,5.1,1972,5.1,1973,5.1,1974,5.1,1975,4.443,1976,5.1,1977,5.1,1978,5.1,1979,7.637,1980,7.918,1981,5.1,1982,5.1,1983,5.1,1984,5.1,1985,5.1,1986,5.1,1987,5.1,1988,4.443,1989,5.1,1990,7.052,1991,5.1,1992,5.1,1993,5.1,1994,5.1,1995,5.1,1996,5.1,1997,5.1,1998,5.1,1999,4.443,2000,6.436,2001,6.436,2002,7.406,2003,5.1,2004,6.436,2005,6.436,2006,5.1,2007,5.1,2008,5.1,2009,7.052,2010,6.436,2011,5.1,2012,5.1,2013,5.1]],["title/license.html",[1960,2.913,1961,2.913,2014,2.913]],["body/license.html",[4,0.176,9,0.161,20,0.375,22,0.122,24,0.007,26,0.218,31,1.747,32,1.606,36,0.99,38,1.187,40,4.326,45,1.936,49,6.995,50,2.248,51,0.845,53,1.08,54,1.4,58,2.801,61,1.747,64,1.936,81,1.347,90,0.878,91,1.747,109,3.085,112,0.729,113,1.494,132,1.187,134,0.634,136,1.08,150,0.354,182,0.68,197,0.006,198,0.006,199,0.004,277,1.187,336,1.936,339,1.131,372,2.833,414,1.606,453,2.623,465,0.612,469,1.892,476,1.131,485,0.878,487,1.033,505,1.187,511,2.245,524,3.605,529,1.131,542,1.131,543,0.878,554,1.25,555,1.25,613,1.32,628,1.892,642,1.4,680,1.747,871,3.472,1045,6.583,1053,1.936,1057,3.847,1058,3.085,1154,1.494,1203,6.535,1204,1.936,1205,1.936,1320,1.936,1321,1.936,1334,4.61,1358,1.936,1630,1.606,1699,3.085,1700,1.936,1747,5.597,1754,1.747,1969,3.085,1975,1.936,1988,3.847,2014,6.978,2015,5.037,2016,4.416,2017,4.416,2018,2.222,2019,2.222,2020,2.222,2021,6.582,2022,7.119,2023,5.037,2024,5.502,2025,2.222,2026,7.298,2027,6.747,2028,1.936,2029,2.222,2030,6.747,2031,7.119,2032,5.863,2033,6.747,2034,3.541,2035,2.222,2036,5.502,2037,2.222,2038,2.222,2039,2.222,2040,5.037,2041,2.222,2042,6.582,2043,2.222,2044,5.037,2045,3.541,2046,3.541,2047,2.222,2048,4.416,2049,3.541,2050,3.541,2051,2.222,2052,3.541,2053,5.863,2054,2.222,2055,3.541,2056,2.222,2057,2.222,2058,2.222,2059,2.222,2060,2.222,2061,2.222,2062,4.416,2063,2.222,2064,4.416,2065,3.541,2066,2.222,2067,2.222,2068,5.863,2069,6.582,2070,5.037,2071,2.222,2072,2.222,2073,2.222,2074,2.222,2075,2.222,2076,2.222,2077,2.222,2078,4.416,2079,3.541,2080,2.222,2081,6.582,2082,3.541,2083,2.222,2084,3.541,2085,7.502,2086,2.222,2087,2.222,2088,2.222,2089,2.222,2090,3.541,2091,3.541,2092,2.222,2093,2.222,2094,2.222,2095,2.222,2096,5.037,2097,5.502,2098,2.222,2099,3.541,2100,5.037,2101,3.541,2102,2.222,2103,5.502,2104,3.541,2105,2.222,2106,2.222,2107,4.416,2108,2.222,2109,2.222,2110,2.222,2111,3.541,2112,2.222,2113,2.222,2114,2.222,2115,4.416,2116,2.222,2117,2.222,2118,4.416,2119,2.222,2120,2.222,2121,2.222,2122,5.037,2123,6.747,2124,2.222,2125,2.222,2126,3.541,2127,6.386,2128,4.416,2129,5.037,2130,3.541,2131,3.541,2132,3.541,2133,3.541,2134,4.416,2135,3.541,2136,4.416,2137,3.541,2138,3.541,2139,3.541,2140,3.541,2141,2.222,2142,3.541,2143,2.222,2144,5.502,2145,6.151,2146,4.416,2147,3.541,2148,2.222,2149,3.541,2150,3.541,2151,2.222,2152,2.222,2153,4.416,2154,3.541,2155,2.222,2156,2.222,2157,2.222,2158,4.416,2159,2.222,2160,2.222,2161,3.541,2162,3.541,2163,2.222,2164,2.222,2165,2.222,2166,2.222,2167,2.222,2168,2.222,2169,2.222,2170,3.541,2171,2.222,2172,2.222,2173,2.222,2174,2.222,2175,2.222,2176,2.222,2177,5.502,2178,2.222,2179,4.416,2180,2.222,2181,2.222,2182,4.416,2183,2.222,2184,2.222,2185,2.222,2186,2.222,2187,6.386,2188,2.222,2189,2.222,2190,2.222,2191,2.222,2192,2.222,2193,5.037,2194,3.541,2195,5.037,2196,2.222,2197,2.222,2198,2.222,2199,4.416,2200,2.222,2201,2.222,2202,3.541,2203,3.541,2204,2.222,2205,2.222,2206,2.222,2207,2.222,2208,3.541,2209,3.541,2210,2.222,2211,2.222,2212,2.222,2213,2.222,2214,2.222,2215,2.222,2216,2.222,2217,2.222,2218,4.416,2219,5.037,2220,2.222,2221,2.222,2222,2.222,2223,2.222,2224,2.222,2225,2.222,2226,2.222,2227,2.222,2228,2.222,2229,2.222,2230,3.541,2231,2.222,2232,2.222,2233,3.541,2234,2.222,2235,5.037,2236,2.222,2237,2.222,2238,2.222,2239,2.222,2240,2.222,2241,5.037,2242,4.416,2243,4.416,2244,4.416,2245,3.541,2246,3.541,2247,3.541,2248,2.222,2249,2.222,2250,2.222,2251,2.222,2252,2.222,2253,2.222,2254,3.541,2255,2.222,2256,2.222,2257,2.222,2258,2.222,2259,5.502,2260,2.222,2261,2.222,2262,2.222,2263,2.222,2264,2.222,2265,2.222,2266,2.222,2267,2.222,2268,5.502,2269,2.222,2270,2.222,2271,2.222,2272,2.222,2273,2.222,2274,2.222,2275,2.222,2276,2.222,2277,2.222,2278,2.222,2279,2.222,2280,2.222,2281,2.222,2282,2.222,2283,2.222,2284,2.222,2285,4.416,2286,2.222,2287,2.222,2288,2.222,2289,3.541,2290,2.222,2291,2.222,2292,2.222,2293,2.222,2294,2.222,2295,2.222,2296,2.222,2297,2.222,2298,2.222,2299,2.222,2300,2.222,2301,2.222,2302,2.222,2303,2.222,2304,3.541,2305,2.222,2306,2.222,2307,2.222,2308,3.541,2309,3.541,2310,2.222,2311,2.222,2312,2.222,2313,2.222,2314,2.222,2315,2.222,2316,2.222,2317,2.222,2318,2.222,2319,2.222,2320,2.222,2321,2.222,2322,2.222,2323,2.222,2324,2.222,2325,2.222,2326,2.222,2327,2.222,2328,2.222,2329,2.222]],["title/modules.html",[262,2.557]],["body/modules.html",[24,0.011,32,5.794,51,2.988,197,0.01,198,0.011,199,0.01,261,4.072,262,2.818,272,4.072,273,4.072,274,3.598,282,5.389,353,6.01,1224,4.379,1228,4.072,1258,6.303,1259,4.072,1720,4.379,1724,4.072,2330,7.857]],["title/overview.html",[1316,4.323]],["body/overview.html",[1,1.749,2,1.218,24,0.014,119,1.309,144,1.024,152,2.106,154,1.749,156,2.106,158,2.106,161,1.749,163,1.749,166,1.689,168,2.106,170,1.689,172,2.106,174,2.106,176,1.689,177,1.689,179,1.749,181,2.035,184,1.689,186,1.689,188,1.689,191,1.749,193,1.689,197,0.006,198,0.009,199,0.006,237,3.447,238,2.585,260,1.462,261,5.496,262,1.788,263,2.163,264,2.284,265,2.423,266,2.423,267,1.958,268,3.35,269,3.35,270,3.35,271,3.35,272,4.121,273,5.256,274,5.008,275,3.363,276,2.423,277,2.055,299,2.585,425,3.023,465,1.06,574,3.35,575,3.35,576,2.98,577,3.447,578,4.121,1146,2.585,1224,5.78,1225,3.35,1226,3.35,1227,3.35,1228,4.121,1259,4.963,1316,3.023,1385,4.963,1386,2.779,1395,3.35,1396,3.35,1397,3.35,1398,3.35,1399,4.963,1400,4.963,1720,5.841,1721,3.35,1722,3.35,1723,3.35,1724,4.121,2028,3.35,2331,3.845,2332,6.13,2333,3.845]],["title/routes.html",[314,3.696]],["body/routes.html",[24,0.012,197,0.011,198,0.012,199,0.011,314,4.44]],["title/miscellaneous/variables.html",[1955,2.417,2334,4.211]],["body/miscellaneous/variables.html",[24,0.014,197,0.008,198,0.01,199,0.008,204,0.422,215,0.814,234,2.084,235,1.971,402,1.46,407,2.111,408,1.716,761,3.923,844,4.991,845,4.347,846,4.991,847,4.347,848,4.991,849,4.347,850,4.991,851,4.347,852,4.347,853,4.991,854,4.347,855,4.991,856,4.347,857,4.991,858,4.347,859,4.991,860,4.347,861,4.991,862,4.347,1334,4.991,1350,3.923,1351,4.991,1364,4.588,1795,4.347,1931,4.347,1932,6.401,1933,4.347,1934,4.347,1935,5.53,1936,5.53,1955,3.607,1999,5.53,2334,4.347,2335,6.348,2336,8.052,2337,4.99,2338,4.99,2339,4.99,2340,4.99,2341,4.99]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.10.3",{"_index":1954,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["0.22",{"_index":374,"title":{},"body":{"components/BannerComponent.html":{}}}],["0.2rem",{"_index":1858,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["0.6.2",{"_index":1949,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1915,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1918,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1920,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1930,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1929,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1911,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1913,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1919,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1909,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1912,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1916,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1917,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["1.1rem",{"_index":140,"title":{},"body":{"components/AboutComponent.html":{},"components/ChildGroupingComponent.html":{}}}],["1.2rem",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{}}}],["1.3rem",{"_index":386,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionComponent.html":{}}}],["1.5rem",{"_index":366,"title":{},"body":{"components/BannerComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["1.7rem",{"_index":371,"title":{},"body":{"components/BannerComponent.html":{}}}],["1.8rem",{"_index":385,"title":{},"body":{"components/BannerComponent.html":{}}}],["1/4",{"_index":1925,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1924,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1927,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":342,"title":{},"body":{"components/BannerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["100",{"_index":456,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":1221,"title":{},"body":{"components/InformationComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["10px",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["10rem",{"_index":1830,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["11",{"_index":1170,"title":{},"body":{"components/HeaderComponent.html":{}}}],["11.0.0",{"_index":1945,"title":{},"body":{"dependencies.html":{}}}],["11.1.1",{"_index":1940,"title":{},"body":{"dependencies.html":{}}}],["11.1.2",{"_index":1943,"title":{},"body":{"dependencies.html":{}}}],["1100px",{"_index":387,"title":{},"body":{"components/BannerComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{}}}],["1200px",{"_index":1080,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{}}}],["1400px",{"_index":1892,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["150",{"_index":548,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["16",{"_index":1926,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["18",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{}}}],["18px",{"_index":384,"title":{},"body":{"components/BannerComponent.html":{}}}],["1em",{"_index":1072,"title":{},"body":{"components/FooterComponent.html":{}}}],["1fr",{"_index":1328,"title":{},"body":{"components/OverviewComponent.html":{}}}],["1px",{"_index":424,"title":{},"body":{"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["1rem",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["2",{"_index":692,"title":{},"body":{"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["2.0",{"_index":2017,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":1952,"title":{},"body":{"dependencies.html":{}}}],["2.2rem",{"_index":757,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["2.5rem",{"_index":388,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologiesComponent.html":{}}}],["20",{"_index":419,"title":{},"body":{"components/BottomNavComponent.html":{},"coverage.html":{}}}],["200",{"_index":1824,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["2004",{"_index":2019,"title":{},"body":{"license.html":{}}}],["2021",{"_index":1052,"title":{},"body":{"components/FooterComponent.html":{}}}],["21",{"_index":2331,"title":{},"body":{"overview.html":{}}}],["212121",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{}}}],["24",{"_index":2333,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1172,"title":{},"body":{"components/HeaderComponent.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["2em",{"_index":1182,"title":{},"body":{"components/HeaderComponent.html":{}}}],["2px",{"_index":1171,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["2rem",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["3",{"_index":425,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{},"overview.html":{}}}],["3.5rem",{"_index":1887,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["30",{"_index":1711,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["30em",{"_index":1707,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["35",{"_index":1341,"title":{},"body":{"components/OverviewComponent.html":{}}}],["3rem",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["3s",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["4",{"_index":2332,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1923,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":376,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologyListComponent.html":{}}}],["40px",{"_index":383,"title":{},"body":{"components/BannerComponent.html":{}}}],["4em",{"_index":1074,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["4px",{"_index":373,"title":{},"body":{"components/BannerComponent.html":{}}}],["4rem",{"_index":1075,"title":{},"body":{"components/FooterComponent.html":{}}}],["5",{"_index":1846,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["5.5rem",{"_index":1178,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5/5",{"_index":1921,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":414,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"license.html":{}}}],["500",{"_index":1070,"title":{},"body":{"components/FooterComponent.html":{}}}],["510px",{"_index":426,"title":{},"body":{"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{}}}],["550px",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{}}}],["55em",{"_index":1190,"title":{},"body":{"components/HeaderComponent.html":{}}}],["57rem",{"_index":1079,"title":{},"body":{"components/FooterComponent.html":{}}}],["5rem",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["5s",{"_index":1339,"title":{},"body":{"components/OverviewComponent.html":{}}}],["6.6.3",{"_index":1950,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1922,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":459,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["620px",{"_index":1191,"title":{},"body":{"components/HeaderComponent.html":{}}}],["6em",{"_index":1187,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7",{"_index":1338,"title":{},"body":{"components/OverviewComponent.html":{}}}],["70",{"_index":1333,"title":{},"body":{"components/OverviewComponent.html":{}}}],["790px",{"_index":142,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/TechnologyListComponent.html":{}}}],["7rem",{"_index":758,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["80",{"_index":1706,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["850px",{"_index":1654,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["8rem",{"_index":135,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["9",{"_index":2028,"title":{},"body":{"license.html":{},"overview.html":{}}}],["9/9",{"_index":1928,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":686,"title":{},"body":{"components/CriterionComponent.html":{},"components/TechnologiesComponent.html":{}}}],["900",{"_index":368,"title":{},"body":{"components/BannerComponent.html":{},"components/FooterComponent.html":{}}}],["900px",{"_index":1717,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["910px",{"_index":1718,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["93vw",{"_index":1881,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["95",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{}}}],["95rem",{"_index":1192,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{}}}],["9rem",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{}}}],["_scss/global/variables",{"_index":416,"title":{},"body":{"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["_scss/shared",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["a[sort.property",{"_index":1512,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["about'},{'name",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["about.component.html",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["above",{"_index":2222,"title":{},"body":{"license.html":{}}}],["academic",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{}}}],["acceptance",{"_index":2287,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":2285,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":243,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["act",{"_index":2293,"title":{},"body":{"license.html":{}}}],["acting",{"_index":2038,"title":{},"body":{"license.html":{}}}],["activatedroute",{"_index":1085,"title":{},"body":{"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":1153,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["active",{"_index":1186,"title":{},"body":{"components/HeaderComponent.html":{}}}],["acts",{"_index":2266,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":196,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["add",{"_index":2209,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":2211,"title":{},"body":{"license.html":{}}}],["additional",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["additions",{"_index":2098,"title":{},"body":{"license.html":{}}}],["advised",{"_index":2283,"title":{},"body":{"license.html":{}}}],["against",{"_index":2162,"title":{},"body":{"license.html":{}}}],["agree",{"_index":2296,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":2244,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":2227,"title":{},"body":{"license.html":{}}}],["aims",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{}}}],["align",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["alleging",{"_index":2167,"title":{},"body":{"license.html":{}}}],["allvalues.includes(v",{"_index":1545,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["allvalues.push(v.value",{"_index":1541,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["alone",{"_index":2159,"title":{},"body":{"license.html":{}}}],["along",{"_index":2200,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":2210,"title":{},"body":{"license.html":{}}}],["alpha",{"_index":1359,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["already",{"_index":1038,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["and(b",{"_index":2183,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":2190,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":2196,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":2290,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1967,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1939,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":1422,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["angular/cdk/layout",{"_index":1651,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["angular/cli",{"_index":1942,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":411,"title":{},"body":{"components/BottomNavComponent.html":{},"modules/CoreModule.html":{},"components/FrameworkRendererComponent.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":252,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"injectables/DataService.html":{}}}],["angular/compiler",{"_index":1944,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"modules/CoreModule.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":717,"title":{},"body":{"components/CriterionFilterComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1947,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1286,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/bottom",{"_index":1309,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":1262,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":1275,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":1302,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":1290,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":1279,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":1281,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":1277,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1264,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":1284,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":1273,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":1296,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":1298,"title":{},"body":{"modules/MaterialModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["angular/material/progress",{"_index":1270,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":1314,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1288,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1268,"title":{},"body":{"modules/MaterialModule.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["angular/material/slide",{"_index":1304,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slider",{"_index":1312,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":1292,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tabs",{"_index":1300,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1266,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":1294,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tree",{"_index":1306,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"dependencies.html":{}}}],["annotations",{"_index":2088,"title":{},"body":{"license.html":{}}}],["answers",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{}}}],["apache",{"_index":2015,"title":{},"body":{"license.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"index.html":{}}}],["app.component",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["app_initializer",{"_index":580,"title":{},"body":{"modules/CoreModule.html":{}}}],["appcomponent",{"_index":152,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":241,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["appconfigservice",{"_index":237,"title":{"injectables/AppConfigService.html":{}},"body":{"injectables/AppConfigService.html":{},"modules/CoreModule.html":{},"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{},"overview.html":{}}}],["appconfigservice.loadappconfig",{"_index":597,"title":{},"body":{"modules/CoreModule.html":{}}}],["appear",{"_index":2205,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":2084,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":2242,"title":{},"body":{"license.html":{}}}],["applies",{"_index":2152,"title":{},"body":{"license.html":{}}}],["apply",{"_index":2304,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":261,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":298,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appropriate",{"_index":2313,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":2253,"title":{},"body":{"license.html":{}}}],["approutes",{"_index":319,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":272,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arbitrary",{"_index":645,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["archives",{"_index":2320,"title":{},"body":{"license.html":{}}}],["arguments",{"_index":1808,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["arising",{"_index":2273,"title":{},"body":{"license.html":{}}}],["around",{"_index":1175,"title":{},"body":{"components/HeaderComponent.html":{}}}],["array.from(criteriavalues.get(f.criterionid)).sort(((a",{"_index":984,"title":{},"body":{"injectables/DataService.html":{}}}],["array.from(criteriavalues.get(f.criterionid).values",{"_index":990,"title":{},"body":{"injectables/DataService.html":{}}}],["array.from(filtervalue.value",{"_index":1543,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["array.from(placement.values",{"_index":1682,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["array.from(reviewedcriterion.values).length",{"_index":1548,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["array.from(this.criterioninstance.values",{"_index":668,"title":{},"body":{"components/CriterionComponent.html":{}}}],["array.from(value",{"_index":1394,"title":{},"body":{"pipes/SetToArrayPipe.html":{}}}],["array.from(view.groupings).foreach((grouping",{"_index":1583,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["array.isarray(value",{"_index":744,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["array.pipe",{"_index":1407,"title":{},"body":{"modules/SharedModule.html":{}}}],["array.pipe.ts",{"_index":1388,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"coverage.html":{}}}],["array.pipe.ts:7",{"_index":1392,"title":{},"body":{"pipes/SetToArrayPipe.html":{}}}],["arrow_back_ios",{"_index":1878,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["arrow_forward",{"_index":1854,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["arrow_forward_ios",{"_index":1880,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["arrow_upward",{"_index":415,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["artifacts",{"_index":1993,"title":{},"body":{"index.html":{}}}],["asc",{"_index":1432,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{}}}],["aspect",{"_index":530,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["asserted",{"_index":2302,"title":{},"body":{"license.html":{}}}],["assets/data/framework/criteria.json",{"_index":845,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/filters.json",{"_index":860,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/frameworks.json",{"_index":854,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/groupings.json",{"_index":847,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/view",{"_index":851,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/framework/views.json",{"_index":849,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/info/resources.json",{"_index":862,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/platforms",{"_index":858,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/data/platforms/platforms.json",{"_index":856,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["assets/images/vendor/logo",{"_index":1250,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["associated",{"_index":2257,"title":{},"body":{"license.html":{}}}],["assume",{"_index":2255,"title":{},"body":{"license.html":{}}}],["attach",{"_index":2305,"title":{},"body":{"license.html":{}}}],["attached",{"_index":2083,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":1976,"title":{},"body":{"index.html":{}}}],["attribution",{"_index":2193,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":2034,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":2078,"title":{},"body":{"license.html":{}}}],["auto",{"_index":362,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["automatically",{"_index":1985,"title":{},"body":{"index.html":{}}}],["available",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{},"modules.html":{}}}],["aws",{"_index":538,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["aws.s3",{"_index":1758,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["azure",{"_index":1756,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["azure.functions",{"_index":1755,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["b",{"_index":985,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["b5ca8f",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{}}}],["b[sort.property",{"_index":1513,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["baas",{"_index":1764,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{}}}],["backend",{"_index":869,"title":{},"body":{"injectables/DataService.html":{}}}],["background",{"_index":354,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["banner",{"_index":332,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner'},{'name",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["banner.component.html",{"_index":334,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner.component.scss",{"_index":333,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__description",{"_index":375,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__heading",{"_index":365,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__quick",{"_index":379,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner__summary",{"_index":377,"title":{},"body":{"components/BannerComponent.html":{}}}],["bannercomponent",{"_index":154,"title":{"components/BannerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["based",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["basis",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["behalf",{"_index":2103,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":621,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["behaviorsubject",{"_index":1423,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject(0",{"_index":1436,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject(initialquery",{"_index":1452,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject(undefined",{"_index":1454,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behaviorsubject>(initialsort",{"_index":1450,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["behind",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["belongs",{"_index":1749,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["below",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["beneficial",{"_index":2061,"title":{},"body":{"license.html":{}}}],["beta.33",{"_index":1946,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":493,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["bg",{"_index":454,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{}}}],["bind",{"_index":2095,"title":{},"body":{"license.html":{}}}],["block",{"_index":674,"title":{},"body":{"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["block__filter",{"_index":754,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["blockchain",{"_index":1765,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["blockicon",{"_index":609,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["blockname",{"_index":608,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["blog",{"_index":1208,"title":{},"body":{"interfaces/InfoResourceSection.html":{}}}],["body",{"_index":756,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["boilerplate",{"_index":2306,"title":{},"body":{"license.html":{}}}],["bool",{"_index":631,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"pipes/YesNoPipe.html":{}}}],["bootstrap",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}],["border",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["bottom",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["bottomnav",{"_index":1804,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["bottomnavcomponent",{"_index":156,"title":{"components/BottomNavComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["box",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["brackets",{"_index":2309,"title":{},"body":{"license.html":{}}}],["breadcrumbs",{"_index":520,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["break",{"_index":1117,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["browse",{"_index":353,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"modules.html":{}}}],["browser",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"components/TechnologiesComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":307,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["browsing",{"_index":1965,"title":{},"body":{"index.html":{}}}],["browsingmode",{"_index":1613,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["build",{"_index":1966,"title":{},"body":{"index.html":{}}}],["buildgroupings",{"_index":762,"title":{},"body":{"injectables/DataService.html":{}}}],["buildgroupings(data",{"_index":785,"title":{},"body":{"injectables/DataService.html":{}}}],["button",{"_index":759,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["buttons",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{}}}],["c",{"_index":886,"title":{},"body":{"injectables/DataService.html":{},"components/TechnologiesComponent.html":{}}}],["c.colspan",{"_index":1590,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["c.criterionid",{"_index":1678,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["c.default",{"_index":907,"title":{},"body":{"injectables/DataService.html":{}}}],["c.description",{"_index":906,"title":{},"body":{"injectables/DataService.html":{}}}],["c.displayname",{"_index":1877,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["c.id",{"_index":885,"title":{},"body":{"injectables/DataService.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["c.name",{"_index":905,"title":{},"body":{"injectables/DataService.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["c.technologycategory.tolocalelowercase",{"_index":966,"title":{},"body":{"injectables/DataService.html":{}}}],["c.viewids.foreach(id",{"_index":908,"title":{},"body":{"injectables/DataService.html":{}}}],["canfilter",{"_index":1766,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["canfilter(filtervalue",{"_index":1514,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["card",{"_index":1136,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["carry",{"_index":2185,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":830,"title":{},"body":{"injectables/DataService.html":{}}}],["catcherror(dataservice.handleerror",{"_index":878,"title":{},"body":{"injectables/DataService.html":{}}}],["categories",{"_index":1206,"title":{},"body":{"interfaces/InfoResourceSection.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{}}}],["category",{"_index":556,"title":{},"body":{"interfaces/ClassificationFramework.html":{},"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{}}}],["category.tolocalelowercase",{"_index":933,"title":{},"body":{"injectables/DataService.html":{}}}],["category]{@link",{"_index":498,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["cause",{"_index":2050,"title":{},"body":{"license.html":{}}}],["ccc",{"_index":1584,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["cell",{"_index":1885,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["center",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["change",{"_index":1987,"title":{},"body":{"index.html":{}}}],["changed",{"_index":2189,"title":{},"body":{"license.html":{}}}],["changedetection",{"_index":1609,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectionstrategy",{"_index":1648,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1610,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectorref",{"_index":1621,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["changedetectorref.detectchanges",{"_index":1656,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["character",{"_index":2272,"title":{},"body":{"license.html":{}}}],["charge",{"_index":2136,"title":{},"body":{"license.html":{}}}],["check",{"_index":2012,"title":{},"body":{"index.html":{}}}],["check_circle",{"_index":341,"title":{},"body":{"components/BannerComponent.html":{}}}],["checkboxes",{"_index":643,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["checkrouterevent",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["checkrouterevent(e",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["child",{"_index":159,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["child(even",{"_index":1891,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["childgroupingcomponent",{"_index":158,"title":{"components/ChildGroupingComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["children",{"_index":1240,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["choose",{"_index":336,"title":{},"body":{"components/BannerComponent.html":{},"license.html":{}}}],["choosing",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{}}}],["chosenvalue",{"_index":1547,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["chosenvalues",{"_index":1550,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["chosenvalues.indexof(value",{"_index":1554,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["chosenvalues.length",{"_index":1551,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["claim",{"_index":2164,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2154,"title":{},"body":{"license.html":{}}}],["class",{"_index":26,"title":{"classes/AppPage.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"classes/TableColumn.html":{},"classes/TechnologyDataSource.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"modules/CoreModule.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"license.html":{}}}],["class=\"criterion__value",{"_index":677,"title":{},"body":{"components/CriterionComponent.html":{}}}],["class=\"sidenav__filter",{"_index":1696,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["classes",{"_index":299,"title":{},"body":{"classes/AppPage.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"classes/TableColumn.html":{},"classes/TechnologyDataSource.html":{},"overview.html":{}}}],["classification",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"index.html":{}}}],["classificationcriterion",{"_index":464,"title":{"interfaces/ClassificationCriterion.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["classificationframework",{"_index":497,"title":{"interfaces/ClassificationFramework.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["classificationframeworkresponse",{"_index":557,"title":{"interfaces/ClassificationFrameworkResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["classifications",{"_index":506,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["classificationview",{"_index":509,"title":{"interfaces/ClassificationView.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"coverage.html":{}}}],["classificationviewcombination",{"_index":486,"title":{"interfaces/ClassificationViewCombination.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["classificationviewcombinationresponse",{"_index":562,"title":{"interfaces/ClassificationViewCombinationResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["classificationviewresponse",{"_index":564,"title":{"interfaces/ClassificationViewResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["classificationviews",{"_index":573,"title":{},"body":{"interfaces/ClassificationViewCombination.html":{}}}],["classificationviews]{@link",{"_index":508,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["classified",{"_index":468,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["clear",{"_index":753,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["clearfilter",{"_index":700,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["cli",{"_index":2010,"title":{},"body":{"index.html":{}}}],["click",{"_index":1702,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["close",{"_index":1695,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["cloud",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{}}}],["cloud_done",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["cluster_appmodule",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":574,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":575,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_informationmodule",{"_index":1225,"title":{},"body":{"modules/InformationModule.html":{},"overview.html":{}}}],["cluster_informationmodule_declarations",{"_index":1226,"title":{},"body":{"modules/InformationModule.html":{},"overview.html":{}}}],["cluster_informationmodule_imports",{"_index":1227,"title":{},"body":{"modules/InformationModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1395,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1396,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1397,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":1398,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_technologiesmodule",{"_index":1721,"title":{},"body":{"modules/TechnologiesModule.html":{},"overview.html":{}}}],["cluster_technologiesmodule_declarations",{"_index":1723,"title":{},"body":{"modules/TechnologiesModule.html":{},"overview.html":{}}}],["cluster_technologiesmodule_imports",{"_index":1722,"title":{},"body":{"modules/TechnologiesModule.html":{},"overview.html":{}}}],["code",{"_index":871,"title":{},"body":{"injectables/DataService.html":{},"index.html":{},"license.html":{}}}],["collected",{"_index":537,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"index.html":{}}}],["color",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["color.service",{"_index":591,"title":{},"body":{"modules/CoreModule.html":{}}}],["color.service.ts",{"_index":1351,"title":{},"body":{"injectables/RandomColorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["color.service.ts:11",{"_index":1360,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["color.service.ts:6",{"_index":1353,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["color:string",{"_index":1592,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["colspan",{"_index":1559,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["column",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["columns",{"_index":1326,"title":{},"body":{"components/OverviewComponent.html":{}}}],["columnstodisplay",{"_index":1578,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["combination",{"_index":505,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"license.html":{}}}],["combination.views.add(view",{"_index":910,"title":{},"body":{"injectables/DataService.html":{}}}],["combinations",{"_index":488,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["combinations.json",{"_index":852,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["combinelatest",{"_index":827,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["combinelatest([this.criteriabasedquery",{"_index":1456,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["combinelatest([this.filtereddata",{"_index":1466,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["combining",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologiesComponent.html":{}}}],["combs.find(c",{"_index":1010,"title":{},"body":{"injectables/DataService.html":{}}}],["combs.find(v",{"_index":923,"title":{},"body":{"injectables/DataService.html":{}}}],["comment",{"_index":555,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"license.html":{}}}],["commercial",{"_index":1321,"title":{},"body":{"components/OverviewComponent.html":{},"license.html":{}}}],["common",{"_index":2043,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":582,"title":{},"body":{"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{}}}],["communication",{"_index":2107,"title":{},"body":{"license.html":{}}}],["community.github",{"_index":526,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["comparison",{"_index":1746,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["compiled",{"_index":2075,"title":{},"body":{"license.html":{}}}],["completewords",{"_index":1896,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["compliance",{"_index":2323,"title":{},"body":{"license.html":{}}}],["complies",{"_index":2216,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"overview.html":{}}}],["comprises",{"_index":484,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["comprising",{"_index":503,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["computer",{"_index":2278,"title":{},"body":{"license.html":{}}}],["concat(extension.png",{"_index":1253,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["concat(grouping.name",{"_index":1689,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["concat(logolocator",{"_index":1252,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["concerning",{"_index":1059,"title":{},"body":{"components/FooterComponent.html":{}}}],["conditions",{"_index":2022,"title":{},"body":{"license.html":{}}}],["conducted",{"_index":544,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["conf.find(c",{"_index":965,"title":{},"body":{"injectables/DataService.html":{}}}],["config",{"_index":1142,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["config.service",{"_index":593,"title":{},"body":{"modules/CoreModule.html":{},"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["config.service.ts",{"_index":240,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["config.service.ts:11",{"_index":249,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:19",{"_index":251,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:6",{"_index":247,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configuration",{"_index":613,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["confirming",{"_index":552,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["connect",{"_index":1418,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["consequential",{"_index":2271,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":2292,"title":{},"body":{"license.html":{}}}],["console.error(err",{"_index":874,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log('found",{"_index":1509,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["console.log('new",{"_index":1485,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["console.log(nextquery",{"_index":1487,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["conspicuously",{"_index":2119,"title":{},"body":{"license.html":{}}}],["const",{"_index":318,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DataService.html":{},"modules/InformationRoutingModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["constitutes",{"_index":2168,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["constructor(@optional",{"_index":599,"title":{},"body":{"modules/CoreModule.html":{}}}],["constructor(data",{"_index":1444,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["constructor(dataservice",{"_index":1150,"title":{},"body":{"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["constructor(fb",{"_index":703,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["constructor(http",{"_index":245,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{}}}],["constructor(private",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["constructor(route",{"_index":1084,"title":{},"body":{"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["constructor(router",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(targetmodule",{"_index":1033,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["constructor(viewportscroller",{"_index":399,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["construed",{"_index":2212,"title":{},"body":{"license.html":{}}}],["contact",{"_index":1168,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contain",{"_index":470,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["contained",{"_index":642,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["container",{"_index":1705,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["containing",{"_index":536,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["containsall",{"_index":646,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["containsany",{"_index":644,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["containsany(filtervalue",{"_index":1546,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["containsone",{"_index":640,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["containsone(filtervalue",{"_index":1549,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["content",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["contents",{"_index":2206,"title":{},"body":{"license.html":{}}}],["context",{"_index":1935,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":2052,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":2097,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":2158,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":2218,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2123,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":2169,"title":{},"body":{"license.html":{}}}],["control",{"_index":2040,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":2041,"title":{},"body":{"license.html":{}}}],["controls",{"_index":725,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["controls.push(this.fb.control(false",{"_index":728,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["conversions",{"_index":2076,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2175,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2182,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2031,"title":{},"body":{"license.html":{}}}],["core/core.module",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/app",{"_index":1158,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["core/services/data.service",{"_index":1157,"title":{},"body":{"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["coremodule",{"_index":273,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["corresponding",{"_index":1703,"title":{},"body":{"components/TechnologiesComponent.html":{},"index.html":{}}}],["count",{"_index":1356,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["counter",{"_index":1594,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["counterclaim",{"_index":2165,"title":{},"body":{"license.html":{}}}],["cover",{"_index":359,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{}}}],["coverage",{"_index":1907,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["criteria",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["criteria.has(id",{"_index":1024,"title":{},"body":{"injectables/DataService.html":{}}}],["criteriabasedquery",{"_index":602,"title":{"interfaces/CriteriaBasedQuery.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["criteriacolumns",{"_index":1574,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["criteriafilterlookup",{"_index":1676,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["criteriagrouping",{"_index":442,"title":{"interfaces/CriteriaGrouping.html":{}},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["criteriagroupingresponse",{"_index":566,"title":{"interfaces/CriteriaGroupingResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["criteriagroupingspath",{"_index":846,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["criteriaids",{"_index":568,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["criterialookup",{"_index":883,"title":{},"body":{"injectables/DataService.html":{}}}],["criteriapath",{"_index":844,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["criteriaquery",{"_index":1461,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criteriareview",{"_index":571,"title":{"interfaces/CriteriaReview.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["criteriavalues",{"_index":970,"title":{},"body":{"injectables/DataService.html":{}}}],["criteriavalues.get(key",{"_index":975,"title":{},"body":{"injectables/DataService.html":{}}}],["criteriavalues.set(key",{"_index":978,"title":{},"body":{"injectables/DataService.html":{}}}],["criterion",{"_index":164,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["criterion'},{'name",{"_index":162,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["criterion.component.html",{"_index":651,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion.component.scss",{"_index":650,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion.description",{"_index":669,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion.examplevalues",{"_index":671,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion/criterion.component",{"_index":1408,"title":{},"body":{"modules/SharedModule.html":{}}}],["criterion__heading",{"_index":681,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__icon",{"_index":688,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__reference",{"_index":689,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__title",{"_index":682,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterion__value",{"_index":684,"title":{},"body":{"components/CriterionComponent.html":{}}}],["criterioncomponent",{"_index":161,"title":{"components/CriterionComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["criterionfiltercomponent",{"_index":163,"title":{"components/CriterionFilterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["criterionfilterconfiguration",{"_index":611,"title":{"interfaces/CriterionFilterConfiguration.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["criterionfiltertype",{"_index":624,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["criterionfiltertype.bool",{"_index":989,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.containsall",{"_index":1517,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.containsany",{"_index":1521,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.containsone",{"_index":1518,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.excludesall",{"_index":1519,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltertype.lte",{"_index":982,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["criterionfiltervalue",{"_index":605,"title":{"interfaces/CriterionFilterValue.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["criterionid",{"_index":540,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["criterioninstance",{"_index":448,"title":{"interfaces/CriterionInstance.html":{}},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["criterioninstance.values.foreach(v",{"_index":976,"title":{},"body":{"injectables/DataService.html":{}}}],["criterioninstances",{"_index":1835,"title":{},"body":{"interfaces/TechnologyDossier.html":{}}}],["criterioninstances]{@link",{"_index":1761,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["criterionvalue",{"_index":541,"title":{"interfaces/CriterionValue.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"coverage.html":{}}}],["cross",{"_index":2163,"title":{},"body":{"license.html":{}}}],["current",{"_index":1683,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["current.filters.push(config",{"_index":1692,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["currentindex",{"_index":1440,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["cursor",{"_index":1138,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyListComponent.html":{}}}],["custom",{"_index":519,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["customary",{"_index":2237,"title":{},"body":{"license.html":{}}}],["d.reviewedcriteria.foreach((criterioninstance",{"_index":972,"title":{},"body":{"injectables/DataService.html":{}}}],["damages",{"_index":2268,"title":{},"body":{"license.html":{}}}],["data",{"_index":258,"title":{},"body":{"injectables/AppConfigService.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"index.html":{}}}],["data.filter(platform",{"_index":1499,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["data.foreach(g",{"_index":1020,"title":{},"body":{"injectables/DataService.html":{}}}],["data.length",{"_index":1472,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["data.slice(startindex",{"_index":1473,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["data['resolveddata",{"_index":1091,"title":{},"body":{"components/FrameworkComponent.html":{},"components/ResourcesComponent.html":{}}}],["data['resolveddata'][0",{"_index":1663,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["data['resolveddata'][1",{"_index":1667,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["data['resolveddata'][2",{"_index":1669,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["dataservice",{"_index":576,"title":{"injectables/DataService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{},"overview.html":{}}}],["datasource",{"_index":1417,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["date",{"_index":543,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"license.html":{}}}],["declarations",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}],["declare",{"_index":1363,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["decoration",{"_index":690,"title":{},"body":{"components/CriterionComponent.html":{}}}],["decorators",{"_index":1643,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["dedicated",{"_index":615,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["default",{"_index":407,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["defaultcategory",{"_index":1159,"title":{},"body":{"guards/FrameworkResolver.html":{}}}],["defaulttechcategory",{"_index":244,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["defend",{"_index":2298,"title":{},"body":{"license.html":{}}}],["defined",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"license.html":{}}}],["defines",{"_index":614,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["definition",{"_index":2045,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":2025,"title":{},"body":{"license.html":{}}}],["delete",{"_index":1533,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["deliberate",{"_index":2263,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":263,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":595,"title":{},"body":{"modules/CoreModule.html":{}}}],["derivative",{"_index":2085,"title":{},"body":{"license.html":{}}}],["derived",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["desc",{"_index":1433,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["describe",{"_index":528,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["describing",{"_index":554,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"license.html":{}}}],["description",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"license.html":{}}}],["designated",{"_index":2121,"title":{},"body":{"license.html":{}}}],["desired",{"_index":619,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["detailed",{"_index":1701,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["details",{"_index":1134,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{}}}],["details'},{'name",{"_index":190,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["details.component",{"_index":1730,"title":{},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["details.component.html",{"_index":1803,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.scss",{"_index":1802,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts",{"_index":1801,"title":{},"body":{"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1813,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:15",{"_index":1815,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:16",{"_index":1814,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":1807,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":1811,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details.component.ts:32",{"_index":1810,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["details/technology",{"_index":1729,"title":{},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["determining",{"_index":2252,"title":{},"body":{"license.html":{}}}],["dev",{"_index":1982,"title":{},"body":{"index.html":{}}}],["development",{"_index":1978,"title":{},"body":{"index.html":{}}}],["different",{"_index":487,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["direct",{"_index":2048,"title":{},"body":{"license.html":{}}}],["direction",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/FooterComponent.html":{},"components/OverviewComponent.html":{},"license.html":{}}}],["directive",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["directives",{"_index":195,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1991,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1996,"title":{},"body":{"index.html":{}}}],["disclaimer",{"_index":2240,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":1419,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["discussing",{"_index":2116,"title":{},"body":{"license.html":{}}}],["display",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["display:table",{"_index":1886,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["displayname",{"_index":622,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TableColumn.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyTableComponent.html":{}}}],["dist",{"_index":1995,"title":{},"body":{"index.html":{}}}],["distinctvalues",{"_index":973,"title":{},"body":{"injectables/DataService.html":{}}}],["distinctvalues.add(v.value",{"_index":977,"title":{},"body":{"injectables/DataService.html":{}}}],["distribute",{"_index":2144,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2199,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":2024,"title":{},"body":{"license.html":{}}}],["divider",{"_index":685,"title":{},"body":{"components/CriterionComponent.html":{}}}],["docs",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{}}}],["document",{"_index":2029,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["don't",{"_index":2312,"title":{},"body":{"license.html":{}}}],["dossier",{"_index":948,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["dossierpath",{"_index":952,"title":{},"body":{"injectables/DataService.html":{}}}],["dossiers",{"_index":969,"title":{},"body":{"injectables/DataService.html":{}}}],["dossiers.foreach(d",{"_index":971,"title":{},"body":{"injectables/DataService.html":{}}}],["dossierspath",{"_index":857,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dossierspath.concat(technologyid",{"_index":953,"title":{},"body":{"injectables/DataService.html":{}}}],["dynamic",{"_index":1948,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["e.g",{"_index":518,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["e2e",{"_index":2007,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":300,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":305,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":303,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":2129,"title":{},"body":{"license.html":{}}}],["ease",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{}}}],["easier",{"_index":2318,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":2086,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":2089,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":2104,"title":{},"body":{"license.html":{}}}],["element",{"_index":146,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["element(by.css('app",{"_index":308,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":1564,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["elements",{"_index":616,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["ellipsis",{"_index":1898,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["enclosed",{"_index":2308,"title":{},"body":{"license.html":{}}}],["encompassing",{"_index":1763,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["end",{"_index":680,"title":{},"body":{"components/CriterionComponent.html":{},"index.html":{},"license.html":{}}}],["endindex",{"_index":1471,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["ensure",{"_index":584,"title":{},"body":{"modules/CoreModule.html":{}}}],["ensuremoduleloadedonceguard",{"_index":583,"title":{"classes/EnsureModuleLoadedOnceGuard.html":{}},"body":{"modules/CoreModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["entities",{"_index":2039,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2033,"title":{},"body":{"license.html":{}}}],["entry",{"_index":1552,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["entry.value",{"_index":1553,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyTableComponent.html":{}}}],["enum",{"_index":626,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1956,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1932,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":636,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["err",{"_index":826,"title":{},"body":{"injectables/DataService.html":{}}}],["err.body?.error",{"_index":873,"title":{},"body":{"injectables/DataService.html":{}}}],["err.error",{"_index":864,"title":{},"body":{"injectables/DataService.html":{}}}],["err.error.message",{"_index":868,"title":{},"body":{"injectables/DataService.html":{}}}],["err.status",{"_index":872,"title":{},"body":{"injectables/DataService.html":{}}}],["error",{"_index":866,"title":{},"body":{"injectables/DataService.html":{}}}],["error(`${targetmodule.constructor.name",{"_index":1037,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["errorevent",{"_index":865,"title":{},"body":{"injectables/DataService.html":{}}}],["errormessage",{"_index":863,"title":{},"body":{"injectables/DataService.html":{}}}],["errors",{"_index":1066,"title":{},"body":{"components/FooterComponent.html":{}}}],["etc",{"_index":1210,"title":{},"body":{"interfaces/InfoResourceSection.html":{}}}],["even",{"_index":2282,"title":{},"body":{"license.html":{}}}],["evenly",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["event",{"_index":1630,"title":{},"body":{"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"license.html":{}}}],["event.pageindex",{"_index":1495,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["event.pagesize",{"_index":1492,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["eventemitter",{"_index":708,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["example",{"_index":476,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"license.html":{}}}],["examples",{"_index":670,"title":{},"body":{"components/CriterionComponent.html":{}}}],["examplevalues",{"_index":473,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["except",{"_index":2146,"title":{},"body":{"license.html":{}}}],["excludesall",{"_index":647,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["excluding",{"_index":2118,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2135,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2004,"title":{},"body":{"index.html":{}}}],["executed",{"_index":2228,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":2258,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":2063,"title":{},"body":{"license.html":{}}}],["existing",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{}}}],["explicitly",{"_index":2220,"title":{},"body":{"license.html":{}}}],["explore",{"_index":338,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{}}}],["export",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["exports",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":2245,"title":{},"body":{"license.html":{}}}],["extends",{"_index":598,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["extensible",{"_index":350,"title":{},"body":{"components/BannerComponent.html":{}}}],["extension",{"_index":1254,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["extracriteriontitle",{"_index":434,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["extractgroupings",{"_index":1617,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["extratitletext",{"_index":652,"title":{},"body":{"components/CriterionComponent.html":{}}}],["f",{"_index":926,"title":{},"body":{"injectables/DataService.html":{}}}],["f.description",{"_index":920,"title":{},"body":{"injectables/DataService.html":{}}}],["f.filtertype",{"_index":981,"title":{},"body":{"injectables/DataService.html":{}}}],["f.filtervalues",{"_index":986,"title":{},"body":{"injectables/DataService.html":{}}}],["f.find(item",{"_index":931,"title":{},"body":{"injectables/DataService.html":{}}}],["f.id",{"_index":917,"title":{},"body":{"injectables/DataService.html":{}}}],["f.name",{"_index":919,"title":{},"body":{"injectables/DataService.html":{}}}],["f.technologycategory",{"_index":918,"title":{},"body":{"injectables/DataService.html":{}}}],["f.viewcombinationids.foreach(id",{"_index":921,"title":{},"body":{"injectables/DataService.html":{}}}],["faas",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["faastener",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["failure",{"_index":2279,"title":{},"body":{"license.html":{}}}],["false",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["faq",{"_index":1040,"title":{},"body":{"components/FaqComponent.html":{},"modules/InformationRoutingModule.html":{}}}],["faq'},{'name",{"_index":167,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["faq.component.html",{"_index":1042,"title":{},"body":{"components/FaqComponent.html":{}}}],["faq.component.scss",{"_index":1041,"title":{},"body":{"components/FaqComponent.html":{}}}],["faq/faq.component",{"_index":1231,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["faqcomponent",{"_index":166,"title":{"components/FaqComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["faults",{"_index":1054,"title":{},"body":{"components/FooterComponent.html":{}}}],["fb",{"_index":706,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{}}}],["features",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{}}}],["fee",{"_index":2286,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1767,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["fetch(event",{"_index":1491,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["fff",{"_index":1169,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ffffff",{"_index":363,"title":{},"body":{"components/BannerComponent.html":{},"components/FooterComponent.html":{}}}],["field",{"_index":1282,"title":{},"body":{"modules/MaterialModule.html":{},"components/TechnologyListComponent.html":{}}}],["fields",{"_index":2307,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":2056,"title":{},"body":{"license.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":2173,"title":{},"body":{"license.html":{}}}],["files",{"_index":1988,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":612,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filter'},{'name",{"_index":165,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["filter.component",{"_index":1733,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["filter.component.html",{"_index":697,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.scss",{"_index":696,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts",{"_index":695,"title":{},"body":{"components/CriterionFilterComponent.html":{},"coverage.html":{}}}],["filter.component.ts:11",{"_index":707,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:12",{"_index":709,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:14",{"_index":714,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:15",{"_index":705,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:20",{"_index":711,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.component.ts:67",{"_index":710,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.displayname",{"_index":752,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filter.filters.foreach((f",{"_index":980,"title":{},"body":{"injectables/DataService.html":{}}}],["filter/criterion",{"_index":694,"title":{},"body":{"components/CriterionFilterComponent.html":{},"modules/TechnologiesModule.html":{},"coverage.html":{}}}],["filter_alt",{"_index":1704,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterblock.blockicon",{"_index":1697,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterblock.blockname",{"_index":1698,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterconfiguration",{"_index":1570,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["filterconfigurationspath",{"_index":859,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filtereddata",{"_index":1442,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filterelement",{"_index":698,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["filterid",{"_index":618,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["filtering",{"_index":620,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["filteringresult",{"_index":1505,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filterlookup",{"_index":1632,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filterlookup.get(c.id",{"_index":1691,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["filters",{"_index":610,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["filtertype",{"_index":623,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["filtervalue",{"_index":1787,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["filtervalue.filtertype",{"_index":1515,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filtervalue.value",{"_index":1516,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["filtervalues",{"_index":625,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["find",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{}}}],["first",{"_index":1143,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["fit",{"_index":1335,"title":{},"body":{"components/OverviewComponent.html":{}}}],["fitness",{"_index":2249,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1998,"title":{},"body":{"index.html":{}}}],["flat",{"_index":1129,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["flex",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["flexibly",{"_index":491,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["flexlayoutmodule",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["flow",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["following",{"_index":2179,"title":{},"body":{"license.html":{}}}],["font",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["footer",{"_index":1047,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":169,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["footer.component.html",{"_index":1049,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1048,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":1410,"title":{},"body":{"modules/SharedModule.html":{}}}],["footer__heading",{"_index":1073,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer__section",{"_index":1071,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":168,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forkjoin",{"_index":1738,"title":{},"body":{"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["forkjoin([technologies",{"_index":1742,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["form",{"_index":1747,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"license.html":{}}}],["format",{"_index":1358,"title":{},"body":{"injectables/RandomColorService.html":{},"license.html":{}}}],["formbuilder",{"_index":704,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/TechnologiesComponent.html":{}}}],["formcontrol",{"_index":712,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["formgroup",{"_index":713,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["forming",{"_index":471,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["formsmodule",{"_index":1404,"title":{},"body":{"modules/SharedModule.html":{}}}],["found",{"_index":1344,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":183,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["found.component",{"_index":317,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["found.component.css",{"_index":1345,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":1346,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1343,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":1348,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":1347,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":316,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["framework",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"index.html":{}}}],["framework'},{'name",{"_index":171,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["framework.component.html",{"_index":1083,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["framework.component.scss",{"_index":1082,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["framework.description",{"_index":1127,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework.name",{"_index":1126,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework.viewcombinationids",{"_index":1003,"title":{},"body":{"injectables/DataService.html":{}}}],["framework.viewcombinations.add(viewcombination",{"_index":924,"title":{},"body":{"injectables/DataService.html":{}}}],["framework/framework.component",{"_index":1236,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["framework__grouping",{"_index":1133,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework__info",{"_index":1131,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework__root",{"_index":1132,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["framework__view",{"_index":1141,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["frameworkcomponent",{"_index":170,"title":{"components/FrameworkComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["frameworkid",{"_index":791,"title":{},"body":{"injectables/DataService.html":{}}}],["frameworkrenderercomponent",{"_index":172,"title":{"components/FrameworkRendererComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["frameworkresolver",{"_index":1145,"title":{"guards/FrameworkResolver.html":{}},"body":{"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["frameworks",{"_index":915,"title":{},"body":{"injectables/DataService.html":{}}}],["frameworks.find(f",{"_index":927,"title":{},"body":{"injectables/DataService.html":{}}}],["frameworks.foreach(f",{"_index":916,"title":{},"body":{"injectables/DataService.html":{}}}],["frameworkspath",{"_index":853,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frameworkviewcombinationspath",{"_index":850,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frameworkviewspath",{"_index":848,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":2138,"title":{},"body":{"license.html":{}}}],["full",{"_index":323,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["function",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"index.html":{}}}],["functions",{"_index":1757,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["further",{"_index":2008,"title":{},"body":{"index.html":{}}}],["future",{"_index":523,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["fws",{"_index":997,"title":{},"body":{"injectables/DataService.html":{}}}],["fws.find(f",{"_index":1002,"title":{},"body":{"injectables/DataService.html":{}}}],["g",{"_index":1015,"title":{},"body":{"injectables/DataService.html":{}}}],["g.criteriaids",{"_index":1022,"title":{},"body":{"injectables/DataService.html":{}}}],["g.criteriaids.foreach(id",{"_index":1023,"title":{},"body":{"injectables/DataService.html":{}}}],["g.id",{"_index":1014,"title":{},"body":{"injectables/DataService.html":{}}}],["g.locator",{"_index":1027,"title":{},"body":{"injectables/DataService.html":{}}}],["g.name",{"_index":450,"title":{},"body":{"components/ChildGroupingComponent.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{}}}],["g.parentid",{"_index":1028,"title":{},"body":{"injectables/DataService.html":{}}}],["gap",{"_index":1329,"title":{},"body":{"components/OverviewComponent.html":{}}}],["generate",{"_index":1990,"title":{},"body":{"index.html":{}}}],["generated",{"_index":628,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["generatefilterstructure",{"_index":1618,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["generategroupingcolumns",{"_index":1862,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["generategroupingcolumns(grouping",{"_index":1591,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["generation",{"_index":521,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["generic",{"_index":483,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["getcriteria",{"_index":763,"title":{},"body":{"injectables/DataService.html":{}}}],["getdefaulttechcategory",{"_index":250,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getdefaultviewcombinationdata",{"_index":764,"title":{},"body":{"injectables/DataService.html":{}}}],["getdefaultviewcombinationdata(frameworkid",{"_index":789,"title":{},"body":{"injectables/DataService.html":{}}}],["getdossier",{"_index":765,"title":{},"body":{"injectables/DataService.html":{}}}],["getdossier(technologyid",{"_index":792,"title":{},"body":{"injectables/DataService.html":{}}}],["getdossiersofcategory",{"_index":766,"title":{},"body":{"injectables/DataService.html":{}}}],["getdossiersofcategory(category",{"_index":795,"title":{},"body":{"injectables/DataService.html":{}}}],["getfilteringresult",{"_index":1768,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["getfilteringresult(filtervalue",{"_index":1535,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["getframeworkforcategory",{"_index":767,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkforcategory(techcategory",{"_index":797,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkfortechnologytype",{"_index":768,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkfortechnologytype(category",{"_index":800,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkgroupingsdata",{"_index":769,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworkgroupingsdata(frameworkid",{"_index":802,"title":{},"body":{"injectables/DataService.html":{}}}],["getframeworks",{"_index":770,"title":{},"body":{"injectables/DataService.html":{}}}],["getgroupings",{"_index":771,"title":{},"body":{"injectables/DataService.html":{}}}],["getinforesources",{"_index":772,"title":{},"body":{"injectables/DataService.html":{}}}],["getlogopath",{"_index":1246,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["getlogopath(logolocator",{"_index":1248,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["getrandomcolor",{"_index":1352,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["getrandomcolor(hue",{"_index":1354,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["gettechnologies",{"_index":773,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologies(withdossier",{"_index":807,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologiesofcategory",{"_index":774,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologiesofcategory(category",{"_index":810,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnology",{"_index":775,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnology(id",{"_index":812,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologyfilter",{"_index":776,"title":{},"body":{"injectables/DataService.html":{}}}],["gettechnologyfilter(category",{"_index":814,"title":{},"body":{"injectables/DataService.html":{}}}],["getting",{"_index":1960,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettitletext",{"_index":301,"title":{},"body":{"classes/AppPage.html":{}}}],["getviewcombinations",{"_index":777,"title":{},"body":{"injectables/DataService.html":{}}}],["getviewgroupingsdata",{"_index":778,"title":{},"body":{"injectables/DataService.html":{}}}],["getviewgroupingsdata(viewid",{"_index":817,"title":{},"body":{"injectables/DataService.html":{}}}],["getviews",{"_index":779,"title":{},"body":{"injectables/DataService.html":{}}}],["getviewsdata",{"_index":780,"title":{},"body":{"injectables/DataService.html":{}}}],["getviewsdata(viewcombinationid",{"_index":821,"title":{},"body":{"injectables/DataService.html":{}}}],["give",{"_index":2180,"title":{},"body":{"license.html":{}}}],["given",{"_index":496,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["go",{"_index":2011,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":2276,"title":{},"body":{"license.html":{}}}],["governing",{"_index":2328,"title":{},"body":{"license.html":{}}}],["grant",{"_index":2128,"title":{},"body":{"license.html":{}}}],["granted",{"_index":2065,"title":{},"body":{"license.html":{}}}],["granting",{"_index":2035,"title":{},"body":{"license.html":{}}}],["grants",{"_index":2131,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2330,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":1970,"title":{},"body":{"index.html":{}}}],["gray",{"_index":1137,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["greater",{"_index":639,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["grey",{"_index":455,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{}}}],["grid",{"_index":1325,"title":{},"body":{"components/OverviewComponent.html":{}}}],["grid__footer",{"_index":1069,"title":{},"body":{"components/FooterComponent.html":{}}}],["grossly",{"_index":2264,"title":{},"body":{"license.html":{}}}],["group",{"_index":516,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["grouping",{"_index":431,"title":{},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/InfoResourceSection.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping'},{'name",{"_index":160,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.component",{"_index":1406,"title":{},"body":{"modules/SharedModule.html":{}}}],["grouping.component.html",{"_index":433,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.scss",{"_index":432,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts",{"_index":430,"title":{},"body":{"components/ChildGroupingComponent.html":{},"coverage.html":{}}}],["grouping.component.ts:10",{"_index":443,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:11",{"_index":447,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:12",{"_index":444,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:13",{"_index":441,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:14",{"_index":445,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.component.ts:15",{"_index":440,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping.criteria",{"_index":1685,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["grouping.criteria.foreach((c",{"_index":1595,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.criteria.foreach(c",{"_index":1690,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["grouping.criteria.size",{"_index":1686,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["grouping.groupings",{"_index":1602,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.groupings.foreach(g",{"_index":1603,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.id",{"_index":1122,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping.name",{"_index":1599,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["grouping/child",{"_index":429,"title":{},"body":{"components/ChildGroupingComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["grouping__criterion",{"_index":461,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{}}}],["grouping__path",{"_index":460,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["grouping__title",{"_index":457,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["groupingcolumnids",{"_index":1576,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns",{"_index":1575,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns.foreach(c",{"_index":1589,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns.length",{"_index":1586,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingcolumns.push",{"_index":1600,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["groupingids",{"_index":565,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["groupings",{"_index":435,"title":{},"body":{"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["groupings]{@link",{"_index":527,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["groupingslookup",{"_index":891,"title":{},"body":{"injectables/DataService.html":{}}}],["groupingslookup.has(id",{"_index":898,"title":{},"body":{"injectables/DataService.html":{}}}],["grow",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["gte",{"_index":638,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["guard",{"_index":1144,"title":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1146,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"overview.html":{}}}],["h.png",{"_index":1180,"title":{},"body":{"components/HeaderComponent.html":{}}}],["handleerror",{"_index":782,"title":{},"body":{"injectables/DataService.html":{}}}],["handleerror(err",{"_index":824,"title":{},"body":{"injectables/DataService.html":{}}}],["harmful",{"_index":1067,"title":{},"body":{"components/FooterComponent.html":{}}}],["harmless",{"_index":2300,"title":{},"body":{"license.html":{}}}],["header",{"_index":1163,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["header'},{'name",{"_index":175,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["header.component.html",{"_index":1165,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1164,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1409,"title":{},"body":{"modules/SharedModule.html":{}}}],["header__logo",{"_index":1177,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__menu",{"_index":1174,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__spacer",{"_index":1176,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__toolbar",{"_index":1173,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":174,"title":{"components/HeaderComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":370,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["help",{"_index":2009,"title":{},"body":{"index.html":{}}}],["helps",{"_index":500,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["hereby",{"_index":2130,"title":{},"body":{"license.html":{}}}],["herein",{"_index":2224,"title":{},"body":{"license.html":{}}}],["hierarchy",{"_index":472,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["high",{"_index":345,"title":{},"body":{"components/BannerComponent.html":{}}}],["hold",{"_index":2299,"title":{},"body":{"license.html":{}}}],["home",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["home.component.html",{"_index":1195,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1194,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/about/about.component",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["home/banner/banner.component",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["home/home.component",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home/overview/overview.component",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["homecomponent",{"_index":176,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["hostlistener",{"_index":1816,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["hostlistener('window:scroll",{"_index":1820,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["hostlisteners",{"_index":1805,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["hover",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{}}}],["html",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["http",{"_index":248,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{}}}],["http://localhost:4200",{"_index":1984,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses",{"_index":2020,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":2325,"title":{},"body":{"license.html":{}}}],["httpclient",{"_index":246,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{}}}],["httpclientmodule",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["hue",{"_index":1361,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["icon",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{},"components/CriterionComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{}}}],["id",{"_index":474,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"classes/TableColumn.html":{},"interfaces/Technology.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyTableComponent.html":{}}}],["identification",{"_index":2319,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":481,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{}}}],["identifying",{"_index":2311,"title":{},"body":{"license.html":{}}}],["ids",{"_index":1762,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["ii",{"_index":2054,"title":{},"body":{"license.html":{}}}],["iii",{"_index":2060,"title":{},"body":{"license.html":{}}}],["img",{"_index":1888,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["implements",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["implied",{"_index":2246,"title":{},"body":{"license.html":{}}}],["import",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"license.html":{}}}],["import(`src/app/information/information.module`).then(m",{"_index":325,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import(`src/app/technologies/technologies.module`).then(m",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["imports",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["improving",{"_index":2117,"title":{},"body":{"license.html":{}}}],["inability",{"_index":2274,"title":{},"body":{"license.html":{}}}],["inaccuracies",{"_index":1064,"title":{},"body":{"components/FooterComponent.html":{}}}],["incidental",{"_index":2270,"title":{},"body":{"license.html":{}}}],["include",{"_index":453,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"license.html":{}}}],["included",{"_index":2082,"title":{},"body":{"license.html":{}}}],["includeframeworkinfo",{"_index":1101,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["includes",{"_index":1320,"title":{},"body":{"components/OverviewComponent.html":{},"license.html":{}}}],["including",{"_index":2069,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":2101,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":2126,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":2301,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":2297,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":2288,"title":{},"body":{"license.html":{}}}],["index",{"_index":204,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":604,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaReview.html":{}}}],["indicated",{"_index":2080,"title":{},"body":{"license.html":{}}}],["indicates",{"_index":510,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["indirect",{"_index":2049,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2062,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["inforesource",{"_index":1199,"title":{"interfaces/InfoResource.html":{}},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"coverage.html":{}}}],["inforesourcesection",{"_index":842,"title":{"interfaces/InfoResourceSection.html":{}},"body":{"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"coverage.html":{}}}],["inforesourcespath",{"_index":861,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"license.html":{}}}],["information'},{'name",{"_index":178,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["information.component",{"_index":1232,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["information.component.html",{"_index":1213,"title":{},"body":{"components/InformationComponent.html":{}}}],["information.component.scss",{"_index":1212,"title":{},"body":{"components/InformationComponent.html":{}}}],["information/resolvers/framework",{"_index":1411,"title":{},"body":{"modules/SharedModule.html":{}}}],["informational",{"_index":2207,"title":{},"body":{"license.html":{}}}],["informationcomponent",{"_index":177,"title":{"components/InformationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["informationmodule",{"_index":1224,"title":{"modules/InformationModule.html":{}},"body":{"modules/InformationModule.html":{},"modules.html":{},"overview.html":{}}}],["informationroutingmodule",{"_index":1228,"title":{"modules/InformationRoutingModule.html":{}},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["inforoutes",{"_index":1239,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["infringed",{"_index":2157,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2170,"title":{},"body":{"license.html":{}}}],["initialize",{"_index":1118,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["initialquery",{"_index":1446,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["initialsort",{"_index":1445,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["initialvalues",{"_index":734,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["initialvalues.filter((x",{"_index":737,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["injectable",{"_index":236,"title":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["injectables",{"_index":238,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"overview.html":{}}}],["inline",{"_index":1719,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["input",{"_index":410,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["inputs",{"_index":397,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["instance",{"_index":478,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["instanceof",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{}}}],["institute",{"_index":2160,"title":{},"body":{"license.html":{}}}],["intended",{"_index":1963,"title":{},"body":{"index.html":{}}}],["intentionally",{"_index":2099,"title":{},"body":{"license.html":{}}}],["interacting",{"_index":1971,"title":{},"body":{"index.html":{}}}],["interface",{"_index":463,"title":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{}},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":465,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{},"overview.html":{}}}],["interfaces/classification",{"_index":449,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["interfaces/filtering",{"_index":1427,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["interfaces/technology",{"_index":1425,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["introduced",{"_index":1973,"title":{},"body":{"index.html":{}}}],["irrevocable",{"_index":2139,"title":{},"body":{"license.html":{}}}],["isarrayofstrings(value",{"_index":743,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["ispaginated",{"_index":1438,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["issue",{"_index":2112,"title":{},"body":{"license.html":{}}}],["item",{"_index":378,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/HeaderComponent.html":{}}}],["item.id",{"_index":950,"title":{},"body":{"injectables/DataService.html":{}}}],["item.technologycategory.tolocalelowercase",{"_index":932,"title":{},"body":{"injectables/DataService.html":{}}}],["items",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["items.find(item",{"_index":949,"title":{},"body":{"injectables/DataService.html":{}}}],["items.map",{"_index":936,"title":{},"body":{"injectables/DataService.html":{}}}],["january",{"_index":2018,"title":{},"body":{"license.html":{}}}],["java",{"_index":547,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["jpeg",{"_index":1257,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["jpg",{"_index":1256,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["json",{"_index":672,"title":{},"body":{"components/CriterionComponent.html":{},"injectables/DataService.html":{}}}],["justify",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["karma",{"_index":2006,"title":{},"body":{"index.html":{}}}],["key",{"_index":572,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["keyof",{"_index":1430,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["keystodelete",{"_index":1524,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["keystodelete.foreach(key",{"_index":1532,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["keystodelete.push(key",{"_index":1528,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["kind",{"_index":1058,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["label",{"_index":1218,"title":{},"body":{"components/InformationComponent.html":{}}}],["lack",{"_index":1062,"title":{},"body":{"components/FooterComponent.html":{}}}],["lambda",{"_index":539,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["language",{"_index":2327,"title":{},"body":{"license.html":{}}}],["lastquery",{"_index":1481,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["lastsort",{"_index":1476,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["law",{"_index":2243,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":2166,"title":{},"body":{"license.html":{}}}],["layout",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["learn",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{}}}],["left",{"_index":691,"title":{},"body":{"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["legal",{"_index":2036,"title":{},"body":{"license.html":{}}}],["legend",{"_index":144,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"modules/CoreModule.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"overview.html":{}}}],["length",{"_index":1849,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["less",{"_index":635,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["level",{"_index":347,"title":{},"body":{"components/BannerComponent.html":{}}}],["liability",{"_index":2259,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2267,"title":{},"body":{"license.html":{}}}],["library_books",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/InformationComponent.html":{}}}],["licensable",{"_index":2155,"title":{},"body":{"license.html":{}}}],["license",{"_index":2014,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":2214,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":2322,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":2171,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":525,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["licensor",{"_index":2030,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1895,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["limit).lastindexof",{"_index":1901,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["limitation",{"_index":2247,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":2329,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2070,"title":{},"body":{"license.html":{}}}],["line",{"_index":369,"title":{},"body":{"components/BannerComponent.html":{},"components/CriterionComponent.html":{}}}],["link",{"_index":485,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/InformationComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["link.label",{"_index":1220,"title":{},"body":{"components/InformationComponent.html":{}}}],["links",{"_index":380,"title":{},"body":{"components/BannerComponent.html":{}}}],["list",{"_index":382,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/HeaderComponent.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["list'},{'name",{"_index":192,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["list.component",{"_index":1728,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["list.component.html",{"_index":1838,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.scss",{"_index":1837,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts",{"_index":1836,"title":{},"body":{"components/TechnologyListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":1842,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts:11",{"_index":1841,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts:16",{"_index":1845,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list.component.ts:21",{"_index":1843,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list/technology",{"_index":1727,"title":{},"body":{"modules/TechnologiesModule.html":{},"components/TechnologyListComponent.html":{},"coverage.html":{}}}],["list__card",{"_index":1857,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__cards",{"_index":1856,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__explore",{"_index":1860,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__logo",{"_index":1859,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__paginator",{"_index":1861,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["list__search",{"_index":1855,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["lists",{"_index":1754,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"license.html":{}}}],["literal",{"_index":1795,"title":{},"body":{"classes/TechnologyDataSource.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":2161,"title":{},"body":{"license.html":{}}}],["loadappconfig",{"_index":242,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["loadchildren",{"_index":324,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":585,"title":{},"body":{"modules/CoreModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["loading",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["locate",{"_index":1752,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["location",{"_index":1217,"title":{},"body":{"components/InformationComponent.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["locator",{"_index":517,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["locator.service",{"_index":589,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DataService.html":{}}}],["locator.service.ts",{"_index":1244,"title":{},"body":{"injectables/LogoLocatorService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["locator.service.ts:10",{"_index":1249,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["locator.service.ts:5",{"_index":1247,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["logo",{"_index":837,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["logolocation",{"_index":937,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["logolocator",{"_index":783,"title":{},"body":{"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["logolocatorservice",{"_index":577,"title":{"injectables/LogoLocatorService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{},"overview.html":{}}}],["logolocatorservice.platformlogodir",{"_index":1251,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["lookup",{"_index":1019,"title":{},"body":{"injectables/DataService.html":{}}}],["lookup.get(g.parentid).groupings.add(lookup.get(g.id",{"_index":1029,"title":{},"body":{"injectables/DataService.html":{}}}],["lookup.set(g.id",{"_index":1026,"title":{},"body":{"injectables/DataService.html":{}}}],["loss",{"_index":2275,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2281,"title":{},"body":{"license.html":{}}}],["low",{"_index":346,"title":{},"body":{"components/BannerComponent.html":{}}}],["lte",{"_index":634,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["luminosity",{"_index":1355,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["m.informationmodule",{"_index":326,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.technologiesmodule",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["made",{"_index":2079,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":2110,"title":{},"body":{"license.html":{}}}],["main",{"_index":1068,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologiesComponent.html":{}}}],["make",{"_index":2148,"title":{},"body":{"license.html":{}}}],["makes",{"_index":1056,"title":{},"body":{"components/FooterComponent.html":{}}}],["making",{"_index":2067,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":2280,"title":{},"body":{"license.html":{}}}],["managed",{"_index":2114,"title":{},"body":{"license.html":{}}}],["management",{"_index":2051,"title":{},"body":{"license.html":{}}}],["map",{"_index":446,"title":{},"body":{"components/ChildGroupingComponent.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{}}}],["map(([combs",{"_index":914,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([criteria",{"_index":882,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([data",{"_index":1468,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["map(([filter",{"_index":968,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([groupings",{"_index":890,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([items",{"_index":947,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([vcs",{"_index":996,"title":{},"body":{"injectables/DataService.html":{}}}],["map(([views",{"_index":903,"title":{},"body":{"injectables/DataService.html":{}}}],["map((conf",{"_index":964,"title":{},"body":{"injectables/DataService.html":{}}}],["map((f",{"_index":930,"title":{},"body":{"injectables/DataService.html":{}}}],["map((items",{"_index":935,"title":{},"body":{"injectables/DataService.html":{}}}],["map((techs",{"_index":943,"title":{},"body":{"injectables/DataService.html":{}}}],["map(criteria.map(c",{"_index":884,"title":{},"body":{"injectables/DataService.html":{}}}],["map(groupings.map(c",{"_index":892,"title":{},"body":{"injectables/DataService.html":{}}}],["map(groupings.map(g",{"_index":1013,"title":{},"body":{"injectables/DataService.html":{}}}],["map(object.entries(res.reviewedcriteria",{"_index":957,"title":{},"body":{"injectables/DataService.html":{}}}],["map(this.filterconfiguration.filters.map(c",{"_index":1677,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["map(vcs.map(vc",{"_index":999,"title":{},"body":{"injectables/DataService.html":{}}}],["map(views.map(v",{"_index":1008,"title":{},"body":{"injectables/DataService.html":{}}}],["margin",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["marked",{"_index":2120,"title":{},"body":{"license.html":{}}}],["marks",{"_index":2234,"title":{},"body":{"license.html":{}}}],["matautocompletemodule",{"_index":1285,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbottomsheetmodule",{"_index":1308,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":1261,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":1307,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":1274,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcheckboxmodule",{"_index":1301,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":198,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1289,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":1968,"title":{},"body":{"index.html":{}}}],["material.module",{"_index":1402,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodule",{"_index":1259,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1278,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matformfieldmodule",{"_index":1280,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":1276,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":1263,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":1283,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":1272,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":1295,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":1297,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":1269,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":1313,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":1287,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":1567,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["matsidenavmodule",{"_index":1267,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":1311,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":1303,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":1291,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":1299,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":1265,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":1293,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattreemodule",{"_index":1305,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":1078,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["mean",{"_index":2027,"title":{},"body":{"license.html":{}}}],["means",{"_index":2046,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":2072,"title":{},"body":{"license.html":{}}}],["media",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["media.matchmedia('(max",{"_index":1653,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["mediamatcher",{"_index":1622,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["mediaquerylist",{"_index":1641,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["medium",{"_index":2176,"title":{},"body":{"license.html":{}}}],["meet",{"_index":2178,"title":{},"body":{"license.html":{}}}],["menu",{"_index":1167,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu__icon",{"_index":1188,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu__link",{"_index":1181,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu__text",{"_index":1183,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menu_book",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"components/InformationComponent.html":{}}}],["merchantability",{"_index":2248,"title":{},"body":{"license.html":{}}}],["merely",{"_index":2094,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":831,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap",{"_index":832,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap((t",{"_index":961,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap((techs",{"_index":959,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap((vc",{"_index":992,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap(v",{"_index":994,"title":{},"body":{"injectables/DataService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"pipes/SetToArrayPipe.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["methods",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["min",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["miscellaneous",{"_index":1955,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mobilequery",{"_index":1614,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["mode",{"_index":1659,"title":{},"body":{"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["model",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["modifications",{"_index":2068,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2184,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2208,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":2213,"title":{},"body":{"license.html":{}}}],["module",{"_index":260,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"coverage.html":{},"overview.html":{}}}],["modules",{"_index":262,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"index.html":{},"license.html":{}}}],["moz",{"_index":360,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{}}}],["multi",{"_index":594,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["n/a",{"_index":673,"title":{},"body":{"components/CriterionComponent.html":{}}}],["name",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"index.html":{},"license.html":{}}}],["namebasedquery",{"_index":1437,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["namequery",{"_index":1459,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["names",{"_index":2233,"title":{},"body":{"license.html":{}}}],["nav",{"_index":392,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav'},{'name",{"_index":157,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["nav.component",{"_index":1413,"title":{},"body":{"modules/SharedModule.html":{},"components/TechnologyDetailsComponent.html":{}}}],["nav.component.html",{"_index":394,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.scss",{"_index":393,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts",{"_index":391,"title":{},"body":{"components/BottomNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:10",{"_index":409,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts:11",{"_index":401,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts:16",{"_index":403,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav.component.ts:19",{"_index":405,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["nav/bottom",{"_index":390,"title":{},"body":{"components/BottomNavComponent.html":{},"modules/SharedModule.html":{},"components/TechnologyDetailsComponent.html":{},"coverage.html":{}}}],["nav_item",{"_index":1184,"title":{},"body":{"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["navbar",{"_index":420,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["navigate",{"_index":1983,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":302,"title":{},"body":{"classes/AppPage.html":{}}}],["navigating",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{}}}],["navigationcancel",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationend",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationerror",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["navlinks",{"_index":1215,"title":{},"body":{"components/InformationComponent.html":{}}}],["necessarily",{"_index":2156,"title":{},"body":{"license.html":{}}}],["needs",{"_index":512,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["negligence",{"_index":2262,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":2265,"title":{},"body":{"license.html":{}}}],["nested",{"_index":462,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["new",{"_index":718,"title":{},"body":{"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":940,"title":{},"body":{"injectables/DataService.html":{}}}],["nextquery",{"_index":1483,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextquery[key",{"_index":1534,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextquery[key].filtertype",{"_index":1526,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextquery[key].value",{"_index":1529,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["nextsort",{"_index":1478,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["ng",{"_index":1980,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["ngondestroy",{"_index":1370,"title":{},"body":{"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{}}}],["ngoninit",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["no.pipe",{"_index":1414,"title":{},"body":{"modules/SharedModule.html":{}}}],["no.pipe.ts",{"_index":1905,"title":{},"body":{"pipes/YesNoPipe.html":{},"coverage.html":{}}}],["no.pipe.ts:7",{"_index":1906,"title":{},"body":{"pipes/YesNoPipe.html":{}}}],["non",{"_index":2134,"title":{},"body":{"license.html":{}}}],["none",{"_index":427,"title":{},"body":{"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{}}}],["normally",{"_index":2204,"title":{},"body":{"license.html":{}}}],["note",{"_index":553,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["nothing",{"_index":2223,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2081,"title":{},"body":{"license.html":{}}}],["notices",{"_index":2187,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2221,"title":{},"body":{"license.html":{}}}],["nowrap",{"_index":423,"title":{},"body":{"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["null",{"_index":1527,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["number",{"_index":549,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{}}}],["numeric",{"_index":534,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["o",{"_index":361,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{}}}],["obj",{"_index":732,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["obj[this.filter.criterionid",{"_index":733,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["object",{"_index":1334,"title":{},"body":{"components/OverviewComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.keys(criteriaquery).foreach(key",{"_index":1502,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["object.keys(criteriaquery).length",{"_index":1501,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["object.keys(nextquery).foreach(key",{"_index":1525,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["obligations",{"_index":2289,"title":{},"body":{"license.html":{}}}],["observable",{"_index":788,"title":{},"body":{"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"components/OverviewComponent.html":{},"guards/ResourcesResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["obtain",{"_index":2324,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":867,"title":{},"body":{"injectables/DataService.html":{}}}],["of(result",{"_index":1464,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["offer",{"_index":2149,"title":{},"body":{"license.html":{}}}],["official",{"_index":551,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["once.guard",{"_index":586,"title":{},"body":{"modules/CoreModule.html":{}}}],["once.guard.ts",{"_index":1032,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["once.guard.ts:3",{"_index":1034,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["onchanges",{"_index":1649,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["ondestroy",{"_index":1366,"title":{},"body":{"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{}}}],["one",{"_index":339,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"index.html":{},"license.html":{}}}],["ongroupingselected",{"_index":1100,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["ongroupingselected(viewid",{"_index":1111,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["oninit",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["onnamechange",{"_index":1840,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["onnamechange(name",{"_index":1844,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["onqueryupdate",{"_index":1619,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["onqueryupdate($event",{"_index":1628,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["onscrolltotop",{"_index":396,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["onscrolltotop(platformid",{"_index":404,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["onwindowscroll(e",{"_index":1821,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["opacity",{"_index":1337,"title":{},"body":{"components/OverviewComponent.html":{}}}],["open",{"_index":349,"title":{},"body":{"components/BannerComponent.html":{},"components/OverviewComponent.html":{},"index.html":{}}}],["option.name",{"_index":1827,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["optional",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["options",{"_index":630,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["order",{"_index":1135,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{}}}],["organize",{"_index":501,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["origin",{"_index":2238,"title":{},"body":{"license.html":{}}}],["original",{"_index":2091,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":2053,"title":{},"body":{"license.html":{}}}],["out",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1185,"title":{},"body":{"components/HeaderComponent.html":{}}}],["output",{"_index":715,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["outputs",{"_index":701,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["outstanding",{"_index":2058,"title":{},"body":{"license.html":{}}}],["overflow",{"_index":1882,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["overview",{"_index":1316,"title":{"overview.html":{}},"body":{"components/OverviewComponent.html":{},"overview.html":{}}}],["overview'},{'name",{"_index":180,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["overview.component.html",{"_index":1318,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.scss",{"_index":1317,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overviewcomponent",{"_index":179,"title":{"components/OverviewComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["owner",{"_index":2032,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2055,"title":{},"body":{"license.html":{}}}],["p",{"_index":1523,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["p.platformname",{"_index":1852,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["p.shortdescription",{"_index":1853,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["package",{"_index":1938,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["page",{"_index":182,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"license.html":{}}}],["pageevent",{"_index":1426,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["pagenotfoundcomponent",{"_index":181,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagenumber",{"_index":1435,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["pagesize",{"_index":1447,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{}}}],["pagesizeoptions",{"_index":1839,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["paginateddata",{"_index":1443,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["panel",{"_index":1694,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parameters",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["params['browsingmode",{"_index":1660,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parent",{"_index":436,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["parentgroup",{"_index":1634,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parentgroup.concat",{"_index":1688,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["parentgroupingname",{"_index":1593,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["parentgroupingname.concat('.').concat(grouping.name",{"_index":1598,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["parentid",{"_index":567,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["parentmodule",{"_index":600,"title":{},"body":{"modules/CoreModule.html":{}}}],["part",{"_index":2195,"title":{},"body":{"license.html":{}}}],["partial",{"_index":1475,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["particular",{"_index":529,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"license.html":{}}}],["party",{"_index":2203,"title":{},"body":{"license.html":{}}}],["patent",{"_index":2145,"title":{},"body":{"license.html":{}}}],["path",{"_index":320,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["pathmatch",{"_index":322,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{}}}],["pattern.png",{"_index":356,"title":{},"body":{"components/BannerComponent.html":{}}}],["percent",{"_index":2057,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1975,"title":{},"body":{"index.html":{},"license.html":{}}}],["permission",{"_index":2231,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":2064,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":2132,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":2194,"title":{},"body":{"license.html":{}}}],["pink",{"_index":1076,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["pipe",{"_index":877,"title":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}},"body":{"injectables/DataService.html":{},"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{}}}],["pipes",{"_index":1386,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1393,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["placement",{"_index":1633,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["placement.get(grouping.name",{"_index":1684,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["placement.set(grouping.name",{"_index":1687,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["places",{"_index":2198,"title":{},"body":{"license.html":{}}}],["platform",{"_index":337,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyDossier.html":{},"components/TechnologyListComponent.html":{},"index.html":{}}}],["platform.description",{"_index":1826,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["platform.platformname",{"_index":1825,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["platform.platformname.tolocalelowercase().includes(namequery",{"_index":1500,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["platformid",{"_index":406,"title":{},"body":{"components/BottomNavComponent.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["platformlogodir",{"_index":1245,"title":{},"body":{"injectables/LogoLocatorService.html":{}}}],["platformname",{"_index":1666,"title":{},"body":{"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["platformroutes",{"_index":1743,"title":{},"body":{"modules/TechnologiesRoutingModule.html":{}}}],["platforms",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyDossier.html":{},"components/TechnologyListComponent.html":{},"index.html":{}}}],["platforms__button",{"_index":1331,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__container",{"_index":1323,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__controls",{"_index":1712,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__description",{"_index":1713,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__filter",{"_index":1714,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__header",{"_index":1715,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platforms__item",{"_index":1330,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__logo",{"_index":1332,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__logos",{"_index":1324,"title":{},"body":{"components/OverviewComponent.html":{}}}],["platforms__settings",{"_index":1716,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["platform’s",{"_index":1972,"title":{},"body":{"index.html":{}}}],["png",{"_index":1255,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{}}}],["pointer",{"_index":1139,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyListComponent.html":{}}}],["populaterenderblocks",{"_index":1620,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["populaterenderblocks(grouping",{"_index":1631,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["position",{"_index":417,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["possibility",{"_index":2284,"title":{},"body":{"license.html":{}}}],["possible",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{}}}],["posts",{"_index":1209,"title":{},"body":{"interfaces/InfoResourceSection.html":{}}}],["power",{"_index":2047,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":2066,"title":{},"body":{"license.html":{}}}],["preloadallmodules",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":330,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prepare",{"_index":2141,"title":{},"body":{"license.html":{}}}],["previous",{"_index":974,"title":{},"body":{"injectables/DataService.html":{}}}],["primitive",{"_index":546,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["printed",{"_index":2317,"title":{},"body":{"license.html":{}}}],["private",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{}}}],["processdata",{"_index":1769,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["processdata(data",{"_index":1498,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["prod",{"_index":1997,"title":{},"body":{"index.html":{}}}],["product",{"_index":1053,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["production",{"_index":1999,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":1322,"title":{},"body":{"components/OverviewComponent.html":{}}}],["project",{"_index":1992,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":2186,"title":{},"body":{"license.html":{}}}],["promise",{"_index":304,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["property",{"_index":1429,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{}}}],["prototype",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{}}}],["protractor",{"_index":306,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"modules/CoreModule.html":{},"license.html":{}}}],["provided",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["provider",{"_index":1055,"title":{},"body":{"components/FooterComponent.html":{}}}],["providers",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}],["provides",{"_index":1969,"title":{},"body":{"index.html":{},"license.html":{}}}],["prunequery",{"_index":1770,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["prunequery(nextquery",{"_index":1522,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["public",{"_index":699,"title":{},"body":{"components/CriterionFilterComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["publication",{"_index":1974,"title":{},"body":{"index.html":{}}}],["publications",{"_index":1207,"title":{},"body":{"interfaces/InfoResourceSection.html":{}}}],["publicly",{"_index":2142,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2115,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2044,"title":{},"body":{"license.html":{}}}],["q&a",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{}}}],["query",{"_index":1484,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["querybycriteria",{"_index":1771,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["querybycriteria(query",{"_index":1480,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["querybyname",{"_index":1772,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["querybyname(query",{"_index":1489,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["question_answer",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{}}}],["questions",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{}}}],["radius",{"_index":1710,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["randomcolor",{"_index":1364,"title":{},"body":{"injectables/RandomColorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["randomcolorservice",{"_index":578,"title":{"injectables/RandomColorService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/RandomColorService.html":{},"coverage.html":{},"overview.html":{}}}],["range",{"_index":983,"title":{},"body":{"injectables/DataService.html":{}}}],["range[0",{"_index":987,"title":{},"body":{"injectables/DataService.html":{}}}],["range[range.length",{"_index":988,"title":{},"body":{"injectables/DataService.html":{}}}],["reactiveformsmodule",{"_index":1405,"title":{},"body":{"modules/SharedModule.html":{}}}],["read",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{}}}],["readable",{"_index":2197,"title":{},"body":{"license.html":{}}}],["readme",{"_index":2013,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":1214,"title":{},"body":{"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reason",{"_index":2303,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":2236,"title":{},"body":{"license.html":{}}}],["received",{"_index":2124,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2181,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":2315,"title":{},"body":{"license.html":{}}}],["redirectto",{"_index":321,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{}}}],["redistributing",{"_index":2254,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":2174,"title":{},"body":{"license.html":{}}}],["reference",{"_index":1202,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/ResourcesComponent.html":{}}}],["references",{"_index":550,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["regarding",{"_index":2229,"title":{},"body":{"license.html":{}}}],["related",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["relatedcriteria",{"_index":1021,"title":{},"body":{"injectables/DataService.html":{}}}],["relatedcriteria.add(criteria.get(id",{"_index":1025,"title":{},"body":{"injectables/DataService.html":{}}}],["reload",{"_index":1986,"title":{},"body":{"index.html":{}}}],["remain",{"_index":2092,"title":{},"body":{"license.html":{}}}],["remarks",{"_index":629,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["renderedfilter",{"_index":1615,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["renderedfilterblock",{"_index":607,"title":{"interfaces/RenderedFilterBlock.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{}}}],["renderer",{"_index":1095,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer'},{'name",{"_index":173,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["renderer.component",{"_index":1412,"title":{},"body":{"modules/SharedModule.html":{}}}],["renderer.component.html",{"_index":1097,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.scss",{"_index":1096,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts",{"_index":1094,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"coverage.html":{}}}],["renderer.component.ts:12",{"_index":1105,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:13",{"_index":1106,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:14",{"_index":1109,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:15",{"_index":1104,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:16",{"_index":1107,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:17",{"_index":1108,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:19",{"_index":1113,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:20",{"_index":1103,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:25",{"_index":1110,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer.component.ts:38",{"_index":1112,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["renderer/framework",{"_index":1093,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["rendering",{"_index":514,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["renderreviewdata",{"_index":437,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["renderreviewdata]=\"renderreviewdata",{"_index":451,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["repeat",{"_index":357,"title":{},"body":{"components/BannerComponent.html":{}}}],["repeat(4",{"_index":1327,"title":{},"body":{"components/OverviewComponent.html":{}}}],["repeat(5",{"_index":1340,"title":{},"body":{"components/OverviewComponent.html":{}}}],["replaced",{"_index":2310,"title":{},"body":{"license.html":{}}}],["represent",{"_index":1205,"title":{},"body":{"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["representation",{"_index":502,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["representations",{"_index":495,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FooterComponent.html":{}}}],["representatives",{"_index":2109,"title":{},"body":{"license.html":{}}}],["representing",{"_index":467,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["reproduce",{"_index":2140,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":2239,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":2023,"title":{},"body":{"license.html":{}}}],["require",{"_index":1936,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":2235,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"index.html":{}}}],["res",{"_index":955,"title":{},"body":{"injectables/DataService.html":{}}}],["res.resource",{"_index":1380,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["res.reviewdate",{"_index":956,"title":{},"body":{"injectables/DataService.html":{}}}],["research",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResourceSection.html":{},"index.html":{}}}],["reserved",{"_index":522,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["reset",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}],["resolve",{"_index":1149,"title":{},"body":{"guards/FrameworkResolver.html":{},"modules/InformationRoutingModule.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["resolve(route",{"_index":1152,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["resolveddata",{"_index":1241,"title":{},"body":{"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["resolver.service",{"_index":1235,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["resolver.service.ts",{"_index":1148,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:10",{"_index":1832,"title":{},"body":{"guards/TechnologyDetailsResolverService.html":{}}}],["resolver.service.ts:11",{"_index":1736,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["resolver.service.ts:13",{"_index":1383,"title":{},"body":{"guards/ResourcesResolver.html":{}}}],["resolver.service.ts:14",{"_index":1156,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["resolver.service.ts:15",{"_index":1737,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["resolver.service.ts:8",{"_index":1382,"title":{},"body":{"guards/ResourcesResolver.html":{}}}],["resolver.service.ts:9",{"_index":1151,"title":{},"body":{"guards/FrameworkResolver.html":{}}}],["resolvers/framework",{"_index":1238,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["resolvers/resources",{"_index":1234,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["resource",{"_index":1201,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{}}}],["resources",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationRoutingModule.html":{},"components/ResourcesComponent.html":{}}}],["resources'},{'name",{"_index":185,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["resources.component.html",{"_index":1368,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources.component.scss",{"_index":1367,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources/resources.component",{"_index":1230,"title":{},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{}}}],["resourcescomponent",{"_index":184,"title":{"components/ResourcesComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcesresolver",{"_index":1233,"title":{"guards/ResourcesResolver.html":{}},"body":{"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"guards/ResourcesResolver.html":{},"coverage.html":{}}}],["respective",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["response",{"_index":561,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["responsibility",{"_index":2295,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":2251,"title":{},"body":{"license.html":{}}}],["result",{"_index":197,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.dossier",{"_index":941,"title":{},"body":{"injectables/DataService.html":{}}}],["result.filter(t",{"_index":1504,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["result.length",{"_index":1463,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["result.push(combination",{"_index":911,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(framework",{"_index":925,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(groupingslookup.get(id",{"_index":1017,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(lookup.get(g.id",{"_index":1030,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(view",{"_index":900,"title":{},"body":{"injectables/DataService.html":{}}}],["result.push(viewslookup.get(id",{"_index":1012,"title":{},"body":{"injectables/DataService.html":{}}}],["result.sort((a",{"_index":1511,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["result.viewcombinations.add(viewcombination",{"_index":928,"title":{},"body":{"injectables/DataService.html":{}}}],["resulting",{"_index":2071,"title":{},"body":{"license.html":{}}}],["results",{"_index":199,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":2191,"title":{},"body":{"license.html":{}}}],["return",{"_index":253,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"modules/CoreModule.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"injectables/RandomColorService.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["returned",{"_index":870,"title":{},"body":{"injectables/DataService.html":{}}}],["returns",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/AppPage.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"injectables/LogoLocatorService.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["reverse",{"_index":1897,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["review",{"_index":494,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["reviewdata",{"_index":438,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["reviewdata]=\"reviewdata",{"_index":452,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["reviewdate",{"_index":545,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["reviewed",{"_index":343,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/OverviewComponent.html":{}}}],["reviewedcriteria",{"_index":570,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["reviewedcriterion",{"_index":1536,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reviewedcriterion.values",{"_index":1539,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reviewedcriterion.values[0].value",{"_index":1540,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["reviewmode",{"_index":653,"title":{},"body":{"components/CriterionComponent.html":{}}}],["reviewvalue",{"_index":1538,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["revisions",{"_index":2087,"title":{},"body":{"license.html":{}}}],["rgba(0",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{}}}],["right",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["rights",{"_index":2291,"title":{},"body":{"license.html":{}}}],["risks",{"_index":2256,"title":{},"body":{"license.html":{}}}],["root",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["root'},{'name",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["route",{"_index":1087,"title":{},"body":{"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["route.params['platformid",{"_index":1833,"title":{},"body":{"guards/TechnologyDetailsResolverService.html":{}}}],["router",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["router.events.subscribe((e",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["routermodule.forchild(inforoutes",{"_index":1242,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["routermodule.forchild(platformroutes",{"_index":1744,"title":{},"body":{"modules/TechnologiesRoutingModule.html":{}}}],["routermodule.forroot",{"_index":329,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1155,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["routes",{"_index":314,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"modules/InformationModule.html":{},"modules/TechnologiesModule.html":{}}}],["routing.module.ts",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/InformationRoutingModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["row",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["row:nth",{"_index":1890,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["royalty",{"_index":2137,"title":{},"body":{"license.html":{}}}],["run",{"_index":1979,"title":{},"body":{"index.html":{}}}],["running",{"_index":2000,"title":{},"body":{"index.html":{}}}],["runtimes",{"_index":531,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["rxjs",{"_index":829,"title":{},"body":{"injectables/DataService.html":{},"guards/FrameworkResolver.html":{},"components/OverviewComponent.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":836,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["s.unsubscribe",{"_index":1673,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["s3",{"_index":1759,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["safety",{"_index":1060,"title":{},"body":{"components/FooterComponent.html":{}}}],["salad",{"_index":1140,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyListComponent.html":{}}}],["same",{"_index":2316,"title":{},"body":{"license.html":{}}}],["scaffolding",{"_index":1989,"title":{},"body":{"index.html":{}}}],["screen",{"_index":137,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["scroll",{"_index":1879,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["scrollleft",{"_index":1605,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["scrollright",{"_index":1607,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["scrolltoanchor",{"_index":398,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["search",{"_index":351,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"index.html":{}}}],["section",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["section.description",{"_index":1379,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["section.title",{"_index":1378,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["section__card",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"components/TechnologyListComponent.html":{}}}],["section__cards",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{}}}],["section_disclaimer",{"_index":1077,"title":{},"body":{"components/FooterComponent.html":{}}}],["sections",{"_index":1204,"title":{},"body":{"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["see",{"_index":2326,"title":{},"body":{"license.html":{}}}],["seed",{"_index":1357,"title":{},"body":{"injectables/RandomColorService.html":{}}}],["selectedgrouping",{"_index":1098,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["selectedstrings",{"_index":736,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["selectedstrings.length",{"_index":740,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["selectedviewcombination",{"_index":1102,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["selection",{"_index":348,"title":{},"body":{"components/BannerComponent.html":{},"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["self",{"_index":687,"title":{},"body":{"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sell",{"_index":2150,"title":{},"body":{"license.html":{}}}],["sent",{"_index":2108,"title":{},"body":{"license.html":{}}}],["separable",{"_index":2093,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2226,"title":{},"body":{"license.html":{}}}],["serve",{"_index":1981,"title":{},"body":{"index.html":{}}}],["server",{"_index":560,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{},"index.html":{}}}],["service",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"index.html":{},"license.html":{}}}],["services/app",{"_index":592,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/data.service",{"_index":587,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/logo",{"_index":588,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/random",{"_index":590,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":475,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["set([...previous",{"_index":979,"title":{},"body":{"injectables/DataService.html":{}}}],["settimeout",{"_index":412,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["settings",{"_index":627,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["settoarray",{"_index":1389,"title":{},"body":{"pipes/SetToArrayPipe.html":{}}}],["settoarraypipe",{"_index":1385,"title":{"pipes/SetToArrayPipe.html":{}},"body":{"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["shadow",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["shall",{"_index":2026,"title":{},"body":{"license.html":{}}}],["shared/bottom",{"_index":1817,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["shared/datasource",{"_index":1566,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["shared/interfaces/classification",{"_index":838,"title":{},"body":{"injectables/DataService.html":{},"components/FrameworkComponent.html":{},"guards/FrameworkResolver.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyTableComponent.html":{}}}],["shared/interfaces/filtering",{"_index":716,"title":{},"body":{"components/CriterionFilterComponent.html":{},"injectables/DataService.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyTableComponent.html":{}}}],["shared/interfaces/info",{"_index":843,"title":{},"body":{"injectables/DataService.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{}}}],["shared/interfaces/responses",{"_index":841,"title":{},"body":{"injectables/DataService.html":{}}}],["shared/interfaces/technology",{"_index":840,"title":{},"body":{"injectables/DataService.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["shared/page",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/shared.module",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"modules/InformationModule.html":{},"modules/TechnologiesModule.html":{}}}],["sharedmodule",{"_index":274,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"modules.html":{},"overview.html":{}}}],["sharereplay",{"_index":833,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["sharereplay(1",{"_index":879,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["shares",{"_index":2059,"title":{},"body":{"license.html":{}}}],["sheet",{"_index":1310,"title":{},"body":{"modules/MaterialModule.html":{}}}],["short",{"_index":1753,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["shortdescription",{"_index":1748,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["shown",{"_index":1750,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["shrink",{"_index":421,"title":{},"body":{"components/BottomNavComponent.html":{},"components/TechnologiesComponent.html":{}}}],["sidenav",{"_index":1571,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sidenav__accordion",{"_index":1709,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["sidenav__filter",{"_index":1708,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["simplechanges",{"_index":1650,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["simpledatasource",{"_index":1415,"title":{"interfaces/SimpleDataSource.html":{}},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{}}}],["simplify",{"_index":1964,"title":{},"body":{"index.html":{}}}],["size",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["skipself",{"_index":581,"title":{},"body":{"modules/CoreModule.html":{}}}],["slider",{"_index":637,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["smooth",{"_index":1883,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["software",{"_index":469,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["sole",{"_index":2294,"title":{},"body":{"license.html":{}}}],["solely",{"_index":2250,"title":{},"body":{"license.html":{}}}],["solid",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sort",{"_index":1428,"title":{"interfaces/Sort.html":{}},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{}}}],["sort.order",{"_index":1510,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["sortby",{"_index":1773,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["sortby(sort",{"_index":1474,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"modules/InformationModule.html":{},"modules/InformationRoutingModule.html":{},"injectables/LogoLocatorService.html":{},"modules/MaterialModule.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RandomColorService.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"modules/SharedModule.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyListComponent.html":{}}}],["spacer",{"_index":381,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologyListComponent.html":{}}}],["span')).gettext",{"_index":309,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":2341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":2269,"title":{},"body":{"license.html":{}}}],["specific",{"_index":542,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["specified",{"_index":641,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"index.html":{}}}],["spinner",{"_index":1271,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../data.service.ts",{"_index":2336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filtering.ts",{"_index":1957,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logo",{"_index":1958,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../random",{"_index":2339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../technology.ts",{"_index":1959,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":2335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core.module.ts",{"_index":579,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/ensure",{"_index":1031,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{},"coverage.html":{}}}],["src/app/core/services/app",{"_index":239,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["src/app/core/services/data.service.ts",{"_index":761,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/data.service.ts:105",{"_index":816,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:138",{"_index":804,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:170",{"_index":798,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:201",{"_index":801,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:209",{"_index":808,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:234",{"_index":811,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:244",{"_index":813,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:267",{"_index":793,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:283",{"_index":796,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:293",{"_index":815,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:333",{"_index":803,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:34",{"_index":784,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:345",{"_index":790,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:367",{"_index":822,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:386",{"_index":818,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:39",{"_index":825,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:405",{"_index":806,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:413",{"_index":786,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:50",{"_index":787,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:58",{"_index":805,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:72",{"_index":820,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/logo",{"_index":1243,"title":{},"body":{"injectables/LogoLocatorService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/services/random",{"_index":1350,"title":{},"body":{"injectables/RandomColorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/home/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/home/about/about.component.ts:8",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/home/banner/banner.component.ts",{"_index":331,"title":{},"body":{"components/BannerComponent.html":{},"coverage.html":{}}}],["src/app/home/banner/banner.component.ts:8",{"_index":335,"title":{},"body":{"components/BannerComponent.html":{}}}],["src/app/home/home.component.ts",{"_index":1193,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:9",{"_index":1197,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/overview/overview.component.ts",{"_index":1315,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/home/overview/overview.component.ts:11",{"_index":1319,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/information/faq/faq.component.ts",{"_index":1039,"title":{},"body":{"components/FaqComponent.html":{},"coverage.html":{}}}],["src/app/information/faq/faq.component.ts:12",{"_index":1044,"title":{},"body":{"components/FaqComponent.html":{}}}],["src/app/information/faq/faq.component.ts:8",{"_index":1043,"title":{},"body":{"components/FaqComponent.html":{}}}],["src/app/information/framework/framework.component.ts",{"_index":1081,"title":{},"body":{"components/FrameworkComponent.html":{},"coverage.html":{}}}],["src/app/information/framework/framework.component.ts:11",{"_index":1086,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["src/app/information/framework/framework.component.ts:16",{"_index":1088,"title":{},"body":{"components/FrameworkComponent.html":{}}}],["src/app/information/information",{"_index":1237,"title":{},"body":{"modules/InformationRoutingModule.html":{}}}],["src/app/information/information.component.ts",{"_index":1211,"title":{},"body":{"components/InformationComponent.html":{},"coverage.html":{}}}],["src/app/information/information.component.ts:10",{"_index":1219,"title":{},"body":{"components/InformationComponent.html":{}}}],["src/app/information/information.component.ts:14",{"_index":1216,"title":{},"body":{"components/InformationComponent.html":{}}}],["src/app/information/information.module.ts",{"_index":1229,"title":{},"body":{"modules/InformationModule.html":{}}}],["src/app/information/resolvers/framework",{"_index":1147,"title":{},"body":{"guards/FrameworkResolver.html":{},"coverage.html":{}}}],["src/app/information/resolvers/resources",{"_index":1381,"title":{},"body":{"guards/ResourcesResolver.html":{},"coverage.html":{}}}],["src/app/information/resources/resources.component.ts",{"_index":1365,"title":{},"body":{"components/ResourcesComponent.html":{},"coverage.html":{}}}],["src/app/information/resources/resources.component.ts:12",{"_index":1374,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/information/resources/resources.component.ts:13",{"_index":1371,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/information/resources/resources.component.ts:18",{"_index":1373,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/information/resources/resources.component.ts:24",{"_index":1372,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/shared/bottom",{"_index":389,"title":{},"body":{"components/BottomNavComponent.html":{},"coverage.html":{}}}],["src/app/shared/child",{"_index":428,"title":{},"body":{"components/ChildGroupingComponent.html":{},"coverage.html":{}}}],["src/app/shared/criterion/criterion.component.ts",{"_index":649,"title":{},"body":{"components/CriterionComponent.html":{},"coverage.html":{}}}],["src/app/shared/criterion/criterion.component.ts:10",{"_index":655,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:11",{"_index":657,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:12",{"_index":656,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:13",{"_index":660,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:14",{"_index":659,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:15",{"_index":662,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:16",{"_index":654,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/criterion/criterion.component.ts:21",{"_index":661,"title":{},"body":{"components/CriterionComponent.html":{}}}],["src/app/shared/datasource.ts",{"_index":1416,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"coverage.html":{}}}],["src/app/shared/datasource.ts:10",{"_index":1420,"title":{},"body":{"interfaces/SimpleDataSource.html":{}}}],["src/app/shared/datasource.ts:101",{"_index":1794,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:12",{"_index":1421,"title":{},"body":{"interfaces/SimpleDataSource.html":{}}}],["src/app/shared/datasource.ts:131",{"_index":1786,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:146",{"_index":1796,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:170",{"_index":1793,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:198",{"_index":1789,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:207",{"_index":1790,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:21",{"_index":1777,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:22",{"_index":1781,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:23",{"_index":1784,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:24",{"_index":1775,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:25",{"_index":1780,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:27",{"_index":1779,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:28",{"_index":1785,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:29",{"_index":1776,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:30",{"_index":1782,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:31",{"_index":1778,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:32",{"_index":1774,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:34",{"_index":1783,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:62",{"_index":1799,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:68",{"_index":1797,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:77",{"_index":1798,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:81",{"_index":1792,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:87",{"_index":1800,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:91",{"_index":1788,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/datasource.ts:98",{"_index":1791,"title":{},"body":{"classes/TechnologyDataSource.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":1046,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:12",{"_index":1051,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:8",{"_index":1050,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/framework",{"_index":1092,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":1162,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:8",{"_index":1166,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/interfaces/classification.ts",{"_index":466,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/filtering.ts",{"_index":603,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/interfaces/filtering.ts:53",{"_index":606,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{}}}],["src/app/shared/interfaces/info.ts",{"_index":1200,"title":{},"body":{"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/responses.ts",{"_index":558,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/responses.ts:53",{"_index":648,"title":{},"body":{"interfaces/CriteriaReview.html":{}}}],["src/app/shared/interfaces/technology.ts",{"_index":1745,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/material.module.ts",{"_index":1260,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/shared/page",{"_index":1342,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/set",{"_index":1387,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1401,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/truncate.pipe.ts",{"_index":1893,"title":{},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["src/app/shared/truncate.pipe.ts:7",{"_index":1899,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["src/app/shared/yes",{"_index":1904,"title":{},"body":{"pipes/YesNoPipe.html":{},"coverage.html":{}}}],["src/app/technologies/criterion",{"_index":693,"title":{},"body":{"components/CriterionFilterComponent.html":{},"coverage.html":{}}}],["src/app/technologies/technologies",{"_index":1735,"title":{},"body":{"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"coverage.html":{}}}],["src/app/technologies/technologies.component.ts",{"_index":1608,"title":{},"body":{"components/TechnologiesComponent.html":{},"coverage.html":{}}}],["src/app/technologies/technologies.component.ts:114",{"_index":1629,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:25",{"_index":1646,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:26",{"_index":1647,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:27",{"_index":1639,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:28",{"_index":1638,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:29",{"_index":1640,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:31",{"_index":1637,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:32",{"_index":1636,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:34",{"_index":1642,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:36",{"_index":1645,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:37",{"_index":1623,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:51",{"_index":1627,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:74",{"_index":1626,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:78",{"_index":1624,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:87",{"_index":1625,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.component.ts:94",{"_index":1635,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["src/app/technologies/technologies.module.ts",{"_index":1725,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["src/app/technologies/technology",{"_index":1556,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1931,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1933,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1934,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":683,"title":{},"body":{"components/CriterionComponent.html":{},"components/TechnologyListComponent.html":{}}}],["started",{"_index":1961,"title":{"index.html":{},"license.html":{}},"body":{}}],["startindex",{"_index":1469,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["state",{"_index":1154,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/ResourcesResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{},"license.html":{}}}],["stated",{"_index":2147,"title":{},"body":{"license.html":{}}}],["statement",{"_index":2215,"title":{},"body":{"license.html":{}}}],["statements",{"_index":1908,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":781,"title":{},"body":{"injectables/DataService.html":{},"injectables/LogoLocatorService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["stating",{"_index":2188,"title":{},"body":{"license.html":{}}}],["sticky",{"_index":418,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["stoppage",{"_index":2277,"title":{},"body":{"license.html":{}}}],["store",{"_index":479,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["stored",{"_index":1994,"title":{},"body":{"index.html":{}}}],["storing",{"_index":1751,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["stretch",{"_index":760,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["string",{"_index":402,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":535,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["style",{"_index":755,"title":{},"body":{"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/OverviewComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["sub",{"_index":515,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["subgroups",{"_index":439,"title":{},"body":{"components/ChildGroupingComponent.html":{}}}],["subject",{"_index":1699,"title":{},"body":{"components/TechnologiesComponent.html":{},"license.html":{}}}],["sublicense",{"_index":2143,"title":{},"body":{"license.html":{}}}],["submission",{"_index":2217,"title":{},"body":{"license.html":{}}}],["submit",{"_index":2102,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":2100,"title":{},"body":{"license.html":{}}}],["subscription",{"_index":1369,"title":{},"body":{"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{}}}],["subscriptions",{"_index":1616,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["subsequently",{"_index":2125,"title":{},"body":{"license.html":{}}}],["such",{"_index":1203,"title":{},"body":{"interfaces/InfoResourceSection.html":{},"license.html":{}}}],["suitability",{"_index":1061,"title":{},"body":{"components/FooterComponent.html":{}}}],["suitable",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["suiting",{"_index":340,"title":{},"body":{"components/BannerComponent.html":{}}}],["super(parentmodule",{"_index":601,"title":{},"body":{"modules/CoreModule.html":{}}}],["supersede",{"_index":2225,"title":{},"body":{"license.html":{}}}],["support",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{},"license.html":{},"modules.html":{}}}],["supported",{"_index":532,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["supportedplatforms",{"_index":1196,"title":{},"body":{"components/HomeComponent.html":{},"components/OverviewComponent.html":{}}}],["supportedplatformspath",{"_index":855,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":1258,"title":{},"body":{"injectables/LogoLocatorService.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["switch",{"_index":492,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["switchmap",{"_index":1424,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["switchmap(([criteriaquery",{"_index":1458,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["syntax",{"_index":2314,"title":{},"body":{"license.html":{}}}],["system",{"_index":1962,"title":{},"body":{"index.html":{}}}],["systems",{"_index":2111,"title":{},"body":{"license.html":{}}}],["t",{"_index":1431,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["t.category.tolocalelowercase",{"_index":945,"title":{},"body":{"injectables/DataService.html":{}}}],["t.dossier.reviewedcriteria.get(key",{"_index":1508,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["t.dossier.reviewedcriteria.has(key",{"_index":1506,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["table",{"_index":194,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["table.component",{"_index":1731,"title":{},"body":{"modules/TechnologiesModule.html":{}}}],["table.component.html",{"_index":1568,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["table.component.scss",{"_index":1569,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["table.component.ts",{"_index":1558,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:10",{"_index":1561,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:11",{"_index":1560,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:20",{"_index":1864,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:21",{"_index":1866,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:22",{"_index":1865,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:23",{"_index":1867,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:25",{"_index":1875,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:27",{"_index":1872,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:28",{"_index":1874,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:29",{"_index":1873,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:31",{"_index":1863,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:37",{"_index":1869,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:61",{"_index":1868,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:8",{"_index":1563,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:87",{"_index":1870,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table.component.ts:9",{"_index":1562,"title":{},"body":{"classes/TableColumn.html":{}}}],["table.component.ts:91",{"_index":1871,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["table/technology",{"_index":1557,"title":{},"body":{"classes/TableColumn.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["tablecolumn",{"_index":1555,"title":{"classes/TableColumn.html":{}},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["tablecontainer",{"_index":1573,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1937,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1222,"title":{},"body":{"components/InformationComponent.html":{}}}],["tabs__links",{"_index":1223,"title":{},"body":{"components/InformationComponent.html":{}}}],["take",{"_index":834,"title":{},"body":{"injectables/DataService.html":{}}}],["target",{"_index":1542,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["target.every(v",{"_index":1544,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["targetmodule",{"_index":1035,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["tech",{"_index":1884,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["tech.platformname",{"_index":1876,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["techcategory",{"_index":799,"title":{},"body":{"injectables/DataService.html":{}}}],["techname",{"_index":1579,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["technameheader",{"_index":1577,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["technologies",{"_index":499,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["technologies'},{'name",{"_index":187,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["technologies.component",{"_index":1726,"title":{},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{}}}],["technologies.component.html",{"_index":1612,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["technologies.component.scss",{"_index":1611,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["technologiescomponent",{"_index":186,"title":{"components/TechnologiesComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["technologiesmodule",{"_index":1720,"title":{"modules/TechnologiesModule.html":{}},"body":{"modules/TechnologiesModule.html":{},"modules.html":{},"overview.html":{}}}],["technologiesresolver",{"_index":1732,"title":{"guards/TechnologiesResolver.html":{}},"body":{"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"coverage.html":{}}}],["technologiesroutingmodule",{"_index":1724,"title":{"modules/TechnologiesRoutingModule.html":{}},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["technology",{"_index":189,"title":{"interfaces/Technology.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"guards/TechnologiesResolver.html":{},"modules/TechnologiesRoutingModule.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["technology__header",{"_index":1828,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["technology__logo",{"_index":1829,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["technology__view",{"_index":1831,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["technologycategory",{"_index":482,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["technologydatasource",{"_index":1434,"title":{"classes/TechnologyDataSource.html":{}},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["technologydatasource(this.technologies",{"_index":1665,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["technologydatasource.canfilter(criteriaquery[key",{"_index":1503,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["technologydatasource.containsany(filtervalue",{"_index":1537,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["technologydetailscomponent",{"_index":188,"title":{"components/TechnologyDetailsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["technologydetailsresolverservice",{"_index":1734,"title":{"guards/TechnologyDetailsResolverService.html":{}},"body":{"modules/TechnologiesModule.html":{},"modules/TechnologiesRoutingModule.html":{},"guards/TechnologyDetailsResolverService.html":{},"coverage.html":{}}}],["technologydossier",{"_index":839,"title":{"interfaces/TechnologyDossier.html":{}},"body":{"injectables/DataService.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{},"coverage.html":{}}}],["technologydossier]{@link",{"_index":1760,"title":{},"body":{"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["technologydossierresponse",{"_index":569,"title":{"interfaces/TechnologyDossierResponse.html":{}},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{},"coverage.html":{}}}],["technologyfilterconfiguration",{"_index":617,"title":{"interfaces/TechnologyFilterConfiguration.html":{}},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"injectables/DataService.html":{},"interfaces/RenderedFilterBlock.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{}}}],["technologyid",{"_index":794,"title":{},"body":{"injectables/DataService.html":{}}}],["technologylistcomponent",{"_index":191,"title":{"components/TechnologyListComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["technologytablecomponent",{"_index":193,"title":{"components/TechnologyTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"modules/TechnologiesModule.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["techs",{"_index":960,"title":{},"body":{"injectables/DataService.html":{}}}],["techs.filter(t",{"_index":944,"title":{},"body":{"injectables/DataService.html":{}}}],["temp",{"_index":1004,"title":{},"body":{"injectables/DataService.html":{}}}],["temp.default",{"_index":1006,"title":{},"body":{"injectables/DataService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["terminate",{"_index":2172,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2021,"title":{},"body":{"license.html":{}}}],["test",{"_index":2003,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2002,"title":{},"body":{"index.html":{}}}],["text",{"_index":372,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/CriteriaBasedQuery.html":{},"components/CriterionComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["text_snippet",{"_index":658,"title":{},"body":{"components/CriterionComponent.html":{}}}],["then(data",{"_index":256,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["theory",{"_index":2260,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":2096,"title":{},"body":{"license.html":{}}}],["third",{"_index":2202,"title":{},"body":{"license.html":{}}}],["this.appconfig",{"_index":257,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.appconfig?.defaulttechcategory",{"_index":259,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.bottomnav.totop",{"_index":1822,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["this.browsingmode",{"_index":1661,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.buildgroupings(groupings",{"_index":887,"title":{},"body":{"injectables/DataService.html":{}}}],["this.checkrouterevent(e",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["this.columnstodisplay.push(c.id",{"_index":1597,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.config.defaulttechcategory",{"_index":1160,"title":{},"body":{"guards/FrameworkResolver.html":{},"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["this.criteriabasedquery",{"_index":1451,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.criteriabasedquery.getvalue",{"_index":1482,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.criteriabasedquery.next(nextquery",{"_index":1488,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.criteriacolumns.push",{"_index":1596,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.criterion.name",{"_index":665,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.criterioninstance",{"_index":666,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.currentindex",{"_index":1494,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.data",{"_index":1448,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.dataservice.getframeworkforcategory(defaultcategory",{"_index":1161,"title":{},"body":{"guards/FrameworkResolver.html":{}}}],["this.dataservice.getframeworkfortechnologytype(category",{"_index":1740,"title":{},"body":{"guards/TechnologiesResolver.html":{},"guards/TechnologyDetailsResolverService.html":{}}}],["this.dataservice.getinforesources",{"_index":1384,"title":{},"body":{"guards/ResourcesResolver.html":{}}}],["this.dataservice.gettechnologies",{"_index":1198,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.dataservice.gettechnologiesofcategory(category",{"_index":1739,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["this.dataservice.gettechnology(id",{"_index":1834,"title":{},"body":{"guards/TechnologyDetailsResolverService.html":{}}}],["this.dataservice.gettechnologyfilter(category",{"_index":1741,"title":{},"body":{"guards/TechnologiesResolver.html":{}}}],["this.datasource",{"_index":1664,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.datasource.fetch({pageindex",{"_index":1848,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.datasource.pagesize",{"_index":1851,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.datasource.querybycriteria($event",{"_index":1693,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.datasource.querybyname(name",{"_index":1847,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.datasource.totalinputsize",{"_index":1850,"title":{},"body":{"components/TechnologyListComponent.html":{}}}],["this.extractgroupings",{"_index":1670,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.extratitletext",{"_index":663,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.fb.array",{"_index":726,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.fb.control(null",{"_index":724,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.fb.control(this.filter.filtertype",{"_index":730,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.fb.group",{"_index":729,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filter.filtertype",{"_index":719,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filter.filtervalues",{"_index":735,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filter.filtervalues.foreach(v",{"_index":727,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterconfiguration",{"_index":1668,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.filtereddata",{"_index":1455,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.filterelement",{"_index":723,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.get('filtertype').setvalue(this.filtertype.containsone",{"_index":751,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.markaspristine",{"_index":741,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.reset",{"_index":747,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.value.checkboxes[i",{"_index":738,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.value.filtertype",{"_index":739,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filterelement.valuechanges.subscribe(value",{"_index":731,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.bool",{"_index":720,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.containsall",{"_index":748,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.containsany",{"_index":721,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.containsone",{"_index":749,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.excludesall",{"_index":750,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.filtertype.lte",{"_index":722,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.framework",{"_index":1090,"title":{},"body":{"components/FrameworkComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["this.framework.viewcombinations",{"_index":1115,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{}}}],["this.framework.viewcombinations.foreach(vc",{"_index":1819,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["this.framework.viewcombinations.foreach(viewcomb",{"_index":1580,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.generatefilterstructure",{"_index":1671,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.generategroupingcolumns(g",{"_index":1604,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.generategroupingcolumns(grouping",{"_index":1585,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.getcriteria",{"_index":880,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdefaultviewcombinationdata(frameworkid).pipe",{"_index":991,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdossier(id",{"_index":946,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdossier(item.id).pipe(take(1)).subscribe",{"_index":939,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdossier(t.id",{"_index":962,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdossiersofcategory(category",{"_index":967,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getfilteringresult(criteriaquery[key",{"_index":1507,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.getframeworks().pipe",{"_index":929,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getgroupings",{"_index":888,"title":{},"body":{"injectables/DataService.html":{}}}],["this.gettechnologies(withdossier).pipe",{"_index":942,"title":{},"body":{"injectables/DataService.html":{}}}],["this.gettechnologiesofcategory(category).pipe",{"_index":958,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getviewcombinations",{"_index":912,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getviewgroupingsdata(v.id",{"_index":995,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getviews",{"_index":901,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getviewsdata(vc.id",{"_index":993,"title":{},"body":{"injectables/DataService.html":{}}}],["this.groupingcolumnids.push(grouping.id",{"_index":1601,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.groupingcolumns.push(...groupingcolumns",{"_index":1587,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.groupings.foreach(g",{"_index":1679,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.groupings.push(...array.from(v.groupings",{"_index":1675,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.http.get('/assets/config.json",{"_index":254,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.http.get(criteriagroupingspath",{"_index":881,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(criteriapath",{"_index":876,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(dossierpath",{"_index":954,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(filterconfigurationspath).pipe",{"_index":963,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(frameworkspath",{"_index":913,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(frameworkviewcombinationspath",{"_index":902,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(frameworkviewspath",{"_index":889,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(inforesourcespath",{"_index":1018,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(supportedplatformspath",{"_index":934,"title":{},"body":{"injectables/DataService.html":{}}}],["this.ispaginated",{"_index":1497,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.loading",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["this.logolocator.getlogopath(item.logolocator",{"_index":938,"title":{},"body":{"injectables/DataService.html":{}}}],["this.logolocator.getlogopath(technology.logolocator",{"_index":951,"title":{},"body":{"injectables/DataService.html":{}}}],["this.mobilequery",{"_index":1652,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.mobilequery.addeventlistener('change",{"_index":1655,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.namebasedquery",{"_index":1453,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.namebasedquery.next(query",{"_index":1490,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagenumber$]).pipe",{"_index":1467,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagenumber.asobservable",{"_index":1441,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagenumber.next(event.pageindex",{"_index":1493,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.pagesize",{"_index":1470,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.paginateddata",{"_index":1465,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.platform",{"_index":1818,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["this.populaterenderblocks(g",{"_index":1680,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.processdata(this.data",{"_index":1460,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.prunequery(nextquery",{"_index":1486,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.renderedfilter",{"_index":1681,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.resources",{"_index":1376,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.route.data.subscribe(data",{"_index":1089,"title":{},"body":{"components/FrameworkComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":1658,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.selectedgrouping.get(viewid)?.id",{"_index":1121,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.selectedgrouping.set(viewid",{"_index":1123,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.selectedviewcombination",{"_index":1114,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["this.selectedviewcombination.views.foreach(v",{"_index":1119,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.sort",{"_index":1449,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.sort.getvalue",{"_index":1477,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.sort.next(nextsort",{"_index":1479,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.sort]).pipe",{"_index":1457,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.subscription",{"_index":1375,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":1377,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.subscriptions.foreach(s",{"_index":1672,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.subscriptions.push",{"_index":1657,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.tablecontainer.nativeelement.scrollleft",{"_index":1606,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["this.technologies",{"_index":1662,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["this.title",{"_index":664,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.totalinputsize",{"_index":1462,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["this.updatequery.emit(obj",{"_index":742,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["this.values",{"_index":667,"title":{},"body":{"components/CriterionComponent.html":{}}}],["this.viewportscroller.scrolltoanchor(grouping.id",{"_index":1125,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["this.viewportscroller.scrolltoanchor(platformid",{"_index":413,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["this.viewtoggles.set(v.id",{"_index":1120,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["those",{"_index":2153,"title":{},"body":{"license.html":{}}}],["through",{"_index":1700,"title":{},"body":{"components/TechnologiesComponent.html":{},"license.html":{}}}],["throw",{"_index":1036,"title":{},"body":{"classes/EnsureModuleLoadedOnceGuard.html":{}}}],["throwerror",{"_index":828,"title":{},"body":{"injectables/DataService.html":{}}}],["throwerror(errormessage",{"_index":875,"title":{},"body":{"injectables/DataService.html":{}}}],["title",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{},"components/CriterionComponent.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/PageNotFoundComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"license.html":{}}}],["titlepage",{"_index":1349,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["toarray",{"_index":835,"title":{},"body":{"injectables/DataService.html":{}}}],["toggle",{"_index":633,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"components/FrameworkRendererComponent.html":{},"modules/MaterialModule.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["togglepagination",{"_index":1496,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["top",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/HeaderComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["topromise",{"_index":255,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["tort",{"_index":2261,"title":{},"body":{"license.html":{}}}],["totalinputsize",{"_index":1439,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["totop",{"_index":395,"title":{},"body":{"components/BottomNavComponent.html":{}}}],["tracking",{"_index":2113,"title":{},"body":{"license.html":{}}}],["trade",{"_index":2232,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":2192,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2230,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":2151,"title":{},"body":{"license.html":{}}}],["transform",{"_index":1390,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["transform(value",{"_index":1391,"title":{},"body":{"pipes/SetToArrayPipe.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{}}}],["transformation",{"_index":2073,"title":{},"body":{"license.html":{}}}],["transition",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{}}}],["translates",{"_index":632,"title":{},"body":{"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["translation",{"_index":2074,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["true",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"modules/CoreModule.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"components/FrameworkRendererComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"guards/TechnologiesResolver.html":{},"classes/TechnologyDataSource.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":533,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{}}}],["truncate",{"_index":1894,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["truncate.pipe",{"_index":1403,"title":{},"body":{"modules/SharedModule.html":{}}}],["truncatepipe",{"_index":1399,"title":{"pipes/TruncatePipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["tslib",{"_index":1951,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"classes/EnsureModuleLoadedOnceGuard.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"guards/FrameworkResolver.html":{},"components/HomeComponent.html":{},"interfaces/InfoResource.html":{},"interfaces/InfoResourceSection.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"components/OverviewComponent.html":{},"interfaces/RenderedFilterBlock.html":{},"components/ResourcesComponent.html":{},"guards/ResourcesResolver.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"guards/TechnologiesResolver.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"guards/TechnologyDetailsResolverService.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyDossierResponse.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":746,"title":{},"body":{"components/CriterionFilterComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{},"pipes/YesNoPipe.html":{}}}],["types",{"_index":2077,"title":{},"body":{"license.html":{}}}],["typographical",{"_index":1065,"title":{},"body":{"components/FooterComponent.html":{}}}],["ui",{"_index":513,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["undefined",{"_index":1124,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{}}}],["under",{"_index":2042,"title":{},"body":{"license.html":{}}}],["union",{"_index":2037,"title":{},"body":{"license.html":{}}}],["unique",{"_index":480,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["unit",{"_index":2001,"title":{},"body":{"index.html":{}}}],["unless",{"_index":2219,"title":{},"body":{"license.html":{}}}],["updatequery",{"_index":702,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["url(\"../../../assets/images/logo",{"_index":1179,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url(../../../assets/images/bg",{"_index":355,"title":{},"body":{"components/BannerComponent.html":{}}}],["use",{"_index":524,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":490,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/Technology.html":{},"interfaces/TechnologyDossier.html":{}}}],["usefactory",{"_index":596,"title":{},"body":{"modules/CoreModule.html":{}}}],["user",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["using",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{},"license.html":{}}}],["v",{"_index":1009,"title":{},"body":{"injectables/DataService.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["v.description",{"_index":896,"title":{},"body":{"injectables/DataService.html":{}}}],["v.groupingids.foreach(id",{"_index":897,"title":{},"body":{"injectables/DataService.html":{}}}],["v.id",{"_index":894,"title":{},"body":{"injectables/DataService.html":{}}}],["v.length",{"_index":1520,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["v.name",{"_index":895,"title":{},"body":{"injectables/DataService.html":{}}}],["v.png",{"_index":1189,"title":{},"body":{"components/HeaderComponent.html":{}}}],["v.value",{"_index":679,"title":{},"body":{"components/CriterionComponent.html":{}}}],["value",{"_index":408,"title":{},"body":{"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"injectables/LogoLocatorService.html":{},"interfaces/RenderedFilterBlock.html":{},"pipes/SetToArrayPipe.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"components/TechnologiesComponent.html":{},"interfaces/Technology.html":{},"classes/TechnologyDataSource.html":{},"interfaces/TechnologyDossier.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/TruncatePipe.html":{},"pipes/YesNoPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.every(item",{"_index":745,"title":{},"body":{"components/CriterionFilterComponent.html":{}}}],["value.length",{"_index":1902,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value.substr(0",{"_index":1900,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value.substr(limit",{"_index":1903,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["valueindex",{"_index":678,"title":{},"body":{"components/CriterionComponent.html":{}}}],["values",{"_index":477,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"components/TechnologiesComponent.html":{},"interfaces/TechnologyFilterConfiguration.html":{}}}],["values[0].value",{"_index":675,"title":{},"body":{"components/CriterionComponent.html":{}}}],["valuetocheck",{"_index":1530,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["valuetocheck.length",{"_index":1531,"title":{},"body":{"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TechnologyDataSource.html":{}}}],["var",{"_index":148,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/ChildGroupingComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["variable",{"_index":1914,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2334,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vc",{"_index":1001,"title":{},"body":{"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["vc.default",{"_index":1116,"title":{},"body":{"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["vc.id",{"_index":1000,"title":{},"body":{"injectables/DataService.html":{}}}],["vc.viewids.foreach(id",{"_index":1011,"title":{},"body":{"injectables/DataService.html":{}}}],["vc.views.foreach(v",{"_index":1674,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["vclookup",{"_index":998,"title":{},"body":{"injectables/DataService.html":{}}}],["vclookup.get(id",{"_index":1005,"title":{},"body":{"injectables/DataService.html":{}}}],["verbal",{"_index":2105,"title":{},"body":{"license.html":{}}}],["version",{"_index":2016,"title":{},"body":{"license.html":{}}}],["vertical",{"_index":1336,"title":{},"body":{"components/OverviewComponent.html":{}}}],["via",{"_index":2005,"title":{},"body":{"index.html":{}}}],["view",{"_index":507,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["view.description",{"_index":1130,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["view.groupingids.foreach(id",{"_index":1016,"title":{},"body":{"injectables/DataService.html":{}}}],["view.groupings.add(groupingslookup.get(id",{"_index":899,"title":{},"body":{"injectables/DataService.html":{}}}],["view.name",{"_index":1128,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["view_list",{"_index":352,"title":{},"body":{"components/BannerComponent.html":{},"components/TechnologyDetailsComponent.html":{}}}],["viewchild",{"_index":1565,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["viewchild('bottomnavcomponent",{"_index":1812,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["viewchild('content",{"_index":1572,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewchild('sidenav",{"_index":1644,"title":{},"body":{"components/TechnologiesComponent.html":{}}}],["viewcolspan",{"_index":1588,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewcomb.default",{"_index":1581,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewcomb.views.foreach(view",{"_index":1582,"title":{},"body":{"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["viewcombination",{"_index":922,"title":{},"body":{"injectables/DataService.html":{}}}],["viewcombinationid",{"_index":823,"title":{},"body":{"injectables/DataService.html":{}}}],["viewcombinationids",{"_index":559,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["viewcombinations",{"_index":504,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{}}}],["viewcombinations.foreach(c",{"_index":904,"title":{},"body":{"injectables/DataService.html":{}}}],["viewid",{"_index":819,"title":{},"body":{"injectables/DataService.html":{},"components/FrameworkRendererComponent.html":{}}}],["viewids",{"_index":563,"title":{},"body":{"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["viewportscroller",{"_index":400,"title":{},"body":{"components/BottomNavComponent.html":{},"components/FrameworkRendererComponent.html":{}}}],["views",{"_index":489,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationFrameworkResponse.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/ClassificationViewCombinationResponse.html":{},"interfaces/ClassificationViewResponse.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriteriaGroupingResponse.html":{},"interfaces/CriteriaReview.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"injectables/DataService.html":{},"interfaces/TechnologyDossierResponse.html":{}}}],["views.find(v",{"_index":909,"title":{},"body":{"injectables/DataService.html":{}}}],["views.foreach(v",{"_index":893,"title":{},"body":{"injectables/DataService.html":{}}}],["viewslookup",{"_index":1007,"title":{},"body":{"injectables/DataService.html":{}}}],["viewtoggles",{"_index":1099,"title":{},"body":{"components/FrameworkRendererComponent.html":{}}}],["violet",{"_index":458,"title":{},"body":{"components/ChildGroupingComponent.html":{},"components/FooterComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["viruses",{"_index":1063,"title":{},"body":{"components/FooterComponent.html":{}}}],["visualize",{"_index":1977,"title":{},"body":{"index.html":{}}}],["void",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/CriterionFilterComponent.html":{},"components/FaqComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/SimpleDataSource.html":{},"interfaces/Sort.html":{},"classes/TableColumn.html":{},"components/TechnologiesComponent.html":{},"classes/TechnologyDataSource.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["warranties",{"_index":1057,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["warranty",{"_index":2241,"title":{},"body":{"license.html":{}}}],["way",{"_index":344,"title":{},"body":{"components/BannerComponent.html":{}}}],["webkit",{"_index":358,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/OverviewComponent.html":{}}}],["weight",{"_index":367,"title":{},"body":{"components/BannerComponent.html":{}}}],["wherever",{"_index":2201,"title":{},"body":{"license.html":{}}}],["whether",{"_index":511,"title":{},"body":{"interfaces/ClassificationCriterion.html":{},"interfaces/ClassificationFramework.html":{},"interfaces/ClassificationView.html":{},"interfaces/ClassificationViewCombination.html":{},"interfaces/CriteriaBasedQuery.html":{},"interfaces/CriteriaGrouping.html":{},"interfaces/CriterionFilterConfiguration.html":{},"interfaces/CriterionFilterValue.html":{},"interfaces/CriterionInstance.html":{},"interfaces/CriterionValue.html":{},"interfaces/RenderedFilterBlock.html":{},"interfaces/TechnologyFilterConfiguration.html":{},"license.html":{}}}],["white",{"_index":422,"title":{},"body":{"components/BottomNavComponent.html":{},"components/InformationComponent.html":{},"classes/TableColumn.html":{},"components/TechnologyTableComponent.html":{}}}],["whole",{"_index":2090,"title":{},"body":{"license.html":{}}}],["width",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/CriterionComponent.html":{},"components/FooterComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/HeaderComponent.html":{},"components/InformationComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyDetailsComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["window.pageyoffset",{"_index":1823,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["window:scroll",{"_index":1806,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["window:scroll(e",{"_index":1809,"title":{},"body":{"components/TechnologyDetailsComponent.html":{}}}],["withdossier",{"_index":809,"title":{},"body":{"injectables/DataService.html":{}}}],["within",{"_index":2127,"title":{},"body":{"license.html":{}}}],["without",{"_index":2177,"title":{},"body":{"license.html":{}}}],["word",{"_index":1889,"title":{},"body":{"components/TechnologyTableComponent.html":{}}}],["work",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["works",{"_index":1045,"title":{},"body":{"components/FaqComponent.html":{},"license.html":{}}}],["worldwide",{"_index":2133,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/BannerComponent.html":{},"components/ChildGroupingComponent.html":{},"components/FrameworkRendererComponent.html":{},"components/OverviewComponent.html":{},"components/TechnologyListComponent.html":{},"components/TechnologyTableComponent.html":{}}}],["writing",{"_index":2122,"title":{},"body":{"license.html":{}}}],["written",{"_index":2106,"title":{},"body":{"license.html":{}}}],["yes",{"_index":1362,"title":{},"body":{"injectables/RandomColorService.html":{},"modules/SharedModule.html":{},"components/TechnologiesComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/YesNoPipe.html":{}}}],["yesno",{"_index":676,"title":{},"body":{"components/CriterionComponent.html":{},"components/TechnologyTableComponent.html":{},"pipes/YesNoPipe.html":{}}}],["yesnopipe",{"_index":1400,"title":{"pipes/YesNoPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/YesNoPipe.html":{},"coverage.html":{},"overview.html":{}}}],["yyyy",{"_index":2321,"title":{},"body":{"license.html":{}}}],["z",{"_index":364,"title":{},"body":{"components/BannerComponent.html":{},"components/BottomNavComponent.html":{},"components/HeaderComponent.html":{}}}],["zone.js",{"_index":1953,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/InformationModule.html":{},"modules/SharedModule.html":{},"modules/TechnologiesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/about/about.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/about/about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-home-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent {\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  About\n  \n    FaaStener is a research prototype which aims to provide support in choosing suitable Function-as-a-Service\n    platforms based on the user-provided requirements.\n    The classification framework behind FaaStener is derived by combining existing academic work and documentation\n    of available Function-as-a-Service platforms.\n    You can find more information about the classification framework, FaaStener, and FaaS cloud service model with\n    additional resources by navigating using the respective buttons below.\n  \n\n\n  \n    \n      menu_book\n       Framework\n       Learn about the classification framework and available\n        criteria.\n      READ MORE\n    \n\n    \n      cloud_done\n      Docs\n       Information on how to work with FaaStener and its features. \n      READ MORE\n    \n\n    \n      library_books\n      Resources\n       Additional resources related to Function-as-a-Service platforms. \n      READ MORE\n    \n\n    \n      question_answer\n      Q&A\n      Answers to some possible questions.\n      READ MORE\n    -->\n  \n\n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n}\n\n.about-section {\n  width: 95%;\n  margin-bottom: .5rem;\n}\n\n.about-section__cards {\n  display: flex;\n  flex-flow: wrap;\n  justify-content: space-evenly;\n}\n\n.about-section__card {\n  margin: .5rem;\n  border-top: .2rem solid #212121;\n  transition: all .3s ease;\n  flex-basis: 18%;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n\n  &:hover {\n    border-top: .2rem solid #b5ca8f;\n    box-shadow: 0 10px 16px rgba(0, 0, 0, 0.2) !important;\n\n    .about-section__card-icon {\n      color: #b5ca8f;\n    }\n  }\n}\n\n.about-section__card-icon {\n  font-size: 3rem !important;\n  transition: all .3s ease;\n  margin-right: 1rem;\n}\n\n.about-section__card-title {\n  padding-top: 1rem;\n  font-size: 1rem;\n}\n\n.about-section__card-description {\n  flex: 1;\n  font-size: .8rem;\n}\n\n@media screen and (min-width: 550px) {\n  .about-section__card-title {\n    font-size: 1.1rem;\n  }\n\n  .about-section__card-description {\n    flex: 1;\n    font-size: .9rem;\n  }\n}\n\n\n@media (min-width: 790px) {\n  .about-section__card-title {\n    font-size: 1.2rem;\n  }\n\n  .about-section__card-description {\n    flex: 1;\n    font-size: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  About      FaaStener is a research prototype which aims to provide support in choosing suitable Function-as-a-Service    platforms based on the user-provided requirements.    The classification framework behind FaaStener is derived by combining existing academic work and documentation    of available Function-as-a-Service platforms.    You can find more information about the classification framework, FaaStener, and FaaS cloud service model with    additional resources by navigating using the respective buttons below.              menu_book       Framework       Learn about the classification framework and available        criteria.      READ MORE              cloud_done      Docs       Information on how to work with FaaStener and its features.       READ MORE              library_books      Resources       Additional resources related to Function-as-a-Service platforms.       READ MORE              question_answer      Q&A      Answers to some possible questions.      READ MORE    -->  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                template\n                \n  \n    \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkRouterEvent\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkRouterEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRouterEvent(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    \n      \n        \n      \n      \n    \n  `\n})\nexport class AppComponent implements OnInit {\n  loading: boolean;\n\n  constructor(private router: Router) {\n    router.events.subscribe((e) => this.checkRouterEvent(e));\n  }\n\n  ngOnInit(): void {\n  }\n\n  private checkRouterEvent(e): void {\n    if (e instanceof NavigationStart) {\n      this.loading = true;\n    }\n\n    if (e instanceof NavigationCancel || e instanceof NavigationEnd || e instanceof NavigationError) {\n      this.loading = false;\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/app-config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                appConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadAppConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    defaultTechCategory\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/app-config.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAppConfig\n                        \n                        \n                    \n                \n            \n            \n                \nloadAppConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/app-config.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            appConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/app-config.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        defaultTechCategory\n                    \n                \n\n                \n                    \n                        getdefaultTechCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/app-config.service.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class AppConfigService {\n  private appConfig: any;\n\n  constructor(private http: HttpClient) {\n  }\n\n  loadAppConfig() {\n    return this.http.get('/assets/config.json')\n      .toPromise()\n      .then(data => {\n        this.appConfig = data;\n      });\n  }\n\n  get defaultTechCategory() {\n    return this.appConfig?.defaultTechCategory;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBannerComponent\n\nBannerComponent\n\nAppModule -->\n\nBannerComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nAppModule -->\n\nOverviewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            BannerComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            OverviewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {AppRoutingModule} from './app-routing.module';\nimport {CoreModule} from './core/core.module';\nimport {SharedModule} from './shared/shared.module';\nimport {HomeComponent} from './home/home.component';\nimport {AboutComponent} from './home/about/about.component';\nimport {BannerComponent} from './home/banner/banner.component';\nimport {OverviewComponent} from './home/overview/overview.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    CoreModule,\n    SharedModule,\n    AppRoutingModule\n  ],\n  declarations: [AppComponent, HomeComponent, AboutComponent, BannerComponent, OverviewComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\nimport {PageNotFoundComponent} from './shared/page-not-found/page-not-found.component';\nimport {HomeComponent} from './home/home.component';\n\nconst appRoutes: Routes = [\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\n  {path: 'home', component: HomeComponent},\n  {path: 'info', loadChildren: () => \"import(`src/app/information/information.module`).then(m => m.InformationModule)\"},\n  {path: 'platforms', loadChildren: () => \"import(`src/app/technologies/technologies.module`).then(m => m.TechnologiesModule)\"},\n  {path: '**', component: PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      {\n        preloadingStrategy: PreloadAllModules\n      }\n    )\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BannerComponent.html":{"url":"components/BannerComponent.html","title":"component - BannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/banner/banner.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-banner\n            \n\n            \n                styleUrls\n                ./banner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./banner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/banner/banner.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-home-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent {\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n  \n    Choose your Function-as-a-Service Platform\n  \n  \n    Explore available Function-as-a-Service platforms and find one suiting your requirements.\n  \n\n\n  \n    \n      check_circle\n       10 reviewed platforms, more on the way \n    \n    \n      check_circle\n       High- and low-level platform selection criteria\n    \n    \n      check_circle\n       Open source and extensible \n    \n  \n\n  \n    \n      search\n      Find a Platform\n    \n    \n    \n      view_list\n      Browse Platforms\n    \n  \n\n\n    \n\n    \n                \n                    ./banner.component.scss\n                \n                @import \"../../_scss/shared\";\n\n.banner {\n  background: url(../../../assets/images/bg-pattern.png) repeat;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: auto;\n  color: #ffffff;\n  z-index: -10;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n}\n\n.banner__heading {\n  margin: 1rem auto 0;\n  padding: 0 1rem;\n  font-size: 1.5rem !important;\n  font-weight: 900;\n  line-height: 1.7rem;\n  text-shadow: 0 4px 4px rgba(0, 0, 0, 0.22);\n}\n\n.banner__description {\n  margin: .8rem auto 0;\n  padding: 0 1rem;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5rem;\n}\n\n.banner__summary {\n  margin: 2rem 0;\n  display: flex;\n  flex-flow: column wrap;\n  align-content: center;\n}\n\n.banner__summary-item {\n  margin-bottom: .5rem;\n  display: flex;\n  align-content: center;\n}\n\n.banner__summary-item-text {\n  padding: .2rem 0 0 .5rem;\n  font-size: .9rem;\n}\n\n.banner__quick-links {\n  margin: 1rem 0;\n  display: flex;\n  justify-content: center;\n}\n\n.banner__quick-links-spacer {\n  margin: 0 .5rem;\n}\n\n.banner-description-list {\n  margin: 0 auto 40px;\n  font-size: 18px;\n}\n\n\n@media (min-width: 790px) {\n  .banner__heading {\n    font-size: 1.8rem !important;\n  }\n\n  .banner__description {\n    font-size: 1.3rem;\n  }\n\n  .banner__summary-item-text {\n    font-size: 1rem;\n  }\n\n}\n\n@media (min-width: 1100px) {\n  .banner__heading {\n    font-size: 2rem !important;\n    margin-top: 3rem;\n  }\n\n  .banner__quick-links {\n    margin: 1rem 0 3rem 0;\n  }\n\n  .banner__summary {\n    margin: 2.5rem 0;\n  }\n\n  .banner__summary-item {\n    margin: 0 2rem .5rem 0;\n    display: flex;\n    align-content: center;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Choose your Function-as-a-Service Platform        Explore available Function-as-a-Service platforms and find one suiting your requirements.              check_circle       10 reviewed platforms, more on the way               check_circle       High- and low-level platform selection criteria              check_circle       Open source and extensible                   search      Find a Platform                  view_list      Browse Platforms      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BottomNavComponent.html":{"url":"components/BottomNavComponent.html","title":"component - BottomNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BottomNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/bottom-nav/bottom-nav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-bottom-nav\n            \n\n            \n                styleUrls\n                ./bottom-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./bottom-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toTop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onScrollToTop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scrollToAnchor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewportScroller: ViewportScroller)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewportScroller\n                                                  \n                                                        \n                                                                        ViewportScroller\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scrollToAnchor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onScrollToTop\n                        \n                        \n                    \n                \n            \n            \n                \nonScrollToTop(platformId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    platformId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toTop\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/bottom-nav/bottom-nav.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ViewportScroller} from '@angular/common';\n\n@Component({\n  selector: 'app-bottom-nav',\n  templateUrl: './bottom-nav.component.html',\n  styleUrls: ['./bottom-nav.component.scss']\n})\nexport class BottomNavComponent implements OnInit {\n  toTop = false;\n  @Input() scrollToAnchor: string;\n\n  constructor(private viewportScroller: ViewportScroller) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onScrollToTop(platformId: string) {\n    setTimeout(() => {\n      this.viewportScroller.scrollToAnchor(platformId);\n    }, 50);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    arrow_upward\n    To Top\n  \n\n\n    \n\n    \n                \n                    ./bottom-nav.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  position: sticky;\n  position: -webkit-sticky;\n  bottom: 0;\n  z-index: 20;\n}\n\n.bottom-navbar {\n  flex-shrink: 0;\n  padding: 0;\n  height: 3rem !important;\n  background: white;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-evenly;\n  box-shadow: 0 0 1px rgba(0, 0, 0, .3);\n}\n\n@media screen and (min-width: 510px) {\n  .bottom-navbar {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        arrow_upward    To Top  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BottomNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChildGroupingComponent.html":{"url":"components/ChildGroupingComponent.html","title":"component - ChildGroupingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChildGroupingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/child-grouping/child-grouping.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-child-grouping\n            \n\n            \n                styleUrls\n                ./child-grouping.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./child-grouping.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraCriterionTitle\n                            \n                            \n                                groupings\n                            \n                            \n                                parent\n                            \n                            \n                                renderReviewData\n                            \n                            \n                                reviewData\n                            \n                            \n                                subGroups\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/child-grouping/child-grouping.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraCriterionTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupings\n                    \n                \n                \n                    \n                        Type :         CriteriaGrouping[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parent\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        renderReviewData\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewData\n                    \n                \n                \n                    \n                        Type :         Map\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subGroups\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/child-grouping/child-grouping.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {CriteriaGrouping, CriterionInstance} from '../interfaces/classification';\n\n@Component({\n  selector: 'app-child-grouping',\n  templateUrl: './child-grouping.component.html',\n  styleUrls: ['./child-grouping.component.scss']\n})\nexport class ChildGroupingComponent {\n  @Input() groupings: CriteriaGrouping[];\n  @Input() subGroups: boolean = false;\n  @Input() parent: string = '';\n  @Input() extraCriterionTitle: string;\n  @Input() renderReviewData = false;\n  @Input() reviewData: Map;\n\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Grouping: {{g.name}}\n      {{parent + ' > ' + g.name}}\n    \n\n\n    \n      \n        \n        \n      \n\n      \n        \n        \n      \n    \n\n\n     ' + g.name\"\n                        [renderReviewData]=\"renderReviewData\"\n                        [reviewData]=\"reviewData\">\n    \n  \n\n\n\n    \n\n    \n                \n                    ./child-grouping.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  @include bg-grey;\n  margin: 0 .2rem;\n}\n\n.child-grouping {\n  margin: 0;\n  height: 100%;\n}\n\n.child-grouping__title {\n  padding: 1rem 1rem .5rem 1rem;\n  font-size: 1.1rem;\n  color: $violet-600;\n}\n\n.child-grouping__path {\n  padding: 0 1rem 1rem 1rem;\n}\n\n.child-grouping__criterion {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-items: center;\n  margin: .5rem;\n}\n\n.child-grouping__criterion--nested {\n  @include bg-grey;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Grouping: {{g.name}}      {{parent + \\' > \\' + g.name}}                                                                         \\' + g.name\"                        [renderReviewData]=\"renderReviewData\"                        [reviewData]=\"reviewData\">      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChildGroupingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationCriterion.html":{"url":"interfaces/ClassificationCriterion.html","title":"interface - ClassificationCriterion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationCriterion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a classification criterion for a to-be-classified software.\nGroupings can also contain other groupings, forming a hierarchy for criteria.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        exampleValues\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Criterion description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exampleValues\n                                    \n                                \n                                \n                                    \n                                        exampleValues:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Example values which an instance of this criterion CriterionInstance can store.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique criterion identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Criterion name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationFramework.html":{"url":"interfaces/ClassificationFramework.html","title":"interface - ClassificationFramework","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationFramework\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a generic classification framework, which comprises one or more ClassificationViewCombination.\nDifferent combinations of classification views can be used to flexibly switch between different review representations for a given TechnologyCategory.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        technologyCategory\n                                \n                                \n                                        viewCombinations\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Framework description (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique framework identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Framework name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category of technologies this framework helps to review.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewCombinations\n                                    \n                                \n                                \n                                    \n                                        viewCombinations:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of ClassificationViewCombination which organize the representation of views comprising different criteria groupings.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationFrameworkResponse.html":{"url":"interfaces/ClassificationFrameworkResponse.html","title":"interface - ClassificationFrameworkResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationFrameworkResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        technologyCategory\n                                \n                                \n                                        viewCombinationIds\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewCombinationIds\n                                    \n                                \n                                \n                                    \n                                        viewCombinationIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationView.html":{"url":"interfaces/ClassificationView.html","title":"interface - ClassificationView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a classification view which comprises one or more CriteriaGrouping.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        groupings\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupings\n                                    \n                                \n                                \n                                    \n                                        groupings:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of CriteriaGrouping which organize the representation of criteria and optional sub-groupings.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique view identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationViewCombination.html":{"url":"interfaces/ClassificationViewCombination.html","title":"interface - ClassificationViewCombination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationViewCombination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a combination of classifications view which comprises one or more ClassificationViews.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        default\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        views\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates whether this combination needs to be used for default UI rendering (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View combination description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique view combination identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View combination name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                    \n                                \n                                \n                                    \n                                        views:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of ClassificationView which organize the representation of criteria groupings.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationViewCombinationResponse.html":{"url":"interfaces/ClassificationViewCombinationResponse.html","title":"interface - ClassificationViewCombinationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationViewCombinationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a server response with available combinations of classification views.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        default\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        viewIds\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewIds\n                                    \n                                \n                                \n                                    \n                                        viewIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationViewResponse.html":{"url":"interfaces/ClassificationViewResponse.html","title":"interface - ClassificationViewResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClassificationViewResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a server response with available classification views.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        groupingIds\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupingIds\n                                    \n                                \n                                \n                                    \n                                        groupingIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAppConfigService\n\nAppConfigService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAppConfigService->CoreModule\n\n\n\n\n\nDataService\n\nDataService\n\nCoreModule -->\n\nDataService->CoreModule\n\n\n\n\n\nLogoLocatorService\n\nLogoLocatorService\n\nCoreModule -->\n\nLogoLocatorService->CoreModule\n\n\n\n\n\nRandomColorService\n\nRandomColorService\n\nCoreModule -->\n\nRandomColorService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            DataService\n                        \n                        \n                            LogoLocatorService\n                        \n                        \n                            RandomColorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {APP_INITIALIZER, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {EnsureModuleLoadedOnceGuard} from './ensure-module-loaded-once.guard';\nimport {DataService} from './services/data.service';\nimport {LogoLocatorService} from './services/logo-locator.service';\nimport {RandomColorService} from './services/random-color.service';\nimport {AppConfigService} from './services/app-config.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  providers: [\n    AppConfigService,\n    DataService,\n    LogoLocatorService,\n    RandomColorService,\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [AppConfigService],\n      useFactory: (appConfigService: AppConfigService) => {\n        return () => {\n          return appConfigService.loadAppConfig();\n        };\n      }\n    }]\n})\nexport class CoreModule extends EnsureModuleLoadedOnceGuard {\n\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    super(parentModule);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaBasedQuery.html":{"url":"interfaces/CriteriaBasedQuery.html","title":"interface - CriteriaBasedQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriteriaBasedQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        CriterionFilterValue\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interfaces/filtering.ts:53\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface RenderedFilterBlock {\n  blockName: string;\n  blockIcon?: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  filterId: string;\n  technologyCategory: string;\n  name: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  criterionId: string;\n  displayName: string;\n  filterType: CriterionFilterType;\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n *\n * @remarks\n * Available options:\n * -- bool:  indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n * -- lte: indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n * -- gte: indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n * -- containsOne: at least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n * -- containsAny: at least 1 arbitrary text value must be contained, translates to a toggle in the UI\n * -- containsAll: all specified text values must be contained, translates to a group of checkboxes in the UI\n * -- excludesAll: all specified text values must not be contained, translates to a group of checkboxes in the UI\n */\nexport enum CriterionFilterType {\n  bool = 'bool',\n  lte = 'lte',\n  gte = 'gte',\n  containsOne = 'containsOne',\n  containsAny = 'containsAny',\n  containsAll = 'containsAll',\n  excludesAll = 'excludesAll'\n}\n\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\nexport interface CriterionFilterValue {\n  filterType?: CriterionFilterType;\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaGrouping.html":{"url":"interfaces/CriteriaGrouping.html","title":"interface - CriteriaGrouping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriteriaGrouping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a group of ClassificationCriterion.\nGroupings can also contain other groupings, forming a hierarchy for criteria.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        criteria\n                                \n                                \n                                            Optional\n                                        groupings\n                                \n                                \n                                        id\n                                \n                                \n                                        locator\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                    \n                                \n                                \n                                    \n                                        criteria:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A set of ClassificationCriterion which describe a particular aspect of the reviewed technology.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupings\n                                    \n                                \n                                \n                                    \n                                        groupings:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A set of Sub-groupings which organize the representation of criteria and optional sub-groupings.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique grouping identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locator\n                                    \n                                \n                                \n                                    \n                                        locator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Grouping locator which can be used, e.g., for custom breadcrumbs generation.\nReserved for future use.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Grouping name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaGroupingResponse.html":{"url":"interfaces/CriteriaGroupingResponse.html","title":"interface - CriteriaGroupingResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriteriaGroupingResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a server response with available criteria groupings.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        criteriaIds\n                                \n                                \n                                        id\n                                \n                                \n                                        locator\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        parentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteriaIds\n                                    \n                                \n                                \n                                    \n                                        criteriaIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locator\n                                    \n                                \n                                \n                                    \n                                        locator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentId\n                                    \n                                \n                                \n                                    \n                                        parentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriteriaReview.html":{"url":"interfaces/CriteriaReview.html","title":"interface - CriteriaReview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriteriaReview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        CriterionInstance\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interfaces/responses.ts:53\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CriterionComponent.html":{"url":"components/CriterionComponent.html","title":"component - CriterionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CriterionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/criterion/criterion.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-criterion\n            \n\n            \n                styleUrls\n                ./criterion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./criterion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                criterion\n                            \n                            \n                                criterionInstance\n                            \n                            \n                                extraTitleText\n                            \n                            \n                                icon\n                            \n                            \n                                reviewMode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/criterion/criterion.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        criterion\n                    \n                \n                \n                    \n                        Type :         ClassificationCriterion\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        criterionInstance\n                    \n                \n                \n                    \n                        Type :         CriterionInstance\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        extraTitleText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text_snippet'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/criterion/criterion.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CriterionValue[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/criterion/criterion.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ClassificationCriterion, CriterionInstance, CriterionValue} from '../interfaces/classification';\n\n@Component({\n  selector: 'app-criterion',\n  templateUrl: './criterion.component.html',\n  styleUrls: ['./criterion.component.scss']\n})\nexport class CriterionComponent implements OnInit {\n  @Input() criterion: ClassificationCriterion;\n  @Input() extraTitleText: string;\n  @Input() criterionInstance: CriterionInstance;\n  @Input() reviewMode: boolean;\n  @Input() icon: string = 'text_snippet';\n  title: string;\n  values: CriterionValue[];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.extraTitleText ? this.title = this.extraTitleText + this.criterion.name : this.title = this.criterion.name;\n    if (this.criterionInstance) {\n      this.values = Array.from(this.criterionInstance.values);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{icon}}\n      {{title}}\n    \n  \n   {{criterion.description }}\n  \n     Examples: {{criterion.exampleValues | json }} \n  \n\n\n\n  \n    \n      {{icon}}\n      {{title}}: \n    \n\n\n    \n      \n        N/A\n        block\n      \n    \n\n    \n      \n        {{values[0].value | yesNo }}\n        info\n        \n         [{{i + 1}}] \n      \n    \n  \n\n   1\" class=\"criterion__value-list-block\">\n    \n      \n        {{valueIndex + 1 + \". \" + v.value}}\n        info\n        \n        \n          [{{i + 1}}]\n        \n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./criterion.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  width: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: flex-end;\n}\n\n.criterion__heading-line {\n  width: 100%;\n  margin: .5rem 0;\n  display: flex;\n  flex-flow: row nowrap;\n}\n\n.criterion__title-block {\n  display: flex;\n  flex-flow: row nowrap;\n  align-content: center;\n  justify-content: flex-start;\n  flex: 1 1 min-content;\n}\n\n.criterion__value-block {\n  display: flex;\n  flex-flow: row nowrap;\n  align-content: center;\n  justify-content: flex-end;\n  flex: 1 1 min-content;\n}\n\n.criterion__value-list-item {\n  font-size: 1rem;\n  line-height: 1rem;\n  margin: .5rem 0;\n}\n\n.criterion__value-list-item-divider {\n  margin: .5rem 0;\n}\n\n.criterion__value-list-block {\n  margin-top: .5rem;\n  display: flex;\n  flex-flow: column nowrap;\n  width: 90%;\n  align-self: center;\n}\n\n.criterion__heading-line-block-item {\n  align-self: center;\n  font-size: 1rem;\n  line-height: 1rem;\n}\n\n.criterion__icon {\n  font-size: 1.3rem;\n}\n\n.criterion__reference {\n  font-size: 1rem;\n  text-decoration: none;\n  padding-left: .2rem;\n}\n\n.criterion__title {\n  flex: 1;\n}\n\n.child-grouping__criterion-description {\n  flex: 2 0 100%;\n}\n\n.child-grouping__criterion-examples {\n  flex: 2 0 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{icon}}      {{title}}         {{criterion.description }}       Examples: {{criterion.exampleValues | json }}               {{icon}}      {{title}}:                       N/A        block                            {{values[0].value | yesNo }}        info                 [{{i + 1}}]                1\" class=\"criterion__value-list-block\">                  {{valueIndex + 1 + \". \" + v.value}}        info                          [{{i + 1}}]                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CriterionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CriterionFilterComponent.html":{"url":"components/CriterionFilterComponent.html","title":"component - CriterionFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CriterionFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/criterion-filter/criterion-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-criterion-filter\n            \n\n            \n                styleUrls\n                ./criterion-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./criterion-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterElement\n                            \n                            \n                                    Public\n                                FilterType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearFilter\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateQuery\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         CriterionFilterConfiguration\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateQuery\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearFilter\n                        \n                        \n                    \n                \n            \n            \n                \nclearFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl | FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            FilterType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CriterionFilterType\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/criterion-filter/criterion-filter.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {CriteriaBasedQuery, CriterionFilterConfiguration, CriterionFilterType} from '../../shared/interfaces/filtering';\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-criterion-filter',\n  templateUrl: './criterion-filter.component.html',\n  styleUrls: ['./criterion-filter.component.scss']\n})\nexport class CriterionFilterComponent implements OnInit {\n  @Input() filter: CriterionFilterConfiguration;\n  @Output() updateQuery = new EventEmitter();\n\n  filterElement: FormControl | FormGroup;\n  public FilterType = CriterionFilterType;\n\n  constructor(private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    if (this.filter.filterType === this.FilterType.bool || this.filter.filterType === this.FilterType.containsAny || this.filter.filterType === this.FilterType.lte) {\n      this.filterElement = this.fb.control(null);\n    } else {\n      let controls = this.fb.array([]);\n      this.filter.filterValues.forEach(v => controls.push(this.fb.control(false)));\n      this.filterElement = this.fb.group({\n        checkboxes: controls,\n        filterType: this.fb.control(this.filter.filterType)\n      });\n    }\n\n    this.filterElement.valueChanges.subscribe(value => {\n      let obj = {};\n      if (this.filter.filterType === this.FilterType.bool || this.filter.filterType === this.FilterType.containsAny) {\n        obj[this.filter.criterionId] = {\n          filterType: this.filter.filterType,\n          value: value as boolean\n        };\n      } else if (this.filter.filterType === this.FilterType.lte) {\n        obj[this.filter.criterionId] = {\n          filterType: this.filter.filterType,\n          value: value as number\n        };\n      } else {\n        let initialValues = this.filter.filterValues as string[];\n        let selectedStrings = initialValues.filter((x, i) => !!this.filterElement.value.checkboxes[i]);\n\n        obj[this.filter.criterionId] = {\n          filterType: this.filterElement.value.filterType,\n          value: selectedStrings\n        };\n        if (selectedStrings.length === 0) {\n          this.filterElement.markAsPristine();\n        }\n      }\n\n      this.updateQuery.emit(obj);\n    });\n\n\n    function isArrayOfStrings(value: any): boolean {\n      return Array.isArray(value) && value.every(item => typeof item === 'string');\n    }\n\n  }\n\n  clearFilter() {\n    this.filterElement.reset();\n    if (\n      this.filter.filterType === this.FilterType.containsAll ||\n      this.filter.filterType === this.FilterType.containsOne ||\n      this.filter.filterType === this.FilterType.excludesAll\n    ) {\n      this.filterElement.get('filterType').setValue(this.FilterType.containsOne);\n    }\n    this.filterElement.markAsPristine();\n  }\n}\n\n    \n\n    \n        \n  \n    {{filter.displayName}}\n  \n  \n    \n      \n        \n          Available\n        \n      \n      \n        \n          Not Available\n        \n      \n    \n  \n\n\n\n  \n    {{filter.displayName}}\n  \n  \n    \n    \n  \n\n\n\n  \n    {{filter.displayName}}\n  \n  \n    \n      \n        \n          {{value}}\n        \n      \n\n      \n        OR\n        AND\n        NOT\n      \n    \n  \n\n\n\n\n  Clear Filter\n\n\n\n    \n\n    \n                \n                    ./criterion-filter.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.filter-block__filter-values {\n  @include list-style-none;\n  padding-left: .2rem;\n}\n\n.criterion-block {\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.criterion-block__filter-name {\n  margin-bottom: 0;\n}\n\n.criterion-block__filter-body {\n  margin-top: .3rem;\n}\n\n.filter-block__filter-type {\n  height: 2.2rem;\n  margin: 0 auto .7rem;\n  align-items: center;\n}\n\n.clear-filter-button {\n  align-self: stretch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{filter.displayName}}                                Available                                      Not Available                          {{filter.displayName}}                    {{filter.displayName}}                                {{value}}                            OR        AND        NOT              Clear Filter'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CriterionFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionFilterConfiguration.html":{"url":"interfaces/CriterionFilterConfiguration.html","title":"interface - CriterionFilterConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriterionFilterConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a filter configuration for a given ClassificationCriterion.\nThis configuration defines the desired filtering behavior.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        criterionId\n                                \n                                \n                                        displayName\n                                \n                                \n                                        filterType\n                                \n                                \n                                            Optional\n                                        filterValues\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criterionId\n                                    \n                                \n                                \n                                    \n                                        criterionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterType\n                                    \n                                \n                                \n                                    \n                                        filterType:         CriterionFilterType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterValues\n                                    \n                                \n                                \n                                    \n                                        filterValues:      | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RenderedFilterBlock {\n  blockName: string;\n  blockIcon?: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  filterId: string;\n  technologyCategory: string;\n  name: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  criterionId: string;\n  displayName: string;\n  filterType: CriterionFilterType;\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n *\n * @remarks\n * Available options:\n * -- bool:  indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n * -- lte: indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n * -- gte: indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n * -- containsOne: at least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n * -- containsAny: at least 1 arbitrary text value must be contained, translates to a toggle in the UI\n * -- containsAll: all specified text values must be contained, translates to a group of checkboxes in the UI\n * -- excludesAll: all specified text values must not be contained, translates to a group of checkboxes in the UI\n */\nexport enum CriterionFilterType {\n  bool = 'bool',\n  lte = 'lte',\n  gte = 'gte',\n  containsOne = 'containsOne',\n  containsAny = 'containsAny',\n  containsAll = 'containsAll',\n  excludesAll = 'excludesAll'\n}\n\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\nexport interface CriterionFilterValue {\n  filterType?: CriterionFilterType;\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionFilterValue.html":{"url":"interfaces/CriterionFilterValue.html","title":"interface - CriterionFilterValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriterionFilterValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        filterType\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterType\n                                    \n                                \n                                \n                                    \n                                        filterType:         CriterionFilterType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     boolean | number | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | number | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RenderedFilterBlock {\n  blockName: string;\n  blockIcon?: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  filterId: string;\n  technologyCategory: string;\n  name: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  criterionId: string;\n  displayName: string;\n  filterType: CriterionFilterType;\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n *\n * @remarks\n * Available options:\n * -- bool:  indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n * -- lte: indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n * -- gte: indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n * -- containsOne: at least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n * -- containsAny: at least 1 arbitrary text value must be contained, translates to a toggle in the UI\n * -- containsAll: all specified text values must be contained, translates to a group of checkboxes in the UI\n * -- excludesAll: all specified text values must not be contained, translates to a group of checkboxes in the UI\n */\nexport enum CriterionFilterType {\n  bool = 'bool',\n  lte = 'lte',\n  gte = 'gte',\n  containsOne = 'containsOne',\n  containsAny = 'containsAny',\n  containsAll = 'containsAll',\n  excludesAll = 'excludesAll'\n}\n\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\nexport interface CriterionFilterValue {\n  filterType?: CriterionFilterType;\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionInstance.html":{"url":"interfaces/CriterionInstance.html","title":"interface - CriterionInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriterionInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        criterionId\n                                \n                                \n                                            Optional\n                                        reviewDate\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criterionId\n                                    \n                                \n                                \n                                    \n                                        criterionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique ClassificationCriterion identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewDate\n                                    \n                                \n                                \n                                    \n                                        reviewDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A date review was conducted (optional).\nReserved for future use.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of CriterionValue which store the criterion-specific review data for the reviewed technology.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CriterionValue.html":{"url":"interfaces/CriterionValue.html","title":"interface - CriterionValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CriterionValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/classification.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a generic data value for the given CriterionInstance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        comment\n                                \n                                \n                                            Optional\n                                        references\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An additional note describing the review value (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                    \n                                \n                                \n                                    \n                                        references:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A list of references, e.g., to official documentation, confirming the review value (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string | number | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number | boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A value of primitive type representing criterion-specific review data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\n\n/**\n * An interface representing a generic classification framework, which comprises one or more {@link ClassificationViewCombination}.\n * Different combinations of classification views can be used to flexibly switch between different review representations for a given {@link TechnologyCategory}.\n */\nexport interface ClassificationFramework {\n  /**\n   * Unique framework identifier.\n   */\n  id: string;\n  /**\n   * Framework name.\n   */\n  name: string;\n  /**\n   * [Category]{@link TechnologyCategory} of technologies this framework helps to review.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  technologyCategory: TechnologyCategory;\n  /**\n   * Framework description (optional).\n   */\n  description?: string;\n  /**\n   * A set of {@link ClassificationViewCombination} which organize the representation of views comprising different criteria groupings.\n   */\n  viewCombinations: Set;\n}\n\n/**\n * An interface representing a combination of classifications view which comprises one or more [ClassificationViews]{@link ClassificationView}.\n */\nexport interface ClassificationViewCombination {\n  /**\n   * Unique view combination identifier.\n   */\n  id: string;\n  /**\n   * View combination name.\n   */\n  name: string;\n  /**\n   * View combination description.\n   */\n  description: string;\n  /**\n   * A set of {@link ClassificationView} which organize the representation of criteria groupings.\n   */\n  views: Set;\n  /**\n   * Indicates whether this combination needs to be used for default UI rendering (optional).\n   */\n  default?: boolean;\n}\n\n/**\n * An interface representing a classification view which comprises one or more {@link CriteriaGrouping}.\n */\nexport interface ClassificationView {\n  /**\n   * Unique view identifier.\n   */\n  id: string;\n  /**\n   * View name.\n   */\n  name: string;\n  /**\n   * View description.\n   */\n  description: string;\n  /**\n   * A set of {@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings: Set;\n}\n\n/**\n * An interface representing a group of {@link ClassificationCriterion}.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n */\nexport interface CriteriaGrouping {\n  /**\n   * Unique grouping identifier.\n   */\n  id: string;\n  /**\n   * Grouping locator which can be used, e.g., for custom breadcrumbs generation.\n   * Reserved for future use.\n   *\n   * @example\n   * \"licensing\", \"community.github\"\n   */\n  locator: string;\n  /**\n   * Grouping name.\n   */\n  name: string;\n  /**\n   * A set of [Sub-groupings]{@link CriteriaGrouping} which organize the representation of criteria and optional sub-groupings.\n   */\n  groupings?: Set;\n  /**\n   * A set of {@link ClassificationCriterion} which describe a particular aspect of the reviewed technology.\n   */\n  criteria?: Set;\n}\n\n/**\n * An interface representing a classification criterion for a to-be-classified software.\n * Groupings can also contain other groupings, forming a hierarchy for criteria.\n *\n * @example a classification criterion representing runtimes supported by a FaaS platform\n */\nexport interface ClassificationCriterion {\n  /**\n   * Unique criterion identifier.\n   */\n  id: string;\n  /**\n   * Criterion name.\n   */\n  name: string;\n  /**\n   * Criterion description.\n   */\n  description: string;\n  /**\n   * Example values which an instance of this criterion {@link CriterionInstance} can store.\n   *\n   * @example\n   * a true/false value, numeric values, a list of strings\n   */\n  exampleValues?: Set;\n}\n\n/**\n * An interface representing an instance of a classification criterion containing the collected data for a particular technology.\n *\n * @example a set of runtimes supported by AWS Lambda.\n */\nexport interface CriterionInstance {\n  /**\n   * Unique {@link ClassificationCriterion} identifier.\n   */\n  criterionId: string;\n  /**\n   * A set of {@link CriterionValue} which store the criterion-specific review data for the reviewed technology.\n   */\n  values: Set;\n  /**\n   * A date review was conducted (optional).\n   * Reserved for future use.\n   */\n  reviewDate?: Date;\n}\n\n/**\n * An interface representing a generic data value for the given {@link CriterionInstance}.\n */\nexport interface CriterionValue {\n  /**\n   * A value of primitive type representing criterion-specific review data.\n   *\n   * @example\n   * \"Java\", \"not supported\", 150, true\n   */\n  value: string | number | boolean;\n  /**\n   * A list of references, e.g., to official documentation, confirming the review value (optional).\n   */\n  references?: string[];\n  /**\n   * An additional note describing the review value (optional).\n   */\n  comment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildGroupings\n                            \n                            \n                                getCriteria\n                            \n                            \n                                getDefaultViewCombinationData\n                            \n                            \n                                getDossier\n                            \n                            \n                                getDossiersOfCategory\n                            \n                            \n                                getFrameworkForCategory\n                            \n                            \n                                getFrameworkForTechnologyType\n                            \n                            \n                                getFrameworkGroupingsData\n                            \n                            \n                                getFrameworks\n                            \n                            \n                                getGroupings\n                            \n                            \n                                getInfoResources\n                            \n                            \n                                getTechnologies\n                            \n                            \n                                getTechnologiesOfCategory\n                            \n                            \n                                getTechnology\n                            \n                            \n                                getTechnologyFilter\n                            \n                            \n                                getViewCombinations\n                            \n                            \n                                getViewGroupingsData\n                            \n                            \n                                getViews\n                            \n                            \n                                getViewsData\n                            \n                            \n                                    Private\n                                    Static\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logoLocator: LogoLocatorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/data.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logoLocator\n                                                  \n                                                        \n                                                                        LogoLocatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildGroupings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildGroupings(data: CriteriaGroupingResponse[], criteria: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:413\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            CriteriaGroupingResponse[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    criteria\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CriteriaGrouping[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCriteria\n                        \n                        \n                    \n                \n            \n            \n                \ngetCriteria()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDefaultViewCombinationData\n                        \n                        \n                    \n                \n            \n            \n                \ngetDefaultViewCombinationData(frameworkId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:345\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    frameworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDossier\n                        \n                        \n                    \n                \n            \n            \n                \ngetDossier(technologyId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:267\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    technologyId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDossiersOfCategory\n                        \n                        \n                    \n                \n            \n            \n                \ngetDossiersOfCategory(category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFrameworkForCategory\n                        \n                        \n                    \n                \n            \n            \n                \ngetFrameworkForCategory(techCategory: TechnologyCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    techCategory\n                                    \n                                                TechnologyCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFrameworkForTechnologyType\n                        \n                        \n                    \n                \n            \n            \n                \ngetFrameworkForTechnologyType(category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFrameworkGroupingsData\n                        \n                        \n                    \n                \n            \n            \n                \ngetFrameworkGroupingsData(frameworkId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:333\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    frameworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFrameworks\n                        \n                        \n                    \n                \n            \n            \n                \ngetFrameworks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGroupings\n                        \n                        \n                    \n                \n            \n            \n                \ngetGroupings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInfoResources\n                        \n                        \n                    \n                \n            \n            \n                \ngetInfoResources()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:405\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTechnologies\n                        \n                        \n                    \n                \n            \n            \n                \ngetTechnologies(withDossier)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    withDossier\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTechnologiesOfCategory\n                        \n                        \n                    \n                \n            \n            \n                \ngetTechnologiesOfCategory(category: string, withDossier)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    withDossier\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTechnology\n                        \n                        \n                    \n                \n            \n            \n                \ngetTechnology(id: string, withDossier)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    withDossier\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTechnologyFilter\n                        \n                        \n                    \n                \n            \n            \n                \ngetTechnologyFilter(category: TechnologyCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                TechnologyCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getViewCombinations\n                        \n                        \n                    \n                \n            \n            \n                \ngetViewCombinations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getViewGroupingsData\n                        \n                        \n                    \n                \n            \n            \n                \ngetViewGroupingsData(viewId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:386\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getViews\n                        \n                        \n                    \n                \n            \n            \n                \ngetViews()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getViewsData\n                        \n                        \n                    \n                \n            \n            \n                \ngetViewsData(viewCombinationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:367\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewCombinationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(err: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {combineLatest, Observable, throwError} from 'rxjs';\nimport {catchError, map, mergeAll, mergeMap, shareReplay, take, toArray} from 'rxjs/operators';\nimport {LogoLocatorService} from './logo-locator.service';\nimport {\n  ClassificationCriterion,\n  ClassificationFramework,\n  ClassificationView,\n  ClassificationViewCombination,\n  CriteriaGrouping\n} from '../../shared/interfaces/classification';\nimport {Technology, TechnologyCategory, TechnologyDossier} from '../../shared/interfaces/technology';\nimport {\n  ClassificationFrameworkResponse,\n  ClassificationViewCombinationResponse,\n  ClassificationViewResponse,\n  CriteriaGroupingResponse, TechnologyDossierResponse\n} from '../../shared/interfaces/responses';\nimport {CriterionFilterType, TechnologyFilterConfiguration} from '../../shared/interfaces/filtering';\nimport {InfoResourceSection} from '../../shared/interfaces/info';\n\nconst criteriaPath = '/assets/data/framework/criteria.json';\nconst criteriaGroupingsPath = '/assets/data/framework/groupings.json';\nconst frameworkViewsPath = '/assets/data/framework/views.json';\nconst frameworkViewCombinationsPath = '/assets/data/framework/view-combinations.json';\nconst frameworksPath = '/assets/data/framework/frameworks.json';\nconst supportedPlatformsPath = '/assets/data/platforms/platforms.json';\nconst dossiersPath: string = '/assets/data/platforms/';\nconst filterConfigurationsPath = '/assets/data/framework/filters.json';\nconst infoResourcesPath = '/assets/data/info/resources.json';\n\n@Injectable()\nexport class DataService {\n\n  constructor(private http: HttpClient, private logoLocator: LogoLocatorService) {\n  }\n\n  private static handleError(err: any): Observable {\n    let errorMessage: string;\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      errorMessage = `Backend returned code ${err.status}: ${err.body?.error}`;\n    }\n    console.error(err);\n    return throwError(errorMessage);\n  }\n\n  getCriteria(): Observable {\n    return this.http.get(criteriaPath)\n      .pipe(\n        catchError(DataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  getGroupings(): Observable {\n    return combineLatest([\n      this.getCriteria(),\n      this.http.get(criteriaGroupingsPath)\n    ]).pipe(\n      map(([criteria, groupings]) => {\n        const criteriaLookup = new Map(criteria.map(c => [c.id, c] as [string, ClassificationCriterion]));\n        return this.buildGroupings(groupings, criteriaLookup);\n      }),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViews(): Observable {\n    return combineLatest([\n      this.getGroupings(),\n      this.http.get(frameworkViewsPath)\n    ]).pipe(\n      map(([groupings, views]) => {\n          const groupingsLookup = new Map(groupings.map(c => [c.id, c] as [string, CriteriaGrouping]));\n          let result: ClassificationView[] = [];\n\n          views.forEach(v => {\n            let view: ClassificationView = {\n              id: v.id,\n              name: v.name,\n              description: v.description,\n              groupings: new Set()\n            };\n\n            v.groupingIds.forEach(id => {\n              if (groupingsLookup.has(id)) {\n                view.groupings.add(groupingsLookup.get(id));\n              }\n            });\n            result.push(view);\n          });\n\n          return result;\n        }\n      ),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViewCombinations(): Observable {\n    return combineLatest([\n      this.getViews(),\n      this.http.get(frameworkViewCombinationsPath)\n    ]).pipe(\n      map(([views, viewCombinations]) => {\n          let result: ClassificationViewCombination[] = [];\n          viewCombinations.forEach(c => {\n            let combination: ClassificationViewCombination = {\n              id: c.id,\n              name: c.name,\n              description: c.description,\n              default: c.default,\n              views: new Set()\n            };\n\n            c.viewIds.forEach(id => {\n              let view = views.find(v => id === v.id);\n              if (view) {\n                combination.views.add(view);\n              }\n            });\n            result.push(combination);\n          });\n\n          return result;\n        }\n      ),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getFrameworks(): Observable {\n    return combineLatest([\n      this.getViewCombinations(),\n      this.http.get(frameworksPath)\n    ]).pipe(\n      map(([combs, frameworks]) => {\n        let result: ClassificationFramework[] = [];\n        frameworks.forEach(f => {\n          let framework: ClassificationFramework = {\n            id: f.id,\n            technologyCategory: f.technologyCategory,\n            name: f.name,\n            description: f.description,\n            viewCombinations: new Set()\n          };\n\n          f.viewCombinationIds.forEach(id => {\n            let viewCombination = combs.find(v => id === v.id);\n            if (viewCombination) {\n              framework.viewCombinations.add(viewCombination);\n            }\n          });\n          result.push(framework);\n        });\n\n        return result;\n      }),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getFrameworkForCategory(techCategory: TechnologyCategory): Observable {\n    return combineLatest([\n      this.getViewCombinations(),\n      this.http.get(frameworksPath)\n    ]).pipe(\n      map(([combs, frameworks]) => {\n        let result: ClassificationFramework;\n        let f = frameworks.find(f => f.technologyCategory === techCategory);\n\n        result = {\n          id: f.id,\n          technologyCategory: f.technologyCategory,\n          name: f.name,\n          description: f.description,\n          viewCombinations: new Set()\n        };\n\n        f.viewCombinationIds.forEach(id => {\n          let viewCombination = combs.find(v => id === v.id);\n          if (viewCombination) {\n            result.viewCombinations.add(viewCombination);\n          }\n        });\n\n        return result;\n      }),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getFrameworkForTechnologyType(category: string): Observable {\n    return this.getFrameworks().pipe(\n      map((f) => f.find(item => item.technologyCategory.toLocaleLowerCase() === category.toLocaleLowerCase())),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getTechnologies(withDossier = false): Observable {\n    return this.http.get(supportedPlatformsPath)\n      .pipe(\n        map((items) =>\n          items.map(\n            item => {\n              let result: Technology = {\n                ...item,\n                logoLocation: this.logoLocator.getLogoPath(item.logoLocator)\n              };\n              if (withDossier) {\n                this.getDossier(item.id).pipe(take(1)).subscribe({\n                  next: value => value ? result.dossier = value : false,\n                  error: catchError\n                });\n              }\n              return result;\n            }\n          )\n        ),\n        shareReplay(1),\n        catchError(DataService.handleError)\n      );\n  }\n\n  getTechnologiesOfCategory(category: string, withDossier = false): Observable {\n    return this.getTechnologies(withDossier).pipe(\n      map((techs) =>\n        techs.filter(t => t.category.toLocaleLowerCase() === category.toLocaleLowerCase())\n      ),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getTechnology(id: string, withDossier = false): Observable {\n    return combineLatest([\n      this.http.get(supportedPlatformsPath),\n      this.getDossier(id)\n    ]).pipe(\n      map(([items, dossier]) => {\n          let technology: Technology = items.find(item => item.id === id);\n          let result: Technology = {\n            ...technology,\n            logoLocation: this.logoLocator.getLogoPath(technology.logoLocator)\n          };\n          if (withDossier) {\n            result.dossier = dossier;\n          }\n          return result;\n        }\n      ),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n\n  }\n\n  getDossier(technologyId: string): Observable {\n    const dossierPath = dossiersPath.concat(technologyId, '.json');\n    return this.http.get(dossierPath)\n      .pipe(\n        map( (res) => {\n          return {\n            platformId: technologyId,\n            reviewDate: res.reviewDate,\n            reviewedCriteria: new Map(Object.entries(res.reviewedCriteria))\n          } as TechnologyDossier;\n        }),\n        catchError(DataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  getDossiersOfCategory(category: string): Observable {\n    return this.getTechnologiesOfCategory(category).pipe(\n      mergeMap((techs) => techs),\n      mergeMap((t) => this.getDossier(t.id)),\n      toArray(),\n      shareReplay(1),\n      catchError(DataService.handleError)\n    );\n  }\n\n  getTechnologyFilter(category: TechnologyCategory): Observable {\n    return combineLatest([\n      this.http.get(filterConfigurationsPath).pipe(\n        map((conf) => conf.find(c => c.technologyCategory.toLocaleLowerCase() === category.toLocaleLowerCase())),\n      ),\n      this.getDossiersOfCategory(category)\n    ]).pipe(\n      map(([filter, dossiers]) => {\n          const criteriaValues = new Map>();\n          dossiers.forEach(d => {\n\n            d.reviewedCriteria.forEach((criterionInstance, key) => {\n              const distinctValues = new Set();\n              const previous: Set = criteriaValues.get(key);\n\n              criterionInstance.values.forEach(v => distinctValues.add(v.value));\n              if (previous) {\n                criteriaValues.set(key, new Set([...previous, ...distinctValues]));\n              } else {\n                criteriaValues.set(key, distinctValues);\n              }\n            });\n          });\n\n          filter.filters.forEach((f) => {\n            if (f.filterType === CriterionFilterType.lte) {\n              const range: number[] = Array.from(criteriaValues.get(f.criterionId)).sort(((a, b) => a > b ? 1 : -1));\n              f.filterValues = [range[0], range[range.length - 1]];\n            } else if (f.filterType !== CriterionFilterType.bool) {\n              f.filterValues = Array.from(criteriaValues.get(f.criterionId).values());\n            }\n          });\n          return filter;\n        }\n      ),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getFrameworkGroupingsData(frameworkId: string): Observable {\n    return this.getDefaultViewCombinationData(frameworkId).pipe(\n      mergeMap((vc) => this.getViewsData(vc.id)),\n      mergeAll(),\n      mergeMap(v => this.getViewGroupingsData(v.id)),\n      mergeAll(),\n      toArray(),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getDefaultViewCombinationData(frameworkId: string): Observable {\n    return combineLatest([\n      this.http.get(frameworkViewCombinationsPath),\n      this.http.get(frameworksPath),\n    ]).pipe(\n      map(([vcs, fws]) => {\n        const vcLookup = new Map(vcs.map(vc => [vc.id, vc] as [string, ClassificationViewCombinationResponse]));\n        let framework = fws.find(f => f.id === frameworkId);\n        if (framework) {\n          for (let id of framework.viewCombinationIds) {\n            let temp = vcLookup.get(id);\n            if (temp && temp.default) {\n              return temp;\n            }\n          }\n        }\n      }),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViewsData(viewCombinationId: string): Observable {\n    return combineLatest([\n      this.http.get(frameworkViewCombinationsPath),\n      this.http.get(frameworkViewsPath)\n    ]).pipe(\n      map(([combs, views]) => {\n        const viewsLookup = new Map(views.map(v => [v.id, v] as [string, ClassificationViewResponse]));\n        let result = [];\n        let vc = combs.find(c => c.id === viewCombinationId);\n        if (vc) {\n          vc.viewIds.forEach(id => result.push(viewsLookup.get(id)));\n        }\n        return result;\n      }),\n      catchError(DataService.handleError),\n      shareReplay(1)\n    );\n  }\n\n  getViewGroupingsData(viewId: string): Observable {\n    return combineLatest([\n      this.http.get(frameworkViewsPath),\n      this.http.get(criteriaGroupingsPath)])\n      .pipe(\n        map(([views, groupings]) => {\n          const groupingsLookup = new Map(groupings.map(g => [g.id, g] as [string, CriteriaGroupingResponse]));\n          let result = [];\n          let view = views.find(v => v.id === viewId);\n          if (view) {\n            view.groupingIds.forEach(id => result.push(groupingsLookup.get(id)));\n          }\n          return result;\n        }),\n        catchError(DataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  getInfoResources(): Observable {\n    return this.http.get(infoResourcesPath)\n      .pipe(\n        catchError(DataService.handleError),\n        shareReplay(1)\n      );\n  }\n\n  private buildGroupings(data: CriteriaGroupingResponse[], criteria: Map): CriteriaGrouping[] {\n    const result: CriteriaGrouping[] = [];\n    const lookup: Map = new Map();\n\n    data.forEach(g => {\n        let relatedCriteria: Set = new Set();\n        if (g.criteriaIds) {\n          g.criteriaIds.forEach(id => criteria.has(id) ? relatedCriteria.add(criteria.get(id)) : false);\n        }\n        lookup.set(g.id, ({\n          id: g.id,\n          name: g.name,\n          locator: g.locator,\n          groupings: new Set(),\n          criteria: relatedCriteria\n        } as CriteriaGrouping));\n      }\n    );\n\n    data.forEach(g => {\n      if (g.parentId) {\n        lookup.get(g.parentId).groupings.add(lookup.get(g.id));\n      } else {\n        result.push(lookup.get(g.id));\n      }\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnsureModuleLoadedOnceGuard.html":{"url":"classes/EnsureModuleLoadedOnceGuard.html","title":"class - EnsureModuleLoadedOnceGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnsureModuleLoadedOnceGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/ensure-module-loaded-once.guard.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(targetModule: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/ensure-module-loaded-once.guard.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        targetModule\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EnsureModuleLoadedOnceGuard {\n  constructor(targetModule: any) {\n    if (targetModule) {\n      throw new Error(`${targetModule.constructor.name} has already been loaded. Import this module in the AppModule only.`);\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FaqComponent.html":{"url":"components/FaqComponent.html","title":"component - FaqComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FaqComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/faq/faq.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-faq\n            \n\n            \n                styleUrls\n                ./faq.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./faq.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/information/faq/faq.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/faq/faq.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.scss']\n})\nexport class FaqComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        faq works!\n\n    \n\n    \n                \n                    ./faq.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'faq works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FaqComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    © 2021 FaaStener\n    \n      This SOFTWARE PRODUCT is provided \"as is\" and \"with all faults.\"\n      THE PROVIDER makes no representations or warranties of any kind concerning the safety, suitability, lack\n      of viruses, inaccuracies, typographical errors, or other harmful components of this SOFTWARE PRODUCT.\n    \n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                @import \"../../_scss/global/variables\";\n\n.main-grid__footer {\n  height: 100%;\n  background-color: $violet-500;\n  color: #ffffff;\n  display: flex;\n  justify-content: center;\n}\n\n.footer__section {\n  margin: 0;\n  padding: 1em;\n  display: flex;\n  flex-direction: column;\n  justify-items: center;\n  align-items: center;\n}\n\n.footer__heading {\n  padding: 0 .4em .5rem .4rem;\n  border-bottom: .2rem solid $pink-900;\n}\n\n.section_disclaimer {\n  max-width: 57rem;\n}\n\n@media screen and (min-width: 1100px) {\n  .footer__section {\n    max-width: 1200px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      © 2021 FaaStener          This SOFTWARE PRODUCT is provided \"as is\" and \"with all faults.\"      THE PROVIDER makes no representations or warranties of any kind concerning the safety, suitability, lack      of viruses, inaccuracies, typographical errors, or other harmful components of this SOFTWARE PRODUCT.      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameworkComponent.html":{"url":"components/FrameworkComponent.html","title":"component - FrameworkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FrameworkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/framework/framework.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-framework\n            \n\n            \n                styleUrls\n                ./framework.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./framework.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                framework\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/framework/framework.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/framework/framework.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            framework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassificationFramework\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information/framework/framework.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ClassificationFramework} from '../../shared/interfaces/classification';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-framework',\n  templateUrl: './framework.component.html',\n  styleUrls: ['./framework.component.scss']\n})\nexport class FrameworkComponent implements OnInit {\n  framework: ClassificationFramework;\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.framework = data['resolvedData'];\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./framework.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FrameworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameworkRendererComponent.html":{"url":"components/FrameworkRendererComponent.html","title":"component - FrameworkRendererComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FrameworkRendererComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/framework-renderer/framework-renderer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-framework-renderer\n            \n\n            \n                styleUrls\n                ./framework-renderer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./framework-renderer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedGrouping\n                            \n                            \n                                viewToggles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onGroupingSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraCriterionTitle\n                            \n                            \n                                framework\n                            \n                            \n                                includeFrameworkInfo\n                            \n                            \n                                renderReviewData\n                            \n                            \n                                reviewData\n                            \n                            \n                                selectedViewCombination\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, viewportScroller: ViewportScroller)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewportScroller\n                                                  \n                                                        \n                                                                        ViewportScroller\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraCriterionTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        framework\n                    \n                \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        includeFrameworkInfo\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        renderReviewData\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewData\n                    \n                \n                \n                    \n                        Type :         Map\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedViewCombination\n                    \n                \n                \n                    \n                        Type :         ClassificationViewCombination\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onGroupingSelected\n                        \n                        \n                    \n                \n            \n            \n                \nonGroupingSelected(viewId: string, grouping: CriteriaGrouping)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    grouping\n                                    \n                                                CriteriaGrouping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedGrouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewToggles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/framework-renderer/framework-renderer.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ClassificationFramework, ClassificationViewCombination, CriteriaGrouping, CriterionInstance} from '../interfaces/classification';\nimport {ViewportScroller} from '@angular/common';\n\n@Component({\n  selector: 'app-framework-renderer',\n  templateUrl: './framework-renderer.component.html',\n  styleUrls: ['./framework-renderer.component.scss']\n})\nexport class FrameworkRendererComponent implements OnInit {\n  @Input() framework: ClassificationFramework;\n  @Input() includeFrameworkInfo = true;\n  @Input() selectedViewCombination: ClassificationViewCombination;\n  @Input() extraCriterionTitle: string;\n  @Input() renderReviewData: boolean = false;\n  @Input() reviewData: Map;\n\n  viewToggles: Map = new Map();\n  selectedGrouping: Map = new Map();\n\n  constructor(private route: ActivatedRoute, private viewportScroller: ViewportScroller) {\n  }\n\n  ngOnInit(): void {\n    if (!this.selectedViewCombination) {\n      for (let vc of this.framework.viewCombinations) {\n        if (vc.default) {\n          this.selectedViewCombination = vc;\n          break;\n        }\n      }\n    }\n    // Initialize default view configuration\n    this.selectedViewCombination.views.forEach(v => this.viewToggles.set(v.id, false));\n  }\n\n  onGroupingSelected(viewId: string, grouping: CriteriaGrouping) {\n    if (this.selectedGrouping.get(viewId)?.id === grouping.id) {\n      this.selectedGrouping.set(viewId, undefined);\n    } else {\n      this.selectedGrouping.set(viewId, grouping);\n      setTimeout(() => {\n        this.viewportScroller.scrollToAnchor(grouping.id);\n      }, 50);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{framework.name}}\n    {{framework.description}}\n  \n\n  \n    \n      \n        {{view.name}}\n        \n        Flat View\n        \n      \n      {{view.description}}\n\n      \n        \n          \n          \n          \n            \n              {{g.name}}\n            \n          \n        \n      \n\n      \n        \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./framework-renderer.component.scss\n                \n                @import \"../../_scss/shared\";\n\n.framework {\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 0 1rem;\n  align-items: center;\n  height: 100%;\n}\n\n.framework__info {\n}\n\n.framework__root-groupings {\n  display: flex;\n  flex-flow: row wrap;\n}\n\n.framework__grouping-details {\n  order: 2;\n  flex: 100% 0;\n  padding-bottom: 1rem;\n}\n\n.framework__root-grouping-card {\n  margin: .2rem;\n  background: $gray-card;\n  cursor: pointer;\n  flex: 1 1 min-content;\n  order: 3;\n\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: $salad-600;\n  }\n}\n\n\n.framework__view {\n  margin: 1.5rem 0;\n  display: flex;\n  flex-flow: column nowrap;\n  width: 100%;\n}\n\n.framework__view-config-row {\n  display: flex;\n  align-items: center;\n}\n\n.framework__view-title {\n  flex: 1 1 auto;\n}\n\n.framework__view-toggle {\n  flex: 0 0 auto;\n  font-size: .8rem;\n}\n\n.framework__root-grouping-card--first {\n  order: 1;\n  background: $salad-600;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{framework.name}}    {{framework.description}}                      {{view.name}}                Flat View                    {{view.description}}                                                                      {{g.name}}                                                                      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FrameworkRendererComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/FrameworkResolver.html":{"url":"guards/FrameworkResolver.html","title":"guard - FrameworkResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    FrameworkResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/information/resolvers/framework-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, config: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/resolvers/framework-resolver.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resolvers/framework-resolver.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {ClassificationFramework} from '../../shared/interfaces/classification';\nimport {Observable} from 'rxjs';\nimport {DataService} from '../../core/services/data.service';\nimport {AppConfigService} from '../../core/services/app-config.service';\n\n@Injectable()\nexport class FrameworkResolver implements Resolve {\n\n  constructor(private dataService: DataService, private config: AppConfigService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    let defaultCategory = this.config.defaultTechCategory;\n    return this.dataService.getFrameworkForCategory(defaultCategory);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/header/header.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n  \n    \n      menu\n      \n       Home \n       About \n       Platforms \n       Contact Us \n      \n      \n    \n\n    \n      \n         Home \n         About \n         Platforms \n         Contact Us \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  z-index: 10;\n  background: #fff;\n  box-shadow: 0 0 1px rgba(0, 0, 0, .11), 0 1px 2px rgba(0, 0, 0, .25);\n}\n\n.header__toolbar {\n  margin: 0;\n  height: 4em;\n  display: flex;\n  justify-content: center;\n}\n\n.header__menu {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  margin: 0;\n  padding: 0 !important;\n  justify-content: space-around;\n  align-items: center;\n  @include list-style-none;\n}\n\n.header__spacer {\n  display: none;\n  flex-grow: 2;\n}\n\n.header__logo {\n  width: 100%;\n  height: auto;\n  max-width: 5.5rem;\n  padding-top: .5rem;\n  content: url(\"../../../assets/images/logo-h.png\");\n}\n\n.menu__link {\n  display: block !important;\n  height: 100% !important;\n  width: 100% !important;\n  padding-top: 2em !important;\n}\n\n.menu__text {\n  display: none;\n}\n\n.menu__link, .menu__link-icon {\n  @include nav_item;\n  outline: 0;\n}\n\n.menu__link--active {\n  color: $pink-main !important;\n}\n\n@media screen and (min-width: 510px) {\n  .header__toolbar {\n    height: 6em;\n  }\n\n  .menu__icon {\n    display: none;\n  }\n\n  .header__logo {\n    content: url(\"../../../assets/images/logo-v.png\");\n    max-width: 3rem;\n  }\n\n  .menu__text {\n    display: flex;\n    height: 100%;\n    align-items: center;\n  }\n\n  .menu__link-icon {\n    margin-top: .55em !important;\n  }\n}\n\n@media screen and (min-width: 620px) {\n  .menu__link {\n    font-size: .95rem;\n  }\n\n  .header__spacer {\n    display: list-item;\n  }\n\n  .header__logo {\n    margin: 0 1rem 0 2rem;\n  }\n\n  .menu__link-icon {\n    margin-right: 2rem !important;\n  }\n}\n\n@media screen and (min-width: 1100px) {\n  .header__menu {\n    max-width: 1200px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu             Home        About        Platforms        Contact Us                                    Home          About          Platforms          Contact Us             '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                supportedPlatforms$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            supportedPlatforms$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.dataService.getTechnologies()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {DataService} from '../core/services/data.service';\n\n@Component({\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n  supportedPlatforms$ = this.dataService.getTechnologies();\n\n  constructor(private dataService: DataService) {\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                :host {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoResource.html":{"url":"interfaces/InfoResource.html","title":"interface - InfoResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InfoResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/info.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing an information resource related to a specific technology category.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        reference\n                                \n                                \n                                        resource\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference\n                                    \n                                \n                                \n                                    \n                                        reference:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource\n                                    \n                                \n                                \n                                    \n                                        resource:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface InfoResourceSection {\n  id: string;\n  title: string;\n  description: string;\n  technologyCategory: string;\n  resources: InfoResource[];\n}\n\n/**\n * An interface representing an information resource related to a specific technology category.\n */\nexport interface InfoResource {\n  id?: string;\n  resource: string;\n  reference: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoResourceSection.html":{"url":"interfaces/InfoResourceSection.html","title":"interface - InfoResourceSection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InfoResourceSection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/info.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a section grouping information resources.\nSuch sections represent different categories of additional information, e.g., research publications, blog posts, etc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        resources\n                                \n                                \n                                        technologyCategory\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resources\n                                    \n                                \n                                \n                                    \n                                        resources:         InfoResource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InfoResource[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface InfoResourceSection {\n  id: string;\n  title: string;\n  description: string;\n  technologyCategory: string;\n  resources: InfoResource[];\n}\n\n/**\n * An interface representing an information resource related to a specific technology category.\n */\nexport interface InfoResource {\n  id?: string;\n  resource: string;\n  reference: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationComponent.html":{"url":"components/InformationComponent.html","title":"component - InformationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InformationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/information.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-information\n            \n\n            \n                styleUrls\n                ./information.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                framework\n                            \n                            \n                                    Readonly\n                                navLinks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/information/information.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            framework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassificationFramework\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information/information.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            navLinks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {location: 'framework', label: 'Framework', icon: 'menu_book'},\n    {location: 'resources', label: 'Resources', icon: 'library_books'}\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information/information.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ClassificationFramework} from '../shared/interfaces/classification';\n\n@Component({\n  selector: 'app-information',\n  templateUrl: './information.component.html',\n  styleUrls: ['./information.component.scss']\n})\nexport class InformationComponent {\n  readonly navLinks = [\n    {location: 'framework', label: 'Framework', icon: 'menu_book'},\n    {location: 'resources', label: 'Resources', icon: 'library_books'}\n  ];\n  framework: ClassificationFramework;\n\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      {{ link.label }}\n    \n  \n\n\n\n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./information.component.scss\n                \n                @import \"../_scss/shared\";\n\n:host {\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.info-tabs {\n  width: 100%;\n  color: white;\n  display: flex;\n}\n\n.info-tabs__links {\n  width: 100%;\n  display: flex;\n  margin: 0 auto;\n}\n\n.info-tabs--link {\n  flex: 1 1 auto;\n  font-size: .8rem;\n}\n\n.info-main {\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  width: 100%;\n}\n\n@media screen and (min-width: 1100px) {\n  .info-tabs__links {\n    max-width: 1200px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ link.label }}              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InformationModule.html":{"url":"modules/InformationModule.html","title":"module - InformationModule","body":"\n                   \n\n\n\n\n    Modules\n    InformationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InformationModule\n\n\n\ncluster_InformationModule_declarations\n\n\n\ncluster_InformationModule_imports\n\n\n\n\nFaqComponent\n\nFaqComponent\n\n\n\nInformationModule\n\nInformationModule\n\nInformationModule -->\n\nFaqComponent->InformationModule\n\n\n\n\n\nFrameworkComponent\n\nFrameworkComponent\n\nInformationModule -->\n\nFrameworkComponent->InformationModule\n\n\n\n\n\nInformationComponent\n\nInformationComponent\n\nInformationModule -->\n\nInformationComponent->InformationModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nInformationModule -->\n\nResourcesComponent->InformationModule\n\n\n\n\n\nInformationRoutingModule\n\nInformationRoutingModule\n\nInformationModule -->\n\nInformationRoutingModule->InformationModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nInformationModule -->\n\nSharedModule->InformationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/information/information.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FaqComponent\n                        \n                        \n                            FrameworkComponent\n                        \n                        \n                            InformationComponent\n                        \n                        \n                            ResourcesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InformationRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ResourcesComponent} from './resources/resources.component';\nimport {FaqComponent} from './faq/faq.component';\nimport {InformationComponent} from './information.component';\nimport {InformationRoutingModule} from './information-routing.module';\nimport {SharedModule} from '../shared/shared.module';\nimport {ResourcesResolver} from './resolvers/resources-resolver.service';\nimport {FrameworkComponent} from './framework/framework.component';\n\n@NgModule({\n  declarations: [ResourcesComponent, FaqComponent, InformationComponent, FrameworkComponent],\n  imports: [CommonModule, SharedModule, InformationRoutingModule],\n  providers: [ResourcesResolver]\n})\nexport class InformationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InformationRoutingModule.html":{"url":"modules/InformationRoutingModule.html","title":"module - InformationRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    InformationRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/information/information-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ResourcesComponent} from './resources/resources.component';\nimport {FaqComponent} from './faq/faq.component';\nimport {InformationComponent} from './information.component';\nimport {FrameworkResolver} from './resolvers/framework-resolver.service';\nimport {ResourcesResolver} from './resolvers/resources-resolver.service';\nimport {FrameworkComponent} from './framework/framework.component';\n\nconst infoRoutes: Routes = [\n  {\n    path: '',\n    component: InformationComponent,\n    children: [\n      {path: '', pathMatch: 'full', redirectTo: 'framework'},\n      {path: 'framework', component: FrameworkComponent, resolve: {resolvedData: FrameworkResolver}},\n      {path: 'resources', component: ResourcesComponent, resolve: {resolvedData: ResourcesResolver}},\n      {path: 'faq', component: FaqComponent}\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(infoRoutes)],\n  exports: [RouterModule]\n})\nexport class InformationRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoLocatorService.html":{"url":"injectables/LogoLocatorService.html","title":"injectable - LogoLocatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogoLocatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/logo-locator.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                platformLogoDir\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLogoPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/logo-locator.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLogoPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetLogoPath(logoLocator: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/logo-locator.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logoLocator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            platformLogoDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/images/vendor/logo/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/logo-locator.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class LogoLocatorService {\n  static readonly platformLogoDir = '/assets/images/vendor/logo/';\n\n  constructor() {\n  }\n\n  getLogoPath(logoLocator: string) {\n    return LogoLocatorService.platformLogoDir\n      .concat(logoLocator)\n      .concat(Extension.png);\n  }\n}\n\nenum Extension {\n  png = '.png',\n  jpg = '.jpg',\n  jpeg = '.jpeg',\n  svg = '.svg'\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatListModule} from '@angular/material/list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatRadioModule} from '@angular/material/radio';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatProgressSpinnerModule,\n    MatListModule,\n    MatCardModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatTreeModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatSliderModule,\n    MatRadioModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatProgressSpinnerModule,\n    MatListModule,\n    MatCardModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatTreeModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatSliderModule,\n    MatRadioModule\n  ]\n})\nexport class MaterialModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/overview/overview.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                ./overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                supportedPlatforms$\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/overview/overview.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        supportedPlatforms$\n                    \n                \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/overview/overview.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Technology} from '../../shared/interfaces/technology';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent {\n  @Input() supportedPlatforms$: Observable;\n\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n  Reviewed Platforms\n  \n    Explore the list of reviewed platforms which includes commercial and open source products.\n  \n\n  \n    \n      \n        \n          \n            \n          \n        \n      \n    \n\n    \n      Browse Platforms\n    \n  \n\n\n\n    \n\n    \n                \n                    ./overview.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n  @include bg-grey;\n}\n\n.platforms {\n  width: 95%;\n  margin-bottom: 1.5rem;\n}\n\n.platforms__container {\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n}\n\n\n.platforms__logos {\n  flex: 1 1 auto;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  justify-items: center;\n  grid-gap: .5rem;\n  list-style: none;\n  padding: .5rem;\n}\n\n.platforms__item {\n  margin: .5rem;\n\n  align-self: center;\n}\n\n.platforms__button {\n  width: 50%;\n}\n\n.platforms__logo {\n  max-width: 70%;\n  height: auto;\n  object-fit: cover;\n  vertical-align: bottom;\n  justify-self: center;\n  opacity: .7;\n  transition: opacity .5s ease-out;\n  -moz-transition: opacity .5s ease-out;\n  -webkit-transition: opacity .5s ease-out;\n  -o-transition: opacity .5s ease-out;\n\n  &:hover {\n    opacity: 1;\n  }\n}\n\n@media screen and (min-width: 550px) {\n  .platforms__logos {\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n  }\n\n  .platforms__button {\n    width: 35%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Reviewed Platforms      Explore the list of reviewed platforms which includes commercial and open source products.                                                                                  Browse Platforms      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/page-not-found/page-not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/page-not-found/page-not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/page-not-found/page-not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  Title\n\n\nPage not found\n\n\n\n    \n\n    \n                \n                    ./page-not-found.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    TitlePage not found'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RandomColorService.html":{"url":"injectables/RandomColorService.html","title":"injectable - RandomColorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RandomColorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/random-color.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRandomColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/random-color.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRandomColor\n                        \n                        \n                    \n                \n            \n            \n                \ngetRandomColor(hue?, luminosity?, count?, seed?, format?, alpha?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/random-color.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hue\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    luminosity\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    count\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    seed\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    format\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    alpha\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\ndeclare let randomColor: any;\n\n@Injectable()\nexport class RandomColorService {\n\n  constructor() {\n  }\n\n  getRandomColor(hue?, luminosity?, count?, seed?, format?, alpha?) {\n    return randomColor({\n      hue: hue, luminosity: luminosity, count: count, seed: seed, format: format, alpha: alpha\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RenderedFilterBlock.html":{"url":"interfaces/RenderedFilterBlock.html","title":"interface - RenderedFilterBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RenderedFilterBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        blockIcon\n                                \n                                \n                                        blockName\n                                \n                                \n                                        filters\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockIcon\n                                    \n                                \n                                \n                                    \n                                        blockIcon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockName\n                                    \n                                \n                                \n                                    \n                                        blockName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         CriterionFilterConfiguration[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterConfiguration[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RenderedFilterBlock {\n  blockName: string;\n  blockIcon?: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  filterId: string;\n  technologyCategory: string;\n  name: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  criterionId: string;\n  displayName: string;\n  filterType: CriterionFilterType;\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n *\n * @remarks\n * Available options:\n * -- bool:  indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n * -- lte: indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n * -- gte: indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n * -- containsOne: at least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n * -- containsAny: at least 1 arbitrary text value must be contained, translates to a toggle in the UI\n * -- containsAll: all specified text values must be contained, translates to a group of checkboxes in the UI\n * -- excludesAll: all specified text values must not be contained, translates to a group of checkboxes in the UI\n */\nexport enum CriterionFilterType {\n  bool = 'bool',\n  lte = 'lte',\n  gte = 'gte',\n  containsOne = 'containsOne',\n  containsAny = 'containsAny',\n  containsAll = 'containsAll',\n  excludesAll = 'excludesAll'\n}\n\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\nexport interface CriterionFilterValue {\n  filterType?: CriterionFilterType;\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourcesComponent.html":{"url":"components/ResourcesComponent.html","title":"component - ResourcesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourcesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information/resources/resources.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-resources\n            \n\n            \n                styleUrls\n                ./resources.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./resources.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resources\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/resources/resources.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resources/resources.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resources/resources.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InfoResourceSection[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information/resources/resources.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information/resources/resources.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {InfoResourceSection} from '../../shared/interfaces/info';\n\n@Component({\n  selector: 'app-resources',\n  templateUrl: './resources.component.html',\n  styleUrls: ['./resources.component.scss']\n})\nexport class ResourcesComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n  resources: InfoResourceSection[];\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.route.data.subscribe(data => {\n      this.resources = data['resolvedData'];\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    {{section.title}}\n  \n  \n    {{section.description}}\n  \n\n  \n    [{{i + 1}}]\n    \n      {{res.resource}}\n      (reference)\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./resources.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{section.title}}        {{section.description}}        [{{i + 1}}]          {{res.resource}}      (reference)      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResourcesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ResourcesResolver.html":{"url":"guards/ResourcesResolver.html","title":"guard - ResourcesResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ResourcesResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/information/resolvers/resources-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/information/resolvers/resources-resolver.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/information/resolvers/resources-resolver.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {DataService} from '../../core/services/data.service';\nimport {InfoResourceSection} from '../../shared/interfaces/info';\n\n@Injectable()\nexport class ResourcesResolver implements Resolve {\n\n  constructor(private dataService: DataService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    return this.dataService.getInfoResources();\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SetToArrayPipe.html":{"url":"pipes/SetToArrayPipe.html","title":"pipe - SetToArrayPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SetToArrayPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/set-to-array.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        setToArray\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: Set)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/set-to-array.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'setToArray'\n})\nexport class SetToArrayPipe implements PipeTransform {\n  transform(value: Set) {\n    return Array.from(value);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_imports\n\n\n\n\nBottomNavComponent\n\nBottomNavComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nBottomNavComponent->SharedModule\n\n\n\n\n\nChildGroupingComponent\n\nChildGroupingComponent\n\nSharedModule -->\n\nChildGroupingComponent->SharedModule\n\n\n\n\n\nCriterionComponent\n\nCriterionComponent\n\nSharedModule -->\n\nCriterionComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nFrameworkRendererComponent\n\nFrameworkRendererComponent\n\nSharedModule -->\n\nFrameworkRendererComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nSharedModule -->\n\nPageNotFoundComponent->SharedModule\n\n\n\n\n\nSetToArrayPipe\n\nSetToArrayPipe\n\nSharedModule -->\n\nSetToArrayPipe->SharedModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nSharedModule -->\n\nTruncatePipe->SharedModule\n\n\n\n\n\nYesNoPipe\n\nYesNoPipe\n\nSharedModule -->\n\nYesNoPipe->SharedModule\n\n\n\n\n\nBottomNavComponent \n\nBottomNavComponent \n\nBottomNavComponent  -->\n\nSharedModule->BottomNavComponent \n\n\n\n\n\nChildGroupingComponent \n\nChildGroupingComponent \n\nChildGroupingComponent  -->\n\nSharedModule->ChildGroupingComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nFrameworkRendererComponent \n\nFrameworkRendererComponent \n\nFrameworkRendererComponent  -->\n\nSharedModule->FrameworkRendererComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nPageNotFoundComponent \n\nPageNotFoundComponent \n\nPageNotFoundComponent  -->\n\nSharedModule->PageNotFoundComponent \n\n\n\n\n\nSetToArrayPipe \n\nSetToArrayPipe \n\nSetToArrayPipe  -->\n\nSharedModule->SetToArrayPipe \n\n\n\n\n\nTruncatePipe \n\nTruncatePipe \n\nTruncatePipe  -->\n\nSharedModule->TruncatePipe \n\n\n\n\n\nYesNoPipe \n\nYesNoPipe \n\nYesNoPipe  -->\n\nSharedModule->YesNoPipe \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BottomNavComponent\n                        \n                        \n                            ChildGroupingComponent\n                        \n                        \n                            CriterionComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            FrameworkRendererComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            SetToArrayPipe\n                        \n                        \n                            TruncatePipe\n                        \n                        \n                            YesNoPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BottomNavComponent\n                        \n                        \n                            ChildGroupingComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            FrameworkRendererComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            SetToArrayPipe\n                        \n                        \n                            TruncatePipe\n                        \n                        \n                            YesNoPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MaterialModule} from './material.module';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\nimport {RouterModule} from '@angular/router';\nimport {TruncatePipe} from './truncate.pipe';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ChildGroupingComponent} from './child-grouping/child-grouping.component';\nimport {SetToArrayPipe} from './set-to-array.pipe';\nimport {CriterionComponent} from './criterion/criterion.component';\nimport {HeaderComponent} from './header/header.component';\nimport {FooterComponent} from './footer/footer.component';\nimport {FrameworkResolver} from '../information/resolvers/framework-resolver.service';\nimport {FrameworkRendererComponent} from './framework-renderer/framework-renderer.component';\nimport {BottomNavComponent} from './bottom-nav/bottom-nav.component';\nimport {YesNoPipe} from './yes-no.pipe';\n\n@NgModule({\n  declarations: [\n    PageNotFoundComponent,\n    TruncatePipe,\n    SetToArrayPipe,\n    YesNoPipe,\n    ChildGroupingComponent,\n    CriterionComponent,\n    HeaderComponent,\n    FooterComponent,\n    FrameworkRendererComponent,\n    BottomNavComponent\n  ],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MaterialModule, RouterModule],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    PageNotFoundComponent,\n    TruncatePipe,\n    SetToArrayPipe,\n    YesNoPipe,\n    ChildGroupingComponent,\n    HeaderComponent,\n    FooterComponent,\n    FrameworkRendererComponent,\n    BottomNavComponent\n  ],\n  providers: [FrameworkResolver]\n})\nexport class SharedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDataSource.html":{"url":"interfaces/SimpleDataSource.html","title":"interface - SimpleDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datasource.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DataSource\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connect\n                                \n                                \n                                    disconnect\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, combineLatest, Observable, of} from 'rxjs';\nimport {map, shareReplay, switchMap} from 'rxjs/operators';\nimport {Technology} from './interfaces/technology';\nimport {PageEvent} from '@angular/material/paginator';\nimport {CriteriaBasedQuery, CriterionFilterType, CriterionFilterValue} from './interfaces/filtering';\nimport {CriterionInstance} from './interfaces/classification';\n\nexport interface SimpleDataSource extends DataSource {\n  connect(): Observable;\n\n  disconnect(): void;\n}\n\nexport interface Sort {\n  property: keyof T\n  order: 'asc' | 'desc'\n}\n\nexport class TechnologyDataSource implements SimpleDataSource {\n  private readonly data: Technology[];\n  private readonly pageNumber = new BehaviorSubject(0);\n  private readonly sort: BehaviorSubject>;\n  private readonly criteriaBasedQuery: BehaviorSubject;\n  private readonly nameBasedQuery: BehaviorSubject;\n\n  public isPaginated = true;\n  public totalInputSize: number;\n  public currentIndex: number = 0;\n  public pageNumber$ = this.pageNumber.asObservable();\n  public filteredData$: Observable;\n  public paginatedData$: Observable;\n\n  constructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, public pageSize = 10) {\n    this.data = data;\n    this.sort = new BehaviorSubject>(initialSort);\n    this.criteriaBasedQuery = new BehaviorSubject(initialQuery);\n    this.nameBasedQuery = new BehaviorSubject(undefined);\n\n    this.filteredData$ = combineLatest([this.criteriaBasedQuery, this.nameBasedQuery, this.sort]).pipe(\n      switchMap(([criteriaQuery, nameQuery, sort]) => {\n          let result = this.processData(this.data, criteriaQuery, nameQuery, sort);\n          this.totalInputSize = result.length;\n          return of(result);\n        }\n      ),\n      shareReplay(1)\n    );\n\n    this.paginatedData$ = combineLatest([this.filteredData$, this.pageNumber$]).pipe(\n      map(([data, pageNumber]) => {\n        let startIndex = pageNumber * this.pageSize;\n        let endIndex = startIndex + this.pageSize;\n        if (endIndex > data.length) {\n          endIndex = data.length;\n        }\n        return data.slice(startIndex, endIndex);\n      })\n    );\n  }\n\n  sortBy(sort: Partial>): void {\n    const lastSort = this.sort.getValue();\n    const nextSort = {...lastSort, ...sort};\n    this.sort.next(nextSort);\n  }\n\n  queryByCriteria(query: CriteriaBasedQuery): void {\n    const lastQuery = this.criteriaBasedQuery.getValue();\n    const nextQuery = {...lastQuery, ...query};\n    console.log('new query:');\n    this.pruneQuery(nextQuery);\n    console.log(nextQuery);\n    this.criteriaBasedQuery.next(nextQuery);\n  }\n\n  queryByName(query: string): void {\n    this.nameBasedQuery.next(query);\n  }\n\n  fetch(event: PageEvent): void {\n    this.pageSize = event.pageSize;\n    this.pageNumber.next(event.pageIndex);\n    this.currentIndex = event.pageIndex;\n  }\n\n  togglePagination(): void {\n    this.isPaginated = !this.isPaginated;\n  }\n\n  connect(): Observable {\n    if (this.isPaginated) {\n      return this.paginatedData$;\n    }\n    return this.filteredData$;\n  }\n\n  disconnect(): void {\n  }\n\n  private processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort): Technology[] {\n    let result: Technology[] = data;\n    if (nameQuery) {\n      result = data.filter(platform => nameQuery ? platform.platformName.toLocaleLowerCase().includes(nameQuery) : true);\n    }\n\n    if (criteriaQuery && Object.keys(criteriaQuery).length !== 0) {\n      Object.keys(criteriaQuery).forEach(key => {\n        if (TechnologyDataSource.canFilter(criteriaQuery[key])) {\n          result = result.filter(t => {\n            let filteringResult = false;\n            if (t.dossier.reviewedCriteria.has(key)) {\n              filteringResult = this.getFilteringResult(criteriaQuery[key], t.dossier.reviewedCriteria.get(key));\n            }\n            return filteringResult;\n          });\n        }\n      });\n      console.log('found: ' + result.length);\n    }\n\n    if (sort && sort.order === 'asc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? 1 : -1);\n    } else if (sort && sort.order === 'desc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? -1 : 1);\n    }\n\n    return result;\n  }\n\n  private static canFilter(filterValue: CriterionFilterValue): boolean {\n    if (filterValue.filterType && filterValue.filterType === CriterionFilterType.lte) {\n      return typeof filterValue.value === 'number';\n    } else if (filterValue.filterType && filterValue.filterType === CriterionFilterType.containsAll ||\n      filterValue.filterType === CriterionFilterType.containsOne ||\n      filterValue.filterType === CriterionFilterType.excludesAll) {\n      let v = filterValue.value as string[];\n      return v && v.length > 0;\n    } else if (filterValue.filterType === CriterionFilterType.bool || filterValue.filterType === CriterionFilterType.containsAny) {\n      return typeof filterValue.value === 'boolean';\n    }\n\n    return false;\n  }\n\n  private pruneQuery(nextQuery: { [p: string]: CriterionFilterValue }) {\n    let keysToDelete = [];\n    Object.keys(nextQuery).forEach(key => {\n        if (nextQuery[key].filterType === null) {\n          keysToDelete.push(key);\n        } else if (nextQuery[key].filterType === CriterionFilterType.bool ||\n          nextQuery[key].filterType === CriterionFilterType.containsAny ||\n          nextQuery[key].filterType === CriterionFilterType.lte) {\n          if (nextQuery[key].value === null) {\n            keysToDelete.push(key);\n          }\n        } else if (nextQuery[key].filterType === CriterionFilterType.containsOne ||\n          nextQuery[key].filterType === CriterionFilterType.containsAll ||\n          nextQuery[key].filterType === CriterionFilterType.excludesAll) {\n          let valueToCheck = nextQuery[key].value as string[];\n          if (valueToCheck.length === 0) {\n            keysToDelete.push(key);\n          }\n        }\n      }\n    );\n    keysToDelete.forEach(key => delete nextQuery[key]);\n  }\n\n  private getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    if (filterValue.filterType === CriterionFilterType.containsAny) {\n      return TechnologyDataSource.containsAny(filterValue, reviewedCriterion);\n    }\n\n    for (let reviewValue of reviewedCriterion.values) {\n      if (filterValue.filterType === CriterionFilterType.lte) {\n        return reviewedCriterion.values[0].value  allValues.push(v.value));\n        let target = Array.from(filterValue.value as string[]);\n\n        if (filterValue.filterType === CriterionFilterType.containsAll) {\n          return target.every(v => allValues.includes(v));\n        } else if (filterValue.filterType === CriterionFilterType.excludesAll) {\n          return target.every(v => !allValues.includes(v));\n        }\n      }\n    }\n  }\n\n  private static containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValue = filterValue.value as boolean;\n    if (chosenValue) {\n      return Array.from(reviewedCriterion.values).length > 0;\n    } else {\n      return Array.from(reviewedCriterion.values).length === 0;\n    }\n  }\n\n  private static containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValues = filterValue.value as string[];\n    if (chosenValues && chosenValues.length > 0) {\n      for (let entry of reviewedCriterion.values) {\n        let value = entry.value as string;\n        if (chosenValues.indexOf(value) !== -1) {\n          return true;\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sort.html":{"url":"interfaces/Sort.html","title":"interface - Sort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Sort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datasource.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        order\n                                \n                                \n                                        property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:     \"asc\" | \"desc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"asc\" | \"desc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                    \n                                \n                                \n                                    \n                                        property:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, combineLatest, Observable, of} from 'rxjs';\nimport {map, shareReplay, switchMap} from 'rxjs/operators';\nimport {Technology} from './interfaces/technology';\nimport {PageEvent} from '@angular/material/paginator';\nimport {CriteriaBasedQuery, CriterionFilterType, CriterionFilterValue} from './interfaces/filtering';\nimport {CriterionInstance} from './interfaces/classification';\n\nexport interface SimpleDataSource extends DataSource {\n  connect(): Observable;\n\n  disconnect(): void;\n}\n\nexport interface Sort {\n  property: keyof T\n  order: 'asc' | 'desc'\n}\n\nexport class TechnologyDataSource implements SimpleDataSource {\n  private readonly data: Technology[];\n  private readonly pageNumber = new BehaviorSubject(0);\n  private readonly sort: BehaviorSubject>;\n  private readonly criteriaBasedQuery: BehaviorSubject;\n  private readonly nameBasedQuery: BehaviorSubject;\n\n  public isPaginated = true;\n  public totalInputSize: number;\n  public currentIndex: number = 0;\n  public pageNumber$ = this.pageNumber.asObservable();\n  public filteredData$: Observable;\n  public paginatedData$: Observable;\n\n  constructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, public pageSize = 10) {\n    this.data = data;\n    this.sort = new BehaviorSubject>(initialSort);\n    this.criteriaBasedQuery = new BehaviorSubject(initialQuery);\n    this.nameBasedQuery = new BehaviorSubject(undefined);\n\n    this.filteredData$ = combineLatest([this.criteriaBasedQuery, this.nameBasedQuery, this.sort]).pipe(\n      switchMap(([criteriaQuery, nameQuery, sort]) => {\n          let result = this.processData(this.data, criteriaQuery, nameQuery, sort);\n          this.totalInputSize = result.length;\n          return of(result);\n        }\n      ),\n      shareReplay(1)\n    );\n\n    this.paginatedData$ = combineLatest([this.filteredData$, this.pageNumber$]).pipe(\n      map(([data, pageNumber]) => {\n        let startIndex = pageNumber * this.pageSize;\n        let endIndex = startIndex + this.pageSize;\n        if (endIndex > data.length) {\n          endIndex = data.length;\n        }\n        return data.slice(startIndex, endIndex);\n      })\n    );\n  }\n\n  sortBy(sort: Partial>): void {\n    const lastSort = this.sort.getValue();\n    const nextSort = {...lastSort, ...sort};\n    this.sort.next(nextSort);\n  }\n\n  queryByCriteria(query: CriteriaBasedQuery): void {\n    const lastQuery = this.criteriaBasedQuery.getValue();\n    const nextQuery = {...lastQuery, ...query};\n    console.log('new query:');\n    this.pruneQuery(nextQuery);\n    console.log(nextQuery);\n    this.criteriaBasedQuery.next(nextQuery);\n  }\n\n  queryByName(query: string): void {\n    this.nameBasedQuery.next(query);\n  }\n\n  fetch(event: PageEvent): void {\n    this.pageSize = event.pageSize;\n    this.pageNumber.next(event.pageIndex);\n    this.currentIndex = event.pageIndex;\n  }\n\n  togglePagination(): void {\n    this.isPaginated = !this.isPaginated;\n  }\n\n  connect(): Observable {\n    if (this.isPaginated) {\n      return this.paginatedData$;\n    }\n    return this.filteredData$;\n  }\n\n  disconnect(): void {\n  }\n\n  private processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort): Technology[] {\n    let result: Technology[] = data;\n    if (nameQuery) {\n      result = data.filter(platform => nameQuery ? platform.platformName.toLocaleLowerCase().includes(nameQuery) : true);\n    }\n\n    if (criteriaQuery && Object.keys(criteriaQuery).length !== 0) {\n      Object.keys(criteriaQuery).forEach(key => {\n        if (TechnologyDataSource.canFilter(criteriaQuery[key])) {\n          result = result.filter(t => {\n            let filteringResult = false;\n            if (t.dossier.reviewedCriteria.has(key)) {\n              filteringResult = this.getFilteringResult(criteriaQuery[key], t.dossier.reviewedCriteria.get(key));\n            }\n            return filteringResult;\n          });\n        }\n      });\n      console.log('found: ' + result.length);\n    }\n\n    if (sort && sort.order === 'asc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? 1 : -1);\n    } else if (sort && sort.order === 'desc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? -1 : 1);\n    }\n\n    return result;\n  }\n\n  private static canFilter(filterValue: CriterionFilterValue): boolean {\n    if (filterValue.filterType && filterValue.filterType === CriterionFilterType.lte) {\n      return typeof filterValue.value === 'number';\n    } else if (filterValue.filterType && filterValue.filterType === CriterionFilterType.containsAll ||\n      filterValue.filterType === CriterionFilterType.containsOne ||\n      filterValue.filterType === CriterionFilterType.excludesAll) {\n      let v = filterValue.value as string[];\n      return v && v.length > 0;\n    } else if (filterValue.filterType === CriterionFilterType.bool || filterValue.filterType === CriterionFilterType.containsAny) {\n      return typeof filterValue.value === 'boolean';\n    }\n\n    return false;\n  }\n\n  private pruneQuery(nextQuery: { [p: string]: CriterionFilterValue }) {\n    let keysToDelete = [];\n    Object.keys(nextQuery).forEach(key => {\n        if (nextQuery[key].filterType === null) {\n          keysToDelete.push(key);\n        } else if (nextQuery[key].filterType === CriterionFilterType.bool ||\n          nextQuery[key].filterType === CriterionFilterType.containsAny ||\n          nextQuery[key].filterType === CriterionFilterType.lte) {\n          if (nextQuery[key].value === null) {\n            keysToDelete.push(key);\n          }\n        } else if (nextQuery[key].filterType === CriterionFilterType.containsOne ||\n          nextQuery[key].filterType === CriterionFilterType.containsAll ||\n          nextQuery[key].filterType === CriterionFilterType.excludesAll) {\n          let valueToCheck = nextQuery[key].value as string[];\n          if (valueToCheck.length === 0) {\n            keysToDelete.push(key);\n          }\n        }\n      }\n    );\n    keysToDelete.forEach(key => delete nextQuery[key]);\n  }\n\n  private getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    if (filterValue.filterType === CriterionFilterType.containsAny) {\n      return TechnologyDataSource.containsAny(filterValue, reviewedCriterion);\n    }\n\n    for (let reviewValue of reviewedCriterion.values) {\n      if (filterValue.filterType === CriterionFilterType.lte) {\n        return reviewedCriterion.values[0].value  allValues.push(v.value));\n        let target = Array.from(filterValue.value as string[]);\n\n        if (filterValue.filterType === CriterionFilterType.containsAll) {\n          return target.every(v => allValues.includes(v));\n        } else if (filterValue.filterType === CriterionFilterType.excludesAll) {\n          return target.every(v => !allValues.includes(v));\n        }\n      }\n    }\n  }\n\n  private static containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValue = filterValue.value as boolean;\n    if (chosenValue) {\n      return Array.from(reviewedCriterion.values).length > 0;\n    } else {\n      return Array.from(reviewedCriterion.values).length === 0;\n    }\n  }\n\n  private static containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValues = filterValue.value as string[];\n    if (chosenValues && chosenValues.length > 0) {\n      for (let entry of reviewedCriterion.values) {\n        let value = entry.value as string;\n        if (chosenValues.indexOf(value) !== -1) {\n          return true;\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableColumn.html":{"url":"classes/TableColumn.html","title":"class - TableColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/technologies/technology-table/technology-table.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                colSpan\n                            \n                            \n                                displayName\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            colSpan\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {TechnologyDataSource} from '../../shared/datasource';\nimport {ClassificationFramework, CriteriaGrouping} from '../../shared/interfaces/classification';\nimport {TechnologyFilterConfiguration} from '../../shared/interfaces/filtering';\nimport {MatSidenav} from '@angular/material/sidenav';\n\nexport class TableColumn {\n  id: string;\n  displayName: string;\n  colSpan?: number;\n  color?: string;\n}\n\n@Component({\n  selector: 'app-technology-table',\n  templateUrl: './technology-table.component.html',\n  styleUrls: ['./technology-table.component.scss']\n})\nexport class TechnologyTableComponent implements OnInit {\n  @Input() dataSource: TechnologyDataSource;\n  @Input() framework: ClassificationFramework;\n  @Input() filterConfiguration: TechnologyFilterConfiguration;\n  @Input() sidenav: MatSidenav;\n\n  @ViewChild('content') tableContainer: ElementRef;\n\n  criteriaColumns: TableColumn[] = [];\n  groupingColumns: TableColumn[] = [];\n  groupingColumnIds: string[] = ['techNameHeader'];\n\n  columnsToDisplay = ['techName'];\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n    this.framework.viewCombinations.forEach(viewComb => {\n      if (viewComb.default) {\n        viewComb.views.forEach(view => {\n          let groupingColumns: TableColumn[] = [];\n          Array.from(view.groupings).forEach((grouping, index) => {\n            let color = index % 2 === 0 ? '#ccc' : 'white';\n            this.generateGroupingColumns(grouping, groupingColumns, color);\n          });\n          if (groupingColumns.length > 0) {\n            this.groupingColumns.push(...groupingColumns);\n            let viewColspan = 0;\n            groupingColumns.forEach(c => {\n              if (c.colSpan) {\n                viewColspan += c.colSpan;\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  private generateGroupingColumns(grouping: CriteriaGrouping, groupingColumns: TableColumn[], color:string, parentGroupingName?: string) {\n    let counter = 0;\n    grouping.criteria.forEach((c, index) => {\n      this.criteriaColumns.push({\n        id: c.id,\n        displayName: c.name,\n        color: color\n      } as TableColumn);\n      this.columnsToDisplay.push(c.id);\n      counter += 1;\n    });\n    if (counter > 0) {\n      let name = parentGroupingName ? parentGroupingName.concat('.').concat(grouping.name) : grouping.name;\n      groupingColumns.push({\n        id: grouping.id,\n        displayName: name,\n        color: color,\n        colSpan: counter\n      } as TableColumn);\n      this.groupingColumnIds.push(grouping.id);\n    }\n    if (grouping.groupings) {\n      grouping.groupings.forEach(g => this.generateGroupingColumns(g, groupingColumns, color, grouping.name));\n    }\n  }\n\n  scrollLeft() {\n    this.tableContainer.nativeElement.scrollLeft -= 150;\n  }\n\n  scrollRight() {\n    this.tableContainer.nativeElement.scrollLeft += 150;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologiesComponent.html":{"url":"components/TechnologiesComponent.html","title":"component - TechnologiesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TechnologiesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technologies.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technologies\n            \n\n            \n                styleUrls\n                ./technologies.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technologies.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                browsingMode\n                            \n                            \n                                dataSource\n                            \n                            \n                                filterConfiguration\n                            \n                            \n                                framework\n                            \n                            \n                                groupings\n                            \n                            \n                                mobileQuery\n                            \n                            \n                                renderedFilter\n                            \n                            \n                                sidenav\n                            \n                            \n                                subscriptions\n                            \n                            \n                                technologies\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractGroupings\n                            \n                            \n                                    Private\n                                generateFilterStructure\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onQueryUpdate\n                            \n                            \n                                    Private\n                                populateRenderBlocks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, route: ActivatedRoute, fb: FormBuilder, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technologies.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                    MediaMatcher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractGroupings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractGroupings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateFilterStructure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateFilterStructure()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onQueryUpdate\n                        \n                        \n                    \n                \n            \n            \n                \nonQueryUpdate($event: CriteriaBasedQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                CriteriaBasedQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            populateRenderBlocks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populateRenderBlocks(grouping: CriteriaGrouping, filterLookup: Map, placement: Map, parentGroup?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grouping\n                                    \n                                                CriteriaGrouping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filterLookup\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    placement\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            browsingMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'explore'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TechnologyDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterConfiguration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TechnologyFilterConfiguration\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            framework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassificationFramework\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CriteriaGrouping[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobileQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MediaQueryList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderedFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RenderedFilterBlock[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('sidenav')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            technologies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Technology[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technologies.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {DataService} from '../core/services/data.service';\nimport {Subscription} from 'rxjs';\nimport {Technology} from '../shared/interfaces/technology';\nimport {ActivatedRoute} from '@angular/router';\nimport {TechnologyDataSource} from '../shared/datasource';\nimport {ClassificationFramework, CriteriaGrouping} from '../shared/interfaces/classification';\nimport {\n  CriteriaBasedQuery,\n  CriterionFilterConfiguration,\n  RenderedFilterBlock,\n  TechnologyFilterConfiguration\n} from '../shared/interfaces/filtering';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {MediaMatcher} from '@angular/cdk/layout';\nimport {FormBuilder} from '@angular/forms';\n\n@Component({\n  selector: 'app-technologies',\n  templateUrl: './technologies.component.html',\n  styleUrls: ['./technologies.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TechnologiesComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n  technologies: Technology[];\n  framework: ClassificationFramework;\n  filterConfiguration: TechnologyFilterConfiguration;\n  groupings: CriteriaGrouping[] = [];\n\n  dataSource: TechnologyDataSource;\n  browsingMode = 'explore';\n\n  renderedFilter: RenderedFilterBlock[] = [];\n\n  @ViewChild('sidenav') sidenav: MatSidenav;\n  mobileQuery: MediaQueryList;\n\n  constructor(\n    private dataService: DataService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private changeDetectorRef: ChangeDetectorRef,\n    private media: MediaMatcher\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 850px)');\n    this.mobileQuery.addEventListener('change', () => changeDetectorRef.detectChanges());\n  }\n\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.route.queryParams.subscribe(params => {\n        const mode = params['browsingMode'];\n        if (mode) {\n          this.browsingMode = mode;\n        }\n      })\n    );\n\n    this.subscriptions.push(\n      this.route.data.subscribe(data => {\n        this.technologies = data['resolvedData'][0];\n        this.dataSource = new TechnologyDataSource(this.technologies, {property: 'platformName', order: 'asc'}, {});\n        this.framework = data['resolvedData'][1];\n        this.filterConfiguration = data['resolvedData'][2];\n\n        this.extractGroupings();\n        this.generateFilterStructure();\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private extractGroupings() {\n    for (let vc of this.framework.viewCombinations) {\n      if (vc.default) {\n        vc.views.forEach(v => this.groupings.push(...Array.from(v.groupings)));\n        break;\n      }\n    }\n  }\n\n  private generateFilterStructure() {\n    const criteriaFilterLookup = new Map(this.filterConfiguration.filters.map(c => [c.criterionId, c] as [string, CriterionFilterConfiguration]));\n    let placement: Map = new Map();\n    this.groupings.forEach(g => this.populateRenderBlocks(g, criteriaFilterLookup, placement));\n    this.renderedFilter = Array.from(placement.values());\n  }\n\n  private populateRenderBlocks(grouping: CriteriaGrouping, filterLookup: Map, placement: Map, parentGroup?: string) {\n    let current = placement.get(grouping.name);\n\n    if (current === undefined && grouping.criteria && grouping.criteria.size > 0) {\n      placement.set(grouping.name, {blockName: parentGroup ? parentGroup.concat(' : ').concat(grouping.name) : grouping.name, filters: []});\n      current = placement.get(grouping.name);\n    }\n\n    grouping.criteria.forEach(c => {\n      let config = filterLookup.get(c.id);\n      if (config) {\n        current.filters.push(config);\n      }\n    });\n\n    if (grouping.groupings) {\n      grouping.groupings.forEach(g => this.populateRenderBlocks(g, filterLookup, placement, grouping.name));\n    }\n  }\n\n  onQueryUpdate($event: CriteriaBasedQuery) {\n    this.dataSource.queryByCriteria($event);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Filter Panel\n        \n        \n          close\n        \n      \n      \n        Filter platforms by combining criteria values.\n      \n\n    \n\n    \n      \n         0\"\n                             class=\"sidenav__filter-block\">\n          \n            \n              {{filterBlock.blockIcon}}\n              {{filterBlock.blockName}}\n            \n          \n          \n\n          \n          \n\n        \n\n      \n\n    \n  \n\n  \n    \n    \n      \n        Platform Browser\n        \n        \n          \n            subject\n          \n          \n            search\n          \n        \n      \n\n      \n        \n          Browse through the list of available platforms, for a detailed view click on the corresponding platform.\n        \n        \n          filter_alt\n          Filters\n        \n      \n\n      \n      \n\n      \n      \n    \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./technologies.component.scss\n                \n                @import \"../_scss/shared\";\n@import \"../_scss/global/variables\";\n\n:host {\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.sidenav-container {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n  flex: 1;\n}\n\n.sidenav {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n  flex: 1;\n  width: 80%;\n  max-width: 30em;\n}\n\n.sidenav__filter-header {\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 1rem;\n}\n\n.sidenav__filter-title {\n  display: flex;\n  flex-flow: row nowrap;\n}\n\n.sidenav__accordion {\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.sidenav__filter-block {\n  flex-grow: 1;\n  flex-shrink: 0;\n  box-shadow: none !important;\n  border-radius: 0 !important;\n  border-bottom: 1px solid $gray-30;\n}\n\n.content-container {\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n  flex: 1;\n}\n\n.platforms-main {\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  @include bg-grey;\n  padding-top: 1.5rem;\n}\n\n.platforms__controls {\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: space-evenly;\n  width: 90%;\n}\n\n.platforms__description-block {\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  width: 90%;\n}\n\n.platforms__description {\n  flex: 1 1 max-content;\n}\n\n.platforms__filter-button {\n  height: 2.5rem;\n  @include nav_item;\n}\n\n.platforms__filter-button-title {\n  display: none;\n}\n\n.platforms__header {\n  flex: 1 1 auto;\n}\n\n.platforms__settings {\n  @include nav_item;\n}\n\n@media screen and (min-width: 900px) {\n  .platforms__controls, .platforms__description-block  {\n    max-width: 910px;\n  }\n\n  .platforms__filter-button-title {\n    display: inline;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Filter Panel                          close                            Filter platforms by combining criteria values.                             0\"                             class=\"sidenav__filter-block\">                                    {{filterBlock.blockIcon}}              {{filterBlock.blockName}}                                                                                                Platform Browser                                      subject                                search                                                Browse through the list of available platforms, for a detailed view click on the corresponding platform.                          filter_alt          Filters                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologiesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TechnologiesModule.html":{"url":"modules/TechnologiesModule.html","title":"module - TechnologiesModule","body":"\n                   \n\n\n\n\n    Modules\n    TechnologiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TechnologiesModule\n\n\n\ncluster_TechnologiesModule_imports\n\n\n\ncluster_TechnologiesModule_declarations\n\n\n\n\nCriterionFilterComponent\n\nCriterionFilterComponent\n\n\n\nTechnologiesModule\n\nTechnologiesModule\n\nTechnologiesModule -->\n\nCriterionFilterComponent->TechnologiesModule\n\n\n\n\n\nTechnologiesComponent\n\nTechnologiesComponent\n\nTechnologiesModule -->\n\nTechnologiesComponent->TechnologiesModule\n\n\n\n\n\nTechnologyDetailsComponent\n\nTechnologyDetailsComponent\n\nTechnologiesModule -->\n\nTechnologyDetailsComponent->TechnologiesModule\n\n\n\n\n\nTechnologyListComponent\n\nTechnologyListComponent\n\nTechnologiesModule -->\n\nTechnologyListComponent->TechnologiesModule\n\n\n\n\n\nTechnologyTableComponent\n\nTechnologyTableComponent\n\nTechnologiesModule -->\n\nTechnologyTableComponent->TechnologiesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTechnologiesModule -->\n\nSharedModule->TechnologiesModule\n\n\n\n\n\nTechnologiesRoutingModule\n\nTechnologiesRoutingModule\n\nTechnologiesModule -->\n\nTechnologiesRoutingModule->TechnologiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/technologies/technologies.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CriterionFilterComponent\n                        \n                        \n                            TechnologiesComponent\n                        \n                        \n                            TechnologyDetailsComponent\n                        \n                        \n                            TechnologyListComponent\n                        \n                        \n                            TechnologyTableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TechnologiesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TechnologiesComponent} from './technologies.component';\nimport {TechnologiesRoutingModule} from './technologies-routing.module';\nimport {SharedModule} from '../shared/shared.module';\nimport {TechnologyListComponent} from './technology-list/technology-list.component';\nimport {TechnologyDetailsComponent} from './technology-details/technology-details.component';\nimport {TechnologyTableComponent} from './technology-table/technology-table.component';\nimport {TechnologiesResolver} from './technologies-resolver.service';\nimport {CriterionFilterComponent} from './criterion-filter/criterion-filter.component';\nimport {TechnologyDetailsResolverService} from './technology-details-resolver.service';\n\n@NgModule({\n  declarations: [TechnologiesComponent, TechnologyListComponent, TechnologyDetailsComponent, TechnologyTableComponent, CriterionFilterComponent],\n  imports: [CommonModule, SharedModule, TechnologiesRoutingModule],\n  providers: [TechnologiesResolver, TechnologyDetailsResolverService]\n\n})\nexport class TechnologiesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TechnologiesResolver.html":{"url":"guards/TechnologiesResolver.html","title":"guard - TechnologiesResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TechnologiesResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/technologies/technologies-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, config: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technologies-resolver.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technologies-resolver.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {ClassificationFramework} from '../shared/interfaces/classification';\nimport {forkJoin, Observable} from 'rxjs';\nimport {DataService} from '../core/services/data.service';\nimport {Technology} from '../shared/interfaces/technology';\nimport {TechnologyFilterConfiguration} from '../shared/interfaces/filtering';\nimport {AppConfigService} from '../core/services/app-config.service';\n\n@Injectable()\nexport class TechnologiesResolver implements Resolve {\n  constructor(private dataService: DataService, private config: AppConfigService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    let category = this.config.defaultTechCategory;\n\n    const technologies = this.dataService.getTechnologiesOfCategory(category, true);\n    const framework = this.dataService.getFrameworkForTechnologyType(category);\n    const filter = this.dataService.getTechnologyFilter(category);\n\n    return forkJoin([technologies, framework, filter]);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TechnologiesRoutingModule.html":{"url":"modules/TechnologiesRoutingModule.html","title":"module - TechnologiesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TechnologiesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/technologies/technologies-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {TechnologiesComponent} from './technologies.component';\nimport {TechnologyDetailsComponent} from './technology-details/technology-details.component';\nimport {TechnologiesResolver} from './technologies-resolver.service';\nimport {TechnologyDetailsResolverService} from './technology-details-resolver.service';\n\nconst platformRoutes: Routes = [\n  {path: '', component: TechnologiesComponent, resolve: {resolvedData: TechnologiesResolver}},\n  {path: ':platformId', component: TechnologyDetailsComponent, resolve: {resolvedData: TechnologyDetailsResolverService}}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(platformRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class TechnologiesRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Technology.html":{"url":"interfaces/Technology.html","title":"interface - Technology","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Technology\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/technology.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a technology for comparison,\nwhich might contain the review data in a form of a TechnologyDossier.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        dossier\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        logoLocation\n                                \n                                \n                                        logoLocator\n                                \n                                \n                                        platformName\n                                \n                                \n                                            Optional\n                                        shortDescription\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:         TechnologyCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyCategory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category this technology belongs to.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Full description shown in technology details.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dossier\n                                    \n                                \n                                \n                                    \n                                        dossier:         TechnologyDossier\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TechnologyDossier\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A TechnologyDossier storing the review data.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique technology identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoLocation\n                                    \n                                \n                                \n                                    \n                                        logoLocation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Technology logo location path generated by the LogoLocatorService.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoLocator\n                                    \n                                \n                                \n                                    \n                                        logoLocator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A string value that can be used by the LogoLocatorService to locate the technology logo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformName\n                                    \n                                \n                                \n                                    \n                                        platformName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Technology name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortDescription\n                                    \n                                \n                                \n                                    \n                                        shortDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Short description shown in technology lists.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {CriterionInstance} from './classification';\n\n/**\n * An interface representing a technology for comparison,\n * which might contain the review data in a form of a {@link TechnologyDossier}.\n *\n * @example a FaaS platform\n */\nexport interface Technology {\n  /**\n   * Unique technology identifier.\n   */\n  id: string;\n\n  /**\n   * Technology name.\n   */\n  platformName: string;\n\n  /**\n   * [Category]{@link TechnologyCategory} this technology belongs to.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  category: TechnologyCategory;\n\n  /**\n   * A string value that can be used by the {@link LogoLocatorService} to locate the technology logo.\n   *\n   * @example\n   * azure.functions for Azure Functions,\n   * aws.s3 for AWS S3\n   */\n  logoLocator: string;\n\n  /**\n   * Technology logo location path generated by the {@link LogoLocatorService}.\n   */\n  logoLocation?: string;\n\n  /**\n   * Short description shown in technology lists.\n   */\n  shortDescription?: string;\n\n  /**\n   * Full description shown in technology details.\n   */\n  description?: string;\n\n  /**\n   * A [TechnologyDossier]{@link TechnologyDossier} storing the review data.\n   */\n  dossier?: TechnologyDossier;\n}\n\n/**\n * An interface representing the review data which comprises [CriterionInstances]{@link CriterionInstance} related to a particular technology.\n */\nexport interface TechnologyDossier {\n  /**\n   * Unique technology identifier.\n   */\n  platformId: string;\n\n  /**\n   * Date of review.\n   */\n  reviewDate?: Date;\n\n  /**\n   * A map of CriterionInstance unique IDs and {@link CriterionInstance} encompassing the review data.\n   */\n  reviewedCriteria: Map;\n}\n\n/**\n * An enum representing different technology categories.\n *\n * @example\n * faas for Function-as-a-Service\n * baas for Blockchain-as-a-Service\n */\nexport enum TechnologyCategory {\n  faas = 'faas', baas = 'baas'\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TechnologyDataSource.html":{"url":"classes/TechnologyDataSource.html","title":"class - TechnologyDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TechnologyDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datasource.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            SimpleDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                criteriaBasedQuery\n                            \n                            \n                                    Public\n                                currentIndex\n                            \n                            \n                                    Private\n                                    Readonly\n                                data\n                            \n                            \n                                    Public\n                                filteredData$\n                            \n                            \n                                    Public\n                                isPaginated\n                            \n                            \n                                    Private\n                                    Readonly\n                                nameBasedQuery\n                            \n                            \n                                    Private\n                                    Readonly\n                                pageNumber\n                            \n                            \n                                    Public\n                                pageNumber$\n                            \n                            \n                                    Public\n                                pageSize\n                            \n                            \n                                    Public\n                                paginatedData$\n                            \n                            \n                                    Private\n                                    Readonly\n                                sort\n                            \n                            \n                                    Public\n                                totalInputSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                canFilter\n                            \n                            \n                                connect\n                            \n                            \n                                    Private\n                                    Static\n                                containsAny\n                            \n                            \n                                    Private\n                                    Static\n                                containsOne\n                            \n                            \n                                disconnect\n                            \n                            \n                                fetch\n                            \n                            \n                                    Private\n                                getFilteringResult\n                            \n                            \n                                    Private\n                                processData\n                            \n                            \n                                    Private\n                                pruneQuery\n                            \n                            \n                                queryByCriteria\n                            \n                            \n                                queryByName\n                            \n                            \n                                sortBy\n                            \n                            \n                                togglePagination\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, pageSize: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/datasource.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Technology[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialSort\n                                                  \n                                                        \n                                                                    Sort\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialQuery\n                                                  \n                                                        \n                                                                        CriteriaBasedQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pageSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            criteriaBasedQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Technology[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isPaginated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nameBasedQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            pageNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(0)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageNumber$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.pageNumber.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            paginatedData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            totalInputSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/datasource.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            canFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canFilter(filterValue: CriterionFilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            containsAny\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewedCriterion\n                                    \n                                                CriterionInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            containsOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewedCriterion\n                                    \n                                                CriterionInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \nfetch(event: PageEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            PageEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFilteringResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                CriterionFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewedCriterion\n                                    \n                                                CriterionInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            processData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Technology[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    criteriaQuery\n                                    \n                                                CriteriaBasedQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameQuery\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sort\n                                    \n                                            Sort\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Technology[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            pruneQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pruneQuery(nextQuery: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nextQuery\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryByCriteria\n                        \n                        \n                    \n                \n            \n            \n                \nqueryByCriteria(query: CriteriaBasedQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                CriteriaBasedQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryByName\n                        \n                        \n                    \n                \n            \n            \n                \nqueryByName(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortBy\n                        \n                        \n                    \n                \n            \n            \n                \nsortBy(sort: Partial>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sort\n                                    \n                                            Partial>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            togglePagination\n                        \n                        \n                    \n                \n            \n            \n                \ntogglePagination()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/datasource.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, combineLatest, Observable, of} from 'rxjs';\nimport {map, shareReplay, switchMap} from 'rxjs/operators';\nimport {Technology} from './interfaces/technology';\nimport {PageEvent} from '@angular/material/paginator';\nimport {CriteriaBasedQuery, CriterionFilterType, CriterionFilterValue} from './interfaces/filtering';\nimport {CriterionInstance} from './interfaces/classification';\n\nexport interface SimpleDataSource extends DataSource {\n  connect(): Observable;\n\n  disconnect(): void;\n}\n\nexport interface Sort {\n  property: keyof T\n  order: 'asc' | 'desc'\n}\n\nexport class TechnologyDataSource implements SimpleDataSource {\n  private readonly data: Technology[];\n  private readonly pageNumber = new BehaviorSubject(0);\n  private readonly sort: BehaviorSubject>;\n  private readonly criteriaBasedQuery: BehaviorSubject;\n  private readonly nameBasedQuery: BehaviorSubject;\n\n  public isPaginated = true;\n  public totalInputSize: number;\n  public currentIndex: number = 0;\n  public pageNumber$ = this.pageNumber.asObservable();\n  public filteredData$: Observable;\n  public paginatedData$: Observable;\n\n  constructor(data: Technology[], initialSort: Sort, initialQuery: CriteriaBasedQuery, public pageSize = 10) {\n    this.data = data;\n    this.sort = new BehaviorSubject>(initialSort);\n    this.criteriaBasedQuery = new BehaviorSubject(initialQuery);\n    this.nameBasedQuery = new BehaviorSubject(undefined);\n\n    this.filteredData$ = combineLatest([this.criteriaBasedQuery, this.nameBasedQuery, this.sort]).pipe(\n      switchMap(([criteriaQuery, nameQuery, sort]) => {\n          let result = this.processData(this.data, criteriaQuery, nameQuery, sort);\n          this.totalInputSize = result.length;\n          return of(result);\n        }\n      ),\n      shareReplay(1)\n    );\n\n    this.paginatedData$ = combineLatest([this.filteredData$, this.pageNumber$]).pipe(\n      map(([data, pageNumber]) => {\n        let startIndex = pageNumber * this.pageSize;\n        let endIndex = startIndex + this.pageSize;\n        if (endIndex > data.length) {\n          endIndex = data.length;\n        }\n        return data.slice(startIndex, endIndex);\n      })\n    );\n  }\n\n  sortBy(sort: Partial>): void {\n    const lastSort = this.sort.getValue();\n    const nextSort = {...lastSort, ...sort};\n    this.sort.next(nextSort);\n  }\n\n  queryByCriteria(query: CriteriaBasedQuery): void {\n    const lastQuery = this.criteriaBasedQuery.getValue();\n    const nextQuery = {...lastQuery, ...query};\n    console.log('new query:');\n    this.pruneQuery(nextQuery);\n    console.log(nextQuery);\n    this.criteriaBasedQuery.next(nextQuery);\n  }\n\n  queryByName(query: string): void {\n    this.nameBasedQuery.next(query);\n  }\n\n  fetch(event: PageEvent): void {\n    this.pageSize = event.pageSize;\n    this.pageNumber.next(event.pageIndex);\n    this.currentIndex = event.pageIndex;\n  }\n\n  togglePagination(): void {\n    this.isPaginated = !this.isPaginated;\n  }\n\n  connect(): Observable {\n    if (this.isPaginated) {\n      return this.paginatedData$;\n    }\n    return this.filteredData$;\n  }\n\n  disconnect(): void {\n  }\n\n  private processData(data: Technology[], criteriaQuery: CriteriaBasedQuery, nameQuery: string, sort: Sort): Technology[] {\n    let result: Technology[] = data;\n    if (nameQuery) {\n      result = data.filter(platform => nameQuery ? platform.platformName.toLocaleLowerCase().includes(nameQuery) : true);\n    }\n\n    if (criteriaQuery && Object.keys(criteriaQuery).length !== 0) {\n      Object.keys(criteriaQuery).forEach(key => {\n        if (TechnologyDataSource.canFilter(criteriaQuery[key])) {\n          result = result.filter(t => {\n            let filteringResult = false;\n            if (t.dossier.reviewedCriteria.has(key)) {\n              filteringResult = this.getFilteringResult(criteriaQuery[key], t.dossier.reviewedCriteria.get(key));\n            }\n            return filteringResult;\n          });\n        }\n      });\n      console.log('found: ' + result.length);\n    }\n\n    if (sort && sort.order === 'asc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? 1 : -1);\n    } else if (sort && sort.order === 'desc') {\n      result = result.sort((a, b) => a[sort.property] > b[sort.property] ? -1 : 1);\n    }\n\n    return result;\n  }\n\n  private static canFilter(filterValue: CriterionFilterValue): boolean {\n    if (filterValue.filterType && filterValue.filterType === CriterionFilterType.lte) {\n      return typeof filterValue.value === 'number';\n    } else if (filterValue.filterType && filterValue.filterType === CriterionFilterType.containsAll ||\n      filterValue.filterType === CriterionFilterType.containsOne ||\n      filterValue.filterType === CriterionFilterType.excludesAll) {\n      let v = filterValue.value as string[];\n      return v && v.length > 0;\n    } else if (filterValue.filterType === CriterionFilterType.bool || filterValue.filterType === CriterionFilterType.containsAny) {\n      return typeof filterValue.value === 'boolean';\n    }\n\n    return false;\n  }\n\n  private pruneQuery(nextQuery: { [p: string]: CriterionFilterValue }) {\n    let keysToDelete = [];\n    Object.keys(nextQuery).forEach(key => {\n        if (nextQuery[key].filterType === null) {\n          keysToDelete.push(key);\n        } else if (nextQuery[key].filterType === CriterionFilterType.bool ||\n          nextQuery[key].filterType === CriterionFilterType.containsAny ||\n          nextQuery[key].filterType === CriterionFilterType.lte) {\n          if (nextQuery[key].value === null) {\n            keysToDelete.push(key);\n          }\n        } else if (nextQuery[key].filterType === CriterionFilterType.containsOne ||\n          nextQuery[key].filterType === CriterionFilterType.containsAll ||\n          nextQuery[key].filterType === CriterionFilterType.excludesAll) {\n          let valueToCheck = nextQuery[key].value as string[];\n          if (valueToCheck.length === 0) {\n            keysToDelete.push(key);\n          }\n        }\n      }\n    );\n    keysToDelete.forEach(key => delete nextQuery[key]);\n  }\n\n  private getFilteringResult(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    if (filterValue.filterType === CriterionFilterType.containsAny) {\n      return TechnologyDataSource.containsAny(filterValue, reviewedCriterion);\n    }\n\n    for (let reviewValue of reviewedCriterion.values) {\n      if (filterValue.filterType === CriterionFilterType.lte) {\n        return reviewedCriterion.values[0].value  allValues.push(v.value));\n        let target = Array.from(filterValue.value as string[]);\n\n        if (filterValue.filterType === CriterionFilterType.containsAll) {\n          return target.every(v => allValues.includes(v));\n        } else if (filterValue.filterType === CriterionFilterType.excludesAll) {\n          return target.every(v => !allValues.includes(v));\n        }\n      }\n    }\n  }\n\n  private static containsAny(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValue = filterValue.value as boolean;\n    if (chosenValue) {\n      return Array.from(reviewedCriterion.values).length > 0;\n    } else {\n      return Array.from(reviewedCriterion.values).length === 0;\n    }\n  }\n\n  private static containsOne(filterValue: CriterionFilterValue, reviewedCriterion: CriterionInstance): boolean {\n    let chosenValues = filterValue.value as string[];\n    if (chosenValues && chosenValues.length > 0) {\n      for (let entry of reviewedCriterion.values) {\n        let value = entry.value as string;\n        if (chosenValues.indexOf(value) !== -1) {\n          return true;\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologyDetailsComponent.html":{"url":"components/TechnologyDetailsComponent.html","title":"component - TechnologyDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TechnologyDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technology-details/technology-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technology-details\n            \n\n            \n                styleUrls\n                ./technology-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technology-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bottomNav\n                            \n                            \n                                framework\n                            \n                            \n                                platform\n                            \n                            \n                                selectedViewCombination\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-details/technology-details.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:scroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:scroll(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-details/technology-details.component.ts:32\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-details/technology-details.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bottomNav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BottomNavComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('bottomNavComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-details/technology-details.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            framework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassificationFramework\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-details/technology-details.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Technology\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-details/technology-details.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedViewCombination\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassificationViewCombination\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-details/technology-details.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, HostListener, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Technology} from '../../shared/interfaces/technology';\nimport {ClassificationFramework, ClassificationViewCombination} from '../../shared/interfaces/classification';\nimport {BottomNavComponent} from '../../shared/bottom-nav/bottom-nav.component';\n\n@Component({\n  selector: 'app-technology-details',\n  templateUrl: './technology-details.component.html',\n  styleUrls: ['./technology-details.component.scss']\n})\nexport class TechnologyDetailsComponent implements OnInit {\n  @ViewChild('bottomNavComponent') bottomNav: BottomNavComponent;\n\n  platform: Technology;\n  framework: ClassificationFramework;\n  selectedViewCombination: ClassificationViewCombination;\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.platform = data['resolvedData'][0];\n      this.framework = data['resolvedData'][1];\n\n      this.framework.viewCombinations.forEach(vc => vc.default ? this.selectedViewCombination = vc : false);\n    });\n  }\n\n  @HostListener('window:scroll', ['$event'])\n  onWindowScroll(e) {\n    this.bottomNav.toTop = window.pageYOffset > 200;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    {{platform.platformName}}\n    {{platform.description}}\n\n    \n      Technology View Mode\n      \n        {{ option.name }}\n      \n    \n  \n  \n  \n\n\n\n  \n    home Home\n  \n  \n    view_list Platforms\n  \n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./technology-details.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.technology {\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  margin: 0 auto;\n}\n\n.technology__header-block {\n  padding: 0 1rem;\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.technology__logo {\n  max-height: 5rem;\n  max-width: 10rem;\n  margin: 1.5rem .5rem 0;\n  border: none;\n  align-self: center;\n}\n\n.technology__header {\n  margin-top: 2rem;\n  align-self: center;\n  //color: $violet-600;\n}\n\n.technology__view-title {\n  margin-left: .5rem;\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{platform.platformName}}    {{platform.description}}          Technology View Mode              {{ option.name }}                      home Home        view_list Platforms  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologyDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TechnologyDetailsResolverService.html":{"url":"guards/TechnologyDetailsResolverService.html","title":"guard - TechnologyDetailsResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TechnologyDetailsResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/technologies/technology-details-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, config: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-details-resolver.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-details-resolver.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {ClassificationFramework} from '../shared/interfaces/classification';\nimport {forkJoin, Observable} from 'rxjs';\nimport {DataService} from '../core/services/data.service';\nimport {Technology} from '../shared/interfaces/technology';\nimport {AppConfigService} from '../core/services/app-config.service';\n\n@Injectable()\nexport class TechnologyDetailsResolverService implements Resolve {\n  constructor(private dataService: DataService, private config: AppConfigService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    const id = route.params['platformId'];\n    const category = this.config.defaultTechCategory;\n\n    return forkJoin([\n      this.dataService.getTechnology(id, true),\n      this.dataService.getFrameworkForTechnologyType(category)\n    ]);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TechnologyDossier.html":{"url":"interfaces/TechnologyDossier.html","title":"interface - TechnologyDossier","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TechnologyDossier\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/technology.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing the review data which comprises CriterionInstances related to a particular technology.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        platformId\n                                \n                                \n                                            Optional\n                                        reviewDate\n                                \n                                \n                                        reviewedCriteria\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique technology identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewDate\n                                    \n                                \n                                \n                                    \n                                        reviewDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Date of review.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewedCriteria\n                                    \n                                \n                                \n                                    \n                                        reviewedCriteria:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A map of CriterionInstance unique IDs and CriterionInstance encompassing the review data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {CriterionInstance} from './classification';\n\n/**\n * An interface representing a technology for comparison,\n * which might contain the review data in a form of a {@link TechnologyDossier}.\n *\n * @example a FaaS platform\n */\nexport interface Technology {\n  /**\n   * Unique technology identifier.\n   */\n  id: string;\n\n  /**\n   * Technology name.\n   */\n  platformName: string;\n\n  /**\n   * [Category]{@link TechnologyCategory} this technology belongs to.\n   *\n   * @example\n   * Function-as-a-Service platforms\n   */\n  category: TechnologyCategory;\n\n  /**\n   * A string value that can be used by the {@link LogoLocatorService} to locate the technology logo.\n   *\n   * @example\n   * azure.functions for Azure Functions,\n   * aws.s3 for AWS S3\n   */\n  logoLocator: string;\n\n  /**\n   * Technology logo location path generated by the {@link LogoLocatorService}.\n   */\n  logoLocation?: string;\n\n  /**\n   * Short description shown in technology lists.\n   */\n  shortDescription?: string;\n\n  /**\n   * Full description shown in technology details.\n   */\n  description?: string;\n\n  /**\n   * A [TechnologyDossier]{@link TechnologyDossier} storing the review data.\n   */\n  dossier?: TechnologyDossier;\n}\n\n/**\n * An interface representing the review data which comprises [CriterionInstances]{@link CriterionInstance} related to a particular technology.\n */\nexport interface TechnologyDossier {\n  /**\n   * Unique technology identifier.\n   */\n  platformId: string;\n\n  /**\n   * Date of review.\n   */\n  reviewDate?: Date;\n\n  /**\n   * A map of CriterionInstance unique IDs and {@link CriterionInstance} encompassing the review data.\n   */\n  reviewedCriteria: Map;\n}\n\n/**\n * An enum representing different technology categories.\n *\n * @example\n * faas for Function-as-a-Service\n * baas for Blockchain-as-a-Service\n */\nexport enum TechnologyCategory {\n  faas = 'faas', baas = 'baas'\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TechnologyDossierResponse.html":{"url":"interfaces/TechnologyDossierResponse.html","title":"interface - TechnologyDossierResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TechnologyDossierResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/responses.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        platformId\n                                \n                                \n                                            Optional\n                                        reviewDate\n                                \n                                \n                                        reviewedCriteria\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewDate\n                                    \n                                \n                                \n                                    \n                                        reviewDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewedCriteria\n                                    \n                                \n                                \n                                    \n                                        reviewedCriteria:         CriteriaReview\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriteriaReview\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TechnologyCategory} from './technology';\nimport {CriterionInstance} from './classification';\n\nexport interface ClassificationFrameworkResponse {\n  id: string;\n  name: string;\n  technologyCategory: TechnologyCategory;\n  description?: string;\n  viewCombinationIds: Set;\n}\n\n/**\n * An interface representing a server response with available combinations of classification views.\n */\nexport interface ClassificationViewCombinationResponse {\n  id: string;\n  name: string;\n  description: string;\n  viewIds: Set;\n  default?: boolean;\n}\n\n/**\n * An interface representing a server response with available classification views.\n */\nexport interface ClassificationViewResponse {\n  id: string;\n  name: string;\n  description: string;\n  groupingIds: Set;\n}\n\n/**\n * An interface representing a server response with available criteria groupings.\n */\nexport interface CriteriaGroupingResponse {\n  id: string;\n  name: string;\n  locator: string; // e.g. \"licensing\" or \"community.github\"\n  parentId?: string;\n  criteriaIds?: Set;\n}\n\nexport interface TechnologyDossierResponse {\n  platformId: string;\n  reviewDate?: Date;\n  reviewedCriteria: CriteriaReview;\n}\n\nexport interface CriteriaReview {\n  [key: string]: CriterionInstance;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TechnologyFilterConfiguration.html":{"url":"interfaces/TechnologyFilterConfiguration.html","title":"interface - TechnologyFilterConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TechnologyFilterConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/filtering.ts\n        \n\n            \n                Description\n            \n            \n                An interface representing a filter configuration for a given technology TechnologyCategory.\nThis configuration defines which criteria have dedicated filter elements in the UI.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filterId\n                                \n                                \n                                        filters\n                                \n                                \n                                        name\n                                \n                                \n                                        technologyCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterId\n                                    \n                                \n                                \n                                    \n                                        filterId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         CriterionFilterConfiguration[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CriterionFilterConfiguration[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologyCategory\n                                    \n                                \n                                \n                                    \n                                        technologyCategory:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RenderedFilterBlock {\n  blockName: string;\n  blockIcon?: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given technology {@link TechnologyCategory}.\n * This configuration defines which criteria have dedicated filter elements in the UI.\n */\nexport interface TechnologyFilterConfiguration {\n  filterId: string;\n  technologyCategory: string;\n  name: string;\n  filters: CriterionFilterConfiguration[];\n}\n\n/**\n * An interface representing a filter configuration for a given {@link ClassificationCriterion}.\n * This configuration defines the desired filtering behavior.\n */\nexport interface CriterionFilterConfiguration {\n  criterionId: string;\n  displayName: string;\n  filterType: CriterionFilterType;\n  filterValues?: [number, number] | string[];\n}\n\n/**\n * An enum representing a filter type for a given {@link CriterionFilterConfiguration}.\n * Based on these settings the respective filtering behavior is generated.\n *\n * @remarks\n * Available options:\n * -- bool:  indicates whether a value for a given criterion is true / false, translates to a toggle in the UI\n * -- lte: indicates whether a value should be less than or equal to a given number, translates to a slider in the UI\n * -- gte: indicates whether a value should be greater than or equal to a given number, translates to a slider in the UI\n * -- containsOne: at least 1 specified text value must be contained, translates to a group of checkboxes in the UI\n * -- containsAny: at least 1 arbitrary text value must be contained, translates to a toggle in the UI\n * -- containsAll: all specified text values must be contained, translates to a group of checkboxes in the UI\n * -- excludesAll: all specified text values must not be contained, translates to a group of checkboxes in the UI\n */\nexport enum CriterionFilterType {\n  bool = 'bool',\n  lte = 'lte',\n  gte = 'gte',\n  containsOne = 'containsOne',\n  containsAny = 'containsAny',\n  containsAll = 'containsAll',\n  excludesAll = 'excludesAll'\n}\n\nexport interface CriteriaBasedQuery {\n  [key: string]: CriterionFilterValue;\n}\n\nexport interface CriterionFilterValue {\n  filterType?: CriterionFilterType;\n  value: boolean | number | string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologyListComponent.html":{"url":"components/TechnologyListComponent.html","title":"component - TechnologyListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TechnologyListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technology-list/technology-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technology-list\n            \n\n            \n                styleUrls\n                ./technology-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technology-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageSizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNameChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-list/technology-list.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :         TechnologyDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-list/technology-list.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-list/technology-list.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNameChange\n                        \n                        \n                    \n                \n            \n            \n                \nonNameChange(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-list/technology-list.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSizeOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [5, 10]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-list/technology-list.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {TechnologyDataSource} from '../../shared/datasource';\n\n@Component({\n  selector: 'app-technology-list',\n  templateUrl: './technology-list.component.html',\n  styleUrls: ['./technology-list.component.scss']\n})\nexport class TechnologyListComponent implements OnInit {\n  @Input() dataSource: TechnologyDataSource;\n  pageSizeOptions: number[] = [5, 10];\n\n  constructor() {\n  }\n\n  onNameChange(name: string) {\n    this.dataSource.queryByName(name);\n    this.dataSource.fetch({pageIndex: 0, length: this.dataSource.totalInputSize, pageSize: this.dataSource.pageSize});\n  }\n\n  ngOnInit(): void {\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n      Filter by name\n      \n      search\n    \n  \n\n  \n    \n      \n        \n         {{p.platformName}} -->\n\n        \n          \n            {{p.shortDescription}}\n          \n\n        \n\n        \n          arrow_forward\n        \n\n      \n    \n  \n\n  \n  \n\n\n\n\n    \n\n    \n                \n                    ./technology-list.component.scss\n                \n                @import \"../../_scss/shared\";\n\n:host {\n  flex: 1;\n}\n\n.platforms-list {\n  margin-bottom: 1rem;\n  display: flex;\n  flex-flow: column nowrap;\n}\n\n.platforms-list__search {\n  display: flex;\n  justify-content: center;\n}\n\n.platforms-list__search-field {\n  width: 80%;\n}\n\n.platforms-list__cards {\n  flex: 1;\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: flex-start;\n}\n\n.platforms-list__card {\n  margin: 0.2rem .5rem 0 .5rem;\n  padding: 0 .5rem !important;\n  border-left: .2rem solid $violet-400;\n  transition: all .3s ease;\n  flex: 1 1 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n\n  &:hover {\n    border-left: .2rem solid $salad-600;\n    box-shadow: 0 10px 16px rgba(0, 0, 0, 0.2) !important;\n    cursor: pointer;\n  }\n}\n\n.platforms-list__logo {\n  max-height: 3rem;\n  max-width: 3rem;\n  margin: 0 .5rem;\n  border: none;\n  align-self: center;\n}\n\n.platforms-list__card-spacer {\n  flex-grow: 2;\n}\n\n.platforms-list__card-description {\n  flex: 1;\n  font-size: .8rem;\n  padding-right: .5rem;\n}\n\n.platforms-list__explore-button {\n  @include nav_item;\n}\n\n.platforms-list__paginator {\n  background: none;\n}\n\n@media (min-width: 790px) {\n  .platform-section__card-description {\n    display: flex;\n    flex: 1;\n    font-size: .95rem;\n  }\n\n  .platforms-list__cards {\n    display: flex;\n    flex-flow: row wrap;\n  }\n\n  .platforms-list__card {\n    flex: 1 1 auto;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n  }\n\n}\n\n@media screen and (min-width: 900px) {\n  .platforms-list {\n    max-width: 910px;\n    min-width: 900px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Filter by name            search                                   {{p.platformName}} -->                              {{p.shortDescription}}                                    arrow_forward                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologyListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TechnologyTableComponent.html":{"url":"components/TechnologyTableComponent.html","title":"component - TechnologyTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TechnologyTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/technologies/technology-table/technology-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-technology-table\n            \n\n            \n                styleUrls\n                ./technology-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./technology-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnsToDisplay\n                            \n                            \n                                criteriaColumns\n                            \n                            \n                                groupingColumnIds\n                            \n                            \n                                groupingColumns\n                            \n                            \n                                tableContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateGroupingColumns\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                scrollLeft\n                            \n                            \n                                scrollRight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                filterConfiguration\n                            \n                            \n                                framework\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/technologies/technology-table/technology-table.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :         TechnologyDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filterConfiguration\n                    \n                \n                \n                    \n                        Type :         TechnologyFilterConfiguration\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        framework\n                    \n                \n                \n                    \n                        Type :         ClassificationFramework\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sidenav\n                    \n                \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateGroupingColumns\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateGroupingColumns(grouping: CriteriaGrouping, groupingColumns: TableColumn[], color: string, parentGroupingName?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grouping\n                                    \n                                                CriteriaGrouping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupingColumns\n                                    \n                                                TableColumn[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentGroupingName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollLeft\n                        \n                        \n                    \n                \n            \n            \n                \nscrollLeft()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollRight\n                        \n                        \n                    \n                \n            \n            \n                \nscrollRight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/technologies/technology-table/technology-table.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnsToDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['techName']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            criteriaColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TableColumn[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupingColumnIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['techNameHeader']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupingColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TableColumn[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('content')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/technologies/technology-table/technology-table.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {TechnologyDataSource} from '../../shared/datasource';\nimport {ClassificationFramework, CriteriaGrouping} from '../../shared/interfaces/classification';\nimport {TechnologyFilterConfiguration} from '../../shared/interfaces/filtering';\nimport {MatSidenav} from '@angular/material/sidenav';\n\nexport class TableColumn {\n  id: string;\n  displayName: string;\n  colSpan?: number;\n  color?: string;\n}\n\n@Component({\n  selector: 'app-technology-table',\n  templateUrl: './technology-table.component.html',\n  styleUrls: ['./technology-table.component.scss']\n})\nexport class TechnologyTableComponent implements OnInit {\n  @Input() dataSource: TechnologyDataSource;\n  @Input() framework: ClassificationFramework;\n  @Input() filterConfiguration: TechnologyFilterConfiguration;\n  @Input() sidenav: MatSidenav;\n\n  @ViewChild('content') tableContainer: ElementRef;\n\n  criteriaColumns: TableColumn[] = [];\n  groupingColumns: TableColumn[] = [];\n  groupingColumnIds: string[] = ['techNameHeader'];\n\n  columnsToDisplay = ['techName'];\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n    this.framework.viewCombinations.forEach(viewComb => {\n      if (viewComb.default) {\n        viewComb.views.forEach(view => {\n          let groupingColumns: TableColumn[] = [];\n          Array.from(view.groupings).forEach((grouping, index) => {\n            let color = index % 2 === 0 ? '#ccc' : 'white';\n            this.generateGroupingColumns(grouping, groupingColumns, color);\n          });\n          if (groupingColumns.length > 0) {\n            this.groupingColumns.push(...groupingColumns);\n            let viewColspan = 0;\n            groupingColumns.forEach(c => {\n              if (c.colSpan) {\n                viewColspan += c.colSpan;\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  private generateGroupingColumns(grouping: CriteriaGrouping, groupingColumns: TableColumn[], color:string, parentGroupingName?: string) {\n    let counter = 0;\n    grouping.criteria.forEach((c, index) => {\n      this.criteriaColumns.push({\n        id: c.id,\n        displayName: c.name,\n        color: color\n      } as TableColumn);\n      this.columnsToDisplay.push(c.id);\n      counter += 1;\n    });\n    if (counter > 0) {\n      let name = parentGroupingName ? parentGroupingName.concat('.').concat(grouping.name) : grouping.name;\n      groupingColumns.push({\n        id: grouping.id,\n        displayName: name,\n        color: color,\n        colSpan: counter\n      } as TableColumn);\n      this.groupingColumnIds.push(grouping.id);\n    }\n    if (grouping.groupings) {\n      grouping.groupings.forEach(g => this.generateGroupingColumns(g, groupingColumns, color, grouping.name));\n    }\n  }\n\n  scrollLeft() {\n    this.tableContainer.nativeElement.scrollLeft -= 150;\n  }\n\n  scrollRight() {\n    this.tableContainer.nativeElement.scrollLeft += 150;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Name\n    \n\n    \n      Name\n      \n        \n          \n           {{tech.platformName}}\n        \n      \n    \n\n    \n      \n         {{c.displayName}}\n      \n    \n\n    \n      \n         {{c.displayName}}\n        \n          \n            \n              {{entry.value | yesNo }}\n            \n          \n        \n      \n    \n\n    \n    \n    \n  \n\n\n  \n    arrow_back_ios Scroll Left\n  \n  \n    arrow_forward_ios Scroll Right\n  \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./technology-table.component.scss\n                \n                @import \"../../_scss/shared\";\n@import \"../../_scss/global/variables\";\n\n:host {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: center;\n}\n\n.table-container {\n  align-self: center;\n  flex-grow: 1;\n  height: auto;\n  width: 93vw;\n  margin-bottom: 3rem;\n  overflow: scroll;\n  scroll-behavior: smooth;\n}\n\n.tech-name-header-cell {\n  display:table-cell;\n  background: white;\n  min-width: 3.5rem;\n  border-right: 2px solid $violet-600;\n}\n\n.grouping-header-cell {\n  display:table-cell;\n  min-width: 3.5rem;\n  padding: 0 .5rem;\n  border-right: 1px solid $gray-10;\n}\n\n.criterion-header-cell {\n  display:table-cell;\n  min-width: 5rem;\n  padding: 0 1rem;\n  border-right: 1px solid $gray-10;\n  border-bottom: 1px solid $gray-10;\n}\n\n.tech-name-cell {\n  height: 100%;\n  padding: 0 !important;\n  display:table-cell;\n  background: white;\n  min-width: 3.5rem;\n  border-right: 2px solid $violet-600;\n\n  img {\n    max-width: 2rem;\n  }\n}\n\n.tech-name-content {\n  height: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n}\n\n.value-cell {\n  padding: 0 1rem !important;\n  word-wrap: break-word !important;\n}\n\n.value-list {\n  display: flex;\n  flex-flow: row wrap;\n}\n\n.value {\n  font-size: .8rem;\n}\n\n/*.tech-row:nth-child(even) {\n  background-color: $gray-10;\n}*/\n\n@media screen and (min-width: 900px) {\n  .table-container {\n    max-width: 1400px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Name              Name                                   {{tech.platformName}}                                     {{c.displayName}}                             {{c.displayName}}                                            {{entry.value | yesNo }}                                                            arrow_back_ios Scroll Left        arrow_forward_ios Scroll Right  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-home-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-home-banner'},{'name': 'BottomNavComponent', 'selector': 'app-bottom-nav'},{'name': 'ChildGroupingComponent', 'selector': 'app-child-grouping'},{'name': 'CriterionComponent', 'selector': 'app-criterion'},{'name': 'CriterionFilterComponent', 'selector': 'app-criterion-filter'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FrameworkComponent', 'selector': 'app-framework'},{'name': 'FrameworkRendererComponent', 'selector': 'app-framework-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'TechnologiesComponent', 'selector': 'app-technologies'},{'name': 'TechnologyDetailsComponent', 'selector': 'app-technology-details'},{'name': 'TechnologyListComponent', 'selector': 'app-technology-list'},{'name': 'TechnologyTableComponent', 'selector': 'app-technology-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TechnologyTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TruncatePipe.html":{"url":"pipes/TruncatePipe.html","title":"pipe - TruncatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TruncatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/truncate.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        truncate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, limit: number, completeWords, reverse, ellipsis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/truncate.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        25\n                                    \n\n                                \n                                \n                                    completeWords\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    reverse\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    ellipsis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '...'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, reverse = false, ellipsis = '...') {\n    if (completeWords) {\n      limit = value.substr(0, limit).lastIndexOf(' ');\n    }\n    if (!reverse) {\n      return value.length > limit ? value.substr(0, limit) + ellipsis : value;\n    } else {\n      return value.length > limit ? value.substr(limit, value.length) : value;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/YesNoPipe.html":{"url":"pipes/YesNoPipe.html","title":"pipe - YesNoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  YesNoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/yes-no.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        yesNo\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/yes-no.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'yesNo'\n})\nexport class YesNoPipe implements PipeTransform {\n  transform(value: any) {\n    if (typeof value === 'boolean') {\n      return value ? 'yes' : 'no';\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/ensure-module-loaded-once.guard.ts\n            \n            class\n            EnsureModuleLoadedOnceGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/app-config.service.ts\n            \n            injectable\n            AppConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            criteriaGroupingsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            criteriaPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            dossiersPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            filterConfigurationsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            frameworksPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            frameworkViewCombinationsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            frameworkViewsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            infoResourcesPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            variable\n            supportedPlatformsPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/logo-locator.service.ts\n            \n            injectable\n            LogoLocatorService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/random-color.service.ts\n            \n            injectable\n            RandomColorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/random-color.service.ts\n            \n            variable\n            randomColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/home/banner/banner.component.ts\n            \n            component\n            BannerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/overview/overview.component.ts\n            \n            component\n            OverviewComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/faq/faq.component.ts\n            \n            component\n            FaqComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/framework/framework.component.ts\n            \n            component\n            FrameworkComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/information/information.component.ts\n            \n            component\n            InformationComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/information/resolvers/framework-resolver.service.ts\n            \n            guard\n            FrameworkResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/resolvers/resources-resolver.service.ts\n            \n            guard\n            ResourcesResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information/resources/resources.component.ts\n            \n            component\n            ResourcesComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/bottom-nav/bottom-nav.component.ts\n            \n            component\n            BottomNavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/child-grouping/child-grouping.component.ts\n            \n            component\n            ChildGroupingComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/criterion/criterion.component.ts\n            \n            component\n            CriterionComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/datasource.ts\n            \n            class\n            TechnologyDataSource\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/shared/datasource.ts\n            \n            interface\n            SimpleDataSource\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/datasource.ts\n            \n            interface\n            Sort\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/framework-renderer/framework-renderer.component.ts\n            \n            component\n            FrameworkRendererComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationCriterion\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationFramework\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationView\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            ClassificationViewCombination\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            CriteriaGrouping\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            CriterionInstance\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/classification.ts\n            \n            interface\n            CriterionValue\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            CriteriaBasedQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            CriterionFilterConfiguration\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            CriterionFilterValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            RenderedFilterBlock\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/filtering.ts\n            \n            interface\n            TechnologyFilterConfiguration\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/info.ts\n            \n            interface\n            InfoResource\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/info.ts\n            \n            interface\n            InfoResourceSection\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            ClassificationFrameworkResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            ClassificationViewCombinationResponse\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            ClassificationViewResponse\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            CriteriaGroupingResponse\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            CriteriaReview\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/responses.ts\n            \n            interface\n            TechnologyDossierResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/technology.ts\n            \n            interface\n            Technology\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/technology.ts\n            \n            interface\n            TechnologyDossier\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/set-to-array.pipe.ts\n            \n            pipe\n            SetToArrayPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/truncate.pipe.ts\n            \n            pipe\n            TruncatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/yes-no.pipe.ts\n            \n            pipe\n            YesNoPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/technologies/criterion-filter/criterion-filter.component.ts\n            \n            component\n            CriterionFilterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/technologies/technologies-resolver.service.ts\n            \n            guard\n            TechnologiesResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/technologies/technologies.component.ts\n            \n            component\n            TechnologiesComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-details-resolver.service.ts\n            \n            guard\n            TechnologyDetailsResolverService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-details/technology-details.component.ts\n            \n            component\n            TechnologyDetailsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-list/technology-list.component.ts\n            \n            component\n            TechnologyListComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-table/technology-table.component.ts\n            \n            component\n            TechnologyTableComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/technologies/technology-table/technology-table.component.ts\n            \n            class\n            TableColumn\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.1.1\n        \n            @angular/cdk : ^11.1.1\n        \n            @angular/cli : ^11.1.2\n        \n            @angular/common : ^11.1.1\n        \n            @angular/compiler : ^11.1.1\n        \n            @angular/core : ^11.1.1\n        \n            @angular/flex-layout : ^11.0.0-beta.33\n        \n            @angular/forms : ^11.1.1\n        \n            @angular/material : ^11.1.1\n        \n            @angular/platform-browser : ^11.1.1\n        \n            @angular/platform-browser-dynamic : ^11.1.1\n        \n            @angular/router : ^11.1.1\n        \n            randomcolor : ^0.6.2\n        \n            rxjs : ^6.6.3\n        \n            tslib : ^2.0.0\n        \n            zone.js : ^0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CriterionFilterType   (src/.../filtering.ts)\n                        \n                        \n                            Extension   (src/.../logo-locator.service.ts)\n                        \n                        \n                            TechnologyCategory   (src/.../technology.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/interfaces/filtering.ts\n    \n        \n            \n                \n                    \n                        \n                        CriterionFilterType\n                    \n                \n                    \n                        \n                            An enum representing a filter type for a given CriterionFilterConfiguration.\nBased on these settings the respective filtering behavior is generated.\n\n                        \n                    \n                        \n                            \n                                 bool\n                            \n                        \n                        \n                            \n                                Value : bool\n                            \n                        \n                        \n                            \n                                 lte\n                            \n                        \n                        \n                            \n                                Value : lte\n                            \n                        \n                        \n                            \n                                 gte\n                            \n                        \n                        \n                            \n                                Value : gte\n                            \n                        \n                        \n                            \n                                 containsOne\n                            \n                        \n                        \n                            \n                                Value : containsOne\n                            \n                        \n                        \n                            \n                                 containsAny\n                            \n                        \n                        \n                            \n                                Value : containsAny\n                            \n                        \n                        \n                            \n                                 containsAll\n                            \n                        \n                        \n                            \n                                Value : containsAll\n                            \n                        \n                        \n                            \n                                 excludesAll\n                            \n                        \n                        \n                            \n                                Value : excludesAll\n                            \n                        \n            \n        \n\n    src/app/core/services/logo-locator.service.ts\n    \n        \n            \n                \n                    \n                        \n                        Extension\n                    \n                \n                        \n                            \n                                 png\n                            \n                        \n                        \n                            \n                                Value : .png\n                            \n                        \n                        \n                            \n                                 jpg\n                            \n                        \n                        \n                            \n                                Value : .jpg\n                            \n                        \n                        \n                            \n                                 jpeg\n                            \n                        \n                        \n                            \n                                Value : .jpeg\n                            \n                        \n                        \n                            \n                                 svg\n                            \n                        \n                        \n                            \n                                Value : .svg\n                            \n                        \n            \n        \n\n    src/app/shared/interfaces/technology.ts\n    \n        \n            \n                \n                    \n                        \n                        TechnologyCategory\n                    \n                \n                    \n                        \n                            An enum representing different technology categories.\n\n                        \n                    \n                        \n                            \n                                 faas\n                            \n                        \n                        \n                            \n                                Value : faas\n                            \n                        \n                        \n                            \n                                 baas\n                            \n                        \n                        \n                            \n                                Value : baas\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFaaStener\n\nFaaStener is an open source selection support system intended to simplify browsing and filtering Function-as-a-Service (FaaS) platforms.\nIt is build using Angular and Angular Material and provides a graphical user interface for interacting with the platform’s data collected using the classification framework introduced in this research publication.\nUsing FaaStener, one can perform multi-attribute search for suitable FaaS platform based on the specified requirements and to visualize the corresponding results.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InformationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InformationRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TechnologiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TechnologiesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_InformationModule\n\n\n\ncluster_InformationModule_declarations\n\n\n\ncluster_InformationModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TechnologiesModule\n\n\n\ncluster_TechnologiesModule_declarations\n\n\n\ncluster_TechnologiesModule_imports\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBannerComponent\n\nBannerComponent\n\nAppModule -->\n\nBannerComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nAppModule -->\n\nOverviewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nInformationModule\n\nInformationModule\n\nInformationModule -->\n\nSharedModule->InformationModule\n\n\n\n\n\nBottomNavComponent \n\nBottomNavComponent \n\nBottomNavComponent  -->\n\nSharedModule->BottomNavComponent \n\n\n\n\n\nChildGroupingComponent \n\nChildGroupingComponent \n\nChildGroupingComponent  -->\n\nSharedModule->ChildGroupingComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nFrameworkRendererComponent \n\nFrameworkRendererComponent \n\nFrameworkRendererComponent  -->\n\nSharedModule->FrameworkRendererComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nPageNotFoundComponent \n\nPageNotFoundComponent \n\nPageNotFoundComponent  -->\n\nSharedModule->PageNotFoundComponent \n\n\n\n\n\nSetToArrayPipe \n\nSetToArrayPipe \n\nSetToArrayPipe  -->\n\nSharedModule->SetToArrayPipe \n\n\n\n\n\nTruncatePipe \n\nTruncatePipe \n\nTruncatePipe  -->\n\nSharedModule->TruncatePipe \n\n\n\n\n\nYesNoPipe \n\nYesNoPipe \n\nYesNoPipe  -->\n\nSharedModule->YesNoPipe \n\n\n\n\n\nTechnologiesModule\n\nTechnologiesModule\n\nTechnologiesModule -->\n\nSharedModule->TechnologiesModule\n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nCoreModule -->\n\nAppConfigService->CoreModule\n\n\n\n\n\nDataService\n\nDataService\n\nCoreModule -->\n\nDataService->CoreModule\n\n\n\n\n\nLogoLocatorService\n\nLogoLocatorService\n\nCoreModule -->\n\nLogoLocatorService->CoreModule\n\n\n\n\n\nRandomColorService\n\nRandomColorService\n\nCoreModule -->\n\nRandomColorService->CoreModule\n\n\n\n\n\nFaqComponent\n\nFaqComponent\n\nInformationModule -->\n\nFaqComponent->InformationModule\n\n\n\n\n\nFrameworkComponent\n\nFrameworkComponent\n\nInformationModule -->\n\nFrameworkComponent->InformationModule\n\n\n\n\n\nInformationComponent\n\nInformationComponent\n\nInformationModule -->\n\nInformationComponent->InformationModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nInformationModule -->\n\nResourcesComponent->InformationModule\n\n\n\n\n\nInformationRoutingModule\n\nInformationRoutingModule\n\nInformationModule -->\n\nInformationRoutingModule->InformationModule\n\n\n\n\n\nBottomNavComponent\n\nBottomNavComponent\n\nSharedModule -->\n\nBottomNavComponent->SharedModule\n\n\n\n\n\nChildGroupingComponent\n\nChildGroupingComponent\n\nSharedModule -->\n\nChildGroupingComponent->SharedModule\n\n\n\n\n\nCriterionComponent\n\nCriterionComponent\n\nSharedModule -->\n\nCriterionComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nFrameworkRendererComponent\n\nFrameworkRendererComponent\n\nSharedModule -->\n\nFrameworkRendererComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nSharedModule -->\n\nPageNotFoundComponent->SharedModule\n\n\n\n\n\nSetToArrayPipe\n\nSetToArrayPipe\n\nSharedModule -->\n\nSetToArrayPipe->SharedModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nSharedModule -->\n\nTruncatePipe->SharedModule\n\n\n\n\n\nYesNoPipe\n\nYesNoPipe\n\nSharedModule -->\n\nYesNoPipe->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nCriterionFilterComponent\n\nCriterionFilterComponent\n\nTechnologiesModule -->\n\nCriterionFilterComponent->TechnologiesModule\n\n\n\n\n\nTechnologiesComponent\n\nTechnologiesComponent\n\nTechnologiesModule -->\n\nTechnologiesComponent->TechnologiesModule\n\n\n\n\n\nTechnologyDetailsComponent\n\nTechnologyDetailsComponent\n\nTechnologiesModule -->\n\nTechnologyDetailsComponent->TechnologiesModule\n\n\n\n\n\nTechnologyListComponent\n\nTechnologyListComponent\n\nTechnologiesModule -->\n\nTechnologyListComponent->TechnologiesModule\n\n\n\n\n\nTechnologyTableComponent\n\nTechnologyTableComponent\n\nTechnologiesModule -->\n\nTechnologyTableComponent->TechnologiesModule\n\n\n\n\n\nTechnologiesRoutingModule\n\nTechnologiesRoutingModule\n\nTechnologiesModule -->\n\nTechnologiesRoutingModule->TechnologiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    21 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    24 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            criteriaGroupingsPath   (src/.../data.service.ts)\n                        \n                        \n                            criteriaPath   (src/.../data.service.ts)\n                        \n                        \n                            dossiersPath   (src/.../data.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            filterConfigurationsPath   (src/.../data.service.ts)\n                        \n                        \n                            frameworksPath   (src/.../data.service.ts)\n                        \n                        \n                            frameworkViewCombinationsPath   (src/.../data.service.ts)\n                        \n                        \n                            frameworkViewsPath   (src/.../data.service.ts)\n                        \n                        \n                            infoResourcesPath   (src/.../data.service.ts)\n                        \n                        \n                            randomColor   (src/.../random-color.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            supportedPlatformsPath   (src/.../data.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/data.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            criteriaGroupingsPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/groupings.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            criteriaPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/criteria.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dossiersPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/platforms/'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterConfigurationsPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/filters.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frameworksPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/frameworks.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frameworkViewCombinationsPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/view-combinations.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frameworkViewsPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/framework/views.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            infoResourcesPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/info/resources.json'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            supportedPlatformsPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/platforms/platforms.json'\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/random-color.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            randomColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
